// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package protobuf_unittest_generated;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  adjusted = 1;
  allocate = 2;
  any = 3;
  AnyExtensionField = 4;
  AnyMessageExtension = 5;
  AnyMessageStorage = 6;
  AnyUnpackError = 7;
  Api = 8;
  appended = 9;
  appendUIntHex = 10;
  appendUnknown = 11;
  areAllInitialized = 12;
  array = 13;
  arrayLiteral = 14;
  arraySeparator = 15;
  as = 16;
  asciiOpenCurlyBracket = 17;
  asciiZero = 18;
  available = 19;
  b = 20;
  base64Values = 21;
  BaseType = 22;
  binary = 23;
  BinaryDecoder = 24;
  BinaryDecodingError = 25;
  BinaryDecodingOptions = 26;
  BinaryDelimited = 27;
  BinaryEncoder = 28;
  BinaryEncodingError = 29;
  BinaryEncodingMessageSetSizeVisitor = 30;
  BinaryEncodingMessageSetVisitor = 31;
  BinaryEncodingSizeVisitor = 32;
  BinaryEncodingVisitor = 33;
  bodySize = 34;
  Bool = 35;
  booleanLiteral = 36;
  BooleanLiteralType = 37;
  boolValue = 38;
  buffer = 39;
  bytes = 40;
  bytesInGroup = 41;
  bytesRead = 42;
  BytesValue = 43;
  c = 44;
  capacity = 45;
  capitalizeNext = 46;
  cardinality = 47;
  Character = 48;
  characters = 49;
  chars = 50;
  class = 51;
  clearExtensionValue = 52;
  clearSourceContext = 53;
  clearValue = 54;
  codeUnits = 55;
  Collection = 56;
  com = 57;
  comma = 58;
  contentsOf = 59;
  count = 60;
  countVarintsInBuffer = 61;
  customCodable = 62;
  CustomDebugStringConvertible = 63;
  d = 64;
  Data = 65;
  dataPointer = 66;
  dataResult = 67;
  dataSize = 68;
  date = 69;
  daySec = 70;
  daysSinceEpoch = 71;
  debugDescription = 72;
  decoded = 73;
  decodedFromJSONNull = 74;
  decodeExtensionField = 75;
  decodeExtensionFieldsAsMessageSet = 76;
  decodeJSON = 77;
  decodeMapField = 78;
  decodeMessage = 79;
  decoder = 80;
  decodeRepeated = 81;
  decodeRepeatedBoolField = 82;
  decodeRepeatedBytesField = 83;
  decodeRepeatedDoubleField = 84;
  decodeRepeatedEnumField = 85;
  decodeRepeatedFixed32Field = 86;
  decodeRepeatedFixed64Field = 87;
  decodeRepeatedFloatField = 88;
  decodeRepeatedGroupField = 89;
  decodeRepeatedInt32Field = 90;
  decodeRepeatedInt64Field = 91;
  decodeRepeatedMessageField = 92;
  decodeRepeatedSFixed32Field = 93;
  decodeRepeatedSFixed64Field = 94;
  decodeRepeatedSInt32Field = 95;
  decodeRepeatedSInt64Field = 96;
  decodeRepeatedStringField = 97;
  decodeRepeatedUInt32Field = 98;
  decodeRepeatedUInt64Field = 99;
  decodeSingular = 100;
  decodeSingularBoolField = 101;
  decodeSingularBytesField = 102;
  decodeSingularDoubleField = 103;
  decodeSingularEnumField = 104;
  decodeSingularFixed32Field = 105;
  decodeSingularFixed64Field = 106;
  decodeSingularFloatField = 107;
  decodeSingularGroupField = 108;
  decodeSingularInt32Field = 109;
  decodeSingularInt64Field = 110;
  decodeSingularMessageField = 111;
  decodeSingularSFixed32Field = 112;
  decodeSingularSFixed64Field = 113;
  decodeSingularSInt32Field = 114;
  decodeSingularSInt64Field = 115;
  decodeSingularStringField = 116;
  decodeSingularUInt32Field = 117;
  decodeSingularUInt64Field = 118;
  decodeTextFormat = 119;
  defaultAnyTypeURLPrefix = 120;
  defaultValue = 121;
  description = 122;
  Dictionary = 123;
  dictionaryLiteral = 124;
  digit = 125;
  digit0 = 126;
  digit1 = 127;
  digitCount = 128;
  digits = 129;
  digitValue = 130;
  discardableResult = 131;
  discardUnknownFields = 132;
  distance = 133;
  double = 134;
  doubleToUtf8 = 135;
  DoubleValue = 136;
  Duration = 137;
  E = 138;
  Element = 139;
  elements = 140;
  emitExtensionFieldName = 141;
  emitFieldName = 142;
  emitFieldNumber = 143;
  Empty = 144;
  emptyData = 145;
  encoded = 146;
  encodedJSONString = 147;
  encodedSize = 148;
  encodeField = 149;
  encoder = 150;
  end = 151;
  endArray = 152;
  endMessageField = 153;
  endObject = 154;
  endRegularField = 155;
  enum = 156;
  enumvalue = 157;
  Equatable = 158;
  Error = 159;
  ExpressibleByArrayLiteral = 160;
  ExpressibleByDictionaryLiteral = 161;
  ext = 162;
  extDecoder = 163;
  extendedGraphemeClusterLiteral = 164;
  ExtendedGraphemeClusterLiteralType = 165;
  ExtensibleMessage = 166;
  extension = 167;
  ExtensionField = 168;
  extensionFieldNumber = 169;
  ExtensionFieldValueSet = 170;
  ExtensionMap = 171;
  extensions = 172;
  extras = 173;
  f = 174;
  false = 175;
  field = 176;
  fieldData = 177;
  FieldMask = 178;
  fieldName = 179;
  fieldNameCount = 180;
  fieldNum = 181;
  fieldNumber = 182;
  fieldNumberForProto = 183;
  fields = 184;
  fieldSize = 185;
  FieldTag = 186;
  fieldType = 187;
  fieldValue = 188;
  fileName = 189;
  filter = 190;
  firstItem = 191;
  float = 192;
  floatLiteral = 193;
  FloatLiteralType = 194;
  floatToUtf8 = 195;
  FloatValue = 196;
  forMessageName = 197;
  formUnion = 198;
  forReadingFrom = 199;
  forTypeURL = 200;
  ForwardParser = 201;
  forWritingInto = 202;
  from = 203;
  fromAscii2 = 204;
  fromAscii4 = 205;
  fromHexDigit = 206;
  func = 207;
  G = 208;
  get = 209;
  getExtensionValue = 210;
  googleapis = 211;
  Google_Protobuf_Any = 212;
  Google_Protobuf_Api = 213;
  Google_Protobuf_BoolValue = 214;
  Google_Protobuf_BytesValue = 215;
  Google_Protobuf_DoubleValue = 216;
  Google_Protobuf_Duration = 217;
  Google_Protobuf_Empty = 218;
  Google_Protobuf_Enum = 219;
  Google_Protobuf_EnumValue = 220;
  Google_Protobuf_Field = 221;
  Google_Protobuf_FieldMask = 222;
  Google_Protobuf_FloatValue = 223;
  Google_Protobuf_Int32Value = 224;
  Google_Protobuf_Int64Value = 225;
  Google_Protobuf_ListValue = 226;
  Google_Protobuf_Method = 227;
  Google_Protobuf_Mixin = 228;
  Google_Protobuf_NullValue = 229;
  Google_Protobuf_Option = 230;
  Google_Protobuf_SourceContext = 231;
  Google_Protobuf_StringValue = 232;
  Google_Protobuf_Struct = 233;
  Google_Protobuf_Syntax = 234;
  Google_Protobuf_Timestamp = 235;
  Google_Protobuf_Type = 236;
  Google_Protobuf_UInt32Value = 237;
  Google_Protobuf_UInt64Value = 238;
  Google_Protobuf_Value = 239;
  group = 240;
  groupSize = 241;
  h = 242;
  handleConflictingOneOf = 243;
  hasExtensionValue = 244;
  hash = 245;
  Hashable = 246;
  hashValue = 247;
  HashVisitor = 248;
  hasSourceContext = 249;
  hasValue = 250;
  hour = 251;
  i = 252;
  index = 253;
  init = 254;
  inout = 255;
  insert = 256;
  Int = 257;
  Int32 = 258;
  Int32Value = 259;
  Int64 = 260;
  Int64Value = 261;
  Int8 = 262;
  integerLiteral = 263;
  IntegerLiteralType = 264;
  intern = 265;
  Internal = 266;
  InternalState = 267;
  ints = 268;
  isA = 269;
  isEqual = 270;
  isEqualTo = 271;
  isInitialized = 272;
  it = 273;
  itemTagsEncodedSize = 274;
  Iterator = 275;
  i_2166136261 = 276;
  JSONDecoder = 277;
  JSONDecodingError = 278;
  JSONDecodingOptions = 279;
  jsonEncoder = 280;
  JSONEncodingError = 281;
  JSONEncodingVisitor = 282;
  JSONMapEncodingVisitor = 283;
  jsonName = 284;
  jsonPath = 285;
  jsonPaths = 286;
  JSONScanner = 287;
  jsonString = 288;
  jsonText = 289;
  jsonUTF8Data = 290;
  k = 291;
  Key = 292;
  keyField = 293;
  KeyType = 294;
  kind = 295;
  l = 296;
  length = 297;
  let = 298;
  lhs = 299;
  list = 300;
  listOfMessages = 301;
  listValue = 302;
  littleEndian = 303;
  littleEndianBytes = 304;
  M = 305;
  major = 306;
  makeIterator = 307;
  mapHash = 308;
  MapKeyType = 309;
  mapNameResolver = 310;
  mapToMessages = 311;
  MapValueType = 312;
  mapVisitor = 313;
  mdayStart = 314;
  merge = 315;
  message = 316;
  messageDepthLimit = 317;
  MessageExtension = 318;
  MessageImplementationBase = 319;
  MessageSet = 320;
  messageType = 321;
  Method = 322;
  methods = 323;
  minor = 324;
  Mixin = 325;
  mixins = 326;
  month = 327;
  msgExtension = 328;
  mutating = 329;
  n = 330;
  name = 331;
  NameDescription = 332;
  NameMap = 333;
  nameResolver = 334;
  names = 335;
  nanos = 336;
  nativeBytes = 337;
  nativeEndianBytes = 338;
  newL = 339;
  newList = 340;
  newValue = 341;
  nextByte = 342;
  nextFieldNumber = 343;
  nil = 344;
  nilLiteral = 345;
  nullValue = 346;
  number = 347;
  numberValue = 348;
  of = 349;
  oneofIndex = 350;
  oneofs = 351;
  OneOf_Kind = 352;
  Option = 353;
  OptionalEnumExtensionField = 354;
  OptionalExtensionField = 355;
  OptionalGroupExtensionField = 356;
  OptionalMessageExtensionField = 357;
  options = 358;
  other = 359;
  others = 360;
  out = 361;
  output = 362;
  p = 363;
  packed = 364;
  PackedEnumExtensionField = 365;
  PackedExtensionField = 366;
  packedSize = 367;
  padding = 368;
  parent = 369;
  parse = 370;
  partial = 371;
  path = 372;
  paths = 373;
  payload = 374;
  payloadSize = 375;
  pointer = 376;
  pos = 377;
  prefix = 378;
  preTraverse = 379;
  proto2 = 380;
  proto3DefaultValue = 381;
  ProtobufAPIVersionCheck = 382;
  ProtobufAPIVersion_2 = 383;
  ProtobufBool = 384;
  ProtobufBytes = 385;
  ProtobufDouble = 386;
  ProtobufEnumMap = 387;
  protobufExtension = 388;
  ProtobufFixed32 = 389;
  ProtobufFixed64 = 390;
  ProtobufFloat = 391;
  ProtobufInt32 = 392;
  ProtobufInt64 = 393;
  ProtobufMap = 394;
  ProtobufMessageMap = 395;
  ProtobufSFixed32 = 396;
  ProtobufSFixed64 = 397;
  ProtobufSInt32 = 398;
  ProtobufSInt64 = 399;
  ProtobufString = 400;
  ProtobufUInt32 = 401;
  ProtobufUInt64 = 402;
  protobuf_extensionFieldValues = 403;
  protobuf_fieldNumber = 404;
  protobuf_generated_isEqualTo = 405;
  protobuf_nameMap = 406;
  protobuf_newField = 407;
  protobuf_package = 408;
  protocol = 409;
  protoFieldName = 410;
  protoMessageName = 411;
  ProtoNameProviding = 412;
  protoPaths = 413;
  public = 414;
  putBoolValue = 415;
  putBytesValue = 416;
  putDoubleValue = 417;
  putEnumValue = 418;
  putFixedUInt32 = 419;
  putFixedUInt64 = 420;
  putFloatValue = 421;
  putInt64 = 422;
  putStringValue = 423;
  putUInt64 = 424;
  putUInt64Hex = 425;
  putVarInt = 426;
  putZigZagVarInt = 427;
  rawChars = 428;
  RawRepresentable = 429;
  RawValue = 430;
  readBuffer = 431;
  register = 432;
  RepeatedEnumExtensionField = 433;
  RepeatedExtensionField = 434;
  RepeatedGroupExtensionField = 435;
  RepeatedMessageExtensionField = 436;
  requestStreaming = 437;
  requestTypeURL = 438;
  requiredSize = 439;
  responseStreaming = 440;
  responseTypeURL = 441;
  result = 442;
  return = 443;
  revision = 444;
  rhs = 445;
  root = 446;
  s = 447;
  sawBackslash = 448;
  sawSection4Characters = 449;
  sawSection5Characters = 450;
  scanner = 451;
  seconds = 452;
  self = 453;
  separator = 454;
  serialize = 455;
  serializedData = 456;
  serializedSize = 457;
  set = 458;
  setExtensionValue = 459;
  shift = 460;
  SimpleExtensionMap = 461;
  sizer = 462;
  source = 463;
  sourceContext = 464;
  sourceEncoding = 465;
  split = 466;
  start = 467;
  startArray = 468;
  startField = 469;
  startIndex = 470;
  startMessageField = 471;
  startObject = 472;
  startRegularField = 473;
  state = 474;
  static = 475;
  StaticString = 476;
  storage = 477;
  String = 478;
  stringLiteral = 479;
  StringLiteralType = 480;
  stringResult = 481;
  stringValue = 482;
  struct = 483;
  structValue = 484;
  subDecoder = 485;
  subscript = 486;
  subVisitor = 487;
  Swift = 488;
  SwiftProtobuf = 489;
  syntax = 490;
  T = 491;
  tag = 492;
  terminator = 493;
  testDecoder = 494;
  text = 495;
  textDecoder = 496;
  TextFormatDecoder = 497;
  TextFormatDecodingError = 498;
  TextFormatEncodingVisitor = 499;
  textFormatString = 500;
  throws = 501;
  timeInterval = 502;
  timeIntervalSince1970 = 503;
  timeIntervalSinceReferenceDate = 504;
  Timestamp = 505;
  total = 506;
  totalSize = 507;
  traverse = 508;
  true = 509;
  try = 510;
  type = 511;
  typealias = 512;
  typePrefix = 513;
  typeStart = 514;
  typeUnknown = 515;
  typeURL = 516;
  UInt32 = 517;
  UInt32Value = 518;
  UInt64 = 519;
  UInt64Value = 520;
  UInt8 = 521;
  unicodeScalarLiteral = 522;
  UnicodeScalarLiteralType = 523;
  unicodeScalars = 524;
  UnicodeScalarView = 525;
  union = 526;
  unknown = 527;
  unknownFields = 528;
  UnknownStorage = 529;
  unpackTo = 530;
  UnsafeBufferPointer = 531;
  UnsafeMutablePointer = 532;
  UnsafePointer = 533;
  updatedOptions = 534;
  url = 535;
  utf8 = 536;
  utf8Codec = 537;
  utf8ToDouble = 538;
  UTF8View = 539;
  v = 540;
  value = 541;
  valueField = 542;
  values = 543;
  ValueType = 544;
  var = 545;
  Version = 546;
  versionString = 547;
  visitExtensionFields = 548;
  visitExtensionFieldsAsMessageSet = 549;
  visitMapField = 550;
  visitor = 551;
  visitPacked = 552;
  visitPackedBoolField = 553;
  visitPackedDoubleField = 554;
  visitPackedEnumField = 555;
  visitPackedFixed32Field = 556;
  visitPackedFixed64Field = 557;
  visitPackedFloatField = 558;
  visitPackedInt32Field = 559;
  visitPackedInt64Field = 560;
  visitPackedSFixed32Field = 561;
  visitPackedSFixed64Field = 562;
  visitPackedSInt32Field = 563;
  visitPackedSInt64Field = 564;
  visitPackedUInt32Field = 565;
  visitPackedUInt64Field = 566;
  visitRepeated = 567;
  visitRepeatedBoolField = 568;
  visitRepeatedBytesField = 569;
  visitRepeatedDoubleField = 570;
  visitRepeatedEnumField = 571;
  visitRepeatedFixed32Field = 572;
  visitRepeatedFixed64Field = 573;
  visitRepeatedFloatField = 574;
  visitRepeatedGroupField = 575;
  visitRepeatedInt32Field = 576;
  visitRepeatedInt64Field = 577;
  visitRepeatedMessageField = 578;
  visitRepeatedSFixed32Field = 579;
  visitRepeatedSFixed64Field = 580;
  visitRepeatedSInt32Field = 581;
  visitRepeatedSInt64Field = 582;
  visitRepeatedStringField = 583;
  visitRepeatedUInt32Field = 584;
  visitRepeatedUInt64Field = 585;
  visitSingular = 586;
  visitSingularBoolField = 587;
  visitSingularBytesField = 588;
  visitSingularDoubleField = 589;
  visitSingularEnumField = 590;
  visitSingularFixed32Field = 591;
  visitSingularFixed64Field = 592;
  visitSingularFloatField = 593;
  visitSingularGroupField = 594;
  visitSingularInt32Field = 595;
  visitSingularInt64Field = 596;
  visitSingularMessageField = 597;
  visitSingularSFixed32Field = 598;
  visitSingularSFixed64Field = 599;
  visitSingularSInt32Field = 600;
  visitSingularSInt64Field = 601;
  visitSingularStringField = 602;
  visitSingularUInt32Field = 603;
  visitSingularUInt64Field = 604;
  visitUnknown = 605;
  wasDecoded = 606;
  where = 607;
  wireFormat = 608;
  with = 609;
  WrappedType = 610;
  written = 611;
  yday = 612;
}
