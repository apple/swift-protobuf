// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package protobuf_unittest_generated;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  adjusted = 1;
  allCases = 2;
  allocate = 3;
  alwaysPrintEnumsAsInts = 4;
  any = 5;
  AnyExtensionField = 6;
  AnyMessageExtension = 7;
  AnyMessageStorage = 8;
  AnyUnpackError = 9;
  Api = 10;
  appended = 11;
  appendUIntHex = 12;
  appendUnknown = 13;
  areAllInitialized = 14;
  array = 15;
  arrayLiteral = 16;
  arraySeparator = 17;
  as = 18;
  asciiOpenCurlyBracket = 19;
  asciiZero = 20;
  available = 21;
  b = 22;
  base64Values = 23;
  BaseType = 24;
  binary = 25;
  BinaryDecoder = 26;
  BinaryDecodingError = 27;
  BinaryDecodingOptions = 28;
  BinaryDelimited = 29;
  BinaryEncoder = 30;
  BinaryEncodingError = 31;
  BinaryEncodingMessageSetSizeVisitor = 32;
  BinaryEncodingMessageSetVisitor = 33;
  BinaryEncodingSizeVisitor = 34;
  BinaryEncodingVisitor = 35;
  bodySize = 36;
  Bool = 37;
  booleanLiteral = 38;
  BooleanLiteralType = 39;
  boolValue = 40;
  buffer = 41;
  bytes = 42;
  bytesInGroup = 43;
  bytesRead = 44;
  BytesValue = 45;
  c = 46;
  capacity = 47;
  capitalizeNext = 48;
  cardinality = 49;
  Character = 50;
  characters = 51;
  chars = 52;
  class = 53;
  clearExtensionValue = 54;
  clearSourceContext = 55;
  clearValue = 56;
  codeUnits = 57;
  Collection = 58;
  com = 59;
  comma = 60;
  contentsOf = 61;
  count = 62;
  countVarintsInBuffer = 63;
  customCodable = 64;
  CustomDebugStringConvertible = 65;
  d = 66;
  Data = 67;
  dataPointer = 68;
  dataResult = 69;
  dataSize = 70;
  date = 71;
  daySec = 72;
  daysSinceEpoch = 73;
  debugDescription = 74;
  decoded = 75;
  decodedFromJSONNull = 76;
  decodeExtensionField = 77;
  decodeExtensionFieldsAsMessageSet = 78;
  decodeJSON = 79;
  decodeMapField = 80;
  decodeMessage = 81;
  decoder = 82;
  decodeRepeated = 83;
  decodeRepeatedBoolField = 84;
  decodeRepeatedBytesField = 85;
  decodeRepeatedDoubleField = 86;
  decodeRepeatedEnumField = 87;
  decodeRepeatedFixed32Field = 88;
  decodeRepeatedFixed64Field = 89;
  decodeRepeatedFloatField = 90;
  decodeRepeatedGroupField = 91;
  decodeRepeatedInt32Field = 92;
  decodeRepeatedInt64Field = 93;
  decodeRepeatedMessageField = 94;
  decodeRepeatedSFixed32Field = 95;
  decodeRepeatedSFixed64Field = 96;
  decodeRepeatedSInt32Field = 97;
  decodeRepeatedSInt64Field = 98;
  decodeRepeatedStringField = 99;
  decodeRepeatedUInt32Field = 100;
  decodeRepeatedUInt64Field = 101;
  decodeSingular = 102;
  decodeSingularBoolField = 103;
  decodeSingularBytesField = 104;
  decodeSingularDoubleField = 105;
  decodeSingularEnumField = 106;
  decodeSingularFixed32Field = 107;
  decodeSingularFixed64Field = 108;
  decodeSingularFloatField = 109;
  decodeSingularGroupField = 110;
  decodeSingularInt32Field = 111;
  decodeSingularInt64Field = 112;
  decodeSingularMessageField = 113;
  decodeSingularSFixed32Field = 114;
  decodeSingularSFixed64Field = 115;
  decodeSingularSInt32Field = 116;
  decodeSingularSInt64Field = 117;
  decodeSingularStringField = 118;
  decodeSingularUInt32Field = 119;
  decodeSingularUInt64Field = 120;
  decodeTextFormat = 121;
  defaultAnyTypeURLPrefix = 122;
  defaultValue = 123;
  description = 124;
  Dictionary = 125;
  dictionaryLiteral = 126;
  digit = 127;
  digit0 = 128;
  digit1 = 129;
  digitCount = 130;
  digits = 131;
  digitValue = 132;
  discardableResult = 133;
  discardUnknownFields = 134;
  distance = 135;
  double = 136;
  doubleToUtf8 = 137;
  DoubleValue = 138;
  Duration = 139;
  E = 140;
  Element = 141;
  elements = 142;
  emitExtensionFieldName = 143;
  emitFieldName = 144;
  emitFieldNumber = 145;
  Empty = 146;
  emptyData = 147;
  encoded = 148;
  encodedJSONString = 149;
  encodedSize = 150;
  encodeField = 151;
  encoder = 152;
  end = 153;
  endArray = 154;
  endMessageField = 155;
  endObject = 156;
  endRegularField = 157;
  enum = 158;
  enumvalue = 159;
  Equatable = 160;
  Error = 161;
  ExpressibleByArrayLiteral = 162;
  ExpressibleByDictionaryLiteral = 163;
  ext = 164;
  extDecoder = 165;
  extendedGraphemeClusterLiteral = 166;
  ExtendedGraphemeClusterLiteralType = 167;
  ExtensibleMessage = 168;
  extension = 169;
  ExtensionField = 170;
  extensionFieldNumber = 171;
  ExtensionFieldValueSet = 172;
  ExtensionMap = 173;
  extensions = 174;
  extras = 175;
  f = 176;
  false = 177;
  field = 178;
  fieldData = 179;
  FieldMask = 180;
  fieldName = 181;
  fieldNameCount = 182;
  fieldNum = 183;
  fieldNumber = 184;
  fieldNumberForProto = 185;
  fields = 186;
  fieldSize = 187;
  FieldTag = 188;
  fieldType = 189;
  fieldValue = 190;
  fileName = 191;
  filter = 192;
  firstItem = 193;
  float = 194;
  floatLiteral = 195;
  FloatLiteralType = 196;
  floatToUtf8 = 197;
  FloatValue = 198;
  forMessageName = 199;
  formUnion = 200;
  forReadingFrom = 201;
  forTypeURL = 202;
  ForwardParser = 203;
  forWritingInto = 204;
  from = 205;
  fromAscii2 = 206;
  fromAscii4 = 207;
  fromHexDigit = 208;
  func = 209;
  G = 210;
  get = 211;
  getExtensionValue = 212;
  googleapis = 213;
  Google_Protobuf_Any = 214;
  Google_Protobuf_Api = 215;
  Google_Protobuf_BoolValue = 216;
  Google_Protobuf_BytesValue = 217;
  Google_Protobuf_DoubleValue = 218;
  Google_Protobuf_Duration = 219;
  Google_Protobuf_Empty = 220;
  Google_Protobuf_Enum = 221;
  Google_Protobuf_EnumValue = 222;
  Google_Protobuf_Field = 223;
  Google_Protobuf_FieldMask = 224;
  Google_Protobuf_FloatValue = 225;
  Google_Protobuf_Int32Value = 226;
  Google_Protobuf_Int64Value = 227;
  Google_Protobuf_ListValue = 228;
  Google_Protobuf_Method = 229;
  Google_Protobuf_Mixin = 230;
  Google_Protobuf_NullValue = 231;
  Google_Protobuf_Option = 232;
  Google_Protobuf_SourceContext = 233;
  Google_Protobuf_StringValue = 234;
  Google_Protobuf_Struct = 235;
  Google_Protobuf_Syntax = 236;
  Google_Protobuf_Timestamp = 237;
  Google_Protobuf_Type = 238;
  Google_Protobuf_UInt32Value = 239;
  Google_Protobuf_UInt64Value = 240;
  Google_Protobuf_Value = 241;
  group = 242;
  groupSize = 243;
  h = 244;
  handleConflictingOneOf = 245;
  hasExtensionValue = 246;
  hash = 247;
  Hashable = 248;
  hasher = 249;
  hashValue = 250;
  HashVisitor = 251;
  hasSourceContext = 252;
  hasValue = 253;
  hour = 254;
  i = 255;
  ignoreUnknownFields = 256;
  index = 257;
  init = 258;
  inout = 259;
  insert = 260;
  Int = 261;
  Int32 = 262;
  Int32Value = 263;
  Int64 = 264;
  Int64Value = 265;
  Int8 = 266;
  integerLiteral = 267;
  IntegerLiteralType = 268;
  intern = 269;
  Internal = 270;
  InternalState = 271;
  into = 272;
  ints = 273;
  isA = 274;
  isEqual = 275;
  isEqualTo = 276;
  isInitialized = 277;
  it = 278;
  itemTagsEncodedSize = 279;
  i_2166136261 = 280;
  JSONDecoder = 281;
  JSONDecodingError = 282;
  JSONDecodingOptions = 283;
  jsonEncoder = 284;
  JSONEncodingError = 285;
  JSONEncodingOptions = 286;
  JSONEncodingVisitor = 287;
  JSONMapEncodingVisitor = 288;
  jsonName = 289;
  jsonPath = 290;
  jsonPaths = 291;
  JSONScanner = 292;
  jsonString = 293;
  jsonText = 294;
  jsonUTF8Data = 295;
  k = 296;
  Key = 297;
  keyField = 298;
  KeyType = 299;
  kind = 300;
  l = 301;
  length = 302;
  let = 303;
  lhs = 304;
  list = 305;
  listOfMessages = 306;
  listValue = 307;
  littleEndian = 308;
  littleEndianBytes = 309;
  localHasher = 310;
  M = 311;
  major = 312;
  makeIterator = 313;
  mapHash = 314;
  MapKeyType = 315;
  mapNameResolver = 316;
  mapToMessages = 317;
  MapValueType = 318;
  mapVisitor = 319;
  mdayStart = 320;
  merge = 321;
  message = 322;
  messageDepthLimit = 323;
  MessageExtension = 324;
  MessageImplementationBase = 325;
  MessageSet = 326;
  messageType = 327;
  Method = 328;
  methods = 329;
  minor = 330;
  Mixin = 331;
  mixins = 332;
  month = 333;
  msgExtension = 334;
  mutating = 335;
  n = 336;
  name = 337;
  NameDescription = 338;
  NameMap = 339;
  nameResolver = 340;
  names = 341;
  nanos = 342;
  nativeBytes = 343;
  nativeEndianBytes = 344;
  newL = 345;
  newList = 346;
  newValue = 347;
  nextByte = 348;
  nextFieldNumber = 349;
  nil = 350;
  nilLiteral = 351;
  nullValue = 352;
  number = 353;
  numberValue = 354;
  of = 355;
  oneofIndex = 356;
  oneofs = 357;
  OneOf_Kind = 358;
  Option = 359;
  OptionalEnumExtensionField = 360;
  OptionalExtensionField = 361;
  OptionalGroupExtensionField = 362;
  OptionalMessageExtensionField = 363;
  options = 364;
  other = 365;
  others = 366;
  out = 367;
  output = 368;
  p = 369;
  packed = 370;
  PackedEnumExtensionField = 371;
  PackedExtensionField = 372;
  packedSize = 373;
  padding = 374;
  parent = 375;
  parse = 376;
  partial = 377;
  path = 378;
  paths = 379;
  payload = 380;
  payloadSize = 381;
  pointer = 382;
  pos = 383;
  prefix = 384;
  preTraverse = 385;
  proto2 = 386;
  proto3DefaultValue = 387;
  ProtobufAPIVersionCheck = 388;
  ProtobufAPIVersion_2 = 389;
  ProtobufBool = 390;
  ProtobufBytes = 391;
  ProtobufDouble = 392;
  ProtobufEnumMap = 393;
  protobufExtension = 394;
  ProtobufFixed32 = 395;
  ProtobufFixed64 = 396;
  ProtobufFloat = 397;
  ProtobufInt32 = 398;
  ProtobufInt64 = 399;
  ProtobufMap = 400;
  ProtobufMessageMap = 401;
  ProtobufSFixed32 = 402;
  ProtobufSFixed64 = 403;
  ProtobufSInt32 = 404;
  ProtobufSInt64 = 405;
  ProtobufString = 406;
  ProtobufUInt32 = 407;
  ProtobufUInt64 = 408;
  protobuf_extensionFieldValues = 409;
  protobuf_fieldNumber = 410;
  protobuf_generated_isEqualTo = 411;
  protobuf_nameMap = 412;
  protobuf_newField = 413;
  protobuf_package = 414;
  protocol = 415;
  protoFieldName = 416;
  protoMessageName = 417;
  ProtoNameProviding = 418;
  protoPaths = 419;
  public = 420;
  putBoolValue = 421;
  putBytesValue = 422;
  putDoubleValue = 423;
  putEnumValue = 424;
  putFixedUInt32 = 425;
  putFixedUInt64 = 426;
  putFloatValue = 427;
  putInt64 = 428;
  putStringValue = 429;
  putUInt64 = 430;
  putUInt64Hex = 431;
  putVarInt = 432;
  putZigZagVarInt = 433;
  rawChars = 434;
  RawRepresentable = 435;
  RawValue = 436;
  readBuffer = 437;
  register = 438;
  RepeatedEnumExtensionField = 439;
  RepeatedExtensionField = 440;
  RepeatedGroupExtensionField = 441;
  RepeatedMessageExtensionField = 442;
  requestStreaming = 443;
  requestTypeURL = 444;
  requiredSize = 445;
  responseStreaming = 446;
  responseTypeURL = 447;
  result = 448;
  return = 449;
  revision = 450;
  rhs = 451;
  root = 452;
  s = 453;
  sawBackslash = 454;
  sawSection4Characters = 455;
  sawSection5Characters = 456;
  scanner = 457;
  seconds = 458;
  self = 459;
  separator = 460;
  serialize = 461;
  serializedData = 462;
  serializedSize = 463;
  set = 464;
  setExtensionValue = 465;
  shift = 466;
  SimpleExtensionMap = 467;
  sizer = 468;
  source = 469;
  sourceContext = 470;
  sourceEncoding = 471;
  split = 472;
  start = 473;
  startArray = 474;
  startField = 475;
  startIndex = 476;
  startMessageField = 477;
  startObject = 478;
  startRegularField = 479;
  state = 480;
  static = 481;
  StaticString = 482;
  storage = 483;
  String = 484;
  stringLiteral = 485;
  StringLiteralType = 486;
  stringResult = 487;
  stringValue = 488;
  struct = 489;
  structValue = 490;
  subDecoder = 491;
  subscript = 492;
  subVisitor = 493;
  Swift = 494;
  SwiftProtobuf = 495;
  syntax = 496;
  T = 497;
  tag = 498;
  terminator = 499;
  testDecoder = 500;
  text = 501;
  textDecoder = 502;
  TextFormatDecoder = 503;
  TextFormatDecodingError = 504;
  TextFormatEncodingVisitor = 505;
  textFormatString = 506;
  throws = 507;
  timeInterval = 508;
  timeIntervalSince1970 = 509;
  timeIntervalSinceReferenceDate = 510;
  Timestamp = 511;
  total = 512;
  totalSize = 513;
  traverse = 514;
  true = 515;
  try = 516;
  type = 517;
  typealias = 518;
  typePrefix = 519;
  typeStart = 520;
  typeUnknown = 521;
  typeURL = 522;
  UInt32 = 523;
  UInt32Value = 524;
  UInt64 = 525;
  UInt64Value = 526;
  UInt8 = 527;
  unicodeScalarLiteral = 528;
  UnicodeScalarLiteralType = 529;
  unicodeScalars = 530;
  UnicodeScalarView = 531;
  union = 532;
  uniqueStorage = 533;
  unknown = 534;
  unknownFields = 535;
  UnknownStorage = 536;
  unpackTo = 537;
  UnsafeBufferPointer = 538;
  UnsafeMutablePointer = 539;
  UnsafePointer = 540;
  updatedOptions = 541;
  url = 542;
  utf8 = 543;
  utf8Codec = 544;
  utf8ToDouble = 545;
  UTF8View = 546;
  v = 547;
  value = 548;
  valueField = 549;
  values = 550;
  ValueType = 551;
  var = 552;
  Version = 553;
  versionString = 554;
  visitExtensionFields = 555;
  visitExtensionFieldsAsMessageSet = 556;
  visitMapField = 557;
  visitor = 558;
  visitPacked = 559;
  visitPackedBoolField = 560;
  visitPackedDoubleField = 561;
  visitPackedEnumField = 562;
  visitPackedFixed32Field = 563;
  visitPackedFixed64Field = 564;
  visitPackedFloatField = 565;
  visitPackedInt32Field = 566;
  visitPackedInt64Field = 567;
  visitPackedSFixed32Field = 568;
  visitPackedSFixed64Field = 569;
  visitPackedSInt32Field = 570;
  visitPackedSInt64Field = 571;
  visitPackedUInt32Field = 572;
  visitPackedUInt64Field = 573;
  visitRepeated = 574;
  visitRepeatedBoolField = 575;
  visitRepeatedBytesField = 576;
  visitRepeatedDoubleField = 577;
  visitRepeatedEnumField = 578;
  visitRepeatedFixed32Field = 579;
  visitRepeatedFixed64Field = 580;
  visitRepeatedFloatField = 581;
  visitRepeatedGroupField = 582;
  visitRepeatedInt32Field = 583;
  visitRepeatedInt64Field = 584;
  visitRepeatedMessageField = 585;
  visitRepeatedSFixed32Field = 586;
  visitRepeatedSFixed64Field = 587;
  visitRepeatedSInt32Field = 588;
  visitRepeatedSInt64Field = 589;
  visitRepeatedStringField = 590;
  visitRepeatedUInt32Field = 591;
  visitRepeatedUInt64Field = 592;
  visitSingular = 593;
  visitSingularBoolField = 594;
  visitSingularBytesField = 595;
  visitSingularDoubleField = 596;
  visitSingularEnumField = 597;
  visitSingularFixed32Field = 598;
  visitSingularFixed64Field = 599;
  visitSingularFloatField = 600;
  visitSingularGroupField = 601;
  visitSingularInt32Field = 602;
  visitSingularInt64Field = 603;
  visitSingularMessageField = 604;
  visitSingularSFixed32Field = 605;
  visitSingularSFixed64Field = 606;
  visitSingularSInt32Field = 607;
  visitSingularSInt64Field = 608;
  visitSingularStringField = 609;
  visitSingularUInt32Field = 610;
  visitSingularUInt64Field = 611;
  visitUnknown = 612;
  wasDecoded = 613;
  where = 614;
  wireFormat = 615;
  with = 616;
  WrappedType = 617;
  written = 618;
  yday = 619;
}
