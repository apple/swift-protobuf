// Protos/unittest_swift_reserved.proto - test proto
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2016 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See http://swift.org/LICENSE.txt for license information
// See http://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
// -----------------------------------------------------------------------------
///
/// Test Swift reserved words used as enum or message names
///
// -----------------------------------------------------------------------------

// proto2 syntax is used so the has*/clear* names also get generated.
syntax = "proto2";
package swift_unittest.names;

message FieldNamingInitials {

  message Lowers {
    optional int32 http = 1;
    optional int32 http_request = 2;
    optional int32 the_http_request = 3;
    optional int32 the_http = 4;

    optional int32 https = 11;
    optional int32 https_request = 12;
    optional int32 the_https_request = 13;
    optional int32 the_https = 14;

    optional int32 url = 21;
    optional int32 url_value = 22;
    optional int32 the_url_value = 23;
    optional int32 the_url = 24;

    optional int32 a_b_c = 31;
  }

  message Uppers {
    optional int32 HTTP = 1;
    optional int32 HTTP_request = 2;
    optional int32 the_HTTP_request = 3;
    optional int32 the_HTTP = 4;

    optional int32 HTTPS = 11;
    optional int32 HTTPS_request = 12;
    optional int32 the_HTTPS_request = 13;
    optional int32 the_HTTPS = 14;

    optional int32 URL = 21;
    optional int32 URL_value = 22;
    optional int32 the_URL_value = 23;
    optional int32 the_URL = 24;
  }

  message WordCase {
    optional int32 Http = 1;
    optional int32 HttpRequest = 2;
    optional int32 TheHttpRequest = 3;
    optional int32 TheHttp = 4;

    optional int32 Https = 11;
    optional int32 HttpsRequest = 12;
    optional int32 TheHttpsRequest = 13;
    optional int32 TheHttps = 14;

    optional int32 Url = 21;
    optional int32 UrlValue = 22;
    optional int32 TheUrlValue = 23;
    optional int32 TheUrl = 24;
  }

}

// For message scoped extensions.

message ExtensionNamingInitials {
  extensions 1 to 1000;
}

message Lowers {
  extend ExtensionNamingInitials {
    optional int32 http = 1;
    optional int32 http_request = 2;
    optional int32 the_http_request = 3;
    optional int32 the_http = 4;

    optional int32 https = 11;
    optional int32 https_request = 12;
    optional int32 the_https_request = 13;
    optional int32 the_https = 14;

    optional int32 url = 21;
    optional int32 url_value = 22;
    optional int32 the_url_value = 23;
    optional int32 the_url = 24;

    optional int32 a_b_c = 31;
  }
}

message Uppers {
  extend ExtensionNamingInitials {
    optional int32 HTTP = 101;
    optional int32 HTTP_request = 102;
    optional int32 the_HTTP_request = 103;
    optional int32 the_HTTP = 104;

    optional int32 HTTPS = 111;
    optional int32 HTTPS_request = 112;
    optional int32 the_HTTPS_request = 113;
    optional int32 the_HTTPS = 114;

    optional int32 URL = 121;
    optional int32 URL_value = 122;
    optional int32 the_URL_value = 123;
    optional int32 the_URL = 124;
  }
}

message WordCase {
  extend ExtensionNamingInitials {
    optional int32 Http = 201;
    optional int32 HttpRequest = 202;
    optional int32 TheHttpRequest = 203;
    optional int32 TheHttp = 204;

    optional int32 Https = 211;
    optional int32 HttpsRequest = 212;
    optional int32 TheHttpsRequest = 213;
    optional int32 TheHttps = 214;

    optional int32 Url = 221;
    optional int32 UrlValue = 222;
    optional int32 TheUrlValue = 223;
    optional int32 TheUrl = 224;
  }
}

// For global scoped extensions.

message ExtensionNamingInitialsLowers {
  extensions 1 to 1000;
}
message ExtensionNamingInitialsUppers {
  extensions 1 to 1000;
}
message ExtensionNamingInitialsWordCase {
  extensions 1 to 1000;
}

extend ExtensionNamingInitialsLowers {
  optional int32 http = 1;
  optional int32 http_request = 2;
  optional int32 the_http_request = 3;
  optional int32 the_http = 4;

  optional int32 https = 11;
  optional int32 https_request = 12;
  optional int32 the_https_request = 13;
  optional int32 the_https = 14;

  optional int32 url = 21;
  optional int32 url_value = 22;
  optional int32 the_url_value = 23;
  optional int32 the_url = 24;

  optional int32 a_b_c = 31;
}

extend ExtensionNamingInitialsUppers {
  optional int32 HTTP = 1;
  optional int32 HTTP_request = 2;
  optional int32 the_HTTP_request = 3;
  optional int32 the_HTTP = 4;

  optional int32 HTTPS = 11;
  optional int32 HTTPS_request = 12;
  optional int32 the_HTTPS_request = 13;
  optional int32 the_HTTPS = 14;

  optional int32 URL = 21;
  optional int32 URL_value = 22;
  optional int32 the_URL_value = 23;
  optional int32 the_URL = 24;
}

extend ExtensionNamingInitialsWordCase {
  optional int32 Http = 1;
  optional int32 HttpRequest = 2;
  optional int32 TheHttpRequest = 3;
  optional int32 TheHttp = 4;

  optional int32 Https = 11;
  optional int32 HttpsRequest = 12;
  optional int32 TheHttpsRequest = 13;
  optional int32 TheHttps = 14;

  optional int32 Url = 21;
  optional int32 UrlValue = 22;
  optional int32 TheUrlValue = 23;
  optional int32 TheUrl = 24;
}
