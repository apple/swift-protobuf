// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package swift_proto_testing.generated;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  adjusted = 1;
  aggregateValue = 2;
  allCases = 3;
  allowAlias = 4;
  alwaysPrintEnumsAsInts = 5;
  alwaysPrintInt64sAsNumbers = 6;
  annotation = 7;
  any = 8;
  AnyExtensionField = 9;
  AnyMessageExtension = 10;
  AnyMessageStorage = 11;
  AnyUnpackError = 12;
  Api = 13;
  appended = 14;
  appendUIntHex = 15;
  appendUnknown = 16;
  areAllInitialized = 17;
  Array = 18;
  arrayDepth = 19;
  arrayLiteral = 20;
  arraySeparator = 21;
  as = 22;
  asciiOpenCurlyBracket = 23;
  asciiZero = 24;
  async = 25;
  AsyncIterator = 26;
  AsyncIteratorProtocol = 27;
  AsyncMessageSequence = 28;
  available = 29;
  b = 30;
  Base = 31;
  base64Values = 32;
  baseAddress = 33;
  BaseType = 34;
  begin = 35;
  binary = 36;
  BinaryDecoder = 37;
  BinaryDecodingError = 38;
  BinaryDecodingOptions = 39;
  BinaryDelimited = 40;
  BinaryEncoder = 41;
  BinaryEncodingError = 42;
  BinaryEncodingMessageSetSizeVisitor = 43;
  BinaryEncodingMessageSetVisitor = 44;
  BinaryEncodingOptions = 45;
  BinaryEncodingSizeVisitor = 46;
  BinaryEncodingVisitor = 47;
  binaryOptions = 48;
  binaryProtobufDelimitedMessages = 49;
  bitPattern = 50;
  body = 51;
  Bool = 52;
  booleanLiteral = 53;
  BooleanLiteralType = 54;
  boolValue = 55;
  buffer = 56;
  bytes = 57;
  bytesInGroup = 58;
  bytesNeeded = 59;
  bytesRead = 60;
  BytesValue = 61;
  c = 62;
  capitalizeNext = 63;
  cardinality = 64;
  CaseIterable = 65;
  ccEnableArenas = 66;
  ccGenericServices = 67;
  Character = 68;
  chars = 69;
  chunk = 70;
  class = 71;
  clearAggregateValue = 72;
  clearAllowAlias = 73;
  clearBegin = 74;
  clearCcEnableArenas = 75;
  clearCcGenericServices = 76;
  clearClientStreaming = 77;
  clearCsharpNamespace = 78;
  clearCtype = 79;
  clearDebugRedact = 80;
  clearDefaultValue = 81;
  clearDeprecated = 82;
  clearDeprecatedLegacyJsonFieldConflicts = 83;
  clearDeprecationWarning = 84;
  clearDoubleValue = 85;
  clearEdition = 86;
  clearEditionDeprecated = 87;
  clearEditionIntroduced = 88;
  clearEditionRemoved = 89;
  clearEnd = 90;
  clearEnumType = 91;
  clearExtendee = 92;
  clearExtensionValue = 93;
  clearFeatures = 94;
  clearFeatureSupport = 95;
  clearFieldPresence = 96;
  clearFixedFeatures = 97;
  clearFullName = 98;
  clearGoPackage = 99;
  clearIdempotencyLevel = 100;
  clearIdentifierValue = 101;
  clearInputType = 102;
  clearIsExtension = 103;
  clearJavaGenerateEqualsAndHash = 104;
  clearJavaGenericServices = 105;
  clearJavaMultipleFiles = 106;
  clearJavaOuterClassname = 107;
  clearJavaPackage = 108;
  clearJavaStringCheckUtf8 = 109;
  clearJsonFormat = 110;
  clearJsonName = 111;
  clearJstype = 112;
  clearLabel = 113;
  clearLazy = 114;
  clearLeadingComments = 115;
  clearMapEntry = 116;
  clearMaximumEdition = 117;
  clearMessageEncoding = 118;
  clearMessageSetWireFormat = 119;
  clearMinimumEdition = 120;
  clearName = 121;
  clearNamePart = 122;
  clearNegativeIntValue = 123;
  clearNoStandardDescriptorAccessor = 124;
  clearNumber = 125;
  clearObjcClassPrefix = 126;
  clearOneofIndex = 127;
  clearOptimizeFor = 128;
  clearOptions = 129;
  clearOutputType = 130;
  clearOverridableFeatures = 131;
  clearPackage = 132;
  clearPacked = 133;
  clearPhpClassPrefix = 134;
  clearPhpMetadataNamespace = 135;
  clearPhpNamespace = 136;
  clearPositiveIntValue = 137;
  clearProto3Optional = 138;
  clearPyGenericServices = 139;
  clearRepeated = 140;
  clearRepeatedFieldEncoding = 141;
  clearReserved = 142;
  clearRetention = 143;
  clearRubyPackage = 144;
  clearSemantic = 145;
  clearServerStreaming = 146;
  clearSourceCodeInfo = 147;
  clearSourceContext = 148;
  clearSourceFile = 149;
  clearStart = 150;
  clearStringValue = 151;
  clearSwiftPrefix = 152;
  clearSyntax = 153;
  clearTrailingComments = 154;
  clearType = 155;
  clearTypeName = 156;
  clearUnverifiedLazy = 157;
  clearUtf8Validation = 158;
  clearValue = 159;
  clearVerification = 160;
  clearWeak = 161;
  clientStreaming = 162;
  codePoint = 163;
  codeUnits = 164;
  Collection = 165;
  com = 166;
  comma = 167;
  consumedBytes = 168;
  contentsOf = 169;
  count = 170;
  countVarintsInBuffer = 171;
  csharpNamespace = 172;
  ctype = 173;
  customCodable = 174;
  CustomDebugStringConvertible = 175;
  d = 176;
  Data = 177;
  dataResult = 178;
  date = 179;
  daySec = 180;
  daysSinceEpoch = 181;
  debugDescription = 182;
  debugRedact = 183;
  declaration = 184;
  decoded = 185;
  decodedFromJSONNull = 186;
  decodeExtensionField = 187;
  decodeExtensionFieldsAsMessageSet = 188;
  decodeJSON = 189;
  decodeMapField = 190;
  decodeMessage = 191;
  decoder = 192;
  decodeRepeated = 193;
  decodeRepeatedBoolField = 194;
  decodeRepeatedBytesField = 195;
  decodeRepeatedDoubleField = 196;
  decodeRepeatedEnumField = 197;
  decodeRepeatedFixed32Field = 198;
  decodeRepeatedFixed64Field = 199;
  decodeRepeatedFloatField = 200;
  decodeRepeatedGroupField = 201;
  decodeRepeatedInt32Field = 202;
  decodeRepeatedInt64Field = 203;
  decodeRepeatedMessageField = 204;
  decodeRepeatedSFixed32Field = 205;
  decodeRepeatedSFixed64Field = 206;
  decodeRepeatedSInt32Field = 207;
  decodeRepeatedSInt64Field = 208;
  decodeRepeatedStringField = 209;
  decodeRepeatedUInt32Field = 210;
  decodeRepeatedUInt64Field = 211;
  decodeSingular = 212;
  decodeSingularBoolField = 213;
  decodeSingularBytesField = 214;
  decodeSingularDoubleField = 215;
  decodeSingularEnumField = 216;
  decodeSingularFixed32Field = 217;
  decodeSingularFixed64Field = 218;
  decodeSingularFloatField = 219;
  decodeSingularGroupField = 220;
  decodeSingularInt32Field = 221;
  decodeSingularInt64Field = 222;
  decodeSingularMessageField = 223;
  decodeSingularSFixed32Field = 224;
  decodeSingularSFixed64Field = 225;
  decodeSingularSInt32Field = 226;
  decodeSingularSInt64Field = 227;
  decodeSingularStringField = 228;
  decodeSingularUInt32Field = 229;
  decodeSingularUInt64Field = 230;
  decodeTextFormat = 231;
  defaultAnyTypeURLPrefix = 232;
  defaults = 233;
  defaultValue = 234;
  dependency = 235;
  deprecated = 236;
  deprecatedLegacyJsonFieldConflicts = 237;
  deprecationWarning = 238;
  description = 239;
  DescriptorProto = 240;
  Dictionary = 241;
  dictionaryLiteral = 242;
  digit = 243;
  digit0 = 244;
  digit1 = 245;
  digitCount = 246;
  digits = 247;
  digitValue = 248;
  discardableResult = 249;
  discardUnknownFields = 250;
  Double = 251;
  doubleValue = 252;
  Duration = 253;
  E = 254;
  edition = 255;
  EditionDefault = 256;
  editionDefaults = 257;
  editionDeprecated = 258;
  editionIntroduced = 259;
  editionRemoved = 260;
  Element = 261;
  elements = 262;
  emitExtensionFieldName = 263;
  emitFieldName = 264;
  emitFieldNumber = 265;
  Empty = 266;
  encodeAsBytes = 267;
  encoded = 268;
  encodedJSONString = 269;
  encodedSize = 270;
  encodeField = 271;
  encoder = 272;
  end = 273;
  endArray = 274;
  endMessageField = 275;
  endObject = 276;
  endRegularField = 277;
  enum = 278;
  EnumDescriptorProto = 279;
  EnumOptions = 280;
  EnumReservedRange = 281;
  enumType = 282;
  enumvalue = 283;
  EnumValueDescriptorProto = 284;
  EnumValueOptions = 285;
  Equatable = 286;
  Error = 287;
  ExpressibleByArrayLiteral = 288;
  ExpressibleByDictionaryLiteral = 289;
  ext = 290;
  extDecoder = 291;
  extendedGraphemeClusterLiteral = 292;
  ExtendedGraphemeClusterLiteralType = 293;
  extendee = 294;
  ExtensibleMessage = 295;
  extension = 296;
  ExtensionField = 297;
  extensionFieldNumber = 298;
  ExtensionFieldValueSet = 299;
  ExtensionMap = 300;
  extensionRange = 301;
  ExtensionRangeOptions = 302;
  extensions = 303;
  extras = 304;
  F = 305;
  false = 306;
  features = 307;
  FeatureSet = 308;
  FeatureSetDefaults = 309;
  FeatureSetEditionDefault = 310;
  featureSupport = 311;
  field = 312;
  fieldData = 313;
  FieldDescriptorProto = 314;
  FieldMask = 315;
  fieldName = 316;
  fieldNameCount = 317;
  fieldNum = 318;
  fieldNumber = 319;
  fieldNumberForProto = 320;
  FieldOptions = 321;
  fieldPresence = 322;
  fields = 323;
  fieldSize = 324;
  FieldTag = 325;
  fieldType = 326;
  file = 327;
  FileDescriptorProto = 328;
  FileDescriptorSet = 329;
  fileName = 330;
  FileOptions = 331;
  filter = 332;
  final = 333;
  finiteOnly = 334;
  first = 335;
  firstItem = 336;
  fixedFeatures = 337;
  Float = 338;
  floatLiteral = 339;
  FloatLiteralType = 340;
  FloatValue = 341;
  forMessageName = 342;
  formUnion = 343;
  forReadingFrom = 344;
  forTypeURL = 345;
  ForwardParser = 346;
  forWritingInto = 347;
  from = 348;
  fromAscii2 = 349;
  fromAscii4 = 350;
  fromByteOffset = 351;
  fromHexDigit = 352;
  fullName = 353;
  func = 354;
  G = 355;
  GeneratedCodeInfo = 356;
  get = 357;
  getExtensionValue = 358;
  googleapis = 359;
  Google_Protobuf_Any = 360;
  Google_Protobuf_Api = 361;
  Google_Protobuf_BoolValue = 362;
  Google_Protobuf_BytesValue = 363;
  Google_Protobuf_DescriptorProto = 364;
  Google_Protobuf_DoubleValue = 365;
  Google_Protobuf_Duration = 366;
  Google_Protobuf_Edition = 367;
  Google_Protobuf_Empty = 368;
  Google_Protobuf_Enum = 369;
  Google_Protobuf_EnumDescriptorProto = 370;
  Google_Protobuf_EnumOptions = 371;
  Google_Protobuf_EnumValue = 372;
  Google_Protobuf_EnumValueDescriptorProto = 373;
  Google_Protobuf_EnumValueOptions = 374;
  Google_Protobuf_ExtensionRangeOptions = 375;
  Google_Protobuf_FeatureSet = 376;
  Google_Protobuf_FeatureSetDefaults = 377;
  Google_Protobuf_Field = 378;
  Google_Protobuf_FieldDescriptorProto = 379;
  Google_Protobuf_FieldMask = 380;
  Google_Protobuf_FieldOptions = 381;
  Google_Protobuf_FileDescriptorProto = 382;
  Google_Protobuf_FileDescriptorSet = 383;
  Google_Protobuf_FileOptions = 384;
  Google_Protobuf_FloatValue = 385;
  Google_Protobuf_GeneratedCodeInfo = 386;
  Google_Protobuf_Int32Value = 387;
  Google_Protobuf_Int64Value = 388;
  Google_Protobuf_ListValue = 389;
  Google_Protobuf_MessageOptions = 390;
  Google_Protobuf_Method = 391;
  Google_Protobuf_MethodDescriptorProto = 392;
  Google_Protobuf_MethodOptions = 393;
  Google_Protobuf_Mixin = 394;
  Google_Protobuf_NullValue = 395;
  Google_Protobuf_OneofDescriptorProto = 396;
  Google_Protobuf_OneofOptions = 397;
  Google_Protobuf_Option = 398;
  Google_Protobuf_ServiceDescriptorProto = 399;
  Google_Protobuf_ServiceOptions = 400;
  Google_Protobuf_SourceCodeInfo = 401;
  Google_Protobuf_SourceContext = 402;
  Google_Protobuf_StringValue = 403;
  Google_Protobuf_Struct = 404;
  Google_Protobuf_Syntax = 405;
  Google_Protobuf_Timestamp = 406;
  Google_Protobuf_Type = 407;
  Google_Protobuf_UInt32Value = 408;
  Google_Protobuf_UInt64Value = 409;
  Google_Protobuf_UninterpretedOption = 410;
  Google_Protobuf_Value = 411;
  goPackage = 412;
  group = 413;
  groupFieldNumberStack = 414;
  groupSize = 415;
  hadOneofValue = 416;
  handleConflictingOneOf = 417;
  hasAggregateValue = 418;
  hasAllowAlias = 419;
  hasBegin = 420;
  hasCcEnableArenas = 421;
  hasCcGenericServices = 422;
  hasClientStreaming = 423;
  hasCsharpNamespace = 424;
  hasCtype = 425;
  hasDebugRedact = 426;
  hasDefaultValue = 427;
  hasDeprecated = 428;
  hasDeprecatedLegacyJsonFieldConflicts = 429;
  hasDeprecationWarning = 430;
  hasDoubleValue = 431;
  hasEdition = 432;
  hasEditionDeprecated = 433;
  hasEditionIntroduced = 434;
  hasEditionRemoved = 435;
  hasEnd = 436;
  hasEnumType = 437;
  hasExtendee = 438;
  hasExtensionValue = 439;
  hasFeatures = 440;
  hasFeatureSupport = 441;
  hasFieldPresence = 442;
  hasFixedFeatures = 443;
  hasFullName = 444;
  hasGoPackage = 445;
  hash = 446;
  Hashable = 447;
  hasher = 448;
  HashVisitor = 449;
  hasIdempotencyLevel = 450;
  hasIdentifierValue = 451;
  hasInputType = 452;
  hasIsExtension = 453;
  hasJavaGenerateEqualsAndHash = 454;
  hasJavaGenericServices = 455;
  hasJavaMultipleFiles = 456;
  hasJavaOuterClassname = 457;
  hasJavaPackage = 458;
  hasJavaStringCheckUtf8 = 459;
  hasJsonFormat = 460;
  hasJsonName = 461;
  hasJstype = 462;
  hasLabel = 463;
  hasLazy = 464;
  hasLeadingComments = 465;
  hasMapEntry = 466;
  hasMaximumEdition = 467;
  hasMessageEncoding = 468;
  hasMessageSetWireFormat = 469;
  hasMinimumEdition = 470;
  hasName = 471;
  hasNamePart = 472;
  hasNegativeIntValue = 473;
  hasNoStandardDescriptorAccessor = 474;
  hasNumber = 475;
  hasObjcClassPrefix = 476;
  hasOneofIndex = 477;
  hasOptimizeFor = 478;
  hasOptions = 479;
  hasOutputType = 480;
  hasOverridableFeatures = 481;
  hasPackage = 482;
  hasPacked = 483;
  hasPhpClassPrefix = 484;
  hasPhpMetadataNamespace = 485;
  hasPhpNamespace = 486;
  hasPositiveIntValue = 487;
  hasProto3Optional = 488;
  hasPyGenericServices = 489;
  hasRepeated = 490;
  hasRepeatedFieldEncoding = 491;
  hasReserved = 492;
  hasRetention = 493;
  hasRubyPackage = 494;
  hasSemantic = 495;
  hasServerStreaming = 496;
  hasSourceCodeInfo = 497;
  hasSourceContext = 498;
  hasSourceFile = 499;
  hasStart = 500;
  hasStringValue = 501;
  hasSwiftPrefix = 502;
  hasSyntax = 503;
  hasTrailingComments = 504;
  hasType = 505;
  hasTypeName = 506;
  hasUnverifiedLazy = 507;
  hasUtf8Validation = 508;
  hasValue = 509;
  hasVerification = 510;
  hasWeak = 511;
  hour = 512;
  i = 513;
  idempotencyLevel = 514;
  identifierValue = 515;
  if = 516;
  ignoreUnknownExtensionFields = 517;
  ignoreUnknownFields = 518;
  index = 519;
  init = 520;
  inout = 521;
  inputType = 522;
  insert = 523;
  Int = 524;
  Int32 = 525;
  Int32Value = 526;
  Int64 = 527;
  Int64Value = 528;
  Int8 = 529;
  integerLiteral = 530;
  IntegerLiteralType = 531;
  intern = 532;
  Internal = 533;
  InternalState = 534;
  into = 535;
  ints = 536;
  isA = 537;
  isEqual = 538;
  isEqualTo = 539;
  isExtension = 540;
  isInitialized = 541;
  isNegative = 542;
  itemTagsEncodedSize = 543;
  iterator = 544;
  javaGenerateEqualsAndHash = 545;
  javaGenericServices = 546;
  javaMultipleFiles = 547;
  javaOuterClassname = 548;
  javaPackage = 549;
  javaStringCheckUtf8 = 550;
  JSONDecoder = 551;
  JSONDecodingError = 552;
  JSONDecodingOptions = 553;
  jsonEncoder = 554;
  JSONEncodingError = 555;
  JSONEncodingOptions = 556;
  JSONEncodingVisitor = 557;
  jsonFormat = 558;
  JSONMapEncodingVisitor = 559;
  jsonName = 560;
  jsonPath = 561;
  jsonPaths = 562;
  JSONScanner = 563;
  jsonString = 564;
  jsonText = 565;
  jsonUTF8Bytes = 566;
  jsonUTF8Data = 567;
  jstype = 568;
  k = 569;
  kChunkSize = 570;
  Key = 571;
  keyField = 572;
  keyFieldOpt = 573;
  KeyType = 574;
  kind = 575;
  l = 576;
  label = 577;
  lazy = 578;
  leadingComments = 579;
  leadingDetachedComments = 580;
  length = 581;
  lessThan = 582;
  let = 583;
  lhs = 584;
  list = 585;
  listOfMessages = 586;
  listValue = 587;
  littleEndian = 588;
  load = 589;
  localHasher = 590;
  location = 591;
  M = 592;
  major = 593;
  makeAsyncIterator = 594;
  makeIterator = 595;
  mapEntry = 596;
  MapKeyType = 597;
  mapToMessages = 598;
  MapValueType = 599;
  mapVisitor = 600;
  maximumEdition = 601;
  mdayStart = 602;
  merge = 603;
  message = 604;
  messageDepthLimit = 605;
  messageEncoding = 606;
  MessageExtension = 607;
  MessageImplementationBase = 608;
  MessageOptions = 609;
  MessageSet = 610;
  messageSetWireFormat = 611;
  messageSize = 612;
  messageType = 613;
  Method = 614;
  MethodDescriptorProto = 615;
  MethodOptions = 616;
  methods = 617;
  min = 618;
  minimumEdition = 619;
  minor = 620;
  Mixin = 621;
  mixins = 622;
  modifier = 623;
  modify = 624;
  month = 625;
  msgExtension = 626;
  mutating = 627;
  n = 628;
  name = 629;
  NameDescription = 630;
  NameMap = 631;
  NamePart = 632;
  names = 633;
  nanos = 634;
  negativeIntValue = 635;
  nestedType = 636;
  newL = 637;
  newList = 638;
  newValue = 639;
  next = 640;
  nextByte = 641;
  nextFieldNumber = 642;
  nextVarInt = 643;
  nil = 644;
  nilLiteral = 645;
  noStandardDescriptorAccessor = 646;
  nullValue = 647;
  number = 648;
  numberValue = 649;
  objcClassPrefix = 650;
  of = 651;
  oneofDecl = 652;
  OneofDescriptorProto = 653;
  oneofIndex = 654;
  OneofOptions = 655;
  oneofs = 656;
  OneOf_Kind = 657;
  optimizeFor = 658;
  OptimizeMode = 659;
  Option = 660;
  OptionalEnumExtensionField = 661;
  OptionalExtensionField = 662;
  OptionalGroupExtensionField = 663;
  OptionalMessageExtensionField = 664;
  OptionRetention = 665;
  options = 666;
  OptionTargetType = 667;
  other = 668;
  others = 669;
  out = 670;
  outputType = 671;
  overridableFeatures = 672;
  p = 673;
  package = 674;
  packed = 675;
  PackedEnumExtensionField = 676;
  PackedExtensionField = 677;
  padding = 678;
  parent = 679;
  parse = 680;
  path = 681;
  paths = 682;
  payload = 683;
  payloadSize = 684;
  phpClassPrefix = 685;
  phpMetadataNamespace = 686;
  phpNamespace = 687;
  pos = 688;
  positiveIntValue = 689;
  prefix = 690;
  preserveProtoFieldNames = 691;
  preTraverse = 692;
  printUnknownFields = 693;
  proto2 = 694;
  proto3DefaultValue = 695;
  proto3Optional = 696;
  ProtobufAPIVersionCheck = 697;
  ProtobufAPIVersion_3 = 698;
  ProtobufBool = 699;
  ProtobufBytes = 700;
  ProtobufDouble = 701;
  ProtobufEnumMap = 702;
  protobufExtension = 703;
  ProtobufFixed32 = 704;
  ProtobufFixed64 = 705;
  ProtobufFloat = 706;
  ProtobufInt32 = 707;
  ProtobufInt64 = 708;
  ProtobufMap = 709;
  ProtobufMessageMap = 710;
  ProtobufSFixed32 = 711;
  ProtobufSFixed64 = 712;
  ProtobufSInt32 = 713;
  ProtobufSInt64 = 714;
  ProtobufString = 715;
  ProtobufUInt32 = 716;
  ProtobufUInt64 = 717;
  protobuf_extensionFieldValues = 718;
  protobuf_fieldNumber = 719;
  protobuf_generated_isEqualTo = 720;
  protobuf_nameMap = 721;
  protobuf_newField = 722;
  protobuf_package = 723;
  protocol = 724;
  protoFieldName = 725;
  protoMessageName = 726;
  ProtoNameProviding = 727;
  protoPaths = 728;
  public = 729;
  publicDependency = 730;
  putBoolValue = 731;
  putBytesValue = 732;
  putDoubleValue = 733;
  putEnumValue = 734;
  putFixedUInt32 = 735;
  putFixedUInt64 = 736;
  putFloatValue = 737;
  putInt64 = 738;
  putStringValue = 739;
  putUInt64 = 740;
  putUInt64Hex = 741;
  putVarInt = 742;
  putZigZagVarInt = 743;
  pyGenericServices = 744;
  R = 745;
  rawChars = 746;
  RawRepresentable = 747;
  RawValue = 748;
  read4HexDigits = 749;
  readBytes = 750;
  register = 751;
  repeated = 752;
  RepeatedEnumExtensionField = 753;
  RepeatedExtensionField = 754;
  repeatedFieldEncoding = 755;
  RepeatedGroupExtensionField = 756;
  RepeatedMessageExtensionField = 757;
  repeating = 758;
  requestStreaming = 759;
  requestTypeURL = 760;
  requiredSize = 761;
  responseStreaming = 762;
  responseTypeURL = 763;
  result = 764;
  retention = 765;
  rethrows = 766;
  return = 767;
  ReturnType = 768;
  revision = 769;
  rhs = 770;
  root = 771;
  rubyPackage = 772;
  s = 773;
  sawBackslash = 774;
  sawSection4Characters = 775;
  sawSection5Characters = 776;
  scan = 777;
  scanner = 778;
  seconds = 779;
  self = 780;
  semantic = 781;
  Sendable = 782;
  separator = 783;
  serialize = 784;
  serializedBytes = 785;
  serializedData = 786;
  serializedSize = 787;
  serverStreaming = 788;
  service = 789;
  ServiceDescriptorProto = 790;
  ServiceOptions = 791;
  set = 792;
  setExtensionValue = 793;
  shift = 794;
  SimpleExtensionMap = 795;
  size = 796;
  sizer = 797;
  source = 798;
  sourceCodeInfo = 799;
  sourceContext = 800;
  sourceEncoding = 801;
  sourceFile = 802;
  span = 803;
  split = 804;
  start = 805;
  startArray = 806;
  startArrayObject = 807;
  startField = 808;
  startIndex = 809;
  startMessageField = 810;
  startObject = 811;
  startRegularField = 812;
  state = 813;
  static = 814;
  StaticString = 815;
  storage = 816;
  String = 817;
  stringLiteral = 818;
  StringLiteralType = 819;
  stringResult = 820;
  stringValue = 821;
  struct = 822;
  structValue = 823;
  subDecoder = 824;
  subscript = 825;
  subVisitor = 826;
  Swift = 827;
  swiftPrefix = 828;
  SwiftProtobufContiguousBytes = 829;
  syntax = 830;
  T = 831;
  tag = 832;
  targets = 833;
  terminator = 834;
  testDecoder = 835;
  text = 836;
  textDecoder = 837;
  TextFormatDecoder = 838;
  TextFormatDecodingError = 839;
  TextFormatDecodingOptions = 840;
  TextFormatEncodingOptions = 841;
  TextFormatEncodingVisitor = 842;
  textFormatString = 843;
  throwOrIgnore = 844;
  throws = 845;
  timeInterval = 846;
  timeIntervalSince1970 = 847;
  timeIntervalSinceReferenceDate = 848;
  Timestamp = 849;
  total = 850;
  totalArrayDepth = 851;
  totalSize = 852;
  trailingComments = 853;
  traverse = 854;
  true = 855;
  try = 856;
  type = 857;
  typealias = 858;
  TypeEnum = 859;
  typeName = 860;
  typePrefix = 861;
  typeStart = 862;
  typeUnknown = 863;
  typeURL = 864;
  UInt32 = 865;
  UInt32Value = 866;
  UInt64 = 867;
  UInt64Value = 868;
  UInt8 = 869;
  unchecked = 870;
  unicodeScalarLiteral = 871;
  UnicodeScalarLiteralType = 872;
  unicodeScalars = 873;
  UnicodeScalarView = 874;
  uninterpretedOption = 875;
  union = 876;
  uniqueStorage = 877;
  unknown = 878;
  unknownFields = 879;
  UnknownStorage = 880;
  unpackTo = 881;
  UnsafeBufferPointer = 882;
  UnsafeMutablePointer = 883;
  UnsafeMutableRawBufferPointer = 884;
  UnsafeRawBufferPointer = 885;
  UnsafeRawPointer = 886;
  unverifiedLazy = 887;
  updatedOptions = 888;
  url = 889;
  useDeterministicOrdering = 890;
  utf8 = 891;
  utf8Ptr = 892;
  utf8ToDouble = 893;
  utf8Validation = 894;
  UTF8View = 895;
  v = 896;
  value = 897;
  valueField = 898;
  values = 899;
  ValueType = 900;
  var = 901;
  verification = 902;
  VerificationState = 903;
  Version = 904;
  versionString = 905;
  visitExtensionFields = 906;
  visitExtensionFieldsAsMessageSet = 907;
  visitMapField = 908;
  visitor = 909;
  visitPacked = 910;
  visitPackedBoolField = 911;
  visitPackedDoubleField = 912;
  visitPackedEnumField = 913;
  visitPackedFixed32Field = 914;
  visitPackedFixed64Field = 915;
  visitPackedFloatField = 916;
  visitPackedInt32Field = 917;
  visitPackedInt64Field = 918;
  visitPackedSFixed32Field = 919;
  visitPackedSFixed64Field = 920;
  visitPackedSInt32Field = 921;
  visitPackedSInt64Field = 922;
  visitPackedUInt32Field = 923;
  visitPackedUInt64Field = 924;
  visitRepeated = 925;
  visitRepeatedBoolField = 926;
  visitRepeatedBytesField = 927;
  visitRepeatedDoubleField = 928;
  visitRepeatedEnumField = 929;
  visitRepeatedFixed32Field = 930;
  visitRepeatedFixed64Field = 931;
  visitRepeatedFloatField = 932;
  visitRepeatedGroupField = 933;
  visitRepeatedInt32Field = 934;
  visitRepeatedInt64Field = 935;
  visitRepeatedMessageField = 936;
  visitRepeatedSFixed32Field = 937;
  visitRepeatedSFixed64Field = 938;
  visitRepeatedSInt32Field = 939;
  visitRepeatedSInt64Field = 940;
  visitRepeatedStringField = 941;
  visitRepeatedUInt32Field = 942;
  visitRepeatedUInt64Field = 943;
  visitSingular = 944;
  visitSingularBoolField = 945;
  visitSingularBytesField = 946;
  visitSingularDoubleField = 947;
  visitSingularEnumField = 948;
  visitSingularFixed32Field = 949;
  visitSingularFixed64Field = 950;
  visitSingularFloatField = 951;
  visitSingularGroupField = 952;
  visitSingularInt32Field = 953;
  visitSingularInt64Field = 954;
  visitSingularMessageField = 955;
  visitSingularSFixed32Field = 956;
  visitSingularSFixed64Field = 957;
  visitSingularSInt32Field = 958;
  visitSingularSInt64Field = 959;
  visitSingularStringField = 960;
  visitSingularUInt32Field = 961;
  visitSingularUInt64Field = 962;
  visitUnknown = 963;
  wasDecoded = 964;
  weak = 965;
  weakDependency = 966;
  where = 967;
  wireFormat = 968;
  with = 969;
  withUnsafeBytes = 970;
  withUnsafeMutableBytes = 971;
  work = 972;
  Wrapped = 973;
  WrappedType = 974;
  wrappedValue = 975;
  written = 976;
  yday = 977;
}
