// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package swift_proto_testing.generated;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  addPath = 1;
  adjusted = 2;
  aggregateValue = 3;
  allCases = 4;
  allowAlias = 5;
  alwaysPrintEnumsAsInts = 6;
  alwaysPrintInt64sAsNumbers = 7;
  annotation = 8;
  any = 9;
  AnyExtensionField = 10;
  AnyMessageExtension = 11;
  AnyMessageStorage = 12;
  AnyUnpackError = 13;
  Api = 14;
  appended = 15;
  appendUIntHex = 16;
  appendUnknown = 17;
  areAllInitialized = 18;
  Array = 19;
  arrayDepth = 20;
  arrayLiteral = 21;
  arraySeparator = 22;
  as = 23;
  asciiOpenCurlyBracket = 24;
  asciiZero = 25;
  async = 26;
  AsyncIterator = 27;
  AsyncIteratorProtocol = 28;
  AsyncMessageSequence = 29;
  available = 30;
  b = 31;
  Base = 32;
  base64Values = 33;
  baseAddress = 34;
  BaseType = 35;
  begin = 36;
  binary = 37;
  BinaryDecoder = 38;
  BinaryDecoding = 39;
  BinaryDecodingError = 40;
  BinaryDecodingOptions = 41;
  BinaryDelimited = 42;
  BinaryEncoder = 43;
  BinaryEncodingError = 44;
  BinaryEncodingMessageSetSizeVisitor = 45;
  BinaryEncodingMessageSetVisitor = 46;
  BinaryEncodingOptions = 47;
  BinaryEncodingSizeVisitor = 48;
  BinaryEncodingVisitor = 49;
  binaryOptions = 50;
  binaryProtobufDelimitedMessages = 51;
  BinaryStreamDecoding = 52;
  binaryStreamDecodingError = 53;
  bitPattern = 54;
  body = 55;
  Bool = 56;
  booleanLiteral = 57;
  BooleanLiteralType = 58;
  boolValue = 59;
  buffer = 60;
  bytes = 61;
  bytesInGroup = 62;
  bytesNeeded = 63;
  bytesRead = 64;
  BytesValue = 65;
  c = 66;
  canonical = 67;
  capitalizeNext = 68;
  cardinality = 69;
  CaseIterable = 70;
  castedValue = 71;
  ccEnableArenas = 72;
  ccGenericServices = 73;
  Character = 74;
  chars = 75;
  chunk = 76;
  class = 77;
  clearAggregateValue = 78;
  clearAllowAlias = 79;
  clearBegin = 80;
  clearCcEnableArenas = 81;
  clearCcGenericServices = 82;
  clearClientStreaming = 83;
  clearCsharpNamespace = 84;
  clearCtype = 85;
  clearDebugRedact = 86;
  clearDefaultValue = 87;
  clearDeprecated = 88;
  clearDeprecatedLegacyJsonFieldConflicts = 89;
  clearDeprecationWarning = 90;
  clearDoubleValue = 91;
  clearEdition = 92;
  clearEditionDeprecated = 93;
  clearEditionIntroduced = 94;
  clearEditionRemoved = 95;
  clearEnd = 96;
  clearEnumType = 97;
  clearExtendee = 98;
  clearExtensionValue = 99;
  clearFeatures = 100;
  clearFeatureSupport = 101;
  clearFieldPresence = 102;
  clearFixedFeatures = 103;
  clearFullName = 104;
  clearGoPackage = 105;
  clearIdempotencyLevel = 106;
  clearIdentifierValue = 107;
  clearInputType = 108;
  clearIsExtension = 109;
  clearJavaGenerateEqualsAndHash = 110;
  clearJavaGenericServices = 111;
  clearJavaMultipleFiles = 112;
  clearJavaOuterClassname = 113;
  clearJavaPackage = 114;
  clearJavaStringCheckUtf8 = 115;
  clearJsonFormat = 116;
  clearJsonName = 117;
  clearJstype = 118;
  clearLabel = 119;
  clearLazy = 120;
  clearLeadingComments = 121;
  clearMapEntry = 122;
  clearMaximumEdition = 123;
  clearMessageEncoding = 124;
  clearMessageSetWireFormat = 125;
  clearMinimumEdition = 126;
  clearName = 127;
  clearNamePart = 128;
  clearNegativeIntValue = 129;
  clearNoStandardDescriptorAccessor = 130;
  clearNumber = 131;
  clearObjcClassPrefix = 132;
  clearOneofIndex = 133;
  clearOptimizeFor = 134;
  clearOptions = 135;
  clearOutputType = 136;
  clearOverridableFeatures = 137;
  clearPackage = 138;
  clearPacked = 139;
  clearPhpClassPrefix = 140;
  clearPhpMetadataNamespace = 141;
  clearPhpNamespace = 142;
  clearPositiveIntValue = 143;
  clearProto3Optional = 144;
  clearPyGenericServices = 145;
  clearRepeated = 146;
  clearRepeatedFieldEncoding = 147;
  clearReserved = 148;
  clearRetention = 149;
  clearRubyPackage = 150;
  clearSemantic = 151;
  clearServerStreaming = 152;
  clearSourceCodeInfo = 153;
  clearSourceContext = 154;
  clearSourceFile = 155;
  clearStart = 156;
  clearStringValue = 157;
  clearSwiftPrefix = 158;
  clearSyntax = 159;
  clearTrailingComments = 160;
  clearType = 161;
  clearTypeName = 162;
  clearUnverifiedLazy = 163;
  clearUtf8Validation = 164;
  clearValue = 165;
  clearVerification = 166;
  clearWeak = 167;
  clientStreaming = 168;
  code = 169;
  codePoint = 170;
  codeUnits = 171;
  Collection = 172;
  com = 173;
  comma = 174;
  consumedBytes = 175;
  contains = 176;
  contentsOf = 177;
  ContiguousBytes = 178;
  copy = 179;
  count = 180;
  countVarintsInBuffer = 181;
  csharpNamespace = 182;
  ctype = 183;
  customCodable = 184;
  CustomDebugStringConvertible = 185;
  CustomStringConvertible = 186;
  d = 187;
  Data = 188;
  dataResult = 189;
  date = 190;
  daySec = 191;
  daysSinceEpoch = 192;
  debugDescription = 193;
  debugRedact = 194;
  declaration = 195;
  decoded = 196;
  decodedFromJSONNull = 197;
  decodeExtensionField = 198;
  decodeExtensionFieldsAsMessageSet = 199;
  decodeJSON = 200;
  decodeMapField = 201;
  decodeMessage = 202;
  decoder = 203;
  decodeRepeated = 204;
  decodeRepeatedBoolField = 205;
  decodeRepeatedBytesField = 206;
  decodeRepeatedDoubleField = 207;
  decodeRepeatedEnumField = 208;
  decodeRepeatedFixed32Field = 209;
  decodeRepeatedFixed64Field = 210;
  decodeRepeatedFloatField = 211;
  decodeRepeatedGroupField = 212;
  decodeRepeatedInt32Field = 213;
  decodeRepeatedInt64Field = 214;
  decodeRepeatedMessageField = 215;
  decodeRepeatedSFixed32Field = 216;
  decodeRepeatedSFixed64Field = 217;
  decodeRepeatedSInt32Field = 218;
  decodeRepeatedSInt64Field = 219;
  decodeRepeatedStringField = 220;
  decodeRepeatedUInt32Field = 221;
  decodeRepeatedUInt64Field = 222;
  decodeSingular = 223;
  decodeSingularBoolField = 224;
  decodeSingularBytesField = 225;
  decodeSingularDoubleField = 226;
  decodeSingularEnumField = 227;
  decodeSingularFixed32Field = 228;
  decodeSingularFixed64Field = 229;
  decodeSingularFloatField = 230;
  decodeSingularGroupField = 231;
  decodeSingularInt32Field = 232;
  decodeSingularInt64Field = 233;
  decodeSingularMessageField = 234;
  decodeSingularSFixed32Field = 235;
  decodeSingularSFixed64Field = 236;
  decodeSingularSInt32Field = 237;
  decodeSingularSInt64Field = 238;
  decodeSingularStringField = 239;
  decodeSingularUInt32Field = 240;
  decodeSingularUInt64Field = 241;
  decodeTextFormat = 242;
  defaultAnyTypeURLPrefix = 243;
  defaults = 244;
  defaultValue = 245;
  dependency = 246;
  deprecated = 247;
  deprecatedLegacyJsonFieldConflicts = 248;
  deprecationWarning = 249;
  description = 250;
  DescriptorProto = 251;
  Dictionary = 252;
  dictionaryLiteral = 253;
  digit = 254;
  digit0 = 255;
  digit1 = 256;
  digitCount = 257;
  digits = 258;
  digitValue = 259;
  discardableResult = 260;
  discardUnknownFields = 261;
  Double = 262;
  doubleValue = 263;
  Duration = 264;
  E = 265;
  edition = 266;
  EditionDefault = 267;
  editionDefaults = 268;
  editionDeprecated = 269;
  editionIntroduced = 270;
  editionRemoved = 271;
  Element = 272;
  elements = 273;
  else = 274;
  emitExtensionFieldName = 275;
  emitFieldName = 276;
  emitFieldNumber = 277;
  Empty = 278;
  emptyData = 279;
  encodeAsBytes = 280;
  encoded = 281;
  encodedJSONString = 282;
  encodedSize = 283;
  encodeField = 284;
  encoder = 285;
  end = 286;
  endArray = 287;
  endMessageField = 288;
  endObject = 289;
  endRegularField = 290;
  enum = 291;
  EnumDescriptorProto = 292;
  EnumOptions = 293;
  EnumReservedRange = 294;
  enumType = 295;
  enumvalue = 296;
  EnumValueDescriptorProto = 297;
  EnumValueOptions = 298;
  Equatable = 299;
  Error = 300;
  ExpressibleByArrayLiteral = 301;
  ExpressibleByDictionaryLiteral = 302;
  ext = 303;
  extDecoder = 304;
  extendedGraphemeClusterLiteral = 305;
  ExtendedGraphemeClusterLiteralType = 306;
  extendee = 307;
  ExtensibleMessage = 308;
  extension = 309;
  ExtensionField = 310;
  extensionFieldNumber = 311;
  ExtensionFieldValueSet = 312;
  ExtensionMap = 313;
  extensionRange = 314;
  ExtensionRangeOptions = 315;
  extensions = 316;
  extras = 317;
  F = 318;
  false = 319;
  features = 320;
  FeatureSet = 321;
  FeatureSetDefaults = 322;
  FeatureSetEditionDefault = 323;
  featureSupport = 324;
  field = 325;
  fieldData = 326;
  FieldDescriptorProto = 327;
  FieldMask = 328;
  FieldMaskError = 329;
  fieldName = 330;
  fieldNameCount = 331;
  fieldNum = 332;
  fieldNumber = 333;
  fieldNumberForProto = 334;
  FieldOptions = 335;
  fieldPresence = 336;
  fields = 337;
  fieldSize = 338;
  FieldTag = 339;
  FieldType = 340;
  file = 341;
  FileDescriptorProto = 342;
  FileDescriptorSet = 343;
  fileName = 344;
  FileOptions = 345;
  filter = 346;
  final = 347;
  finiteOnly = 348;
  first = 349;
  firstItem = 350;
  fixedFeatures = 351;
  Float = 352;
  floatLiteral = 353;
  FloatLiteralType = 354;
  FloatValue = 355;
  for = 356;
  forMessageName = 357;
  formUnion = 358;
  forReadingFrom = 359;
  forTypeURL = 360;
  ForwardParser = 361;
  forWritingInto = 362;
  from = 363;
  fromAscii2 = 364;
  fromAscii4 = 365;
  fromByteOffset = 366;
  fromHexDigit = 367;
  fullName = 368;
  func = 369;
  function = 370;
  G = 371;
  GeneratedCodeInfo = 372;
  get = 373;
  getExtensionValue = 374;
  googleapis = 375;
  Google_Protobuf_Any = 376;
  Google_Protobuf_Api = 377;
  Google_Protobuf_BoolValue = 378;
  Google_Protobuf_BytesValue = 379;
  Google_Protobuf_DescriptorProto = 380;
  Google_Protobuf_DoubleValue = 381;
  Google_Protobuf_Duration = 382;
  Google_Protobuf_Edition = 383;
  Google_Protobuf_Empty = 384;
  Google_Protobuf_Enum = 385;
  Google_Protobuf_EnumDescriptorProto = 386;
  Google_Protobuf_EnumOptions = 387;
  Google_Protobuf_EnumValue = 388;
  Google_Protobuf_EnumValueDescriptorProto = 389;
  Google_Protobuf_EnumValueOptions = 390;
  Google_Protobuf_ExtensionRangeOptions = 391;
  Google_Protobuf_FeatureSet = 392;
  Google_Protobuf_FeatureSetDefaults = 393;
  Google_Protobuf_Field = 394;
  Google_Protobuf_FieldDescriptorProto = 395;
  Google_Protobuf_FieldMask = 396;
  Google_Protobuf_FieldOptions = 397;
  Google_Protobuf_FileDescriptorProto = 398;
  Google_Protobuf_FileDescriptorSet = 399;
  Google_Protobuf_FileOptions = 400;
  Google_Protobuf_FloatValue = 401;
  Google_Protobuf_GeneratedCodeInfo = 402;
  Google_Protobuf_Int32Value = 403;
  Google_Protobuf_Int64Value = 404;
  Google_Protobuf_ListValue = 405;
  Google_Protobuf_MessageOptions = 406;
  Google_Protobuf_Method = 407;
  Google_Protobuf_MethodDescriptorProto = 408;
  Google_Protobuf_MethodOptions = 409;
  Google_Protobuf_Mixin = 410;
  Google_Protobuf_NullValue = 411;
  Google_Protobuf_OneofDescriptorProto = 412;
  Google_Protobuf_OneofOptions = 413;
  Google_Protobuf_Option = 414;
  Google_Protobuf_ServiceDescriptorProto = 415;
  Google_Protobuf_ServiceOptions = 416;
  Google_Protobuf_SourceCodeInfo = 417;
  Google_Protobuf_SourceContext = 418;
  Google_Protobuf_StringValue = 419;
  Google_Protobuf_Struct = 420;
  Google_Protobuf_Syntax = 421;
  Google_Protobuf_Timestamp = 422;
  Google_Protobuf_Type = 423;
  Google_Protobuf_UInt32Value = 424;
  Google_Protobuf_UInt64Value = 425;
  Google_Protobuf_UninterpretedOption = 426;
  Google_Protobuf_Value = 427;
  goPackage = 428;
  group = 429;
  groupFieldNumberStack = 430;
  groupSize = 431;
  guard = 432;
  hadOneofValue = 433;
  handleConflictingOneOf = 434;
  hasAggregateValue = 435;
  hasAllowAlias = 436;
  hasBegin = 437;
  hasCcEnableArenas = 438;
  hasCcGenericServices = 439;
  hasClientStreaming = 440;
  hasCsharpNamespace = 441;
  hasCtype = 442;
  hasDebugRedact = 443;
  hasDefaultValue = 444;
  hasDeprecated = 445;
  hasDeprecatedLegacyJsonFieldConflicts = 446;
  hasDeprecationWarning = 447;
  hasDoubleValue = 448;
  hasEdition = 449;
  hasEditionDeprecated = 450;
  hasEditionIntroduced = 451;
  hasEditionRemoved = 452;
  hasEnd = 453;
  hasEnumType = 454;
  hasExtendee = 455;
  hasExtensionValue = 456;
  hasFeatures = 457;
  hasFeatureSupport = 458;
  hasFieldPresence = 459;
  hasFixedFeatures = 460;
  hasFullName = 461;
  hasGoPackage = 462;
  hash = 463;
  Hashable = 464;
  hasher = 465;
  HashVisitor = 466;
  hasIdempotencyLevel = 467;
  hasIdentifierValue = 468;
  hasInputType = 469;
  hasIsExtension = 470;
  hasJavaGenerateEqualsAndHash = 471;
  hasJavaGenericServices = 472;
  hasJavaMultipleFiles = 473;
  hasJavaOuterClassname = 474;
  hasJavaPackage = 475;
  hasJavaStringCheckUtf8 = 476;
  hasJsonFormat = 477;
  hasJsonName = 478;
  hasJstype = 479;
  hasLabel = 480;
  hasLazy = 481;
  hasLeadingComments = 482;
  hasMapEntry = 483;
  hasMaximumEdition = 484;
  hasMessageEncoding = 485;
  hasMessageSetWireFormat = 486;
  hasMinimumEdition = 487;
  hasName = 488;
  hasNamePart = 489;
  hasNegativeIntValue = 490;
  hasNoStandardDescriptorAccessor = 491;
  hasNumber = 492;
  hasObjcClassPrefix = 493;
  hasOneofIndex = 494;
  hasOptimizeFor = 495;
  hasOptions = 496;
  hasOutputType = 497;
  hasOverridableFeatures = 498;
  hasPackage = 499;
  hasPacked = 500;
  hasPhpClassPrefix = 501;
  hasPhpMetadataNamespace = 502;
  hasPhpNamespace = 503;
  hasPositiveIntValue = 504;
  hasProto3Optional = 505;
  hasPyGenericServices = 506;
  hasRepeated = 507;
  hasRepeatedFieldEncoding = 508;
  hasReserved = 509;
  hasRetention = 510;
  hasRubyPackage = 511;
  hasSemantic = 512;
  hasServerStreaming = 513;
  hasSourceCodeInfo = 514;
  hasSourceContext = 515;
  hasSourceFile = 516;
  hasStart = 517;
  hasStringValue = 518;
  hasSwiftPrefix = 519;
  hasSyntax = 520;
  hasTrailingComments = 521;
  hasType = 522;
  hasTypeName = 523;
  hasUnverifiedLazy = 524;
  hasUtf8Validation = 525;
  hasValue = 526;
  hasVerification = 527;
  hasWeak = 528;
  hour = 529;
  i = 530;
  idempotencyLevel = 531;
  identifierValue = 532;
  if = 533;
  ignoreUnknownExtensionFields = 534;
  ignoreUnknownFields = 535;
  index = 536;
  init = 537;
  inout = 538;
  inputType = 539;
  insert = 540;
  Int = 541;
  Int32 = 542;
  Int32Value = 543;
  Int64 = 544;
  Int64Value = 545;
  Int8 = 546;
  integerLiteral = 547;
  IntegerLiteralType = 548;
  intern = 549;
  Internal = 550;
  InternalState = 551;
  intersect = 552;
  into = 553;
  ints = 554;
  isA = 555;
  isEqual = 556;
  isEqualTo = 557;
  isExtension = 558;
  isInitialized = 559;
  isNegative = 560;
  isPathValid = 561;
  isValid = 562;
  itemTagsEncodedSize = 563;
  iterator = 564;
  javaGenerateEqualsAndHash = 565;
  javaGenericServices = 566;
  javaMultipleFiles = 567;
  javaOuterClassname = 568;
  javaPackage = 569;
  javaStringCheckUtf8 = 570;
  JSONDecoder = 571;
  JSONDecodingError = 572;
  JSONDecodingOptions = 573;
  jsonEncoder = 574;
  JSONEncodingError = 575;
  JSONEncodingOptions = 576;
  JSONEncodingVisitor = 577;
  jsonFormat = 578;
  JSONMapEncodingVisitor = 579;
  jsonName = 580;
  jsonPath = 581;
  jsonPaths = 582;
  JSONScanner = 583;
  jsonString = 584;
  jsonText = 585;
  jsonUTF8Bytes = 586;
  jsonUTF8Data = 587;
  jstype = 588;
  k = 589;
  kChunkSize = 590;
  Key = 591;
  keyField = 592;
  keyFieldOpt = 593;
  KeyType = 594;
  kind = 595;
  l = 596;
  label = 597;
  lazy = 598;
  leadingComments = 599;
  leadingDetachedComments = 600;
  length = 601;
  lessThan = 602;
  let = 603;
  lhs = 604;
  line = 605;
  list = 606;
  listOfMessages = 607;
  listValue = 608;
  littleEndian = 609;
  load = 610;
  localHasher = 611;
  location = 612;
  M = 613;
  major = 614;
  makeAsyncIterator = 615;
  makeIterator = 616;
  malformedLength = 617;
  mapEntry = 618;
  MapKeyType = 619;
  mapToMessages = 620;
  MapValueType = 621;
  mapVisitor = 622;
  mask = 623;
  maximumEdition = 624;
  mdayStart = 625;
  merge = 626;
  MergeOptions = 627;
  message = 628;
  messageDepthLimit = 629;
  messageEncoding = 630;
  MessageExtension = 631;
  MessageImplementationBase = 632;
  MessageOptions = 633;
  MessageSet = 634;
  messageSetWireFormat = 635;
  messageSize = 636;
  messageType = 637;
  Method = 638;
  MethodDescriptorProto = 639;
  MethodOptions = 640;
  methods = 641;
  min = 642;
  minimumEdition = 643;
  minor = 644;
  Mixin = 645;
  mixins = 646;
  modify = 647;
  month = 648;
  msgExtension = 649;
  mutating = 650;
  n = 651;
  name = 652;
  NameDescription = 653;
  NameMap = 654;
  NamePart = 655;
  names = 656;
  nanos = 657;
  negativeIntValue = 658;
  nestedType = 659;
  newExtensible = 660;
  newL = 661;
  newList = 662;
  newMessage = 663;
  newValue = 664;
  next = 665;
  nextByte = 666;
  nextFieldNumber = 667;
  nextVarInt = 668;
  nil = 669;
  nilLiteral = 670;
  noBytesAvailable = 671;
  noStandardDescriptorAccessor = 672;
  nullValue = 673;
  number = 674;
  numberValue = 675;
  objcClassPrefix = 676;
  of = 677;
  oneofDecl = 678;
  OneofDescriptorProto = 679;
  oneofIndex = 680;
  OneofOptions = 681;
  oneofs = 682;
  OneOf_Kind = 683;
  optimizeFor = 684;
  OptimizeMode = 685;
  Option = 686;
  OptionalEnumExtensionField = 687;
  OptionalExtensionField = 688;
  OptionalGroupExtensionField = 689;
  OptionalMessageExtensionField = 690;
  OptionRetention = 691;
  options = 692;
  OptionTargetType = 693;
  other = 694;
  others = 695;
  out = 696;
  outputType = 697;
  overridableFeatures = 698;
  p = 699;
  package = 700;
  packed = 701;
  PackedEnumExtensionField = 702;
  PackedExtensionField = 703;
  padding = 704;
  parent = 705;
  parse = 706;
  partial = 707;
  path = 708;
  PathDecoder = 709;
  PathDecodingError = 710;
  paths = 711;
  PathVisitor = 712;
  payload = 713;
  payloadSize = 714;
  phpClassPrefix = 715;
  phpMetadataNamespace = 716;
  phpNamespace = 717;
  pos = 718;
  positiveIntValue = 719;
  prefix = 720;
  preserveProtoFieldNames = 721;
  preTraverse = 722;
  prevPath = 723;
  printUnknownFields = 724;
  proto2 = 725;
  proto3DefaultValue = 726;
  proto3Optional = 727;
  ProtobufAPIVersionCheck = 728;
  ProtobufAPIVersion_2 = 729;
  ProtobufBool = 730;
  ProtobufBytes = 731;
  ProtobufDouble = 732;
  ProtobufEnumMap = 733;
  protobufExtension = 734;
  ProtobufFixed32 = 735;
  ProtobufFixed64 = 736;
  ProtobufFloat = 737;
  ProtobufInt32 = 738;
  ProtobufInt64 = 739;
  ProtobufMap = 740;
  ProtobufMessageMap = 741;
  ProtobufSFixed32 = 742;
  ProtobufSFixed64 = 743;
  ProtobufSInt32 = 744;
  ProtobufSInt64 = 745;
  ProtobufString = 746;
  ProtobufUInt32 = 747;
  ProtobufUInt64 = 748;
  protobuf_extensionFieldValues = 749;
  protobuf_fieldNumber = 750;
  protobuf_generated_isEqualTo = 751;
  protobuf_nameMap = 752;
  protobuf_newField = 753;
  protobuf_package = 754;
  protocol = 755;
  protoFieldName = 756;
  protoMessageName = 757;
  ProtoNameProviding = 758;
  protoPaths = 759;
  public = 760;
  publicDependency = 761;
  putBoolValue = 762;
  putBytesValue = 763;
  putDoubleValue = 764;
  putEnumValue = 765;
  putFixedUInt32 = 766;
  putFixedUInt64 = 767;
  putFloatValue = 768;
  putInt64 = 769;
  putStringValue = 770;
  putUInt64 = 771;
  putUInt64Hex = 772;
  putVarInt = 773;
  putZigZagVarInt = 774;
  pyGenericServices = 775;
  R = 776;
  rawChars = 777;
  RawRepresentable = 778;
  RawValue = 779;
  read4HexDigits = 780;
  readBytes = 781;
  register = 782;
  removingAllFieldsOf = 783;
  repeated = 784;
  RepeatedEnumExtensionField = 785;
  RepeatedExtensionField = 786;
  repeatedFieldEncoding = 787;
  RepeatedGroupExtensionField = 788;
  RepeatedMessageExtensionField = 789;
  repeating = 790;
  replaceRepeatedFields = 791;
  requestStreaming = 792;
  requestTypeURL = 793;
  requiredSize = 794;
  responseStreaming = 795;
  responseTypeURL = 796;
  result = 797;
  retention = 798;
  rethrows = 799;
  return = 800;
  ReturnType = 801;
  revision = 802;
  rhs = 803;
  root = 804;
  rubyPackage = 805;
  s = 806;
  sawBackslash = 807;
  sawSection4Characters = 808;
  sawSection5Characters = 809;
  scan = 810;
  scanner = 811;
  seconds = 812;
  self = 813;
  semantic = 814;
  Sendable = 815;
  separator = 816;
  serialize = 817;
  serializedBytes = 818;
  serializedData = 819;
  serializedSize = 820;
  serverStreaming = 821;
  service = 822;
  ServiceDescriptorProto = 823;
  ServiceOptions = 824;
  set = 825;
  setExtensionValue = 826;
  shift = 827;
  SimpleExtensionMap = 828;
  size = 829;
  sizer = 830;
  source = 831;
  sourceCodeInfo = 832;
  sourceContext = 833;
  sourceEncoding = 834;
  sourceFile = 835;
  SourceLocation = 836;
  span = 837;
  split = 838;
  start = 839;
  startArray = 840;
  startArrayObject = 841;
  startField = 842;
  startIndex = 843;
  startMessageField = 844;
  startObject = 845;
  startRegularField = 846;
  state = 847;
  static = 848;
  StaticString = 849;
  storage = 850;
  String = 851;
  stringLiteral = 852;
  StringLiteralType = 853;
  stringResult = 854;
  stringValue = 855;
  struct = 856;
  structValue = 857;
  subDecoder = 858;
  subscript = 859;
  subtract = 860;
  subVisitor = 861;
  Swift = 862;
  swiftPrefix = 863;
  SwiftProtobufContiguousBytes = 864;
  SwiftProtobufError = 865;
  syntax = 866;
  T = 867;
  tag = 868;
  targets = 869;
  terminator = 870;
  testDecoder = 871;
  text = 872;
  textDecoder = 873;
  TextFormatDecoder = 874;
  TextFormatDecodingError = 875;
  TextFormatDecodingOptions = 876;
  TextFormatEncodingOptions = 877;
  TextFormatEncodingVisitor = 878;
  textFormatString = 879;
  throwOrIgnore = 880;
  throws = 881;
  timeInterval = 882;
  timeIntervalSince1970 = 883;
  timeIntervalSinceReferenceDate = 884;
  Timestamp = 885;
  tmp = 886;
  tooLarge = 887;
  total = 888;
  totalArrayDepth = 889;
  totalSize = 890;
  trailingComments = 891;
  traverse = 892;
  trim = 893;
  true = 894;
  try = 895;
  type = 896;
  typealias = 897;
  TypeEnum = 898;
  typeName = 899;
  typePrefix = 900;
  typeStart = 901;
  typeUnknown = 902;
  typeURL = 903;
  UInt32 = 904;
  UInt32Value = 905;
  UInt64 = 906;
  UInt64Value = 907;
  UInt8 = 908;
  unchecked = 909;
  unicodeScalarLiteral = 910;
  UnicodeScalarLiteralType = 911;
  unicodeScalars = 912;
  UnicodeScalarView = 913;
  uninterpretedOption = 914;
  union = 915;
  uniqueStorage = 916;
  unknown = 917;
  unknownFields = 918;
  UnknownStorage = 919;
  unpackTo = 920;
  UnsafeBufferPointer = 921;
  UnsafeMutablePointer = 922;
  UnsafeMutableRawBufferPointer = 923;
  UnsafeRawBufferPointer = 924;
  UnsafeRawPointer = 925;
  unverifiedLazy = 926;
  updatedOptions = 927;
  url = 928;
  useDeterministicOrdering = 929;
  utf8 = 930;
  utf8Ptr = 931;
  utf8ToDouble = 932;
  utf8Validation = 933;
  UTF8View = 934;
  v = 935;
  value = 936;
  valueField = 937;
  values = 938;
  ValueType = 939;
  var = 940;
  verification = 941;
  VerificationState = 942;
  Version = 943;
  versionString = 944;
  visitExtensionFields = 945;
  visitExtensionFieldsAsMessageSet = 946;
  visitMapField = 947;
  visitor = 948;
  visitPacked = 949;
  visitPackedBoolField = 950;
  visitPackedDoubleField = 951;
  visitPackedEnumField = 952;
  visitPackedFixed32Field = 953;
  visitPackedFixed64Field = 954;
  visitPackedFloatField = 955;
  visitPackedInt32Field = 956;
  visitPackedInt64Field = 957;
  visitPackedSFixed32Field = 958;
  visitPackedSFixed64Field = 959;
  visitPackedSInt32Field = 960;
  visitPackedSInt64Field = 961;
  visitPackedUInt32Field = 962;
  visitPackedUInt64Field = 963;
  visitRepeated = 964;
  visitRepeatedBoolField = 965;
  visitRepeatedBytesField = 966;
  visitRepeatedDoubleField = 967;
  visitRepeatedEnumField = 968;
  visitRepeatedFixed32Field = 969;
  visitRepeatedFixed64Field = 970;
  visitRepeatedFloatField = 971;
  visitRepeatedGroupField = 972;
  visitRepeatedInt32Field = 973;
  visitRepeatedInt64Field = 974;
  visitRepeatedMessageField = 975;
  visitRepeatedSFixed32Field = 976;
  visitRepeatedSFixed64Field = 977;
  visitRepeatedSInt32Field = 978;
  visitRepeatedSInt64Field = 979;
  visitRepeatedStringField = 980;
  visitRepeatedUInt32Field = 981;
  visitRepeatedUInt64Field = 982;
  visitSingular = 983;
  visitSingularBoolField = 984;
  visitSingularBytesField = 985;
  visitSingularDoubleField = 986;
  visitSingularEnumField = 987;
  visitSingularFixed32Field = 988;
  visitSingularFixed64Field = 989;
  visitSingularFloatField = 990;
  visitSingularGroupField = 991;
  visitSingularInt32Field = 992;
  visitSingularInt64Field = 993;
  visitSingularMessageField = 994;
  visitSingularSFixed32Field = 995;
  visitSingularSFixed64Field = 996;
  visitSingularSInt32Field = 997;
  visitSingularSInt64Field = 998;
  visitSingularStringField = 999;
  visitSingularUInt32Field = 1000;
  visitSingularUInt64Field = 1001;
  visitUnknown = 1002;
  wasDecoded = 1003;
  weak = 1004;
  weakDependency = 1005;
  where = 1006;
  wireFormat = 1007;
  with = 1008;
  withUnsafeBytes = 1009;
  withUnsafeMutableBytes = 1010;
  work = 1011;
  Wrapped = 1012;
  WrappedType = 1013;
  wrappedValue = 1014;
  written = 1015;
  yday = 1016;
}
