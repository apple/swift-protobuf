// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package swift_proto_testing.generated;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  adjusted = 1;
  aggregateValue = 2;
  allCases = 3;
  allowAlias = 4;
  alwaysPrintEnumsAsInts = 5;
  alwaysPrintInt64sAsNumbers = 6;
  annotation = 7;
  any = 8;
  AnyExtensionField = 9;
  AnyMessageExtension = 10;
  AnyMessageStorage = 11;
  AnyUnpackError = 12;
  Api = 13;
  appended = 14;
  appendUIntHex = 15;
  appendUnknown = 16;
  areAllInitialized = 17;
  Array = 18;
  arrayDepth = 19;
  arrayLiteral = 20;
  arraySeparator = 21;
  as = 22;
  asciiOpenCurlyBracket = 23;
  asciiZero = 24;
  async = 25;
  AsyncIterator = 26;
  AsyncIteratorProtocol = 27;
  AsyncMessageSequence = 28;
  available = 29;
  b = 30;
  Base = 31;
  base64Values = 32;
  baseAddress = 33;
  BaseType = 34;
  begin = 35;
  binary = 36;
  BinaryDecoder = 37;
  BinaryDecodingError = 38;
  BinaryDecodingOptions = 39;
  BinaryDelimited = 40;
  BinaryEncoder = 41;
  BinaryEncodingError = 42;
  BinaryEncodingMessageSetSizeVisitor = 43;
  BinaryEncodingMessageSetVisitor = 44;
  BinaryEncodingSizeVisitor = 45;
  BinaryEncodingVisitor = 46;
  binaryOptions = 47;
  binaryProtobufDelimitedMessages = 48;
  bitPattern = 49;
  body = 50;
  Bool = 51;
  booleanLiteral = 52;
  BooleanLiteralType = 53;
  boolValue = 54;
  buffer = 55;
  bytes = 56;
  bytesInGroup = 57;
  bytesNeeded = 58;
  bytesRead = 59;
  BytesValue = 60;
  c = 61;
  capitalizeNext = 62;
  cardinality = 63;
  CaseIterable = 64;
  ccEnableArenas = 65;
  ccGenericServices = 66;
  Character = 67;
  chars = 68;
  chunk = 69;
  class = 70;
  clearAggregateValue = 71;
  clearAllowAlias = 72;
  clearBegin = 73;
  clearCcEnableArenas = 74;
  clearCcGenericServices = 75;
  clearClientStreaming = 76;
  clearCsharpNamespace = 77;
  clearCtype = 78;
  clearDebugRedact = 79;
  clearDefaultValue = 80;
  clearDeprecated = 81;
  clearDeprecatedLegacyJsonFieldConflicts = 82;
  clearDoubleValue = 83;
  clearEdition = 84;
  clearEditionEnum = 85;
  clearEnd = 86;
  clearEnumType = 87;
  clearExtendee = 88;
  clearExtensionValue = 89;
  clearFeatures = 90;
  clearFieldPresence = 91;
  clearFullName = 92;
  clearGoPackage = 93;
  clearIdempotencyLevel = 94;
  clearIdentifierValue = 95;
  clearInputType = 96;
  clearIsExtension = 97;
  clearJavaGenerateEqualsAndHash = 98;
  clearJavaGenericServices = 99;
  clearJavaMultipleFiles = 100;
  clearJavaOuterClassname = 101;
  clearJavaPackage = 102;
  clearJavaStringCheckUtf8 = 103;
  clearJsonFormat = 104;
  clearJsonName = 105;
  clearJstype = 106;
  clearLabel = 107;
  clearLazy = 108;
  clearLeadingComments = 109;
  clearMapEntry = 110;
  clearMaximumEdition = 111;
  clearMaximumEditionEnum = 112;
  clearMessageEncoding = 113;
  clearMessageSetWireFormat = 114;
  clearMinimumEdition = 115;
  clearMinimumEditionEnum = 116;
  clearName = 117;
  clearNamePart = 118;
  clearNegativeIntValue = 119;
  clearNoStandardDescriptorAccessor = 120;
  clearNumber = 121;
  clearObjcClassPrefix = 122;
  clearOneofIndex = 123;
  clearOptimizeFor = 124;
  clearOptions = 125;
  clearOutputType = 126;
  clearPackage = 127;
  clearPacked = 128;
  clearPhpClassPrefix = 129;
  clearPhpGenericServices = 130;
  clearPhpMetadataNamespace = 131;
  clearPhpNamespace = 132;
  clearPositiveIntValue = 133;
  clearProto3Optional = 134;
  clearPyGenericServices = 135;
  clearRepeated = 136;
  clearRepeatedFieldEncoding = 137;
  clearReserved = 138;
  clearRetention = 139;
  clearRubyPackage = 140;
  clearSemantic = 141;
  clearServerStreaming = 142;
  clearSourceCodeInfo = 143;
  clearSourceContext = 144;
  clearSourceFile = 145;
  clearStart = 146;
  clearStringValue = 147;
  clearSwiftPrefix = 148;
  clearSyntax = 149;
  clearTrailingComments = 150;
  clearType = 151;
  clearTypeName = 152;
  clearUnverifiedLazy = 153;
  clearValue = 154;
  clearVerification = 155;
  clearWeak = 156;
  clientStreaming = 157;
  codePoint = 158;
  codeUnits = 159;
  Collection = 160;
  com = 161;
  comma = 162;
  consumedBytes = 163;
  contentsOf = 164;
  count = 165;
  countVarintsInBuffer = 166;
  csharpNamespace = 167;
  ctype = 168;
  customCodable = 169;
  CustomDebugStringConvertible = 170;
  d = 171;
  Data = 172;
  dataResult = 173;
  date = 174;
  daySec = 175;
  daysSinceEpoch = 176;
  debugDescription = 177;
  debugRedact = 178;
  declaration = 179;
  decoded = 180;
  decodedFromJSONNull = 181;
  decodeExtensionField = 182;
  decodeExtensionFieldsAsMessageSet = 183;
  decodeJSON = 184;
  decodeMapField = 185;
  decodeMessage = 186;
  decoder = 187;
  decodeRepeated = 188;
  decodeRepeatedBoolField = 189;
  decodeRepeatedBytesField = 190;
  decodeRepeatedDoubleField = 191;
  decodeRepeatedEnumField = 192;
  decodeRepeatedFixed32Field = 193;
  decodeRepeatedFixed64Field = 194;
  decodeRepeatedFloatField = 195;
  decodeRepeatedGroupField = 196;
  decodeRepeatedInt32Field = 197;
  decodeRepeatedInt64Field = 198;
  decodeRepeatedMessageField = 199;
  decodeRepeatedSFixed32Field = 200;
  decodeRepeatedSFixed64Field = 201;
  decodeRepeatedSInt32Field = 202;
  decodeRepeatedSInt64Field = 203;
  decodeRepeatedStringField = 204;
  decodeRepeatedUInt32Field = 205;
  decodeRepeatedUInt64Field = 206;
  decodeSingular = 207;
  decodeSingularBoolField = 208;
  decodeSingularBytesField = 209;
  decodeSingularDoubleField = 210;
  decodeSingularEnumField = 211;
  decodeSingularFixed32Field = 212;
  decodeSingularFixed64Field = 213;
  decodeSingularFloatField = 214;
  decodeSingularGroupField = 215;
  decodeSingularInt32Field = 216;
  decodeSingularInt64Field = 217;
  decodeSingularMessageField = 218;
  decodeSingularSFixed32Field = 219;
  decodeSingularSFixed64Field = 220;
  decodeSingularSInt32Field = 221;
  decodeSingularSInt64Field = 222;
  decodeSingularStringField = 223;
  decodeSingularUInt32Field = 224;
  decodeSingularUInt64Field = 225;
  decodeTextFormat = 226;
  defaultAnyTypeURLPrefix = 227;
  defaults = 228;
  defaultValue = 229;
  dependency = 230;
  deprecated = 231;
  deprecatedLegacyJsonFieldConflicts = 232;
  description = 233;
  DescriptorProto = 234;
  Dictionary = 235;
  dictionaryLiteral = 236;
  digit = 237;
  digit0 = 238;
  digit1 = 239;
  digitCount = 240;
  digits = 241;
  digitValue = 242;
  discardableResult = 243;
  discardUnknownFields = 244;
  distance = 245;
  double = 246;
  doubleValue = 247;
  Duration = 248;
  E = 249;
  edition = 250;
  EditionDefault = 251;
  editionDefaults = 252;
  editionEnum = 253;
  Element = 254;
  elements = 255;
  emitExtensionFieldName = 256;
  emitFieldName = 257;
  emitFieldNumber = 258;
  Empty = 259;
  emptyData = 260;
  encodeAsBytes = 261;
  encoded = 262;
  encodedJSONString = 263;
  encodedSize = 264;
  encodeField = 265;
  encoder = 266;
  end = 267;
  endArray = 268;
  endMessageField = 269;
  endObject = 270;
  endRegularField = 271;
  enum = 272;
  EnumDescriptorProto = 273;
  EnumOptions = 274;
  EnumReservedRange = 275;
  enumType = 276;
  enumvalue = 277;
  EnumValueDescriptorProto = 278;
  EnumValueOptions = 279;
  Equatable = 280;
  Error = 281;
  ExpressibleByArrayLiteral = 282;
  ExpressibleByDictionaryLiteral = 283;
  ext = 284;
  extDecoder = 285;
  extendedGraphemeClusterLiteral = 286;
  ExtendedGraphemeClusterLiteralType = 287;
  extendee = 288;
  ExtensibleMessage = 289;
  extension = 290;
  ExtensionField = 291;
  extensionFieldNumber = 292;
  ExtensionFieldValueSet = 293;
  ExtensionMap = 294;
  extensionRange = 295;
  ExtensionRangeOptions = 296;
  extensions = 297;
  extras = 298;
  F = 299;
  false = 300;
  features = 301;
  FeatureSet = 302;
  FeatureSetDefaults = 303;
  FeatureSetEditionDefault = 304;
  field = 305;
  fieldData = 306;
  FieldDescriptorProto = 307;
  FieldMask = 308;
  fieldName = 309;
  fieldNameCount = 310;
  fieldNum = 311;
  fieldNumber = 312;
  fieldNumberForProto = 313;
  FieldOptions = 314;
  fieldPresence = 315;
  fields = 316;
  fieldSize = 317;
  FieldTag = 318;
  fieldType = 319;
  file = 320;
  FileDescriptorProto = 321;
  FileDescriptorSet = 322;
  fileName = 323;
  FileOptions = 324;
  filter = 325;
  final = 326;
  first = 327;
  firstItem = 328;
  float = 329;
  floatLiteral = 330;
  FloatLiteralType = 331;
  FloatValue = 332;
  forMessageName = 333;
  formUnion = 334;
  forReadingFrom = 335;
  forTypeURL = 336;
  ForwardParser = 337;
  forWritingInto = 338;
  from = 339;
  fromAscii2 = 340;
  fromAscii4 = 341;
  fromByteOffset = 342;
  fromHexDigit = 343;
  fullName = 344;
  func = 345;
  G = 346;
  GeneratedCodeInfo = 347;
  get = 348;
  getExtensionValue = 349;
  googleapis = 350;
  Google_Protobuf_Any = 351;
  Google_Protobuf_Api = 352;
  Google_Protobuf_BoolValue = 353;
  Google_Protobuf_BytesValue = 354;
  Google_Protobuf_DescriptorProto = 355;
  Google_Protobuf_DoubleValue = 356;
  Google_Protobuf_Duration = 357;
  Google_Protobuf_Edition = 358;
  Google_Protobuf_Empty = 359;
  Google_Protobuf_Enum = 360;
  Google_Protobuf_EnumDescriptorProto = 361;
  Google_Protobuf_EnumOptions = 362;
  Google_Protobuf_EnumValue = 363;
  Google_Protobuf_EnumValueDescriptorProto = 364;
  Google_Protobuf_EnumValueOptions = 365;
  Google_Protobuf_ExtensionRangeOptions = 366;
  Google_Protobuf_FeatureSet = 367;
  Google_Protobuf_FeatureSetDefaults = 368;
  Google_Protobuf_Field = 369;
  Google_Protobuf_FieldDescriptorProto = 370;
  Google_Protobuf_FieldMask = 371;
  Google_Protobuf_FieldOptions = 372;
  Google_Protobuf_FileDescriptorProto = 373;
  Google_Protobuf_FileDescriptorSet = 374;
  Google_Protobuf_FileOptions = 375;
  Google_Protobuf_FloatValue = 376;
  Google_Protobuf_GeneratedCodeInfo = 377;
  Google_Protobuf_Int32Value = 378;
  Google_Protobuf_Int64Value = 379;
  Google_Protobuf_ListValue = 380;
  Google_Protobuf_MessageOptions = 381;
  Google_Protobuf_Method = 382;
  Google_Protobuf_MethodDescriptorProto = 383;
  Google_Protobuf_MethodOptions = 384;
  Google_Protobuf_Mixin = 385;
  Google_Protobuf_NullValue = 386;
  Google_Protobuf_OneofDescriptorProto = 387;
  Google_Protobuf_OneofOptions = 388;
  Google_Protobuf_Option = 389;
  Google_Protobuf_ServiceDescriptorProto = 390;
  Google_Protobuf_ServiceOptions = 391;
  Google_Protobuf_SourceCodeInfo = 392;
  Google_Protobuf_SourceContext = 393;
  Google_Protobuf_StringValue = 394;
  Google_Protobuf_Struct = 395;
  Google_Protobuf_Syntax = 396;
  Google_Protobuf_Timestamp = 397;
  Google_Protobuf_Type = 398;
  Google_Protobuf_UInt32Value = 399;
  Google_Protobuf_UInt64Value = 400;
  Google_Protobuf_UninterpretedOption = 401;
  Google_Protobuf_Value = 402;
  goPackage = 403;
  group = 404;
  groupFieldNumberStack = 405;
  groupSize = 406;
  hadOneofValue = 407;
  handleConflictingOneOf = 408;
  hasAggregateValue = 409;
  hasAllowAlias = 410;
  hasBegin = 411;
  hasCcEnableArenas = 412;
  hasCcGenericServices = 413;
  hasClientStreaming = 414;
  hasCsharpNamespace = 415;
  hasCtype = 416;
  hasDebugRedact = 417;
  hasDefaultValue = 418;
  hasDeprecated = 419;
  hasDeprecatedLegacyJsonFieldConflicts = 420;
  hasDoubleValue = 421;
  hasEdition = 422;
  hasEditionEnum = 423;
  hasEnd = 424;
  hasEnumType = 425;
  hasExtendee = 426;
  hasExtensionValue = 427;
  hasFeatures = 428;
  hasFieldPresence = 429;
  hasFullName = 430;
  hasGoPackage = 431;
  hash = 432;
  Hashable = 433;
  hasher = 434;
  HashVisitor = 435;
  hasIdempotencyLevel = 436;
  hasIdentifierValue = 437;
  hasInputType = 438;
  hasIsExtension = 439;
  hasJavaGenerateEqualsAndHash = 440;
  hasJavaGenericServices = 441;
  hasJavaMultipleFiles = 442;
  hasJavaOuterClassname = 443;
  hasJavaPackage = 444;
  hasJavaStringCheckUtf8 = 445;
  hasJsonFormat = 446;
  hasJsonName = 447;
  hasJstype = 448;
  hasLabel = 449;
  hasLazy = 450;
  hasLeadingComments = 451;
  hasMapEntry = 452;
  hasMaximumEdition = 453;
  hasMaximumEditionEnum = 454;
  hasMessageEncoding = 455;
  hasMessageSetWireFormat = 456;
  hasMinimumEdition = 457;
  hasMinimumEditionEnum = 458;
  hasName = 459;
  hasNamePart = 460;
  hasNegativeIntValue = 461;
  hasNoStandardDescriptorAccessor = 462;
  hasNumber = 463;
  hasObjcClassPrefix = 464;
  hasOneofIndex = 465;
  hasOptimizeFor = 466;
  hasOptions = 467;
  hasOutputType = 468;
  hasPackage = 469;
  hasPacked = 470;
  hasPhpClassPrefix = 471;
  hasPhpGenericServices = 472;
  hasPhpMetadataNamespace = 473;
  hasPhpNamespace = 474;
  hasPositiveIntValue = 475;
  hasProto3Optional = 476;
  hasPyGenericServices = 477;
  hasRepeated = 478;
  hasRepeatedFieldEncoding = 479;
  hasReserved = 480;
  hasRetention = 481;
  hasRubyPackage = 482;
  hasSemantic = 483;
  hasServerStreaming = 484;
  hasSourceCodeInfo = 485;
  hasSourceContext = 486;
  hasSourceFile = 487;
  hasStart = 488;
  hasStringValue = 489;
  hasSwiftPrefix = 490;
  hasSyntax = 491;
  hasTrailingComments = 492;
  hasType = 493;
  hasTypeName = 494;
  hasUnverifiedLazy = 495;
  hasValue = 496;
  hasVerification = 497;
  hasWeak = 498;
  hour = 499;
  i = 500;
  idempotencyLevel = 501;
  identifierValue = 502;
  if = 503;
  ignoreUnknownFields = 504;
  index = 505;
  init = 506;
  inout = 507;
  inputType = 508;
  insert = 509;
  Int = 510;
  Int32 = 511;
  Int32Value = 512;
  Int64 = 513;
  Int64Value = 514;
  Int8 = 515;
  integerLiteral = 516;
  IntegerLiteralType = 517;
  intern = 518;
  Internal = 519;
  InternalState = 520;
  into = 521;
  ints = 522;
  isA = 523;
  isEqual = 524;
  isEqualTo = 525;
  isExtension = 526;
  isInitialized = 527;
  isNegative = 528;
  itemTagsEncodedSize = 529;
  iterator = 530;
  javaGenerateEqualsAndHash = 531;
  javaGenericServices = 532;
  javaMultipleFiles = 533;
  javaOuterClassname = 534;
  javaPackage = 535;
  javaStringCheckUtf8 = 536;
  JSONDecoder = 537;
  JSONDecodingError = 538;
  JSONDecodingOptions = 539;
  jsonEncoder = 540;
  JSONEncodingError = 541;
  JSONEncodingOptions = 542;
  JSONEncodingVisitor = 543;
  jsonFormat = 544;
  JSONMapEncodingVisitor = 545;
  jsonName = 546;
  jsonPath = 547;
  jsonPaths = 548;
  JSONScanner = 549;
  jsonString = 550;
  jsonText = 551;
  jsonUTF8Bytes = 552;
  jsonUTF8Data = 553;
  jstype = 554;
  k = 555;
  kChunkSize = 556;
  Key = 557;
  keyField = 558;
  keyFieldOpt = 559;
  KeyType = 560;
  kind = 561;
  l = 562;
  label = 563;
  lazy = 564;
  leadingComments = 565;
  leadingDetachedComments = 566;
  length = 567;
  lessThan = 568;
  let = 569;
  lhs = 570;
  list = 571;
  listOfMessages = 572;
  listValue = 573;
  littleEndian = 574;
  littleEndianBytes = 575;
  load = 576;
  localHasher = 577;
  location = 578;
  M = 579;
  major = 580;
  makeAsyncIterator = 581;
  makeIterator = 582;
  mapEntry = 583;
  MapKeyType = 584;
  mapToMessages = 585;
  MapValueType = 586;
  mapVisitor = 587;
  maximumEdition = 588;
  maximumEditionEnum = 589;
  mdayStart = 590;
  merge = 591;
  message = 592;
  MessageBase = 593;
  messageDepthLimit = 594;
  messageEncoding = 595;
  MessageExtension = 596;
  MessageImplementationBase = 597;
  MessageOptions = 598;
  MessageSet = 599;
  messageSetWireFormat = 600;
  messageSize = 601;
  messageType = 602;
  Method = 603;
  MethodDescriptorProto = 604;
  MethodOptions = 605;
  methods = 606;
  min = 607;
  minimumEdition = 608;
  minimumEditionEnum = 609;
  minor = 610;
  Mixin = 611;
  mixins = 612;
  modifier = 613;
  modify = 614;
  month = 615;
  msgExtension = 616;
  mutating = 617;
  n = 618;
  name = 619;
  NameDescription = 620;
  NameMap = 621;
  NamePart = 622;
  names = 623;
  nanos = 624;
  nativeEndianBytes = 625;
  negativeIntValue = 626;
  nestedType = 627;
  newL = 628;
  newList = 629;
  newValue = 630;
  next = 631;
  nextByte = 632;
  nextFieldNumber = 633;
  nextVarInt = 634;
  nil = 635;
  nilLiteral = 636;
  noStandardDescriptorAccessor = 637;
  nullValue = 638;
  number = 639;
  numberValue = 640;
  objcClassPrefix = 641;
  of = 642;
  oneofDecl = 643;
  OneofDescriptorProto = 644;
  oneofIndex = 645;
  OneofOptions = 646;
  oneofs = 647;
  OneOf_Kind = 648;
  optimizeFor = 649;
  OptimizeMode = 650;
  Option = 651;
  OptionalEnumExtensionField = 652;
  OptionalExtensionField = 653;
  OptionalGroupExtensionField = 654;
  OptionalMessageExtensionField = 655;
  OptionRetention = 656;
  options = 657;
  OptionTargetType = 658;
  other = 659;
  others = 660;
  out = 661;
  outputType = 662;
  p = 663;
  package = 664;
  packed = 665;
  PackedEnumExtensionField = 666;
  PackedExtensionField = 667;
  padding = 668;
  parent = 669;
  parse = 670;
  partial = 671;
  path = 672;
  paths = 673;
  payload = 674;
  payloadSize = 675;
  phpClassPrefix = 676;
  phpGenericServices = 677;
  phpMetadataNamespace = 678;
  phpNamespace = 679;
  pointer = 680;
  pos = 681;
  positiveIntValue = 682;
  prefix = 683;
  preserveProtoFieldNames = 684;
  preTraverse = 685;
  printUnknownFields = 686;
  proto2 = 687;
  proto3DefaultValue = 688;
  proto3Optional = 689;
  ProtobufAPIVersionCheck = 690;
  ProtobufAPIVersion_3 = 691;
  ProtobufBool = 692;
  ProtobufBytes = 693;
  ProtobufDouble = 694;
  ProtobufEnumMap = 695;
  protobufExtension = 696;
  ProtobufFixed32 = 697;
  ProtobufFixed64 = 698;
  ProtobufFloat = 699;
  ProtobufInt32 = 700;
  ProtobufInt64 = 701;
  ProtobufMap = 702;
  ProtobufMessageMap = 703;
  ProtobufSFixed32 = 704;
  ProtobufSFixed64 = 705;
  ProtobufSInt32 = 706;
  ProtobufSInt64 = 707;
  ProtobufString = 708;
  ProtobufUInt32 = 709;
  ProtobufUInt64 = 710;
  protobuf_extensionFieldValues = 711;
  protobuf_fieldNumber = 712;
  protobuf_generated_isEqualTo = 713;
  protobuf_nameMap = 714;
  protobuf_newField = 715;
  protobuf_package = 716;
  protocol = 717;
  protoFieldName = 718;
  protoMessageName = 719;
  ProtoNameProviding = 720;
  protoPaths = 721;
  public = 722;
  publicDependency = 723;
  putBoolValue = 724;
  putBytesValue = 725;
  putDoubleValue = 726;
  putEnumValue = 727;
  putFixedUInt32 = 728;
  putFixedUInt64 = 729;
  putFloatValue = 730;
  putInt64 = 731;
  putStringValue = 732;
  putUInt64 = 733;
  putUInt64Hex = 734;
  putVarInt = 735;
  putZigZagVarInt = 736;
  pyGenericServices = 737;
  R = 738;
  rawChars = 739;
  RawRepresentable = 740;
  RawValue = 741;
  read4HexDigits = 742;
  readBytes = 743;
  register = 744;
  repeated = 745;
  RepeatedEnumExtensionField = 746;
  RepeatedExtensionField = 747;
  repeatedFieldEncoding = 748;
  RepeatedGroupExtensionField = 749;
  RepeatedMessageExtensionField = 750;
  repeating = 751;
  requestStreaming = 752;
  requestTypeURL = 753;
  requiredSize = 754;
  responseStreaming = 755;
  responseTypeURL = 756;
  result = 757;
  retention = 758;
  rethrows = 759;
  return = 760;
  ReturnType = 761;
  revision = 762;
  rhs = 763;
  root = 764;
  rubyPackage = 765;
  s = 766;
  sawBackslash = 767;
  sawSection4Characters = 768;
  sawSection5Characters = 769;
  scanner = 770;
  seconds = 771;
  self = 772;
  semantic = 773;
  Sendable = 774;
  separator = 775;
  serialize = 776;
  serializedBytes = 777;
  serializedData = 778;
  serializedSize = 779;
  serverStreaming = 780;
  service = 781;
  ServiceDescriptorProto = 782;
  ServiceOptions = 783;
  set = 784;
  setExtensionValue = 785;
  shift = 786;
  SimpleExtensionMap = 787;
  size = 788;
  sizer = 789;
  source = 790;
  sourceCodeInfo = 791;
  sourceContext = 792;
  sourceEncoding = 793;
  sourceFile = 794;
  span = 795;
  split = 796;
  start = 797;
  startArray = 798;
  startArrayObject = 799;
  startField = 800;
  startIndex = 801;
  startMessageField = 802;
  startObject = 803;
  startRegularField = 804;
  state = 805;
  static = 806;
  StaticString = 807;
  storage = 808;
  String = 809;
  stringLiteral = 810;
  StringLiteralType = 811;
  stringResult = 812;
  stringValue = 813;
  struct = 814;
  structValue = 815;
  subDecoder = 816;
  subscript = 817;
  subVisitor = 818;
  Swift = 819;
  swiftPrefix = 820;
  SwiftProtobufContiguousBytes = 821;
  syntax = 822;
  T = 823;
  tag = 824;
  targets = 825;
  terminator = 826;
  testDecoder = 827;
  text = 828;
  textDecoder = 829;
  TextFormatDecoder = 830;
  TextFormatDecodingError = 831;
  TextFormatDecodingOptions = 832;
  TextFormatEncodingOptions = 833;
  TextFormatEncodingVisitor = 834;
  textFormatString = 835;
  throwOrIgnore = 836;
  throws = 837;
  timeInterval = 838;
  timeIntervalSince1970 = 839;
  timeIntervalSinceReferenceDate = 840;
  Timestamp = 841;
  total = 842;
  totalArrayDepth = 843;
  totalSize = 844;
  trailingComments = 845;
  traverse = 846;
  true = 847;
  try = 848;
  type = 849;
  typealias = 850;
  TypeEnum = 851;
  typeName = 852;
  typePrefix = 853;
  typeStart = 854;
  typeUnknown = 855;
  typeURL = 856;
  UInt32 = 857;
  UInt32Value = 858;
  UInt64 = 859;
  UInt64Value = 860;
  UInt8 = 861;
  unchecked = 862;
  unicodeScalarLiteral = 863;
  UnicodeScalarLiteralType = 864;
  unicodeScalars = 865;
  UnicodeScalarView = 866;
  uninterpretedOption = 867;
  union = 868;
  uniqueStorage = 869;
  unknown = 870;
  unknownFields = 871;
  UnknownStorage = 872;
  unpackTo = 873;
  UnsafeBufferPointer = 874;
  UnsafeMutablePointer = 875;
  UnsafeMutableRawBufferPointer = 876;
  UnsafeMutableRawPointer = 877;
  UnsafeRawBufferPointer = 878;
  UnsafeRawPointer = 879;
  unverifiedLazy = 880;
  updatedOptions = 881;
  url = 882;
  utf8 = 883;
  utf8Ptr = 884;
  utf8ToDouble = 885;
  UTF8View = 886;
  v = 887;
  value = 888;
  valueField = 889;
  values = 890;
  ValueType = 891;
  var = 892;
  verification = 893;
  VerificationState = 894;
  Version = 895;
  versionString = 896;
  visitExtensionFields = 897;
  visitExtensionFieldsAsMessageSet = 898;
  visitMapField = 899;
  visitor = 900;
  visitPacked = 901;
  visitPackedBoolField = 902;
  visitPackedDoubleField = 903;
  visitPackedEnumField = 904;
  visitPackedFixed32Field = 905;
  visitPackedFixed64Field = 906;
  visitPackedFloatField = 907;
  visitPackedInt32Field = 908;
  visitPackedInt64Field = 909;
  visitPackedSFixed32Field = 910;
  visitPackedSFixed64Field = 911;
  visitPackedSInt32Field = 912;
  visitPackedSInt64Field = 913;
  visitPackedUInt32Field = 914;
  visitPackedUInt64Field = 915;
  visitRepeated = 916;
  visitRepeatedBoolField = 917;
  visitRepeatedBytesField = 918;
  visitRepeatedDoubleField = 919;
  visitRepeatedEnumField = 920;
  visitRepeatedFixed32Field = 921;
  visitRepeatedFixed64Field = 922;
  visitRepeatedFloatField = 923;
  visitRepeatedGroupField = 924;
  visitRepeatedInt32Field = 925;
  visitRepeatedInt64Field = 926;
  visitRepeatedMessageField = 927;
  visitRepeatedSFixed32Field = 928;
  visitRepeatedSFixed64Field = 929;
  visitRepeatedSInt32Field = 930;
  visitRepeatedSInt64Field = 931;
  visitRepeatedStringField = 932;
  visitRepeatedUInt32Field = 933;
  visitRepeatedUInt64Field = 934;
  visitSingular = 935;
  visitSingularBoolField = 936;
  visitSingularBytesField = 937;
  visitSingularDoubleField = 938;
  visitSingularEnumField = 939;
  visitSingularFixed32Field = 940;
  visitSingularFixed64Field = 941;
  visitSingularFloatField = 942;
  visitSingularGroupField = 943;
  visitSingularInt32Field = 944;
  visitSingularInt64Field = 945;
  visitSingularMessageField = 946;
  visitSingularSFixed32Field = 947;
  visitSingularSFixed64Field = 948;
  visitSingularSInt32Field = 949;
  visitSingularSInt64Field = 950;
  visitSingularStringField = 951;
  visitSingularUInt32Field = 952;
  visitSingularUInt64Field = 953;
  visitUnknown = 954;
  wasDecoded = 955;
  weak = 956;
  weakDependency = 957;
  where = 958;
  wireFormat = 959;
  with = 960;
  withUnsafeBytes = 961;
  withUnsafeMutableBytes = 962;
  work = 963;
  Wrapped = 964;
  WrappedType = 965;
  wrappedValue = 966;
  written = 967;
  yday = 968;
}
