// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package swift_proto_testing.generated;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  adjusted = 1;
  aggregateValue = 2;
  allCases = 3;
  allowAlias = 4;
  alwaysPrintEnumsAsInts = 5;
  alwaysPrintInt64sAsNumbers = 6;
  annotation = 7;
  any = 8;
  AnyExtensionField = 9;
  AnyMessageExtension = 10;
  AnyMessageStorage = 11;
  AnyUnpackError = 12;
  Api = 13;
  appended = 14;
  appendUIntHex = 15;
  appendUnknown = 16;
  areAllInitialized = 17;
  Array = 18;
  arrayDepth = 19;
  arrayLiteral = 20;
  arraySeparator = 21;
  as = 22;
  asciiOpenCurlyBracket = 23;
  asciiZero = 24;
  async = 25;
  AsyncIterator = 26;
  AsyncIteratorProtocol = 27;
  AsyncMessageSequence = 28;
  available = 29;
  b = 30;
  Base = 31;
  base64Values = 32;
  baseAddress = 33;
  BaseType = 34;
  begin = 35;
  binary = 36;
  BinaryDecoder = 37;
  BinaryDecodingError = 38;
  BinaryDecodingOptions = 39;
  BinaryDelimited = 40;
  BinaryEncoder = 41;
  BinaryEncodingError = 42;
  BinaryEncodingMessageSetSizeVisitor = 43;
  BinaryEncodingMessageSetVisitor = 44;
  BinaryEncodingOptions = 45;
  BinaryEncodingSizeVisitor = 46;
  BinaryEncodingVisitor = 47;
  binaryOptions = 48;
  binaryProtobufDelimitedMessages = 49;
  bitPattern = 50;
  body = 51;
  Bool = 52;
  booleanLiteral = 53;
  BooleanLiteralType = 54;
  boolValue = 55;
  buffer = 56;
  bytes = 57;
  bytesInGroup = 58;
  bytesNeeded = 59;
  bytesRead = 60;
  BytesValue = 61;
  c = 62;
  capitalizeNext = 63;
  cardinality = 64;
  CaseIterable = 65;
  ccEnableArenas = 66;
  ccGenericServices = 67;
  Character = 68;
  chars = 69;
  chunk = 70;
  class = 71;
  clearAggregateValue = 72;
  clearAllowAlias = 73;
  clearBegin = 74;
  clearCcEnableArenas = 75;
  clearCcGenericServices = 76;
  clearClientStreaming = 77;
  clearCsharpNamespace = 78;
  clearCtype = 79;
  clearDebugRedact = 80;
  clearDefaultValue = 81;
  clearDeprecated = 82;
  clearDeprecatedLegacyJsonFieldConflicts = 83;
  clearDeprecationWarning = 84;
  clearDoubleValue = 85;
  clearEdition = 86;
  clearEditionDeprecated = 87;
  clearEditionIntroduced = 88;
  clearEditionRemoved = 89;
  clearEnd = 90;
  clearEnumType = 91;
  clearExtendee = 92;
  clearExtensionValue = 93;
  clearFeatures = 94;
  clearFeatureSupport = 95;
  clearFieldPresence = 96;
  clearFixedFeatures = 97;
  clearFullName = 98;
  clearGoPackage = 99;
  clearIdempotencyLevel = 100;
  clearIdentifierValue = 101;
  clearInputType = 102;
  clearIsExtension = 103;
  clearJavaGenerateEqualsAndHash = 104;
  clearJavaGenericServices = 105;
  clearJavaMultipleFiles = 106;
  clearJavaOuterClassname = 107;
  clearJavaPackage = 108;
  clearJavaStringCheckUtf8 = 109;
  clearJsonFormat = 110;
  clearJsonName = 111;
  clearJstype = 112;
  clearLabel = 113;
  clearLazy = 114;
  clearLeadingComments = 115;
  clearMapEntry = 116;
  clearMaximumEdition = 117;
  clearMessageEncoding = 118;
  clearMessageSetWireFormat = 119;
  clearMinimumEdition = 120;
  clearName = 121;
  clearNamePart = 122;
  clearNegativeIntValue = 123;
  clearNoStandardDescriptorAccessor = 124;
  clearNumber = 125;
  clearObjcClassPrefix = 126;
  clearOneofIndex = 127;
  clearOptimizeFor = 128;
  clearOptions = 129;
  clearOutputType = 130;
  clearOverridableFeatures = 131;
  clearPackage = 132;
  clearPacked = 133;
  clearPhpClassPrefix = 134;
  clearPhpMetadataNamespace = 135;
  clearPhpNamespace = 136;
  clearPositiveIntValue = 137;
  clearProto3Optional = 138;
  clearPyGenericServices = 139;
  clearRepeated = 140;
  clearRepeatedFieldEncoding = 141;
  clearReserved = 142;
  clearRetention = 143;
  clearRubyPackage = 144;
  clearSemantic = 145;
  clearServerStreaming = 146;
  clearSourceCodeInfo = 147;
  clearSourceContext = 148;
  clearSourceFile = 149;
  clearStart = 150;
  clearStringValue = 151;
  clearSwiftPrefix = 152;
  clearSyntax = 153;
  clearTrailingComments = 154;
  clearType = 155;
  clearTypeName = 156;
  clearUnverifiedLazy = 157;
  clearUtf8Validation = 158;
  clearValue = 159;
  clearVerification = 160;
  clearWeak = 161;
  clientStreaming = 162;
  codePoint = 163;
  codeUnits = 164;
  Collection = 165;
  com = 166;
  comma = 167;
  CommonMessageConformances = 168;
  consumedBytes = 169;
  contentsOf = 170;
  count = 171;
  countVarintsInBuffer = 172;
  csharpNamespace = 173;
  ctype = 174;
  customCodable = 175;
  d = 176;
  Data = 177;
  dataResult = 178;
  date = 179;
  daySec = 180;
  daysSinceEpoch = 181;
  debugDescription = 182;
  debugRedact = 183;
  declaration = 184;
  decoded = 185;
  decodedFromJSONNull = 186;
  decodeExtensionField = 187;
  decodeExtensionFieldsAsMessageSet = 188;
  decodeJSON = 189;
  decodeMapField = 190;
  decodeMessage = 191;
  decoder = 192;
  decodeRepeated = 193;
  decodeRepeatedBoolField = 194;
  decodeRepeatedBytesField = 195;
  decodeRepeatedDoubleField = 196;
  decodeRepeatedEnumField = 197;
  decodeRepeatedFixed32Field = 198;
  decodeRepeatedFixed64Field = 199;
  decodeRepeatedFloatField = 200;
  decodeRepeatedGroupField = 201;
  decodeRepeatedInt32Field = 202;
  decodeRepeatedInt64Field = 203;
  decodeRepeatedMessageField = 204;
  decodeRepeatedSFixed32Field = 205;
  decodeRepeatedSFixed64Field = 206;
  decodeRepeatedSInt32Field = 207;
  decodeRepeatedSInt64Field = 208;
  decodeRepeatedStringField = 209;
  decodeRepeatedUInt32Field = 210;
  decodeRepeatedUInt64Field = 211;
  decodeSingular = 212;
  decodeSingularBoolField = 213;
  decodeSingularBytesField = 214;
  decodeSingularDoubleField = 215;
  decodeSingularEnumField = 216;
  decodeSingularFixed32Field = 217;
  decodeSingularFixed64Field = 218;
  decodeSingularFloatField = 219;
  decodeSingularGroupField = 220;
  decodeSingularInt32Field = 221;
  decodeSingularInt64Field = 222;
  decodeSingularMessageField = 223;
  decodeSingularSFixed32Field = 224;
  decodeSingularSFixed64Field = 225;
  decodeSingularSInt32Field = 226;
  decodeSingularSInt64Field = 227;
  decodeSingularStringField = 228;
  decodeSingularUInt32Field = 229;
  decodeSingularUInt64Field = 230;
  decodeTextFormat = 231;
  defaultAnyTypeURLPrefix = 232;
  defaults = 233;
  defaultValue = 234;
  dependency = 235;
  deprecated = 236;
  deprecatedLegacyJsonFieldConflicts = 237;
  deprecationWarning = 238;
  description = 239;
  DescriptorProto = 240;
  Dictionary = 241;
  dictionaryLiteral = 242;
  digit = 243;
  digit0 = 244;
  digit1 = 245;
  digitCount = 246;
  digits = 247;
  digitValue = 248;
  discardableResult = 249;
  discardUnknownFields = 250;
  Double = 251;
  doubleValue = 252;
  Duration = 253;
  E = 254;
  edition = 255;
  EditionDefault = 256;
  editionDefaults = 257;
  editionDeprecated = 258;
  editionIntroduced = 259;
  editionRemoved = 260;
  Element = 261;
  elements = 262;
  emitExtensionFieldName = 263;
  emitFieldName = 264;
  emitFieldNumber = 265;
  Empty = 266;
  encodeAsBytes = 267;
  encoded = 268;
  encodedJSONString = 269;
  encodedSize = 270;
  encodeField = 271;
  encoder = 272;
  end = 273;
  endArray = 274;
  endMessageField = 275;
  endObject = 276;
  endRegularField = 277;
  enum = 278;
  EnumDescriptorProto = 279;
  EnumOptions = 280;
  EnumReservedRange = 281;
  enumType = 282;
  enumvalue = 283;
  EnumValueDescriptorProto = 284;
  EnumValueOptions = 285;
  Equatable = 286;
  Error = 287;
  ExpressibleByArrayLiteral = 288;
  ExpressibleByDictionaryLiteral = 289;
  ext = 290;
  extDecoder = 291;
  extendedGraphemeClusterLiteral = 292;
  ExtendedGraphemeClusterLiteralType = 293;
  extendee = 294;
  ExtensibleMessage = 295;
  extension = 296;
  ExtensionField = 297;
  extensionFieldNumber = 298;
  ExtensionFieldValueSet = 299;
  ExtensionMap = 300;
  extensionRange = 301;
  ExtensionRangeOptions = 302;
  extensions = 303;
  extras = 304;
  F = 305;
  false = 306;
  features = 307;
  FeatureSet = 308;
  FeatureSetDefaults = 309;
  FeatureSetEditionDefault = 310;
  featureSupport = 311;
  field = 312;
  fieldData = 313;
  FieldDescriptorProto = 314;
  FieldMask = 315;
  fieldName = 316;
  fieldNameCount = 317;
  fieldNum = 318;
  fieldNumber = 319;
  fieldNumberForProto = 320;
  FieldOptions = 321;
  fieldPresence = 322;
  fields = 323;
  fieldSize = 324;
  FieldTag = 325;
  fieldType = 326;
  file = 327;
  FileDescriptorProto = 328;
  FileDescriptorSet = 329;
  fileName = 330;
  FileOptions = 331;
  filter = 332;
  final = 333;
  first = 334;
  firstItem = 335;
  fixedFeatures = 336;
  Float = 337;
  floatLiteral = 338;
  FloatLiteralType = 339;
  FloatValue = 340;
  forMessageName = 341;
  formUnion = 342;
  forReadingFrom = 343;
  forTypeURL = 344;
  ForwardParser = 345;
  forWritingInto = 346;
  from = 347;
  fromAscii2 = 348;
  fromAscii4 = 349;
  fromByteOffset = 350;
  fromHexDigit = 351;
  fullName = 352;
  func = 353;
  G = 354;
  GeneratedCodeInfo = 355;
  get = 356;
  getExtensionValue = 357;
  googleapis = 358;
  Google_Protobuf_Any = 359;
  Google_Protobuf_Api = 360;
  Google_Protobuf_BoolValue = 361;
  Google_Protobuf_BytesValue = 362;
  Google_Protobuf_DescriptorProto = 363;
  Google_Protobuf_DoubleValue = 364;
  Google_Protobuf_Duration = 365;
  Google_Protobuf_Edition = 366;
  Google_Protobuf_Empty = 367;
  Google_Protobuf_Enum = 368;
  Google_Protobuf_EnumDescriptorProto = 369;
  Google_Protobuf_EnumOptions = 370;
  Google_Protobuf_EnumValue = 371;
  Google_Protobuf_EnumValueDescriptorProto = 372;
  Google_Protobuf_EnumValueOptions = 373;
  Google_Protobuf_ExtensionRangeOptions = 374;
  Google_Protobuf_FeatureSet = 375;
  Google_Protobuf_FeatureSetDefaults = 376;
  Google_Protobuf_Field = 377;
  Google_Protobuf_FieldDescriptorProto = 378;
  Google_Protobuf_FieldMask = 379;
  Google_Protobuf_FieldOptions = 380;
  Google_Protobuf_FileDescriptorProto = 381;
  Google_Protobuf_FileDescriptorSet = 382;
  Google_Protobuf_FileOptions = 383;
  Google_Protobuf_FloatValue = 384;
  Google_Protobuf_GeneratedCodeInfo = 385;
  Google_Protobuf_Int32Value = 386;
  Google_Protobuf_Int64Value = 387;
  Google_Protobuf_ListValue = 388;
  Google_Protobuf_MessageOptions = 389;
  Google_Protobuf_Method = 390;
  Google_Protobuf_MethodDescriptorProto = 391;
  Google_Protobuf_MethodOptions = 392;
  Google_Protobuf_Mixin = 393;
  Google_Protobuf_NullValue = 394;
  Google_Protobuf_OneofDescriptorProto = 395;
  Google_Protobuf_OneofOptions = 396;
  Google_Protobuf_Option = 397;
  Google_Protobuf_ServiceDescriptorProto = 398;
  Google_Protobuf_ServiceOptions = 399;
  Google_Protobuf_SourceCodeInfo = 400;
  Google_Protobuf_SourceContext = 401;
  Google_Protobuf_StringValue = 402;
  Google_Protobuf_Struct = 403;
  Google_Protobuf_Syntax = 404;
  Google_Protobuf_Timestamp = 405;
  Google_Protobuf_Type = 406;
  Google_Protobuf_UInt32Value = 407;
  Google_Protobuf_UInt64Value = 408;
  Google_Protobuf_UninterpretedOption = 409;
  Google_Protobuf_Value = 410;
  goPackage = 411;
  group = 412;
  groupFieldNumberStack = 413;
  groupSize = 414;
  hadOneofValue = 415;
  handleConflictingOneOf = 416;
  hasAggregateValue = 417;
  hasAllowAlias = 418;
  hasBegin = 419;
  hasCcEnableArenas = 420;
  hasCcGenericServices = 421;
  hasClientStreaming = 422;
  hasCsharpNamespace = 423;
  hasCtype = 424;
  hasDebugRedact = 425;
  hasDefaultValue = 426;
  hasDeprecated = 427;
  hasDeprecatedLegacyJsonFieldConflicts = 428;
  hasDeprecationWarning = 429;
  hasDoubleValue = 430;
  hasEdition = 431;
  hasEditionDeprecated = 432;
  hasEditionIntroduced = 433;
  hasEditionRemoved = 434;
  hasEnd = 435;
  hasEnumType = 436;
  hasExtendee = 437;
  hasExtensionValue = 438;
  hasFeatures = 439;
  hasFeatureSupport = 440;
  hasFieldPresence = 441;
  hasFixedFeatures = 442;
  hasFullName = 443;
  hasGoPackage = 444;
  hash = 445;
  Hashable = 446;
  hasher = 447;
  HashVisitor = 448;
  hasIdempotencyLevel = 449;
  hasIdentifierValue = 450;
  hasInputType = 451;
  hasIsExtension = 452;
  hasJavaGenerateEqualsAndHash = 453;
  hasJavaGenericServices = 454;
  hasJavaMultipleFiles = 455;
  hasJavaOuterClassname = 456;
  hasJavaPackage = 457;
  hasJavaStringCheckUtf8 = 458;
  hasJsonFormat = 459;
  hasJsonName = 460;
  hasJstype = 461;
  hasLabel = 462;
  hasLazy = 463;
  hasLeadingComments = 464;
  hasMapEntry = 465;
  hasMaximumEdition = 466;
  hasMessageEncoding = 467;
  hasMessageSetWireFormat = 468;
  hasMinimumEdition = 469;
  hasName = 470;
  hasNamePart = 471;
  hasNegativeIntValue = 472;
  hasNoStandardDescriptorAccessor = 473;
  hasNumber = 474;
  hasObjcClassPrefix = 475;
  hasOneofIndex = 476;
  hasOptimizeFor = 477;
  hasOptions = 478;
  hasOutputType = 479;
  hasOverridableFeatures = 480;
  hasPackage = 481;
  hasPacked = 482;
  hasPhpClassPrefix = 483;
  hasPhpMetadataNamespace = 484;
  hasPhpNamespace = 485;
  hasPositiveIntValue = 486;
  hasProto3Optional = 487;
  hasPyGenericServices = 488;
  hasRepeated = 489;
  hasRepeatedFieldEncoding = 490;
  hasReserved = 491;
  hasRetention = 492;
  hasRubyPackage = 493;
  hasSemantic = 494;
  hasServerStreaming = 495;
  hasSourceCodeInfo = 496;
  hasSourceContext = 497;
  hasSourceFile = 498;
  hasStart = 499;
  hasStringValue = 500;
  hasSwiftPrefix = 501;
  hasSyntax = 502;
  hasTrailingComments = 503;
  hasType = 504;
  hasTypeName = 505;
  hasUnverifiedLazy = 506;
  hasUtf8Validation = 507;
  hasValue = 508;
  hasVerification = 509;
  hasWeak = 510;
  hour = 511;
  i = 512;
  idempotencyLevel = 513;
  identifierValue = 514;
  if = 515;
  ignoreUnknownFields = 516;
  index = 517;
  init = 518;
  inout = 519;
  inputType = 520;
  insert = 521;
  Int = 522;
  Int32 = 523;
  Int32Value = 524;
  Int64 = 525;
  Int64Value = 526;
  Int8 = 527;
  integerLiteral = 528;
  IntegerLiteralType = 529;
  intern = 530;
  Internal = 531;
  InternalState = 532;
  into = 533;
  ints = 534;
  isA = 535;
  isEqual = 536;
  isEqualTo = 537;
  isExtension = 538;
  isInitialized = 539;
  isNegative = 540;
  itemTagsEncodedSize = 541;
  iterator = 542;
  javaGenerateEqualsAndHash = 543;
  javaGenericServices = 544;
  javaMultipleFiles = 545;
  javaOuterClassname = 546;
  javaPackage = 547;
  javaStringCheckUtf8 = 548;
  JSONDecoder = 549;
  JSONDecodingError = 550;
  JSONDecodingOptions = 551;
  jsonEncoder = 552;
  JSONEncodingError = 553;
  JSONEncodingOptions = 554;
  JSONEncodingVisitor = 555;
  jsonFormat = 556;
  JSONMapEncodingVisitor = 557;
  jsonName = 558;
  jsonPath = 559;
  jsonPaths = 560;
  JSONScanner = 561;
  jsonString = 562;
  jsonText = 563;
  jsonUTF8Bytes = 564;
  jsonUTF8Data = 565;
  jstype = 566;
  k = 567;
  kChunkSize = 568;
  Key = 569;
  keyField = 570;
  keyFieldOpt = 571;
  KeyType = 572;
  kind = 573;
  l = 574;
  label = 575;
  lazy = 576;
  leadingComments = 577;
  leadingDetachedComments = 578;
  length = 579;
  lessThan = 580;
  let = 581;
  lhs = 582;
  list = 583;
  listOfMessages = 584;
  listValue = 585;
  littleEndian = 586;
  load = 587;
  localHasher = 588;
  location = 589;
  M = 590;
  major = 591;
  makeAsyncIterator = 592;
  makeIterator = 593;
  mapEntry = 594;
  MapKeyType = 595;
  mapToMessages = 596;
  MapValueType = 597;
  mapVisitor = 598;
  maximumEdition = 599;
  mdayStart = 600;
  merge = 601;
  message = 602;
  messageDepthLimit = 603;
  messageEncoding = 604;
  MessageExtension = 605;
  MessageImplementationBase = 606;
  MessageOptions = 607;
  MessageSet = 608;
  messageSetWireFormat = 609;
  messageSize = 610;
  messageType = 611;
  Method = 612;
  MethodDescriptorProto = 613;
  MethodOptions = 614;
  methods = 615;
  min = 616;
  minimumEdition = 617;
  minor = 618;
  Mixin = 619;
  mixins = 620;
  modifier = 621;
  modify = 622;
  month = 623;
  msgExtension = 624;
  mutating = 625;
  n = 626;
  name = 627;
  NameDescription = 628;
  NameMap = 629;
  NamePart = 630;
  names = 631;
  nanos = 632;
  negativeIntValue = 633;
  nestedType = 634;
  newL = 635;
  newList = 636;
  newValue = 637;
  next = 638;
  nextByte = 639;
  nextFieldNumber = 640;
  nextVarInt = 641;
  nil = 642;
  nilLiteral = 643;
  noStandardDescriptorAccessor = 644;
  nullValue = 645;
  number = 646;
  numberValue = 647;
  objcClassPrefix = 648;
  of = 649;
  oneofDecl = 650;
  OneofDescriptorProto = 651;
  oneofIndex = 652;
  OneofOptions = 653;
  oneofs = 654;
  OneOf_Kind = 655;
  optimizeFor = 656;
  OptimizeMode = 657;
  Option = 658;
  OptionalEnumExtensionField = 659;
  OptionalExtensionField = 660;
  OptionalGroupExtensionField = 661;
  OptionalMessageExtensionField = 662;
  OptionRetention = 663;
  options = 664;
  OptionTargetType = 665;
  other = 666;
  others = 667;
  out = 668;
  outputType = 669;
  overridableFeatures = 670;
  p = 671;
  package = 672;
  packed = 673;
  PackedEnumExtensionField = 674;
  PackedExtensionField = 675;
  padding = 676;
  parent = 677;
  parse = 678;
  path = 679;
  paths = 680;
  payload = 681;
  payloadSize = 682;
  phpClassPrefix = 683;
  phpMetadataNamespace = 684;
  phpNamespace = 685;
  pos = 686;
  positiveIntValue = 687;
  prefix = 688;
  preserveProtoFieldNames = 689;
  preTraverse = 690;
  printUnknownFields = 691;
  proto2 = 692;
  proto3DefaultValue = 693;
  proto3Optional = 694;
  ProtobufAPIVersionCheck = 695;
  ProtobufAPIVersion_3 = 696;
  ProtobufBool = 697;
  ProtobufBytes = 698;
  ProtobufDouble = 699;
  ProtobufEnumMap = 700;
  protobufExtension = 701;
  ProtobufFixed32 = 702;
  ProtobufFixed64 = 703;
  ProtobufFloat = 704;
  ProtobufInt32 = 705;
  ProtobufInt64 = 706;
  ProtobufMap = 707;
  ProtobufMessageMap = 708;
  ProtobufSFixed32 = 709;
  ProtobufSFixed64 = 710;
  ProtobufSInt32 = 711;
  ProtobufSInt64 = 712;
  ProtobufString = 713;
  ProtobufUInt32 = 714;
  ProtobufUInt64 = 715;
  protobuf_extensionFieldValues = 716;
  protobuf_fieldNumber = 717;
  protobuf_generated_isEqualTo = 718;
  protobuf_nameMap = 719;
  protobuf_newField = 720;
  protobuf_package = 721;
  protocol = 722;
  protoFieldName = 723;
  protoMessageName = 724;
  ProtoNameProviding = 725;
  protoPaths = 726;
  public = 727;
  publicDependency = 728;
  putBoolValue = 729;
  putBytesValue = 730;
  putDoubleValue = 731;
  putEnumValue = 732;
  putFixedUInt32 = 733;
  putFixedUInt64 = 734;
  putFloatValue = 735;
  putInt64 = 736;
  putStringValue = 737;
  putUInt64 = 738;
  putUInt64Hex = 739;
  putVarInt = 740;
  putZigZagVarInt = 741;
  pyGenericServices = 742;
  R = 743;
  rawChars = 744;
  RawRepresentable = 745;
  RawValue = 746;
  read4HexDigits = 747;
  readBytes = 748;
  register = 749;
  repeated = 750;
  RepeatedEnumExtensionField = 751;
  RepeatedExtensionField = 752;
  repeatedFieldEncoding = 753;
  RepeatedGroupExtensionField = 754;
  RepeatedMessageExtensionField = 755;
  repeating = 756;
  requestStreaming = 757;
  requestTypeURL = 758;
  requiredSize = 759;
  responseStreaming = 760;
  responseTypeURL = 761;
  result = 762;
  retention = 763;
  rethrows = 764;
  return = 765;
  ReturnType = 766;
  revision = 767;
  rhs = 768;
  root = 769;
  rubyPackage = 770;
  s = 771;
  sawBackslash = 772;
  sawSection4Characters = 773;
  sawSection5Characters = 774;
  scanner = 775;
  seconds = 776;
  self = 777;
  semantic = 778;
  Sendable = 779;
  separator = 780;
  serialize = 781;
  serializedBytes = 782;
  serializedData = 783;
  serializedSize = 784;
  serverStreaming = 785;
  service = 786;
  ServiceDescriptorProto = 787;
  ServiceOptions = 788;
  set = 789;
  setExtensionValue = 790;
  shift = 791;
  SimpleExtensionMap = 792;
  size = 793;
  sizer = 794;
  source = 795;
  sourceCodeInfo = 796;
  sourceContext = 797;
  sourceEncoding = 798;
  sourceFile = 799;
  span = 800;
  split = 801;
  start = 802;
  startArray = 803;
  startArrayObject = 804;
  startField = 805;
  startIndex = 806;
  startMessageField = 807;
  startObject = 808;
  startRegularField = 809;
  state = 810;
  static = 811;
  StaticString = 812;
  storage = 813;
  String = 814;
  stringLiteral = 815;
  StringLiteralType = 816;
  stringResult = 817;
  stringValue = 818;
  struct = 819;
  structValue = 820;
  subDecoder = 821;
  subscript = 822;
  subVisitor = 823;
  Swift = 824;
  swiftPrefix = 825;
  SwiftProtobufContiguousBytes = 826;
  syntax = 827;
  T = 828;
  tag = 829;
  targets = 830;
  terminator = 831;
  testDecoder = 832;
  text = 833;
  textDecoder = 834;
  TextFormatDecoder = 835;
  TextFormatDecodingError = 836;
  TextFormatDecodingOptions = 837;
  TextFormatEncodingOptions = 838;
  TextFormatEncodingVisitor = 839;
  textFormatString = 840;
  throwOrIgnore = 841;
  throws = 842;
  timeInterval = 843;
  timeIntervalSince1970 = 844;
  timeIntervalSinceReferenceDate = 845;
  Timestamp = 846;
  total = 847;
  totalArrayDepth = 848;
  totalSize = 849;
  trailingComments = 850;
  traverse = 851;
  true = 852;
  try = 853;
  type = 854;
  typealias = 855;
  TypeEnum = 856;
  typeName = 857;
  typePrefix = 858;
  typeStart = 859;
  typeUnknown = 860;
  typeURL = 861;
  UInt32 = 862;
  UInt32Value = 863;
  UInt64 = 864;
  UInt64Value = 865;
  UInt8 = 866;
  unchecked = 867;
  unicodeScalarLiteral = 868;
  UnicodeScalarLiteralType = 869;
  unicodeScalars = 870;
  UnicodeScalarView = 871;
  uninterpretedOption = 872;
  union = 873;
  uniqueStorage = 874;
  unknown = 875;
  unknownFields = 876;
  UnknownStorage = 877;
  unpackTo = 878;
  UnsafeBufferPointer = 879;
  UnsafeMutablePointer = 880;
  UnsafeMutableRawBufferPointer = 881;
  UnsafeRawBufferPointer = 882;
  UnsafeRawPointer = 883;
  unverifiedLazy = 884;
  updatedOptions = 885;
  url = 886;
  useDeterministicOrdering = 887;
  utf8 = 888;
  utf8Ptr = 889;
  utf8ToDouble = 890;
  utf8Validation = 891;
  UTF8View = 892;
  v = 893;
  value = 894;
  valueField = 895;
  values = 896;
  ValueType = 897;
  var = 898;
  verification = 899;
  VerificationState = 900;
  Version = 901;
  versionString = 902;
  visitExtensionFields = 903;
  visitExtensionFieldsAsMessageSet = 904;
  visitMapField = 905;
  visitor = 906;
  visitPacked = 907;
  visitPackedBoolField = 908;
  visitPackedDoubleField = 909;
  visitPackedEnumField = 910;
  visitPackedFixed32Field = 911;
  visitPackedFixed64Field = 912;
  visitPackedFloatField = 913;
  visitPackedInt32Field = 914;
  visitPackedInt64Field = 915;
  visitPackedSFixed32Field = 916;
  visitPackedSFixed64Field = 917;
  visitPackedSInt32Field = 918;
  visitPackedSInt64Field = 919;
  visitPackedUInt32Field = 920;
  visitPackedUInt64Field = 921;
  visitRepeated = 922;
  visitRepeatedBoolField = 923;
  visitRepeatedBytesField = 924;
  visitRepeatedDoubleField = 925;
  visitRepeatedEnumField = 926;
  visitRepeatedFixed32Field = 927;
  visitRepeatedFixed64Field = 928;
  visitRepeatedFloatField = 929;
  visitRepeatedGroupField = 930;
  visitRepeatedInt32Field = 931;
  visitRepeatedInt64Field = 932;
  visitRepeatedMessageField = 933;
  visitRepeatedSFixed32Field = 934;
  visitRepeatedSFixed64Field = 935;
  visitRepeatedSInt32Field = 936;
  visitRepeatedSInt64Field = 937;
  visitRepeatedStringField = 938;
  visitRepeatedUInt32Field = 939;
  visitRepeatedUInt64Field = 940;
  visitSingular = 941;
  visitSingularBoolField = 942;
  visitSingularBytesField = 943;
  visitSingularDoubleField = 944;
  visitSingularEnumField = 945;
  visitSingularFixed32Field = 946;
  visitSingularFixed64Field = 947;
  visitSingularFloatField = 948;
  visitSingularGroupField = 949;
  visitSingularInt32Field = 950;
  visitSingularInt64Field = 951;
  visitSingularMessageField = 952;
  visitSingularSFixed32Field = 953;
  visitSingularSFixed64Field = 954;
  visitSingularSInt32Field = 955;
  visitSingularSInt64Field = 956;
  visitSingularStringField = 957;
  visitSingularUInt32Field = 958;
  visitSingularUInt64Field = 959;
  visitUnknown = 960;
  wasDecoded = 961;
  weak = 962;
  weakDependency = 963;
  where = 964;
  wireFormat = 965;
  with = 966;
  withUnsafeBytes = 967;
  withUnsafeMutableBytes = 968;
  work = 969;
  Wrapped = 970;
  WrappedType = 971;
  wrappedValue = 972;
  written = 973;
  yday = 974;
}
