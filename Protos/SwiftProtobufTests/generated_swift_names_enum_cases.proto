// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package protobuf_unittest_generated;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  adjusted = 1;
  aggregateValue = 2;
  allCases = 3;
  allowAlias = 4;
  alwaysPrintEnumsAsInts = 5;
  alwaysPrintInt64sAsNumbers = 6;
  annotation = 7;
  any = 8;
  AnyExtensionField = 9;
  AnyMessageExtension = 10;
  AnyMessageStorage = 11;
  AnyUnpackError = 12;
  Api = 13;
  appended = 14;
  appendUIntHex = 15;
  appendUnknown = 16;
  areAllInitialized = 17;
  Array = 18;
  arrayDepth = 19;
  arrayLiteral = 20;
  arraySeparator = 21;
  as = 22;
  asciiOpenCurlyBracket = 23;
  asciiZero = 24;
  available = 25;
  b = 26;
  base64Values = 27;
  baseAddress = 28;
  BaseType = 29;
  begin = 30;
  binary = 31;
  BinaryDecoder = 32;
  BinaryDecodingError = 33;
  BinaryDecodingOptions = 34;
  BinaryDelimited = 35;
  BinaryEncoder = 36;
  BinaryEncodingError = 37;
  BinaryEncodingMessageSetSizeVisitor = 38;
  BinaryEncodingMessageSetVisitor = 39;
  BinaryEncodingSizeVisitor = 40;
  BinaryEncodingVisitor = 41;
  binaryOptions = 42;
  bitPattern = 43;
  body = 44;
  Bool = 45;
  booleanLiteral = 46;
  BooleanLiteralType = 47;
  boolValue = 48;
  bytes = 49;
  bytesInGroup = 50;
  bytesNeeded = 51;
  bytesRead = 52;
  BytesValue = 53;
  c = 54;
  capitalizeNext = 55;
  cardinality = 56;
  CaseIterable = 57;
  ccEnableArenas = 58;
  ccGenericServices = 59;
  Character = 60;
  chars = 61;
  chunk = 62;
  class = 63;
  clearAggregateValue = 64;
  clearAllowAlias = 65;
  clearBegin = 66;
  clearCcEnableArenas = 67;
  clearCcGenericServices = 68;
  clearClientStreaming = 69;
  clearCsharpNamespace = 70;
  clearCtype = 71;
  clearDebugRedact = 72;
  clearDefaultValue = 73;
  clearDeprecated = 74;
  clearDeprecatedLegacyJsonFieldConflicts = 75;
  clearDoubleValue = 76;
  clearEdition = 77;
  clearEnd = 78;
  clearExtendee = 79;
  clearExtensionValue = 80;
  clearFullName = 81;
  clearGoPackage = 82;
  clearIdempotencyLevel = 83;
  clearIdentifierValue = 84;
  clearInputType = 85;
  clearIsExtension = 86;
  clearIsRepeated = 87;
  clearJavaGenerateEqualsAndHash = 88;
  clearJavaGenericServices = 89;
  clearJavaMultipleFiles = 90;
  clearJavaOuterClassname = 91;
  clearJavaPackage = 92;
  clearJavaStringCheckUtf8 = 93;
  clearJsonName = 94;
  clearJstype = 95;
  clearLabel = 96;
  clearLazy = 97;
  clearLeadingComments = 98;
  clearMapEntry = 99;
  clearMessageSetWireFormat = 100;
  clearName = 101;
  clearNamePart = 102;
  clearNegativeIntValue = 103;
  clearNoStandardDescriptorAccessor = 104;
  clearNumber = 105;
  clearObjcClassPrefix = 106;
  clearOneofIndex = 107;
  clearOptimizeFor = 108;
  clearOptions = 109;
  clearOutputType = 110;
  clearPackage = 111;
  clearPacked = 112;
  clearPhpClassPrefix = 113;
  clearPhpGenericServices = 114;
  clearPhpMetadataNamespace = 115;
  clearPhpNamespace = 116;
  clearPositiveIntValue = 117;
  clearProto3Optional = 118;
  clearPyGenericServices = 119;
  clearRepeated = 120;
  clearReserved = 121;
  clearRetention = 122;
  clearRubyPackage = 123;
  clearSemantic = 124;
  clearServerStreaming = 125;
  clearSourceCodeInfo = 126;
  clearSourceContext = 127;
  clearSourceFile = 128;
  clearStart = 129;
  clearStringValue = 130;
  clearSwiftPrefix = 131;
  clearSyntax = 132;
  clearTargetObsoleteDoNotUse = 133;
  clearTrailingComments = 134;
  clearType = 135;
  clearTypeName = 136;
  clearUnverifiedLazy = 137;
  clearValue = 138;
  clearVerification = 139;
  clearWeak = 140;
  clientStreaming = 141;
  codePoint = 142;
  codeUnits = 143;
  Collection = 144;
  com = 145;
  comma = 146;
  contentsOf = 147;
  count = 148;
  countVarintsInBuffer = 149;
  csharpNamespace = 150;
  ctype = 151;
  customCodable = 152;
  CustomDebugStringConvertible = 153;
  d = 154;
  Data = 155;
  dataResult = 156;
  date = 157;
  daySec = 158;
  daysSinceEpoch = 159;
  debugDescription = 160;
  debugRedact = 161;
  declaration = 162;
  decoded = 163;
  decodedFromJSONNull = 164;
  decodeExtensionField = 165;
  decodeExtensionFieldsAsMessageSet = 166;
  decodeJSON = 167;
  decodeMapField = 168;
  decodeMessage = 169;
  decoder = 170;
  decodeRepeated = 171;
  decodeRepeatedBoolField = 172;
  decodeRepeatedBytesField = 173;
  decodeRepeatedDoubleField = 174;
  decodeRepeatedEnumField = 175;
  decodeRepeatedFixed32Field = 176;
  decodeRepeatedFixed64Field = 177;
  decodeRepeatedFloatField = 178;
  decodeRepeatedGroupField = 179;
  decodeRepeatedInt32Field = 180;
  decodeRepeatedInt64Field = 181;
  decodeRepeatedMessageField = 182;
  decodeRepeatedSFixed32Field = 183;
  decodeRepeatedSFixed64Field = 184;
  decodeRepeatedSInt32Field = 185;
  decodeRepeatedSInt64Field = 186;
  decodeRepeatedStringField = 187;
  decodeRepeatedUInt32Field = 188;
  decodeRepeatedUInt64Field = 189;
  decodeSingular = 190;
  decodeSingularBoolField = 191;
  decodeSingularBytesField = 192;
  decodeSingularDoubleField = 193;
  decodeSingularEnumField = 194;
  decodeSingularFixed32Field = 195;
  decodeSingularFixed64Field = 196;
  decodeSingularFloatField = 197;
  decodeSingularGroupField = 198;
  decodeSingularInt32Field = 199;
  decodeSingularInt64Field = 200;
  decodeSingularMessageField = 201;
  decodeSingularSFixed32Field = 202;
  decodeSingularSFixed64Field = 203;
  decodeSingularSInt32Field = 204;
  decodeSingularSInt64Field = 205;
  decodeSingularStringField = 206;
  decodeSingularUInt32Field = 207;
  decodeSingularUInt64Field = 208;
  decodeTextFormat = 209;
  defaultAnyTypeURLPrefix = 210;
  defaultValue = 211;
  dependency = 212;
  deprecated = 213;
  deprecatedLegacyJsonFieldConflicts = 214;
  description = 215;
  DescriptorProto = 216;
  Dictionary = 217;
  dictionaryLiteral = 218;
  digit = 219;
  digit0 = 220;
  digit1 = 221;
  digitCount = 222;
  digits = 223;
  digitValue = 224;
  discardableResult = 225;
  discardUnknownFields = 226;
  distance = 227;
  double = 228;
  doubleValue = 229;
  Duration = 230;
  E = 231;
  edition = 232;
  Element = 233;
  elements = 234;
  emitExtensionFieldName = 235;
  emitFieldName = 236;
  emitFieldNumber = 237;
  Empty = 238;
  emptyData = 239;
  encodeAsBytes = 240;
  encoded = 241;
  encodedJSONString = 242;
  encodedSize = 243;
  encodeField = 244;
  encoder = 245;
  end = 246;
  endArray = 247;
  endMessageField = 248;
  endObject = 249;
  endRegularField = 250;
  enum = 251;
  EnumDescriptorProto = 252;
  EnumOptions = 253;
  EnumReservedRange = 254;
  enumType = 255;
  enumvalue = 256;
  EnumValueDescriptorProto = 257;
  EnumValueOptions = 258;
  Equatable = 259;
  Error = 260;
  ExpressibleByArrayLiteral = 261;
  ExpressibleByDictionaryLiteral = 262;
  ext = 263;
  extDecoder = 264;
  extendedGraphemeClusterLiteral = 265;
  ExtendedGraphemeClusterLiteralType = 266;
  extendee = 267;
  ExtensibleMessage = 268;
  extension = 269;
  ExtensionField = 270;
  extensionFieldNumber = 271;
  ExtensionFieldValueSet = 272;
  ExtensionMap = 273;
  extensionRange = 274;
  ExtensionRangeOptions = 275;
  extensions = 276;
  extras = 277;
  F = 278;
  false = 279;
  field = 280;
  fieldData = 281;
  FieldDescriptorProto = 282;
  FieldMask = 283;
  fieldName = 284;
  fieldNameCount = 285;
  fieldNum = 286;
  fieldNumber = 287;
  fieldNumberForProto = 288;
  FieldOptions = 289;
  fields = 290;
  fieldSize = 291;
  FieldTag = 292;
  fieldType = 293;
  file = 294;
  FileDescriptorProto = 295;
  FileDescriptorSet = 296;
  fileName = 297;
  FileOptions = 298;
  filter = 299;
  first = 300;
  firstItem = 301;
  float = 302;
  floatLiteral = 303;
  FloatLiteralType = 304;
  FloatValue = 305;
  forMessageName = 306;
  formUnion = 307;
  forReadingFrom = 308;
  forTypeURL = 309;
  ForwardParser = 310;
  forWritingInto = 311;
  from = 312;
  fromAscii2 = 313;
  fromAscii4 = 314;
  fromByteOffset = 315;
  fromHexDigit = 316;
  fullName = 317;
  func = 318;
  G = 319;
  GeneratedCodeInfo = 320;
  get = 321;
  getExtensionValue = 322;
  googleapis = 323;
  Google_Protobuf_Any = 324;
  Google_Protobuf_Api = 325;
  Google_Protobuf_BoolValue = 326;
  Google_Protobuf_BytesValue = 327;
  Google_Protobuf_DescriptorProto = 328;
  Google_Protobuf_DoubleValue = 329;
  Google_Protobuf_Duration = 330;
  Google_Protobuf_Empty = 331;
  Google_Protobuf_Enum = 332;
  Google_Protobuf_EnumDescriptorProto = 333;
  Google_Protobuf_EnumOptions = 334;
  Google_Protobuf_EnumValue = 335;
  Google_Protobuf_EnumValueDescriptorProto = 336;
  Google_Protobuf_EnumValueOptions = 337;
  Google_Protobuf_ExtensionRangeOptions = 338;
  Google_Protobuf_Field = 339;
  Google_Protobuf_FieldDescriptorProto = 340;
  Google_Protobuf_FieldMask = 341;
  Google_Protobuf_FieldOptions = 342;
  Google_Protobuf_FileDescriptorProto = 343;
  Google_Protobuf_FileDescriptorSet = 344;
  Google_Protobuf_FileOptions = 345;
  Google_Protobuf_FloatValue = 346;
  Google_Protobuf_GeneratedCodeInfo = 347;
  Google_Protobuf_Int32Value = 348;
  Google_Protobuf_Int64Value = 349;
  Google_Protobuf_ListValue = 350;
  Google_Protobuf_MessageOptions = 351;
  Google_Protobuf_Method = 352;
  Google_Protobuf_MethodDescriptorProto = 353;
  Google_Protobuf_MethodOptions = 354;
  Google_Protobuf_Mixin = 355;
  Google_Protobuf_NullValue = 356;
  Google_Protobuf_OneofDescriptorProto = 357;
  Google_Protobuf_OneofOptions = 358;
  Google_Protobuf_Option = 359;
  Google_Protobuf_ServiceDescriptorProto = 360;
  Google_Protobuf_ServiceOptions = 361;
  Google_Protobuf_SourceCodeInfo = 362;
  Google_Protobuf_SourceContext = 363;
  Google_Protobuf_StringValue = 364;
  Google_Protobuf_Struct = 365;
  Google_Protobuf_Syntax = 366;
  Google_Protobuf_Timestamp = 367;
  Google_Protobuf_Type = 368;
  Google_Protobuf_UInt32Value = 369;
  Google_Protobuf_UInt64Value = 370;
  Google_Protobuf_UninterpretedOption = 371;
  Google_Protobuf_Value = 372;
  goPackage = 373;
  group = 374;
  groupFieldNumberStack = 375;
  groupSize = 376;
  hadOneofValue = 377;
  handleConflictingOneOf = 378;
  hasAggregateValue = 379;
  hasAllowAlias = 380;
  hasBegin = 381;
  hasCcEnableArenas = 382;
  hasCcGenericServices = 383;
  hasClientStreaming = 384;
  hasCsharpNamespace = 385;
  hasCtype = 386;
  hasDebugRedact = 387;
  hasDefaultValue = 388;
  hasDeprecated = 389;
  hasDeprecatedLegacyJsonFieldConflicts = 390;
  hasDoubleValue = 391;
  hasEdition = 392;
  hasEnd = 393;
  hasExtendee = 394;
  hasExtensionValue = 395;
  hasFullName = 396;
  hasGoPackage = 397;
  hash = 398;
  Hashable = 399;
  hasher = 400;
  HashVisitor = 401;
  hasIdempotencyLevel = 402;
  hasIdentifierValue = 403;
  hasInputType = 404;
  hasIsExtension = 405;
  hasIsRepeated = 406;
  hasJavaGenerateEqualsAndHash = 407;
  hasJavaGenericServices = 408;
  hasJavaMultipleFiles = 409;
  hasJavaOuterClassname = 410;
  hasJavaPackage = 411;
  hasJavaStringCheckUtf8 = 412;
  hasJsonName = 413;
  hasJstype = 414;
  hasLabel = 415;
  hasLazy = 416;
  hasLeadingComments = 417;
  hasMapEntry = 418;
  hasMessageSetWireFormat = 419;
  hasName = 420;
  hasNamePart = 421;
  hasNegativeIntValue = 422;
  hasNoStandardDescriptorAccessor = 423;
  hasNumber = 424;
  hasObjcClassPrefix = 425;
  hasOneofIndex = 426;
  hasOptimizeFor = 427;
  hasOptions = 428;
  hasOutputType = 429;
  hasPackage = 430;
  hasPacked = 431;
  hasPhpClassPrefix = 432;
  hasPhpGenericServices = 433;
  hasPhpMetadataNamespace = 434;
  hasPhpNamespace = 435;
  hasPositiveIntValue = 436;
  hasProto3Optional = 437;
  hasPyGenericServices = 438;
  hasRepeated = 439;
  hasReserved = 440;
  hasRetention = 441;
  hasRubyPackage = 442;
  hasSemantic = 443;
  hasServerStreaming = 444;
  hasSourceCodeInfo = 445;
  hasSourceContext = 446;
  hasSourceFile = 447;
  hasStart = 448;
  hasStringValue = 449;
  hasSwiftPrefix = 450;
  hasSyntax = 451;
  hasTargetObsoleteDoNotUse = 452;
  hasTrailingComments = 453;
  hasType = 454;
  hasTypeName = 455;
  hasUnverifiedLazy = 456;
  hasValue = 457;
  hasVerification = 458;
  hasWeak = 459;
  hour = 460;
  i = 461;
  idempotencyLevel = 462;
  identifierValue = 463;
  if = 464;
  ignoreUnknownFields = 465;
  index = 466;
  init = 467;
  inout = 468;
  inputType = 469;
  insert = 470;
  Int = 471;
  Int32 = 472;
  Int32Value = 473;
  Int64 = 474;
  Int64Value = 475;
  Int8 = 476;
  integerLiteral = 477;
  IntegerLiteralType = 478;
  intern = 479;
  Internal = 480;
  InternalState = 481;
  into = 482;
  ints = 483;
  isA = 484;
  isEqual = 485;
  isEqualTo = 486;
  isExtension = 487;
  isInitialized = 488;
  isNegative = 489;
  isRepeated = 490;
  itemTagsEncodedSize = 491;
  Iterator = 492;
  javaGenerateEqualsAndHash = 493;
  javaGenericServices = 494;
  javaMultipleFiles = 495;
  javaOuterClassname = 496;
  javaPackage = 497;
  javaStringCheckUtf8 = 498;
  JSONDecoder = 499;
  JSONDecodingError = 500;
  JSONDecodingOptions = 501;
  jsonEncoder = 502;
  JSONEncodingError = 503;
  JSONEncodingOptions = 504;
  JSONEncodingVisitor = 505;
  JSONMapEncodingVisitor = 506;
  jsonName = 507;
  jsonPath = 508;
  jsonPaths = 509;
  JSONScanner = 510;
  jsonString = 511;
  jsonText = 512;
  jsonUTF8Bytes = 513;
  jsonUTF8Data = 514;
  jstype = 515;
  k = 516;
  kChunkSize = 517;
  Key = 518;
  keyField = 519;
  keyFieldOpt = 520;
  KeyType = 521;
  kind = 522;
  l = 523;
  label = 524;
  lazy = 525;
  leadingComments = 526;
  leadingDetachedComments = 527;
  length = 528;
  lessThan = 529;
  let = 530;
  lhs = 531;
  list = 532;
  listOfMessages = 533;
  listValue = 534;
  littleEndian = 535;
  littleEndianBytes = 536;
  load = 537;
  localHasher = 538;
  location = 539;
  M = 540;
  major = 541;
  makeIterator = 542;
  mapEntry = 543;
  MapKeyType = 544;
  mapToMessages = 545;
  MapValueType = 546;
  mapVisitor = 547;
  mdayStart = 548;
  merge = 549;
  message = 550;
  MessageBase = 551;
  messageDepthLimit = 552;
  MessageExtension = 553;
  MessageImplementationBase = 554;
  MessageOptions = 555;
  MessageSet = 556;
  messageSetWireFormat = 557;
  messageType = 558;
  Method = 559;
  MethodDescriptorProto = 560;
  MethodOptions = 561;
  methods = 562;
  min = 563;
  minor = 564;
  Mixin = 565;
  mixins = 566;
  modifier = 567;
  modify = 568;
  month = 569;
  msgExtension = 570;
  mutating = 571;
  n = 572;
  name = 573;
  NameDescription = 574;
  NameMap = 575;
  NamePart = 576;
  names = 577;
  nanos = 578;
  nativeEndianBytes = 579;
  negativeIntValue = 580;
  nestedType = 581;
  newL = 582;
  newList = 583;
  newValue = 584;
  nextByte = 585;
  nextFieldNumber = 586;
  nil = 587;
  nilLiteral = 588;
  noStandardDescriptorAccessor = 589;
  nullValue = 590;
  number = 591;
  numberValue = 592;
  objcClassPrefix = 593;
  of = 594;
  oneofDecl = 595;
  OneofDescriptorProto = 596;
  oneofIndex = 597;
  OneofOptions = 598;
  oneofs = 599;
  OneOf_Kind = 600;
  optimizeFor = 601;
  OptimizeMode = 602;
  Option = 603;
  OptionalEnumExtensionField = 604;
  OptionalExtensionField = 605;
  OptionalGroupExtensionField = 606;
  OptionalMessageExtensionField = 607;
  OptionRetention = 608;
  options = 609;
  OptionTargetType = 610;
  other = 611;
  others = 612;
  out = 613;
  outputType = 614;
  p = 615;
  package = 616;
  packed = 617;
  PackedEnumExtensionField = 618;
  PackedExtensionField = 619;
  padding = 620;
  parent = 621;
  parse = 622;
  partial = 623;
  path = 624;
  paths = 625;
  payload = 626;
  payloadSize = 627;
  phpClassPrefix = 628;
  phpGenericServices = 629;
  phpMetadataNamespace = 630;
  phpNamespace = 631;
  pointer = 632;
  pos = 633;
  positiveIntValue = 634;
  prefix = 635;
  preserveProtoFieldNames = 636;
  preTraverse = 637;
  printUnknownFields = 638;
  proto2 = 639;
  proto3DefaultValue = 640;
  proto3Optional = 641;
  ProtobufAPIVersionCheck = 642;
  ProtobufAPIVersion_3 = 643;
  ProtobufBool = 644;
  ProtobufBytes = 645;
  ProtobufDouble = 646;
  ProtobufEnumMap = 647;
  protobufExtension = 648;
  ProtobufFixed32 = 649;
  ProtobufFixed64 = 650;
  ProtobufFloat = 651;
  ProtobufInt32 = 652;
  ProtobufInt64 = 653;
  ProtobufMap = 654;
  ProtobufMessageMap = 655;
  ProtobufSFixed32 = 656;
  ProtobufSFixed64 = 657;
  ProtobufSInt32 = 658;
  ProtobufSInt64 = 659;
  ProtobufString = 660;
  ProtobufUInt32 = 661;
  ProtobufUInt64 = 662;
  protobuf_extensionFieldValues = 663;
  protobuf_fieldNumber = 664;
  protobuf_generated_isEqualTo = 665;
  protobuf_nameMap = 666;
  protobuf_newField = 667;
  protobuf_package = 668;
  protocol = 669;
  protoFieldName = 670;
  protoMessageName = 671;
  ProtoNameProviding = 672;
  protoPaths = 673;
  ProtoSendable = 674;
  public = 675;
  publicDependency = 676;
  putBoolValue = 677;
  putBytesValue = 678;
  putDoubleValue = 679;
  putEnumValue = 680;
  putFixedUInt32 = 681;
  putFixedUInt64 = 682;
  putFloatValue = 683;
  putInt64 = 684;
  putStringValue = 685;
  putUInt64 = 686;
  putUInt64Hex = 687;
  putVarInt = 688;
  putZigZagVarInt = 689;
  pyGenericServices = 690;
  R = 691;
  rawChars = 692;
  RawRepresentable = 693;
  RawValue = 694;
  read4HexDigits = 695;
  register = 696;
  repeated = 697;
  RepeatedEnumExtensionField = 698;
  RepeatedExtensionField = 699;
  RepeatedGroupExtensionField = 700;
  RepeatedMessageExtensionField = 701;
  repeating = 702;
  requestStreaming = 703;
  requestTypeURL = 704;
  requiredSize = 705;
  responseStreaming = 706;
  responseTypeURL = 707;
  result = 708;
  retention = 709;
  rethrows = 710;
  return = 711;
  ReturnType = 712;
  revision = 713;
  rhs = 714;
  root = 715;
  rubyPackage = 716;
  s = 717;
  sawBackslash = 718;
  sawSection4Characters = 719;
  sawSection5Characters = 720;
  scanner = 721;
  seconds = 722;
  self = 723;
  semantic = 724;
  Sendable = 725;
  separator = 726;
  serialize = 727;
  serializedBytes = 728;
  serializedData = 729;
  serializedSize = 730;
  serverStreaming = 731;
  service = 732;
  ServiceDescriptorProto = 733;
  ServiceOptions = 734;
  set = 735;
  setExtensionValue = 736;
  shift = 737;
  SimpleExtensionMap = 738;
  sizer = 739;
  source = 740;
  sourceCodeInfo = 741;
  sourceContext = 742;
  sourceEncoding = 743;
  sourceFile = 744;
  span = 745;
  split = 746;
  start = 747;
  startArray = 748;
  startArrayObject = 749;
  startField = 750;
  startIndex = 751;
  startMessageField = 752;
  startObject = 753;
  startRegularField = 754;
  state = 755;
  static = 756;
  StaticString = 757;
  storage = 758;
  String = 759;
  stringLiteral = 760;
  StringLiteralType = 761;
  stringResult = 762;
  stringValue = 763;
  struct = 764;
  structValue = 765;
  subDecoder = 766;
  subscript = 767;
  subVisitor = 768;
  Swift = 769;
  swiftPrefix = 770;
  SwiftProtobufContiguousBytes = 771;
  syntax = 772;
  T = 773;
  tag = 774;
  targetObsoleteDoNotUse = 775;
  targets = 776;
  terminator = 777;
  testDecoder = 778;
  text = 779;
  textDecoder = 780;
  TextFormatDecoder = 781;
  TextFormatDecodingError = 782;
  TextFormatDecodingOptions = 783;
  TextFormatEncodingOptions = 784;
  TextFormatEncodingVisitor = 785;
  textFormatString = 786;
  throwOrIgnore = 787;
  throws = 788;
  timeInterval = 789;
  timeIntervalSince1970 = 790;
  timeIntervalSinceReferenceDate = 791;
  Timestamp = 792;
  total = 793;
  totalArrayDepth = 794;
  totalSize = 795;
  trailingComments = 796;
  traverse = 797;
  true = 798;
  try = 799;
  type = 800;
  typealias = 801;
  TypeEnum = 802;
  typeName = 803;
  typePrefix = 804;
  typeStart = 805;
  typeUnknown = 806;
  typeURL = 807;
  UInt32 = 808;
  UInt32Value = 809;
  UInt64 = 810;
  UInt64Value = 811;
  UInt8 = 812;
  unicodeScalarLiteral = 813;
  UnicodeScalarLiteralType = 814;
  unicodeScalars = 815;
  UnicodeScalarView = 816;
  uninterpretedOption = 817;
  union = 818;
  uniqueStorage = 819;
  unknown = 820;
  unknownFields = 821;
  UnknownStorage = 822;
  unpackTo = 823;
  UnsafeBufferPointer = 824;
  UnsafeMutablePointer = 825;
  UnsafeMutableRawBufferPointer = 826;
  UnsafeMutableRawPointer = 827;
  UnsafeRawBufferPointer = 828;
  UnsafeRawPointer = 829;
  unverifiedLazy = 830;
  updatedOptions = 831;
  url = 832;
  utf8 = 833;
  utf8Ptr = 834;
  utf8ToDouble = 835;
  UTF8View = 836;
  v = 837;
  value = 838;
  valueField = 839;
  values = 840;
  ValueType = 841;
  var = 842;
  verification = 843;
  VerificationState = 844;
  Version = 845;
  versionString = 846;
  visitExtensionFields = 847;
  visitExtensionFieldsAsMessageSet = 848;
  visitMapField = 849;
  visitor = 850;
  visitPacked = 851;
  visitPackedBoolField = 852;
  visitPackedDoubleField = 853;
  visitPackedEnumField = 854;
  visitPackedFixed32Field = 855;
  visitPackedFixed64Field = 856;
  visitPackedFloatField = 857;
  visitPackedInt32Field = 858;
  visitPackedInt64Field = 859;
  visitPackedSFixed32Field = 860;
  visitPackedSFixed64Field = 861;
  visitPackedSInt32Field = 862;
  visitPackedSInt64Field = 863;
  visitPackedUInt32Field = 864;
  visitPackedUInt64Field = 865;
  visitRepeated = 866;
  visitRepeatedBoolField = 867;
  visitRepeatedBytesField = 868;
  visitRepeatedDoubleField = 869;
  visitRepeatedEnumField = 870;
  visitRepeatedFixed32Field = 871;
  visitRepeatedFixed64Field = 872;
  visitRepeatedFloatField = 873;
  visitRepeatedGroupField = 874;
  visitRepeatedInt32Field = 875;
  visitRepeatedInt64Field = 876;
  visitRepeatedMessageField = 877;
  visitRepeatedSFixed32Field = 878;
  visitRepeatedSFixed64Field = 879;
  visitRepeatedSInt32Field = 880;
  visitRepeatedSInt64Field = 881;
  visitRepeatedStringField = 882;
  visitRepeatedUInt32Field = 883;
  visitRepeatedUInt64Field = 884;
  visitSingular = 885;
  visitSingularBoolField = 886;
  visitSingularBytesField = 887;
  visitSingularDoubleField = 888;
  visitSingularEnumField = 889;
  visitSingularFixed32Field = 890;
  visitSingularFixed64Field = 891;
  visitSingularFloatField = 892;
  visitSingularGroupField = 893;
  visitSingularInt32Field = 894;
  visitSingularInt64Field = 895;
  visitSingularMessageField = 896;
  visitSingularSFixed32Field = 897;
  visitSingularSFixed64Field = 898;
  visitSingularSInt32Field = 899;
  visitSingularSInt64Field = 900;
  visitSingularStringField = 901;
  visitSingularUInt32Field = 902;
  visitSingularUInt64Field = 903;
  visitUnknown = 904;
  wasDecoded = 905;
  weak = 906;
  weakDependency = 907;
  where = 908;
  wireFormat = 909;
  with = 910;
  withUnsafeBytes = 911;
  withUnsafeMutableBytes = 912;
  work = 913;
  WrappedType = 914;
  written = 915;
  yday = 916;
}
