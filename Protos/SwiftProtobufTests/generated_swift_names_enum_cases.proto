// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package swift_proto_testing.generated;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  addPath = 1;
  adjusted = 2;
  aggregateValue = 3;
  allCases = 4;
  allowAlias = 5;
  alwaysPrintEnumsAsInts = 6;
  alwaysPrintInt64sAsNumbers = 7;
  annotation = 8;
  any = 9;
  AnyExtensionField = 10;
  AnyMessageExtension = 11;
  AnyMessageStorage = 12;
  AnyUnpackError = 13;
  Api = 14;
  appended = 15;
  appendUIntHex = 16;
  appendUnknown = 17;
  areAllInitialized = 18;
  Array = 19;
  arrayDepth = 20;
  arrayLiteral = 21;
  arraySeparator = 22;
  as = 23;
  asciiOpenCurlyBracket = 24;
  asciiZero = 25;
  async = 26;
  AsyncIterator = 27;
  AsyncIteratorProtocol = 28;
  AsyncMessageSequence = 29;
  available = 30;
  b = 31;
  Base = 32;
  base64Values = 33;
  baseAddress = 34;
  BaseType = 35;
  begin = 36;
  binary = 37;
  BinaryDecoder = 38;
  BinaryDecoding = 39;
  BinaryDecodingError = 40;
  BinaryDecodingOptions = 41;
  BinaryDelimited = 42;
  BinaryEncoder = 43;
  BinaryEncodingError = 44;
  BinaryEncodingMessageSetSizeVisitor = 45;
  BinaryEncodingMessageSetVisitor = 46;
  BinaryEncodingOptions = 47;
  BinaryEncodingSizeVisitor = 48;
  BinaryEncodingVisitor = 49;
  binaryOptions = 50;
  binaryProtobufDelimitedMessages = 51;
  BinaryStreamDecoding = 52;
  binaryStreamDecodingError = 53;
  bitPattern = 54;
  body = 55;
  Bool = 56;
  booleanLiteral = 57;
  BooleanLiteralType = 58;
  boolValue = 59;
  buffer = 60;
  bytes = 61;
  bytesInGroup = 62;
  bytesNeeded = 63;
  bytesRead = 64;
  BytesValue = 65;
  c = 66;
  canonical = 67;
  capitalizeNext = 68;
  cardinality = 69;
  CaseIterable = 70;
  castedValue = 71;
  ccEnableArenas = 72;
  ccGenericServices = 73;
  Character = 74;
  chars = 75;
  chunk = 76;
  class = 77;
  clearAggregateValue = 78;
  clearAllowAlias = 79;
  clearBegin = 80;
  clearCcEnableArenas = 81;
  clearCcGenericServices = 82;
  clearClientStreaming = 83;
  clearCsharpNamespace = 84;
  clearCtype = 85;
  clearDebugRedact = 86;
  clearDefaultValue = 87;
  clearDeprecated = 88;
  clearDeprecatedLegacyJsonFieldConflicts = 89;
  clearDeprecationWarning = 90;
  clearDoubleValue = 91;
  clearEdition = 92;
  clearEditionDeprecated = 93;
  clearEditionIntroduced = 94;
  clearEditionRemoved = 95;
  clearEnd = 96;
  clearEnforceNamingStyle = 97;
  clearEnumType = 98;
  clearExtendee = 99;
  clearExtensionValue = 100;
  clearFeatures = 101;
  clearFeatureSupport = 102;
  clearFieldPresence = 103;
  clearFixedFeatures = 104;
  clearFullName = 105;
  clearGoPackage = 106;
  clearIdempotencyLevel = 107;
  clearIdentifierValue = 108;
  clearInputType = 109;
  clearIsExtension = 110;
  clearJavaGenerateEqualsAndHash = 111;
  clearJavaGenericServices = 112;
  clearJavaMultipleFiles = 113;
  clearJavaOuterClassname = 114;
  clearJavaPackage = 115;
  clearJavaStringCheckUtf8 = 116;
  clearJsonFormat = 117;
  clearJsonName = 118;
  clearJstype = 119;
  clearLabel = 120;
  clearLazy = 121;
  clearLeadingComments = 122;
  clearMapEntry = 123;
  clearMaximumEdition = 124;
  clearMessageEncoding = 125;
  clearMessageSetWireFormat = 126;
  clearMinimumEdition = 127;
  clearName = 128;
  clearNamePart = 129;
  clearNegativeIntValue = 130;
  clearNoStandardDescriptorAccessor = 131;
  clearNumber = 132;
  clearObjcClassPrefix = 133;
  clearOneofIndex = 134;
  clearOptimizeFor = 135;
  clearOptions = 136;
  clearOutputType = 137;
  clearOverridableFeatures = 138;
  clearPackage = 139;
  clearPacked = 140;
  clearPhpClassPrefix = 141;
  clearPhpMetadataNamespace = 142;
  clearPhpNamespace = 143;
  clearPositiveIntValue = 144;
  clearProto3Optional = 145;
  clearPyGenericServices = 146;
  clearRepeated = 147;
  clearRepeatedFieldEncoding = 148;
  clearReserved = 149;
  clearRetention = 150;
  clearRubyPackage = 151;
  clearSemantic = 152;
  clearServerStreaming = 153;
  clearSourceCodeInfo = 154;
  clearSourceContext = 155;
  clearSourceFile = 156;
  clearStart = 157;
  clearStringValue = 158;
  clearSwiftPrefix = 159;
  clearSyntax = 160;
  clearTrailingComments = 161;
  clearType = 162;
  clearTypeName = 163;
  clearUnverifiedLazy = 164;
  clearUtf8Validation = 165;
  clearValue = 166;
  clearVerification = 167;
  clearWeak = 168;
  clientStreaming = 169;
  code = 170;
  codePoint = 171;
  codeUnits = 172;
  Collection = 173;
  com = 174;
  comma = 175;
  consumedBytes = 176;
  contains = 177;
  contentsOf = 178;
  ContiguousBytes = 179;
  copy = 180;
  count = 181;
  countVarintsInBuffer = 182;
  csharpNamespace = 183;
  ctype = 184;
  customCodable = 185;
  CustomDebugStringConvertible = 186;
  CustomStringConvertible = 187;
  d = 188;
  Data = 189;
  dataResult = 190;
  date = 191;
  daySec = 192;
  daysSinceEpoch = 193;
  debugDescription = 194;
  debugRedact = 195;
  declaration = 196;
  decoded = 197;
  decodedFromJSONNull = 198;
  decodeExtensionField = 199;
  decodeExtensionFieldsAsMessageSet = 200;
  decodeJSON = 201;
  decodeMapField = 202;
  decodeMessage = 203;
  decoder = 204;
  decodeRepeated = 205;
  decodeRepeatedBoolField = 206;
  decodeRepeatedBytesField = 207;
  decodeRepeatedDoubleField = 208;
  decodeRepeatedEnumField = 209;
  decodeRepeatedFixed32Field = 210;
  decodeRepeatedFixed64Field = 211;
  decodeRepeatedFloatField = 212;
  decodeRepeatedGroupField = 213;
  decodeRepeatedInt32Field = 214;
  decodeRepeatedInt64Field = 215;
  decodeRepeatedMessageField = 216;
  decodeRepeatedSFixed32Field = 217;
  decodeRepeatedSFixed64Field = 218;
  decodeRepeatedSInt32Field = 219;
  decodeRepeatedSInt64Field = 220;
  decodeRepeatedStringField = 221;
  decodeRepeatedUInt32Field = 222;
  decodeRepeatedUInt64Field = 223;
  decodeSingular = 224;
  decodeSingularBoolField = 225;
  decodeSingularBytesField = 226;
  decodeSingularDoubleField = 227;
  decodeSingularEnumField = 228;
  decodeSingularFixed32Field = 229;
  decodeSingularFixed64Field = 230;
  decodeSingularFloatField = 231;
  decodeSingularGroupField = 232;
  decodeSingularInt32Field = 233;
  decodeSingularInt64Field = 234;
  decodeSingularMessageField = 235;
  decodeSingularSFixed32Field = 236;
  decodeSingularSFixed64Field = 237;
  decodeSingularSInt32Field = 238;
  decodeSingularSInt64Field = 239;
  decodeSingularStringField = 240;
  decodeSingularUInt32Field = 241;
  decodeSingularUInt64Field = 242;
  decodeTextFormat = 243;
  defaultAnyTypeURLPrefix = 244;
  defaults = 245;
  defaultValue = 246;
  dependency = 247;
  deprecated = 248;
  deprecatedLegacyJsonFieldConflicts = 249;
  deprecationWarning = 250;
  description = 251;
  DescriptorProto = 252;
  Dictionary = 253;
  dictionaryLiteral = 254;
  digit = 255;
  digit0 = 256;
  digit1 = 257;
  digitCount = 258;
  digits = 259;
  digitValue = 260;
  discardableResult = 261;
  discardUnknownFields = 262;
  Double = 263;
  doubleValue = 264;
  duration = 265;
  E = 266;
  edition = 267;
  EditionDefault = 268;
  editionDefaults = 269;
  editionDeprecated = 270;
  editionIntroduced = 271;
  editionRemoved = 272;
  Element = 273;
  elements = 274;
  else = 275;
  emitExtensionFieldName = 276;
  emitFieldName = 277;
  emitFieldNumber = 278;
  Empty = 279;
  emptyAnyTypeURL = 280;
  emptyData = 281;
  encodeAsBytes = 282;
  encoded = 283;
  encodedJSONString = 284;
  encodedSize = 285;
  encodeField = 286;
  encoder = 287;
  end = 288;
  endArray = 289;
  endMessageField = 290;
  endObject = 291;
  endRegularField = 292;
  enforceNamingStyle = 293;
  enum = 294;
  EnumDescriptorProto = 295;
  EnumOptions = 296;
  EnumReservedRange = 297;
  enumType = 298;
  enumvalue = 299;
  EnumValueDescriptorProto = 300;
  EnumValueOptions = 301;
  Equatable = 302;
  Error = 303;
  ExpressibleByArrayLiteral = 304;
  ExpressibleByDictionaryLiteral = 305;
  ext = 306;
  extDecoder = 307;
  extendedGraphemeClusterLiteral = 308;
  ExtendedGraphemeClusterLiteralType = 309;
  extendee = 310;
  ExtensibleMessage = 311;
  extension = 312;
  ExtensionField = 313;
  extensionFieldNumber = 314;
  ExtensionFieldValueSet = 315;
  ExtensionMap = 316;
  extensionRange = 317;
  ExtensionRangeOptions = 318;
  extensions = 319;
  extras = 320;
  F = 321;
  false = 322;
  features = 323;
  FeatureSet = 324;
  FeatureSetDefaults = 325;
  FeatureSetEditionDefault = 326;
  featureSupport = 327;
  field = 328;
  fieldData = 329;
  FieldDescriptorProto = 330;
  FieldMask = 331;
  FieldMaskError = 332;
  fieldName = 333;
  fieldNameCount = 334;
  fieldNum = 335;
  fieldNumber = 336;
  fieldNumberForProto = 337;
  FieldOptions = 338;
  fieldPresence = 339;
  fields = 340;
  fieldSize = 341;
  FieldTag = 342;
  FieldType = 343;
  file = 344;
  FileDescriptorProto = 345;
  FileDescriptorSet = 346;
  fileName = 347;
  FileOptions = 348;
  filter = 349;
  final = 350;
  finiteOnly = 351;
  first = 352;
  firstItem = 353;
  fixedFeatures = 354;
  Float = 355;
  floatLiteral = 356;
  FloatLiteralType = 357;
  FloatValue = 358;
  for = 359;
  forMessageName = 360;
  formUnion = 361;
  forReadingFrom = 362;
  forTypeURL = 363;
  ForwardParser = 364;
  forWritingInto = 365;
  from = 366;
  fromAscii2 = 367;
  fromAscii4 = 368;
  fromByteOffset = 369;
  fromHexDigit = 370;
  fullName = 371;
  func = 372;
  function = 373;
  G = 374;
  GeneratedCodeInfo = 375;
  get = 376;
  getExtensionValue = 377;
  googleapis = 378;
  Google_Protobuf_Any = 379;
  Google_Protobuf_Api = 380;
  Google_Protobuf_BoolValue = 381;
  Google_Protobuf_BytesValue = 382;
  Google_Protobuf_DescriptorProto = 383;
  Google_Protobuf_DoubleValue = 384;
  Google_Protobuf_Duration = 385;
  Google_Protobuf_Edition = 386;
  Google_Protobuf_Empty = 387;
  Google_Protobuf_Enum = 388;
  Google_Protobuf_EnumDescriptorProto = 389;
  Google_Protobuf_EnumOptions = 390;
  Google_Protobuf_EnumValue = 391;
  Google_Protobuf_EnumValueDescriptorProto = 392;
  Google_Protobuf_EnumValueOptions = 393;
  Google_Protobuf_ExtensionRangeOptions = 394;
  Google_Protobuf_FeatureSet = 395;
  Google_Protobuf_FeatureSetDefaults = 396;
  Google_Protobuf_Field = 397;
  Google_Protobuf_FieldDescriptorProto = 398;
  Google_Protobuf_FieldMask = 399;
  Google_Protobuf_FieldOptions = 400;
  Google_Protobuf_FileDescriptorProto = 401;
  Google_Protobuf_FileDescriptorSet = 402;
  Google_Protobuf_FileOptions = 403;
  Google_Protobuf_FloatValue = 404;
  Google_Protobuf_GeneratedCodeInfo = 405;
  Google_Protobuf_Int32Value = 406;
  Google_Protobuf_Int64Value = 407;
  Google_Protobuf_ListValue = 408;
  Google_Protobuf_MessageOptions = 409;
  Google_Protobuf_Method = 410;
  Google_Protobuf_MethodDescriptorProto = 411;
  Google_Protobuf_MethodOptions = 412;
  Google_Protobuf_Mixin = 413;
  Google_Protobuf_NullValue = 414;
  Google_Protobuf_OneofDescriptorProto = 415;
  Google_Protobuf_OneofOptions = 416;
  Google_Protobuf_Option = 417;
  Google_Protobuf_ServiceDescriptorProto = 418;
  Google_Protobuf_ServiceOptions = 419;
  Google_Protobuf_SourceCodeInfo = 420;
  Google_Protobuf_SourceContext = 421;
  Google_Protobuf_StringValue = 422;
  Google_Protobuf_Struct = 423;
  Google_Protobuf_Syntax = 424;
  Google_Protobuf_Timestamp = 425;
  Google_Protobuf_Type = 426;
  Google_Protobuf_UInt32Value = 427;
  Google_Protobuf_UInt64Value = 428;
  Google_Protobuf_UninterpretedOption = 429;
  Google_Protobuf_Value = 430;
  goPackage = 431;
  group = 432;
  groupFieldNumberStack = 433;
  groupSize = 434;
  guard = 435;
  hadOneofValue = 436;
  handleConflictingOneOf = 437;
  hasAggregateValue = 438;
  hasAllowAlias = 439;
  hasBegin = 440;
  hasCcEnableArenas = 441;
  hasCcGenericServices = 442;
  hasClientStreaming = 443;
  hasCsharpNamespace = 444;
  hasCtype = 445;
  hasDebugRedact = 446;
  hasDefaultValue = 447;
  hasDeprecated = 448;
  hasDeprecatedLegacyJsonFieldConflicts = 449;
  hasDeprecationWarning = 450;
  hasDoubleValue = 451;
  hasEdition = 452;
  hasEditionDeprecated = 453;
  hasEditionIntroduced = 454;
  hasEditionRemoved = 455;
  hasEnd = 456;
  hasEnforceNamingStyle = 457;
  hasEnumType = 458;
  hasExtendee = 459;
  hasExtensionValue = 460;
  hasFeatures = 461;
  hasFeatureSupport = 462;
  hasFieldPresence = 463;
  hasFixedFeatures = 464;
  hasFullName = 465;
  hasGoPackage = 466;
  hash = 467;
  Hashable = 468;
  hasher = 469;
  HashVisitor = 470;
  hasIdempotencyLevel = 471;
  hasIdentifierValue = 472;
  hasInputType = 473;
  hasIsExtension = 474;
  hasJavaGenerateEqualsAndHash = 475;
  hasJavaGenericServices = 476;
  hasJavaMultipleFiles = 477;
  hasJavaOuterClassname = 478;
  hasJavaPackage = 479;
  hasJavaStringCheckUtf8 = 480;
  hasJsonFormat = 481;
  hasJsonName = 482;
  hasJstype = 483;
  hasLabel = 484;
  hasLazy = 485;
  hasLeadingComments = 486;
  hasMapEntry = 487;
  hasMaximumEdition = 488;
  hasMessageEncoding = 489;
  hasMessageSetWireFormat = 490;
  hasMinimumEdition = 491;
  hasName = 492;
  hasNamePart = 493;
  hasNegativeIntValue = 494;
  hasNoStandardDescriptorAccessor = 495;
  hasNumber = 496;
  hasObjcClassPrefix = 497;
  hasOneofIndex = 498;
  hasOptimizeFor = 499;
  hasOptions = 500;
  hasOutputType = 501;
  hasOverridableFeatures = 502;
  hasPackage = 503;
  hasPacked = 504;
  hasPhpClassPrefix = 505;
  hasPhpMetadataNamespace = 506;
  hasPhpNamespace = 507;
  hasPositiveIntValue = 508;
  hasProto3Optional = 509;
  hasPyGenericServices = 510;
  hasRepeated = 511;
  hasRepeatedFieldEncoding = 512;
  hasReserved = 513;
  hasRetention = 514;
  hasRubyPackage = 515;
  hasSemantic = 516;
  hasServerStreaming = 517;
  hasSourceCodeInfo = 518;
  hasSourceContext = 519;
  hasSourceFile = 520;
  hasStart = 521;
  hasStringValue = 522;
  hasSwiftPrefix = 523;
  hasSyntax = 524;
  hasTrailingComments = 525;
  hasType = 526;
  hasTypeName = 527;
  hasUnverifiedLazy = 528;
  hasUtf8Validation = 529;
  hasValue = 530;
  hasVerification = 531;
  hasWeak = 532;
  hour = 533;
  i = 534;
  idempotencyLevel = 535;
  identifierValue = 536;
  if = 537;
  ignoreUnknownExtensionFields = 538;
  ignoreUnknownFields = 539;
  index = 540;
  init = 541;
  inout = 542;
  inputType = 543;
  insert = 544;
  Int = 545;
  Int32 = 546;
  Int32Value = 547;
  Int64 = 548;
  Int64Value = 549;
  Int8 = 550;
  integerLiteral = 551;
  IntegerLiteralType = 552;
  intern = 553;
  Internal = 554;
  InternalState = 555;
  intersect = 556;
  into = 557;
  ints = 558;
  invalidAnyTypeURL = 559;
  isA = 560;
  isEqual = 561;
  isEqualTo = 562;
  isExtension = 563;
  isInitialized = 564;
  isNegative = 565;
  isPathValid = 566;
  isValid = 567;
  itemTagsEncodedSize = 568;
  iterator = 569;
  javaGenerateEqualsAndHash = 570;
  javaGenericServices = 571;
  javaMultipleFiles = 572;
  javaOuterClassname = 573;
  javaPackage = 574;
  javaStringCheckUtf8 = 575;
  JSONDecoder = 576;
  JSONDecoding = 577;
  JSONDecodingError = 578;
  JSONDecodingOptions = 579;
  jsonEncoder = 580;
  JSONEncoding = 581;
  JSONEncodingError = 582;
  JSONEncodingOptions = 583;
  JSONEncodingVisitor = 584;
  jsonFormat = 585;
  JSONMapEncodingVisitor = 586;
  jsonName = 587;
  jsonPath = 588;
  jsonPaths = 589;
  JSONScanner = 590;
  jsonString = 591;
  jsonText = 592;
  jsonUTF8Bytes = 593;
  jsonUTF8Data = 594;
  jstype = 595;
  k = 596;
  kChunkSize = 597;
  Key = 598;
  keyField = 599;
  keyFieldOpt = 600;
  KeyType = 601;
  kind = 602;
  l = 603;
  label = 604;
  lazy = 605;
  leadingComments = 606;
  leadingDetachedComments = 607;
  length = 608;
  lessThan = 609;
  let = 610;
  lhs = 611;
  line = 612;
  list = 613;
  listOfMessages = 614;
  listValue = 615;
  littleEndian = 616;
  load = 617;
  localHasher = 618;
  location = 619;
  M = 620;
  major = 621;
  makeAsyncIterator = 622;
  makeIterator = 623;
  malformedLength = 624;
  mapEntry = 625;
  MapKeyType = 626;
  mapToMessages = 627;
  MapValueType = 628;
  mapVisitor = 629;
  mask = 630;
  maximumEdition = 631;
  mdayStart = 632;
  merge = 633;
  MergeOptions = 634;
  message = 635;
  messageDepthLimit = 636;
  messageEncoding = 637;
  MessageExtension = 638;
  MessageImplementationBase = 639;
  MessageOptions = 640;
  MessageSet = 641;
  messageSetWireFormat = 642;
  messageSize = 643;
  messageType = 644;
  Method = 645;
  MethodDescriptorProto = 646;
  MethodOptions = 647;
  methods = 648;
  min = 649;
  minimumEdition = 650;
  minor = 651;
  Mixin = 652;
  mixins = 653;
  modify = 654;
  month = 655;
  msgExtension = 656;
  mutating = 657;
  n = 658;
  name = 659;
  NameDescription = 660;
  NameMap = 661;
  NamePart = 662;
  names = 663;
  nanos = 664;
  negativeIntValue = 665;
  nestedType = 666;
  newExtensible = 667;
  newL = 668;
  newList = 669;
  newMessage = 670;
  newValue = 671;
  next = 672;
  nextByte = 673;
  nextFieldNumber = 674;
  nextVarInt = 675;
  nil = 676;
  nilLiteral = 677;
  noBytesAvailable = 678;
  noStandardDescriptorAccessor = 679;
  nullValue = 680;
  number = 681;
  numberValue = 682;
  objcClassPrefix = 683;
  of = 684;
  oneofDecl = 685;
  OneofDescriptorProto = 686;
  oneofIndex = 687;
  OneofOptions = 688;
  oneofs = 689;
  OneOf_Kind = 690;
  optimizeFor = 691;
  OptimizeMode = 692;
  Option = 693;
  OptionalEnumExtensionField = 694;
  OptionalExtensionField = 695;
  OptionalGroupExtensionField = 696;
  OptionalMessageExtensionField = 697;
  OptionRetention = 698;
  options = 699;
  OptionTargetType = 700;
  other = 701;
  others = 702;
  out = 703;
  outputType = 704;
  overridableFeatures = 705;
  p = 706;
  package = 707;
  packed = 708;
  PackedEnumExtensionField = 709;
  PackedExtensionField = 710;
  padding = 711;
  parent = 712;
  parse = 713;
  partial = 714;
  path = 715;
  PathDecoder = 716;
  PathDecodingError = 717;
  paths = 718;
  PathVisitor = 719;
  payload = 720;
  payloadSize = 721;
  phpClassPrefix = 722;
  phpMetadataNamespace = 723;
  phpNamespace = 724;
  pos = 725;
  positiveIntValue = 726;
  prefix = 727;
  preserveProtoFieldNames = 728;
  preTraverse = 729;
  prevPath = 730;
  printUnknownFields = 731;
  proto2 = 732;
  proto3DefaultValue = 733;
  proto3Optional = 734;
  ProtobufAPIVersionCheck = 735;
  ProtobufAPIVersion_2 = 736;
  ProtobufBool = 737;
  ProtobufBytes = 738;
  ProtobufDouble = 739;
  ProtobufEnumMap = 740;
  protobufExtension = 741;
  ProtobufFixed32 = 742;
  ProtobufFixed64 = 743;
  ProtobufFloat = 744;
  ProtobufInt32 = 745;
  ProtobufInt64 = 746;
  ProtobufMap = 747;
  ProtobufMessageMap = 748;
  ProtobufSFixed32 = 749;
  ProtobufSFixed64 = 750;
  ProtobufSInt32 = 751;
  ProtobufSInt64 = 752;
  ProtobufString = 753;
  ProtobufUInt32 = 754;
  ProtobufUInt64 = 755;
  protobuf_extensionFieldValues = 756;
  protobuf_fieldNumber = 757;
  protobuf_generated_isEqualTo = 758;
  protobuf_nameMap = 759;
  protobuf_newField = 760;
  protobuf_package = 761;
  protocol = 762;
  protoFieldName = 763;
  protoMessageName = 764;
  ProtoNameProviding = 765;
  protoPaths = 766;
  public = 767;
  publicDependency = 768;
  putBoolValue = 769;
  putBytesValue = 770;
  putDoubleValue = 771;
  putEnumValue = 772;
  putFixedUInt32 = 773;
  putFixedUInt64 = 774;
  putFloatValue = 775;
  putInt64 = 776;
  putStringValue = 777;
  putUInt64 = 778;
  putUInt64Hex = 779;
  putVarInt = 780;
  putZigZagVarInt = 781;
  pyGenericServices = 782;
  R = 783;
  rawChars = 784;
  RawRepresentable = 785;
  RawValue = 786;
  read4HexDigits = 787;
  readBytes = 788;
  register = 789;
  removingAllFieldsOf = 790;
  repeated = 791;
  RepeatedEnumExtensionField = 792;
  RepeatedExtensionField = 793;
  repeatedFieldEncoding = 794;
  RepeatedGroupExtensionField = 795;
  RepeatedMessageExtensionField = 796;
  repeating = 797;
  replaceRepeatedFields = 798;
  requestStreaming = 799;
  requestTypeURL = 800;
  requiredSize = 801;
  responseStreaming = 802;
  responseTypeURL = 803;
  result = 804;
  retention = 805;
  rethrows = 806;
  return = 807;
  ReturnType = 808;
  revision = 809;
  rhs = 810;
  root = 811;
  rubyPackage = 812;
  s = 813;
  sawBackslash = 814;
  sawSection4Characters = 815;
  sawSection5Characters = 816;
  scan = 817;
  scanner = 818;
  seconds = 819;
  self = 820;
  semantic = 821;
  Sendable = 822;
  separator = 823;
  serialize = 824;
  serializedBytes = 825;
  serializedData = 826;
  serializedSize = 827;
  serverStreaming = 828;
  service = 829;
  ServiceDescriptorProto = 830;
  ServiceOptions = 831;
  set = 832;
  setExtensionValue = 833;
  shift = 834;
  SimpleExtensionMap = 835;
  size = 836;
  sizer = 837;
  source = 838;
  sourceCodeInfo = 839;
  sourceContext = 840;
  sourceEncoding = 841;
  sourceFile = 842;
  SourceLocation = 843;
  span = 844;
  split = 845;
  start = 846;
  startArray = 847;
  startArrayObject = 848;
  startField = 849;
  startIndex = 850;
  startMessageField = 851;
  startObject = 852;
  startRegularField = 853;
  state = 854;
  static = 855;
  StaticString = 856;
  storage = 857;
  String = 858;
  stringLiteral = 859;
  StringLiteralType = 860;
  stringResult = 861;
  stringValue = 862;
  struct = 863;
  structValue = 864;
  subDecoder = 865;
  subscript = 866;
  subtract = 867;
  subVisitor = 868;
  Swift = 869;
  swiftPrefix = 870;
  SwiftProtobufContiguousBytes = 871;
  SwiftProtobufError = 872;
  syntax = 873;
  T = 874;
  tag = 875;
  targets = 876;
  terminator = 877;
  testDecoder = 878;
  text = 879;
  textDecoder = 880;
  TextFormatDecoder = 881;
  TextFormatDecodingError = 882;
  TextFormatDecodingOptions = 883;
  TextFormatEncodingOptions = 884;
  TextFormatEncodingVisitor = 885;
  textFormatString = 886;
  throwOrIgnore = 887;
  throws = 888;
  timeInterval = 889;
  timeIntervalSince1970 = 890;
  timeIntervalSinceReferenceDate = 891;
  Timestamp = 892;
  tmp = 893;
  tooLarge = 894;
  total = 895;
  totalArrayDepth = 896;
  totalSize = 897;
  trailingComments = 898;
  traverse = 899;
  trim = 900;
  true = 901;
  try = 902;
  type = 903;
  typealias = 904;
  TypeEnum = 905;
  typeName = 906;
  typePrefix = 907;
  typeStart = 908;
  typeUnknown = 909;
  typeURL = 910;
  UInt32 = 911;
  UInt32Value = 912;
  UInt64 = 913;
  UInt64Value = 914;
  UInt8 = 915;
  unchecked = 916;
  unicodeScalarLiteral = 917;
  UnicodeScalarLiteralType = 918;
  unicodeScalars = 919;
  UnicodeScalarView = 920;
  uninterpretedOption = 921;
  union = 922;
  uniqueStorage = 923;
  unknown = 924;
  unknownFields = 925;
  UnknownStorage = 926;
  unpackTo = 927;
  UnsafeBufferPointer = 928;
  UnsafeMutablePointer = 929;
  UnsafeMutableRawBufferPointer = 930;
  UnsafeRawBufferPointer = 931;
  UnsafeRawPointer = 932;
  unverifiedLazy = 933;
  updatedOptions = 934;
  url = 935;
  useDeterministicOrdering = 936;
  utf8 = 937;
  utf8Ptr = 938;
  utf8ToDouble = 939;
  utf8Validation = 940;
  UTF8View = 941;
  v = 942;
  value = 943;
  valueField = 944;
  values = 945;
  ValueType = 946;
  var = 947;
  verification = 948;
  VerificationState = 949;
  Version = 950;
  versionString = 951;
  visitExtensionFields = 952;
  visitExtensionFieldsAsMessageSet = 953;
  visitMapField = 954;
  visitor = 955;
  visitPacked = 956;
  visitPackedBoolField = 957;
  visitPackedDoubleField = 958;
  visitPackedEnumField = 959;
  visitPackedFixed32Field = 960;
  visitPackedFixed64Field = 961;
  visitPackedFloatField = 962;
  visitPackedInt32Field = 963;
  visitPackedInt64Field = 964;
  visitPackedSFixed32Field = 965;
  visitPackedSFixed64Field = 966;
  visitPackedSInt32Field = 967;
  visitPackedSInt64Field = 968;
  visitPackedUInt32Field = 969;
  visitPackedUInt64Field = 970;
  visitRepeated = 971;
  visitRepeatedBoolField = 972;
  visitRepeatedBytesField = 973;
  visitRepeatedDoubleField = 974;
  visitRepeatedEnumField = 975;
  visitRepeatedFixed32Field = 976;
  visitRepeatedFixed64Field = 977;
  visitRepeatedFloatField = 978;
  visitRepeatedGroupField = 979;
  visitRepeatedInt32Field = 980;
  visitRepeatedInt64Field = 981;
  visitRepeatedMessageField = 982;
  visitRepeatedSFixed32Field = 983;
  visitRepeatedSFixed64Field = 984;
  visitRepeatedSInt32Field = 985;
  visitRepeatedSInt64Field = 986;
  visitRepeatedStringField = 987;
  visitRepeatedUInt32Field = 988;
  visitRepeatedUInt64Field = 989;
  visitSingular = 990;
  visitSingularBoolField = 991;
  visitSingularBytesField = 992;
  visitSingularDoubleField = 993;
  visitSingularEnumField = 994;
  visitSingularFixed32Field = 995;
  visitSingularFixed64Field = 996;
  visitSingularFloatField = 997;
  visitSingularGroupField = 998;
  visitSingularInt32Field = 999;
  visitSingularInt64Field = 1000;
  visitSingularMessageField = 1001;
  visitSingularSFixed32Field = 1002;
  visitSingularSFixed64Field = 1003;
  visitSingularSInt32Field = 1004;
  visitSingularSInt64Field = 1005;
  visitSingularStringField = 1006;
  visitSingularUInt32Field = 1007;
  visitSingularUInt64Field = 1008;
  visitUnknown = 1009;
  wasDecoded = 1010;
  weak = 1011;
  weakDependency = 1012;
  where = 1013;
  wireFormat = 1014;
  with = 1015;
  withUnsafeBytes = 1016;
  withUnsafeMutableBytes = 1017;
  work = 1018;
  Wrapped = 1019;
  WrappedType = 1020;
  wrappedValue = 1021;
  written = 1022;
  yday = 1023;
}
