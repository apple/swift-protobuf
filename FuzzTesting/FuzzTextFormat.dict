# To generate the descriptor set.
#   ../protobuf/src/protoc -o ~/fuzz.bin -I Protos Protos/fuzz_testing.proto

# Collect the json_names and make them keys:
#   cat ~/fuzz.bin \
#     | ../protobuf/src/protoc \
#         --decode=google.protobuf.FileDescriptorSet \
#         -I ../protobuf/src \
#         ../protobuf/src/google/protobuf/descriptor.proto \
#     | sed -n -E 's/^ *name: "(.*_.*)"/"\1:"/p' \
#     | sort -u
"RepeatedGroup_ext:"
"SingularGroup_ext:"
"fuzz_testing.proto:"
"group_field:"
"map_bool_AnEnum:"
"map_bool_Message:"
"map_bool_bool:"
"map_bool_bytes:"
"map_bool_double:"
"map_bool_fixed32:"
"map_bool_fixed64:"
"map_bool_float:"
"map_bool_int32:"
"map_bool_int64:"
"map_bool_sfixed32:"
"map_bool_sfixed64:"
"map_bool_sint32:"
"map_bool_sint64:"
"map_bool_string:"
"map_bool_uint32:"
"map_bool_uint64:"
"map_fixed32_AnEnum:"
"map_fixed32_Message:"
"map_fixed32_bool:"
"map_fixed32_bytes:"
"map_fixed32_double:"
"map_fixed32_fixed32:"
"map_fixed32_fixed64:"
"map_fixed32_float:"
"map_fixed32_int32:"
"map_fixed32_int64:"
"map_fixed32_sfixed32:"
"map_fixed32_sfixed64:"
"map_fixed32_sint32:"
"map_fixed32_sint64:"
"map_fixed32_string:"
"map_fixed32_uint32:"
"map_fixed32_uint64:"
"map_fixed64_AnEnum:"
"map_fixed64_Message:"
"map_fixed64_bool:"
"map_fixed64_bytes:"
"map_fixed64_double:"
"map_fixed64_fixed32:"
"map_fixed64_fixed64:"
"map_fixed64_float:"
"map_fixed64_int32:"
"map_fixed64_int64:"
"map_fixed64_sfixed32:"
"map_fixed64_sfixed64:"
"map_fixed64_sint32:"
"map_fixed64_sint64:"
"map_fixed64_string:"
"map_fixed64_uint32:"
"map_fixed64_uint64:"
"map_int32_AnEnum:"
"map_int32_Message:"
"map_int32_bool:"
"map_int32_bytes:"
"map_int32_double:"
"map_int32_fixed32:"
"map_int32_fixed64:"
"map_int32_float:"
"map_int32_int32:"
"map_int32_int64:"
"map_int32_sfixed32:"
"map_int32_sfixed64:"
"map_int32_sint32:"
"map_int32_sint64:"
"map_int32_string:"
"map_int32_uint32:"
"map_int32_uint64:"
"map_int64_AnEnum:"
"map_int64_Message:"
"map_int64_bool:"
"map_int64_bytes:"
"map_int64_double:"
"map_int64_fixed32:"
"map_int64_fixed64:"
"map_int64_float:"
"map_int64_int32:"
"map_int64_int64:"
"map_int64_sfixed32:"
"map_int64_sfixed64:"
"map_int64_sint32:"
"map_int64_sint64:"
"map_int64_string:"
"map_int64_uint32:"
"map_int64_uint64:"
"map_sfixed32_AnEnum:"
"map_sfixed32_Message:"
"map_sfixed32_bool:"
"map_sfixed32_bytes:"
"map_sfixed32_double:"
"map_sfixed32_fixed32:"
"map_sfixed32_fixed64:"
"map_sfixed32_float:"
"map_sfixed32_int32:"
"map_sfixed32_int64:"
"map_sfixed32_sfixed32:"
"map_sfixed32_sfixed64:"
"map_sfixed32_sint32:"
"map_sfixed32_sint64:"
"map_sfixed32_string:"
"map_sfixed32_uint32:"
"map_sfixed32_uint64:"
"map_sfixed64_AnEnum:"
"map_sfixed64_Message:"
"map_sfixed64_bool:"
"map_sfixed64_bytes:"
"map_sfixed64_double:"
"map_sfixed64_fixed32:"
"map_sfixed64_fixed64:"
"map_sfixed64_float:"
"map_sfixed64_int32:"
"map_sfixed64_int64:"
"map_sfixed64_sfixed32:"
"map_sfixed64_sfixed64:"
"map_sfixed64_sint32:"
"map_sfixed64_sint64:"
"map_sfixed64_string:"
"map_sfixed64_uint32:"
"map_sfixed64_uint64:"
"map_sint32_AnEnum:"
"map_sint32_Message:"
"map_sint32_bool:"
"map_sint32_bytes:"
"map_sint32_double:"
"map_sint32_fixed32:"
"map_sint32_fixed64:"
"map_sint32_float:"
"map_sint32_int32:"
"map_sint32_int64:"
"map_sint32_sfixed32:"
"map_sint32_sfixed64:"
"map_sint32_sint32:"
"map_sint32_sint64:"
"map_sint32_string:"
"map_sint32_uint32:"
"map_sint32_uint64:"
"map_sint64_AnEnum:"
"map_sint64_Message:"
"map_sint64_bool:"
"map_sint64_bytes:"
"map_sint64_double:"
"map_sint64_fixed32:"
"map_sint64_fixed64:"
"map_sint64_float:"
"map_sint64_int32:"
"map_sint64_int64:"
"map_sint64_sfixed32:"
"map_sint64_sfixed64:"
"map_sint64_sint32:"
"map_sint64_sint64:"
"map_sint64_string:"
"map_sint64_uint32:"
"map_sint64_uint64:"
"map_uint32_AnEnum:"
"map_uint32_Message:"
"map_uint32_bool:"
"map_uint32_bytes:"
"map_uint32_double:"
"map_uint32_fixed32:"
"map_uint32_fixed64:"
"map_uint32_float:"
"map_uint32_int32:"
"map_uint32_int64:"
"map_uint32_sfixed32:"
"map_uint32_sfixed64:"
"map_uint32_sint32:"
"map_uint32_sint64:"
"map_uint32_string:"
"map_uint32_uint32:"
"map_uint32_uint64:"
"map_uint64_AnEnum:"
"map_uint64_Message:"
"map_uint64_bool:"
"map_uint64_bytes:"
"map_uint64_double:"
"map_uint64_fixed32:"
"map_uint64_fixed64:"
"map_uint64_float:"
"map_uint64_int32:"
"map_uint64_int64:"
"map_uint64_sfixed32:"
"map_uint64_sfixed64:"
"map_uint64_sint32:"
"map_uint64_sint64:"
"map_uint64_string:"
"map_uint64_uint32:"
"map_uint64_uint64:"
"oneof_bool:"
"oneof_bytes:"
"oneof_double:"
"oneof_enum:"
"oneof_fixed32:"
"oneof_fixed64:"
"oneof_float:"
"oneof_int32:"
"oneof_int64:"
"oneof_message:"
"oneof_sfixed32:"
"oneof_sfixed64:"
"oneof_sint32:"
"oneof_sint64:"
"oneof_string:"
"oneof_uint32:"
"oneof_uint64:"
"repeated_bool:"
"repeated_bool_ext:"
"repeated_bytes:"
"repeated_bytes_ext:"
"repeated_double:"
"repeated_double_ext:"
"repeated_enum:"
"repeated_enum_ext:"
"repeated_fixed32:"
"repeated_fixed32_ext:"
"repeated_fixed64:"
"repeated_fixed64_ext:"
"repeated_float:"
"repeated_float_ext:"
"repeated_int32:"
"repeated_int32_ext:"
"repeated_int64:"
"repeated_int64_ext:"
"repeated_message:"
"repeated_message_ext:"
"repeated_message_set:"
"repeated_packed_bool:"
"repeated_packed_bool_ext:"
"repeated_packed_double:"
"repeated_packed_double_ext:"
"repeated_packed_enum:"
"repeated_packed_enum_ext:"
"repeated_packed_fixed32:"
"repeated_packed_fixed32_ext:"
"repeated_packed_fixed64:"
"repeated_packed_fixed64_ext:"
"repeated_packed_float:"
"repeated_packed_float_ext:"
"repeated_packed_int32:"
"repeated_packed_int32_ext:"
"repeated_packed_int64:"
"repeated_packed_int64_ext:"
"repeated_packed_sfixed32:"
"repeated_packed_sfixed32_ext:"
"repeated_packed_sfixed64:"
"repeated_packed_sfixed64_ext:"
"repeated_packed_sint32:"
"repeated_packed_sint32_ext:"
"repeated_packed_sint64:"
"repeated_packed_sint64_ext:"
"repeated_packed_uint32:"
"repeated_packed_uint32_ext:"
"repeated_packed_uint64:"
"repeated_packed_uint64_ext:"
"repeated_sfixed32:"
"repeated_sfixed32_ext:"
"repeated_sfixed64:"
"repeated_sfixed64_ext:"
"repeated_sint32:"
"repeated_sint32_ext:"
"repeated_sint64:"
"repeated_sint64_ext:"
"repeated_string:"
"repeated_string_ext:"
"repeated_uint32:"
"repeated_uint32_ext:"
"repeated_uint64:"
"repeated_uint64_ext:"
"repeatedgroup_ext:"
"singular_bool:"
"singular_bool_ext:"
"singular_bytes:"
"singular_bytes_ext:"
"singular_double:"
"singular_double_ext:"
"singular_enum:"
"singular_enum_ext:"
"singular_fixed32:"
"singular_fixed32_ext:"
"singular_fixed64:"
"singular_fixed64_ext:"
"singular_float:"
"singular_float_ext:"
"singular_int32:"
"singular_int32_ext:"
"singular_int64:"
"singular_int64_ext:"
"singular_message:"
"singular_message_ext:"
"singular_message_set:"
"singular_sfixed32:"
"singular_sfixed32_ext:"
"singular_sfixed64:"
"singular_sfixed64_ext:"
"singular_sint32:"
"singular_sint32_ext:"
"singular_sint64:"
"singular_sint64_ext:"
"singular_string:"
"singular_string_ext:"
"singular_uint32:"
"singular_uint32_ext:"
"singular_uint64:"
"singular_uint64_ext:"
"singulargroup_ext:"
"wkt_any:"
"wkt_api:"
"wkt_bool_value:"
"wkt_bytes_value:"
"wkt_double_value:"
"wkt_duration:"
"wkt_empty:"
"wkt_field_mask:"
"wkt_float_value:"
"wkt_int32_value:"
"wkt_int64_value:"
"wkt_source_context:"
"wkt_string_value:"
"wkt_struct:"
"wkt_timestamp:"
"wkt_type:"
"wkt_uint32_value:"
"wkt_uint64_value:"

# Some fragments
"[]"
"["
"]"
"{}"
"{"
"}"
"<>"
"<"
">"
"\""
"\"\""
"\"foo\""
"'"
"''"
"'bar'"
"\\"
"\\b"
"\\f"
"\\n"
"\\r"
"\\t"
"\\u1234"
"\\x12"
"\\0"
"0"
"1"
"1.1"
","
"true"
"false"
