/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: google/protobuf/descriptor.proto
 *
 */

//  Protocol Buffers - Google's data interchange format
//  Copyright 2008 Google Inc.  All rights reserved.
//  https://developers.google.com/protocol-buffers/
// 
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//      * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//      * Redistributions in binary form must reproduce the above
//  copyright notice, this list of conditions and the following disclaimer
//  in the documentation and/or other materials provided with the
//  distribution.
//      * Neither the name of Google Inc. nor the names of its
//  contributors may be used to endorse or promote products derived from
//  this software without specific prior written permission.
// 
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
//  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
//  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
//  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
//  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
//  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
//  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//  Author: kenton@google.com (Kenton Varda)
//   Based on original Protocol Buffers design by
//   Sanjay Ghemawat, Jeff Dean, and others.
// 
//  The messages in this file describe the definitions found in .proto files.
//  A valid .proto file can be translated directly to a FileDescriptorProto
//  without any other information (e.g. without reading its imports).

import Foundation
import SwiftProtobuf


///   The protocol compiler can output a FileDescriptorSet containing the .proto
///   files it parses.
public struct Google_Protobuf_FileDescriptorSet: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Google_Protobuf_FileDescriptorSet"}
  public var protoMessageName: String {return "FileDescriptorSet"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "file": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "file": 1,
  ]}

  var unknown = ProtobufUnknownStorage()

  public var file: [Google_Protobuf_FileDescriptorProto] = []

  public init() {}

  public init(file: [Google_Protobuf_FileDescriptorProto] = [])
  {
    if !file.isEmpty {
      self.file = file
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_FileDescriptorProto.self, value: &file)
    default:
      handled = false
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !file.isEmpty {
      try visitor.visitRepeatedMessageField(value: file, protoFieldNumber: 1, protoFieldName: "file", jsonFieldName: "file", swiftFieldName: "file")
    }
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_FileDescriptorSet) -> Bool {
    if file != other.file {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

///   Describes a complete .proto file.
public struct Google_Protobuf_FileDescriptorProto: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Google_Protobuf_FileDescriptorProto"}
  public var protoMessageName: String {return "FileDescriptorProto"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "package": 2,
    "dependency": 3,
    "publicDependency": 10,
    "weakDependency": 11,
    "messageType": 4,
    "enumType": 5,
    "service": 6,
    "extension": 7,
    "options": 8,
    "sourceCodeInfo": 9,
    "syntax": 12,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "package": 2,
    "dependency": 3,
    "public_dependency": 10,
    "weak_dependency": 11,
    "message_type": 4,
    "enum_type": 5,
    "service": 6,
    "extension": 7,
    "options": 8,
    "source_code_info": 9,
    "syntax": 12,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Google_Protobuf_FileDescriptorProto
    var unknown = ProtobufUnknownStorage()
    var _name: String? = nil
    var _package: String? = nil
    var _dependency: [String] = []
    var _publicDependency: [Int32] = []
    var _weakDependency: [Int32] = []
    var _messageType: [Google_Protobuf_DescriptorProto] = []
    var _enumType: [Google_Protobuf_EnumDescriptorProto] = []
    var _service: [Google_Protobuf_ServiceDescriptorProto] = []
    var _extension_p: [Google_Protobuf_FieldDescriptorProto] = []
    var _options: Google_Protobuf_FileOptions? = nil
    var _sourceCodeInfo: Google_Protobuf_SourceCodeInfo? = nil
    var _syntax: String? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &_package)
      case 3: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &_dependency)
      case 10: handled = try setter.decodeRepeatedField(fieldType: ProtobufInt32.self, value: &_publicDependency)
      case 11: handled = try setter.decodeRepeatedField(fieldType: ProtobufInt32.self, value: &_weakDependency)
      case 4: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_DescriptorProto.self, value: &_messageType)
      case 5: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_EnumDescriptorProto.self, value: &_enumType)
      case 6: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_ServiceDescriptorProto.self, value: &_service)
      case 7: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_FieldDescriptorProto.self, value: &_extension_p)
      case 8: handled = try setter.decodeOptionalMessageField(fieldType: Google_Protobuf_FileOptions.self, value: &_options)
      case 9: handled = try setter.decodeOptionalMessageField(fieldType: Google_Protobuf_SourceCodeInfo.self, value: &_sourceCodeInfo)
      case 12: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &_syntax)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if let v = _name {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if let v = _package {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 2, protoFieldName: "package", jsonFieldName: "package", swiftFieldName: "package")
      }
      if !_dependency.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: _dependency, protoFieldNumber: 3, protoFieldName: "dependency", jsonFieldName: "dependency", swiftFieldName: "dependency")
      }
      if !_messageType.isEmpty {
        try visitor.visitRepeatedMessageField(value: _messageType, protoFieldNumber: 4, protoFieldName: "message_type", jsonFieldName: "messageType", swiftFieldName: "messageType")
      }
      if !_enumType.isEmpty {
        try visitor.visitRepeatedMessageField(value: _enumType, protoFieldNumber: 5, protoFieldName: "enum_type", jsonFieldName: "enumType", swiftFieldName: "enumType")
      }
      if !_service.isEmpty {
        try visitor.visitRepeatedMessageField(value: _service, protoFieldNumber: 6, protoFieldName: "service", jsonFieldName: "service", swiftFieldName: "service")
      }
      if !_extension_p.isEmpty {
        try visitor.visitRepeatedMessageField(value: _extension_p, protoFieldNumber: 7, protoFieldName: "extension", jsonFieldName: "extension", swiftFieldName: "extension_p")
      }
      if let v = _options {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 8, protoFieldName: "options", jsonFieldName: "options", swiftFieldName: "options")
      }
      if let v = _sourceCodeInfo {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 9, protoFieldName: "source_code_info", jsonFieldName: "sourceCodeInfo", swiftFieldName: "sourceCodeInfo")
      }
      if !_publicDependency.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufInt32.self, value: _publicDependency, protoFieldNumber: 10, protoFieldName: "public_dependency", jsonFieldName: "publicDependency", swiftFieldName: "publicDependency")
      }
      if !_weakDependency.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufInt32.self, value: _weakDependency, protoFieldNumber: 11, protoFieldName: "weak_dependency", jsonFieldName: "weakDependency", swiftFieldName: "weakDependency")
      }
      if let v = _syntax {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 12, protoFieldName: "syntax", jsonFieldName: "syntax", swiftFieldName: "syntax")
      }
      unknown.traverse(visitor: &visitor)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if ((_name != nil || other._name != nil) && (_name == nil || other._name == nil || _name! != other._name!)) {return false}
      if ((_package != nil || other._package != nil) && (_package == nil || other._package == nil || _package! != other._package!)) {return false}
      if _dependency != other._dependency {return false}
      if _publicDependency != other._publicDependency {return false}
      if _weakDependency != other._weakDependency {return false}
      if _messageType != other._messageType {return false}
      if _enumType != other._enumType {return false}
      if _service != other._service {return false}
      if _extension_p != other._extension_p {return false}
      if ((_options != nil || other._options != nil) && (_options == nil || other._options == nil || _options! != other._options!)) {return false}
      if ((_sourceCodeInfo != nil || other._sourceCodeInfo != nil) && (_sourceCodeInfo == nil || other._sourceCodeInfo == nil || _sourceCodeInfo! != other._sourceCodeInfo!)) {return false}
      if ((_syntax != nil || other._syntax != nil) && (_syntax == nil || other._syntax == nil || _syntax! != other._syntax!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone.unknown = unknown
      clone._name = _name
      clone._package = _package
      clone._dependency = _dependency
      clone._publicDependency = _publicDependency
      clone._weakDependency = _weakDependency
      clone._messageType = _messageType
      clone._enumType = _enumType
      clone._service = _service
      clone._extension_p = _extension_p
      clone._options = _options
      clone._sourceCodeInfo = _sourceCodeInfo
      clone._syntax = _syntax
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   file name, relative to root of source tree
  public var name: String? {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  ///   e.g. "foo", "foo.bar", etc.
  public var package: String? {
    get {return _storage._package}
    set {_uniqueStorage()._package = newValue}
  }

  ///   Names of files imported by this file.
  public var dependency: [String] {
    get {return _storage._dependency}
    set {_uniqueStorage()._dependency = newValue}
  }

  ///   Indexes of the public imported files in the dependency list above.
  public var publicDependency: [Int32] {
    get {return _storage._publicDependency}
    set {_uniqueStorage()._publicDependency = newValue}
  }

  ///   Indexes of the weak imported files in the dependency list.
  ///   For Google-internal migration only. Do not use.
  public var weakDependency: [Int32] {
    get {return _storage._weakDependency}
    set {_uniqueStorage()._weakDependency = newValue}
  }

  ///   All top-level definitions in this file.
  public var messageType: [Google_Protobuf_DescriptorProto] {
    get {return _storage._messageType}
    set {_uniqueStorage()._messageType = newValue}
  }

  public var enumType: [Google_Protobuf_EnumDescriptorProto] {
    get {return _storage._enumType}
    set {_uniqueStorage()._enumType = newValue}
  }

  public var service: [Google_Protobuf_ServiceDescriptorProto] {
    get {return _storage._service}
    set {_uniqueStorage()._service = newValue}
  }

  public var extension_p: [Google_Protobuf_FieldDescriptorProto] {
    get {return _storage._extension_p}
    set {_uniqueStorage()._extension_p = newValue}
  }

  public var options: Google_Protobuf_FileOptions? {
    get {return _storage._options}
    set {_uniqueStorage()._options = newValue}
  }

  ///   This field contains optional information about the original source code.
  ///   You may safely remove this entire field without harming runtime
  ///   functionality of the descriptors -- the information is needed only by
  ///   development tools.
  public var sourceCodeInfo: Google_Protobuf_SourceCodeInfo? {
    get {return _storage._sourceCodeInfo}
    set {_uniqueStorage()._sourceCodeInfo = newValue}
  }

  ///   The syntax of the proto file.
  ///   The supported values are "proto2" and "proto3".
  public var syntax: String? {
    get {return _storage._syntax}
    set {_uniqueStorage()._syntax = newValue}
  }

  public init() {}

  public init(name: String? = nil,
    package: String? = nil,
    dependency: [String] = [],
    publicDependency: [Int32] = [],
    weakDependency: [Int32] = [],
    messageType: [Google_Protobuf_DescriptorProto] = [],
    enumType: [Google_Protobuf_EnumDescriptorProto] = [],
    service: [Google_Protobuf_ServiceDescriptorProto] = [],
    extension_p: [Google_Protobuf_FieldDescriptorProto] = [],
    options: Google_Protobuf_FileOptions? = nil,
    sourceCodeInfo: Google_Protobuf_SourceCodeInfo? = nil,
    syntax: String? = nil)
  {
    let storage = _uniqueStorage()
    storage._name = name
    storage._package = package
    if !dependency.isEmpty {
      storage._dependency = dependency
    }
    if !publicDependency.isEmpty {
      storage._publicDependency = publicDependency
    }
    if !weakDependency.isEmpty {
      storage._weakDependency = weakDependency
    }
    if !messageType.isEmpty {
      storage._messageType = messageType
    }
    if !enumType.isEmpty {
      storage._enumType = enumType
    }
    if !service.isEmpty {
      storage._service = service
    }
    if !extension_p.isEmpty {
      storage._extension_p = extension_p
    }
    storage._options = options
    storage._sourceCodeInfo = sourceCodeInfo
    storage._syntax = syntax
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_FileDescriptorProto) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Describes a message type.
public struct Google_Protobuf_DescriptorProto: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Google_Protobuf_DescriptorProto"}
  public var protoMessageName: String {return "DescriptorProto"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "field": 2,
    "extension": 6,
    "nestedType": 3,
    "enumType": 4,
    "extensionRange": 5,
    "oneofDecl": 8,
    "options": 7,
    "reservedRange": 9,
    "reservedName": 10,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "field": 2,
    "extension": 6,
    "nested_type": 3,
    "enum_type": 4,
    "extension_range": 5,
    "oneof_decl": 8,
    "options": 7,
    "reserved_range": 9,
    "reserved_name": 10,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Google_Protobuf_DescriptorProto
    var unknown = ProtobufUnknownStorage()
    var _name: String? = nil
    var _field: [Google_Protobuf_FieldDescriptorProto] = []
    var _extension_p: [Google_Protobuf_FieldDescriptorProto] = []
    var _nestedType: [Google_Protobuf_DescriptorProto] = []
    var _enumType: [Google_Protobuf_EnumDescriptorProto] = []
    var _extensionRange: [Google_Protobuf_DescriptorProto.ExtensionRange] = []
    var _oneofDecl: [Google_Protobuf_OneofDescriptorProto] = []
    var _options: Google_Protobuf_MessageOptions? = nil
    var _reservedRange: [Google_Protobuf_DescriptorProto.ReservedRange] = []
    var _reservedName: [String] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_FieldDescriptorProto.self, value: &_field)
      case 6: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_FieldDescriptorProto.self, value: &_extension_p)
      case 3: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_DescriptorProto.self, value: &_nestedType)
      case 4: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_EnumDescriptorProto.self, value: &_enumType)
      case 5: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_DescriptorProto.ExtensionRange.self, value: &_extensionRange)
      case 8: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_OneofDescriptorProto.self, value: &_oneofDecl)
      case 7: handled = try setter.decodeOptionalMessageField(fieldType: Google_Protobuf_MessageOptions.self, value: &_options)
      case 9: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_DescriptorProto.ReservedRange.self, value: &_reservedRange)
      case 10: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &_reservedName)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if let v = _name {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if !_field.isEmpty {
        try visitor.visitRepeatedMessageField(value: _field, protoFieldNumber: 2, protoFieldName: "field", jsonFieldName: "field", swiftFieldName: "field")
      }
      if !_nestedType.isEmpty {
        try visitor.visitRepeatedMessageField(value: _nestedType, protoFieldNumber: 3, protoFieldName: "nested_type", jsonFieldName: "nestedType", swiftFieldName: "nestedType")
      }
      if !_enumType.isEmpty {
        try visitor.visitRepeatedMessageField(value: _enumType, protoFieldNumber: 4, protoFieldName: "enum_type", jsonFieldName: "enumType", swiftFieldName: "enumType")
      }
      if !_extensionRange.isEmpty {
        try visitor.visitRepeatedMessageField(value: _extensionRange, protoFieldNumber: 5, protoFieldName: "extension_range", jsonFieldName: "extensionRange", swiftFieldName: "extensionRange")
      }
      if !_extension_p.isEmpty {
        try visitor.visitRepeatedMessageField(value: _extension_p, protoFieldNumber: 6, protoFieldName: "extension", jsonFieldName: "extension", swiftFieldName: "extension_p")
      }
      if let v = _options {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 7, protoFieldName: "options", jsonFieldName: "options", swiftFieldName: "options")
      }
      if !_oneofDecl.isEmpty {
        try visitor.visitRepeatedMessageField(value: _oneofDecl, protoFieldNumber: 8, protoFieldName: "oneof_decl", jsonFieldName: "oneofDecl", swiftFieldName: "oneofDecl")
      }
      if !_reservedRange.isEmpty {
        try visitor.visitRepeatedMessageField(value: _reservedRange, protoFieldNumber: 9, protoFieldName: "reserved_range", jsonFieldName: "reservedRange", swiftFieldName: "reservedRange")
      }
      if !_reservedName.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: _reservedName, protoFieldNumber: 10, protoFieldName: "reserved_name", jsonFieldName: "reservedName", swiftFieldName: "reservedName")
      }
      unknown.traverse(visitor: &visitor)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if ((_name != nil || other._name != nil) && (_name == nil || other._name == nil || _name! != other._name!)) {return false}
      if _field != other._field {return false}
      if _extension_p != other._extension_p {return false}
      if _nestedType != other._nestedType {return false}
      if _enumType != other._enumType {return false}
      if _extensionRange != other._extensionRange {return false}
      if _oneofDecl != other._oneofDecl {return false}
      if ((_options != nil || other._options != nil) && (_options == nil || other._options == nil || _options! != other._options!)) {return false}
      if _reservedRange != other._reservedRange {return false}
      if _reservedName != other._reservedName {return false}
      if unknown != other.unknown {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone.unknown = unknown
      clone._name = _name
      clone._field = _field
      clone._extension_p = _extension_p
      clone._nestedType = _nestedType
      clone._enumType = _enumType
      clone._extensionRange = _extensionRange
      clone._oneofDecl = _oneofDecl
      clone._options = _options
      clone._reservedRange = _reservedRange
      clone._reservedName = _reservedName
      return clone
    }
  }

  private var _storage = _StorageClass()

  public struct ExtensionRange: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Google_Protobuf_DescriptorProto.ExtensionRange"}
    public var protoMessageName: String {return "ExtensionRange"}
    public var protoPackageName: String {return "google.protobuf"}
    public var jsonFieldNames: [String: Int] {return [
      "start": 1,
      "end": 2,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "start": 1,
      "end": 2,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var start: Int32? = nil

    public var end: Int32? = nil

    public init() {}

    public init(start: Int32? = nil,
      end: Int32? = nil)
    {
      self.start = start
      self.end = end
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufInt32.self, value: &start)
      case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufInt32.self, value: &end)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      if let v = start {
        try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: v, protoFieldNumber: 1, protoFieldName: "start", jsonFieldName: "start", swiftFieldName: "start")
      }
      if let v = end {
        try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: v, protoFieldNumber: 2, protoFieldName: "end", jsonFieldName: "end", swiftFieldName: "end")
      }
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Google_Protobuf_DescriptorProto.ExtensionRange) -> Bool {
      if ((start != nil || other.start != nil) && (start == nil || other.start == nil || start! != other.start!)) {return false}
      if ((end != nil || other.end != nil) && (end == nil || other.end == nil || end! != other.end!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  ///   Range of reserved tag numbers. Reserved tag numbers may not be used by
  ///   fields or extension ranges in the same message. Reserved ranges may
  ///   not overlap.
  public struct ReservedRange: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Google_Protobuf_DescriptorProto.ReservedRange"}
    public var protoMessageName: String {return "ReservedRange"}
    public var protoPackageName: String {return "google.protobuf"}
    public var jsonFieldNames: [String: Int] {return [
      "start": 1,
      "end": 2,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "start": 1,
      "end": 2,
    ]}

    var unknown = ProtobufUnknownStorage()

    ///   Inclusive.
    public var start: Int32? = nil

    ///   Exclusive.
    public var end: Int32? = nil

    public init() {}

    public init(start: Int32? = nil,
      end: Int32? = nil)
    {
      self.start = start
      self.end = end
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufInt32.self, value: &start)
      case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufInt32.self, value: &end)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      if let v = start {
        try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: v, protoFieldNumber: 1, protoFieldName: "start", jsonFieldName: "start", swiftFieldName: "start")
      }
      if let v = end {
        try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: v, protoFieldNumber: 2, protoFieldName: "end", jsonFieldName: "end", swiftFieldName: "end")
      }
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Google_Protobuf_DescriptorProto.ReservedRange) -> Bool {
      if ((start != nil || other.start != nil) && (start == nil || other.start == nil || start! != other.start!)) {return false}
      if ((end != nil || other.end != nil) && (end == nil || other.end == nil || end! != other.end!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public var name: String? {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  public var field: [Google_Protobuf_FieldDescriptorProto] {
    get {return _storage._field}
    set {_uniqueStorage()._field = newValue}
  }

  public var extension_p: [Google_Protobuf_FieldDescriptorProto] {
    get {return _storage._extension_p}
    set {_uniqueStorage()._extension_p = newValue}
  }

  public var nestedType: [Google_Protobuf_DescriptorProto] {
    get {return _storage._nestedType}
    set {_uniqueStorage()._nestedType = newValue}
  }

  public var enumType: [Google_Protobuf_EnumDescriptorProto] {
    get {return _storage._enumType}
    set {_uniqueStorage()._enumType = newValue}
  }

  public var extensionRange: [Google_Protobuf_DescriptorProto.ExtensionRange] {
    get {return _storage._extensionRange}
    set {_uniqueStorage()._extensionRange = newValue}
  }

  public var oneofDecl: [Google_Protobuf_OneofDescriptorProto] {
    get {return _storage._oneofDecl}
    set {_uniqueStorage()._oneofDecl = newValue}
  }

  public var options: Google_Protobuf_MessageOptions? {
    get {return _storage._options}
    set {_uniqueStorage()._options = newValue}
  }

  public var reservedRange: [Google_Protobuf_DescriptorProto.ReservedRange] {
    get {return _storage._reservedRange}
    set {_uniqueStorage()._reservedRange = newValue}
  }

  ///   Reserved field names, which may not be used by fields in the same message.
  ///   A given name may only be reserved once.
  public var reservedName: [String] {
    get {return _storage._reservedName}
    set {_uniqueStorage()._reservedName = newValue}
  }

  public init() {}

  public init(name: String? = nil,
    field: [Google_Protobuf_FieldDescriptorProto] = [],
    extension_p: [Google_Protobuf_FieldDescriptorProto] = [],
    nestedType: [Google_Protobuf_DescriptorProto] = [],
    enumType: [Google_Protobuf_EnumDescriptorProto] = [],
    extensionRange: [Google_Protobuf_DescriptorProto.ExtensionRange] = [],
    oneofDecl: [Google_Protobuf_OneofDescriptorProto] = [],
    options: Google_Protobuf_MessageOptions? = nil,
    reservedRange: [Google_Protobuf_DescriptorProto.ReservedRange] = [],
    reservedName: [String] = [])
  {
    let storage = _uniqueStorage()
    storage._name = name
    if !field.isEmpty {
      storage._field = field
    }
    if !extension_p.isEmpty {
      storage._extension_p = extension_p
    }
    if !nestedType.isEmpty {
      storage._nestedType = nestedType
    }
    if !enumType.isEmpty {
      storage._enumType = enumType
    }
    if !extensionRange.isEmpty {
      storage._extensionRange = extensionRange
    }
    if !oneofDecl.isEmpty {
      storage._oneofDecl = oneofDecl
    }
    storage._options = options
    if !reservedRange.isEmpty {
      storage._reservedRange = reservedRange
    }
    if !reservedName.isEmpty {
      storage._reservedName = reservedName
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_DescriptorProto) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Describes a field within a message.
public struct Google_Protobuf_FieldDescriptorProto: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Google_Protobuf_FieldDescriptorProto"}
  public var protoMessageName: String {return "FieldDescriptorProto"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "number": 3,
    "label": 4,
    "type": 5,
    "typeName": 6,
    "extendee": 2,
    "defaultValue": 7,
    "oneofIndex": 9,
    "jsonName": 10,
    "options": 8,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "number": 3,
    "label": 4,
    "type": 5,
    "type_name": 6,
    "extendee": 2,
    "default_value": 7,
    "oneof_index": 9,
    "json_name": 10,
    "options": 8,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Google_Protobuf_FieldDescriptorProto
    var unknown = ProtobufUnknownStorage()
    var _name: String? = nil
    var _number: Int32? = nil
    var _label: Google_Protobuf_FieldDescriptorProto.Label? = nil
    var _type: Google_Protobuf_FieldDescriptorProto.TypeEnum? = nil
    var _typeName: String? = nil
    var _extendee: String? = nil
    var _defaultValue: String? = nil
    var _oneofIndex: Int32? = nil
    var _jsonName: String? = nil
    var _options: Google_Protobuf_FieldOptions? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &_name)
      case 3: handled = try setter.decodeOptionalField(fieldType: ProtobufInt32.self, value: &_number)
      case 4: handled = try setter.decodeOptionalField(fieldType: Google_Protobuf_FieldDescriptorProto.Label.self, value: &_label)
      case 5: handled = try setter.decodeOptionalField(fieldType: Google_Protobuf_FieldDescriptorProto.TypeEnum.self, value: &_type)
      case 6: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &_typeName)
      case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &_extendee)
      case 7: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &_defaultValue)
      case 9: handled = try setter.decodeOptionalField(fieldType: ProtobufInt32.self, value: &_oneofIndex)
      case 10: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &_jsonName)
      case 8: handled = try setter.decodeOptionalMessageField(fieldType: Google_Protobuf_FieldOptions.self, value: &_options)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if let v = _name {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if let v = _extendee {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 2, protoFieldName: "extendee", jsonFieldName: "extendee", swiftFieldName: "extendee")
      }
      if let v = _number {
        try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: v, protoFieldNumber: 3, protoFieldName: "number", jsonFieldName: "number", swiftFieldName: "number")
      }
      if let v = _label {
        try visitor.visitSingularField(fieldType: Google_Protobuf_FieldDescriptorProto.Label.self, value: v, protoFieldNumber: 4, protoFieldName: "label", jsonFieldName: "label", swiftFieldName: "label")
      }
      if let v = _type {
        try visitor.visitSingularField(fieldType: Google_Protobuf_FieldDescriptorProto.TypeEnum.self, value: v, protoFieldNumber: 5, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
      }
      if let v = _typeName {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 6, protoFieldName: "type_name", jsonFieldName: "typeName", swiftFieldName: "typeName")
      }
      if let v = _defaultValue {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 7, protoFieldName: "default_value", jsonFieldName: "defaultValue", swiftFieldName: "defaultValue")
      }
      if let v = _options {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 8, protoFieldName: "options", jsonFieldName: "options", swiftFieldName: "options")
      }
      if let v = _oneofIndex {
        try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: v, protoFieldNumber: 9, protoFieldName: "oneof_index", jsonFieldName: "oneofIndex", swiftFieldName: "oneofIndex")
      }
      if let v = _jsonName {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 10, protoFieldName: "json_name", jsonFieldName: "jsonName", swiftFieldName: "jsonName")
      }
      unknown.traverse(visitor: &visitor)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if ((_name != nil || other._name != nil) && (_name == nil || other._name == nil || _name! != other._name!)) {return false}
      if ((_number != nil || other._number != nil) && (_number == nil || other._number == nil || _number! != other._number!)) {return false}
      if ((_label != nil || other._label != nil) && (_label == nil || other._label == nil || _label! != other._label!)) {return false}
      if ((_type != nil || other._type != nil) && (_type == nil || other._type == nil || _type! != other._type!)) {return false}
      if ((_typeName != nil || other._typeName != nil) && (_typeName == nil || other._typeName == nil || _typeName! != other._typeName!)) {return false}
      if ((_extendee != nil || other._extendee != nil) && (_extendee == nil || other._extendee == nil || _extendee! != other._extendee!)) {return false}
      if ((_defaultValue != nil || other._defaultValue != nil) && (_defaultValue == nil || other._defaultValue == nil || _defaultValue! != other._defaultValue!)) {return false}
      if ((_oneofIndex != nil || other._oneofIndex != nil) && (_oneofIndex == nil || other._oneofIndex == nil || _oneofIndex! != other._oneofIndex!)) {return false}
      if ((_jsonName != nil || other._jsonName != nil) && (_jsonName == nil || other._jsonName == nil || _jsonName! != other._jsonName!)) {return false}
      if ((_options != nil || other._options != nil) && (_options == nil || other._options == nil || _options! != other._options!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone.unknown = unknown
      clone._name = _name
      clone._number = _number
      clone._label = _label
      clone._type = _type
      clone._typeName = _typeName
      clone._extendee = _extendee
      clone._defaultValue = _defaultValue
      clone._oneofIndex = _oneofIndex
      clone._jsonName = _jsonName
      clone._options = _options
      return clone
    }
  }

  private var _storage = _StorageClass()

  public enum TypeEnum: ProtobufEnum {
    public typealias RawValue = Int

    ///   0 is reserved for errors.
    ///   Order is weird for historical reasons.
    case double // = 1
    case float // = 2

    ///   Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if
    ///   negative values are likely.
    case int64 // = 3
    case uint64 // = 4

    ///   Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if
    ///   negative values are likely.
    case int32 // = 5
    case fixed64 // = 6
    case fixed32 // = 7
    case bool // = 8
    case string // = 9

    ///   Tag-delimited aggregate.
    case group // = 10

    ///   Length-delimited aggregate.
    case message // = 11

    ///   New in version 2.
    case bytes // = 12
    case uint32 // = 13
    case `enum` // = 14
    case sfixed32 // = 15
    case sfixed64 // = 16

    ///   Uses ZigZag encoding.
    case sint32 // = 17

    ///   Uses ZigZag encoding.
    case sint64 // = 18

    public init() {
      self = .double
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .double
      case 2: self = .float
      case 3: self = .int64
      case 4: self = .uint64
      case 5: self = .int32
      case 6: self = .fixed64
      case 7: self = .fixed32
      case 8: self = .bool
      case 9: self = .string
      case 10: self = .group
      case 11: self = .message
      case 12: self = .bytes
      case 13: self = .uint32
      case 14: self = .`enum`
      case 15: self = .sfixed32
      case 16: self = .sfixed64
      case 17: self = .sint32
      case 18: self = .sint64
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "double": self = .double
      case "float": self = .float
      case "int64": self = .int64
      case "uint64": self = .uint64
      case "int32": self = .int32
      case "fixed64": self = .fixed64
      case "fixed32": self = .fixed32
      case "bool": self = .bool
      case "string": self = .string
      case "group": self = .group
      case "message": self = .message
      case "bytes": self = .bytes
      case "uint32": self = .uint32
      case "enum": self = .`enum`
      case "sfixed32": self = .sfixed32
      case "sfixed64": self = .sfixed64
      case "sint32": self = .sint32
      case "sint64": self = .sint64
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "TYPE_DOUBLE": self = .double
      case "TYPE_FLOAT": self = .float
      case "TYPE_INT64": self = .int64
      case "TYPE_UINT64": self = .uint64
      case "TYPE_INT32": self = .int32
      case "TYPE_FIXED64": self = .fixed64
      case "TYPE_FIXED32": self = .fixed32
      case "TYPE_BOOL": self = .bool
      case "TYPE_STRING": self = .string
      case "TYPE_GROUP": self = .group
      case "TYPE_MESSAGE": self = .message
      case "TYPE_BYTES": self = .bytes
      case "TYPE_UINT32": self = .uint32
      case "TYPE_ENUM": self = .`enum`
      case "TYPE_SFIXED32": self = .sfixed32
      case "TYPE_SFIXED64": self = .sfixed64
      case "TYPE_SINT32": self = .sint32
      case "TYPE_SINT64": self = .sint64
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "TYPE_DOUBLE": self = .double
      case "TYPE_FLOAT": self = .float
      case "TYPE_INT64": self = .int64
      case "TYPE_UINT64": self = .uint64
      case "TYPE_INT32": self = .int32
      case "TYPE_FIXED64": self = .fixed64
      case "TYPE_FIXED32": self = .fixed32
      case "TYPE_BOOL": self = .bool
      case "TYPE_STRING": self = .string
      case "TYPE_GROUP": self = .group
      case "TYPE_MESSAGE": self = .message
      case "TYPE_BYTES": self = .bytes
      case "TYPE_UINT32": self = .uint32
      case "TYPE_ENUM": self = .`enum`
      case "TYPE_SFIXED32": self = .sfixed32
      case "TYPE_SFIXED64": self = .sfixed64
      case "TYPE_SINT32": self = .sint32
      case "TYPE_SINT64": self = .sint64
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .double: return 1
        case .float: return 2
        case .int64: return 3
        case .uint64: return 4
        case .int32: return 5
        case .fixed64: return 6
        case .fixed32: return 7
        case .bool: return 8
        case .string: return 9
        case .group: return 10
        case .message: return 11
        case .bytes: return 12
        case .uint32: return 13
        case .`enum`: return 14
        case .sfixed32: return 15
        case .sfixed64: return 16
        case .sint32: return 17
        case .sint64: return 18
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .double: return "\"TYPE_DOUBLE\""
        case .float: return "\"TYPE_FLOAT\""
        case .int64: return "\"TYPE_INT64\""
        case .uint64: return "\"TYPE_UINT64\""
        case .int32: return "\"TYPE_INT32\""
        case .fixed64: return "\"TYPE_FIXED64\""
        case .fixed32: return "\"TYPE_FIXED32\""
        case .bool: return "\"TYPE_BOOL\""
        case .string: return "\"TYPE_STRING\""
        case .group: return "\"TYPE_GROUP\""
        case .message: return "\"TYPE_MESSAGE\""
        case .bytes: return "\"TYPE_BYTES\""
        case .uint32: return "\"TYPE_UINT32\""
        case .`enum`: return "\"TYPE_ENUM\""
        case .sfixed32: return "\"TYPE_SFIXED32\""
        case .sfixed64: return "\"TYPE_SFIXED64\""
        case .sint32: return "\"TYPE_SINT32\""
        case .sint64: return "\"TYPE_SINT64\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .double: return ".double"
        case .float: return ".float"
        case .int64: return ".int64"
        case .uint64: return ".uint64"
        case .int32: return ".int32"
        case .fixed64: return ".fixed64"
        case .fixed32: return ".fixed32"
        case .bool: return ".bool"
        case .string: return ".string"
        case .group: return ".group"
        case .message: return ".message"
        case .bytes: return ".bytes"
        case .uint32: return ".uint32"
        case .`enum`: return ".enum"
        case .sfixed32: return ".sfixed32"
        case .sfixed64: return ".sfixed64"
        case .sint32: return ".sint32"
        case .sint64: return ".sint64"
        }
      }
    }

  }

  public enum Label: ProtobufEnum {
    public typealias RawValue = Int

    ///   0 is reserved for errors
    case `optional` // = 1
    case `required` // = 2

    ///   TODO(sanjay): Should we add LABEL_MAP?
    case repeated // = 3

    public init() {
      self = .`optional`
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .`optional`
      case 2: self = .`required`
      case 3: self = .repeated
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "optional": self = .`optional`
      case "required": self = .`required`
      case "repeated": self = .repeated
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "LABEL_OPTIONAL": self = .`optional`
      case "LABEL_REQUIRED": self = .`required`
      case "LABEL_REPEATED": self = .repeated
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "LABEL_OPTIONAL": self = .`optional`
      case "LABEL_REQUIRED": self = .`required`
      case "LABEL_REPEATED": self = .repeated
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .`optional`: return 1
        case .`required`: return 2
        case .repeated: return 3
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .`optional`: return "\"LABEL_OPTIONAL\""
        case .`required`: return "\"LABEL_REQUIRED\""
        case .repeated: return "\"LABEL_REPEATED\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .`optional`: return ".optional"
        case .`required`: return ".required"
        case .repeated: return ".repeated"
        }
      }
    }

  }

  public var name: String? {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  public var number: Int32? {
    get {return _storage._number}
    set {_uniqueStorage()._number = newValue}
  }

  public var label: Google_Protobuf_FieldDescriptorProto.Label? {
    get {return _storage._label}
    set {_uniqueStorage()._label = newValue}
  }

  ///   If type_name is set, this need not be set.  If both this and type_name
  ///   are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
  public var type: Google_Protobuf_FieldDescriptorProto.TypeEnum? {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  ///   For message and enum types, this is the name of the type.  If the name
  ///   starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
  ///   rules are used to find the type (i.e. first the nested types within this
  ///   message are searched, then within the parent, on up to the root
  ///   namespace).
  public var typeName: String? {
    get {return _storage._typeName}
    set {_uniqueStorage()._typeName = newValue}
  }

  ///   For extensions, this is the name of the type being extended.  It is
  ///   resolved in the same manner as type_name.
  public var extendee: String? {
    get {return _storage._extendee}
    set {_uniqueStorage()._extendee = newValue}
  }

  ///   For numeric types, contains the original text representation of the value.
  ///   For booleans, "true" or "false".
  ///   For strings, contains the default text contents (not escaped in any way).
  ///   For bytes, contains the C escaped value.  All bytes >= 128 are escaped.
  ///   TODO(kenton):  Base-64 encode?
  public var defaultValue: String? {
    get {return _storage._defaultValue}
    set {_uniqueStorage()._defaultValue = newValue}
  }

  ///   If set, gives the index of a oneof in the containing type's oneof_decl
  ///   list.  This field is a member of that oneof.
  public var oneofIndex: Int32? {
    get {return _storage._oneofIndex}
    set {_uniqueStorage()._oneofIndex = newValue}
  }

  ///   JSON name of this field. The value is set by protocol compiler. If the
  ///   user has set a "json_name" option on this field, that option's value
  ///   will be used. Otherwise, it's deduced from the field's name by converting
  ///   it to camelCase.
  public var jsonName: String? {
    get {return _storage._jsonName}
    set {_uniqueStorage()._jsonName = newValue}
  }

  public var options: Google_Protobuf_FieldOptions? {
    get {return _storage._options}
    set {_uniqueStorage()._options = newValue}
  }

  public init() {}

  public init(name: String? = nil,
    number: Int32? = nil,
    label: Google_Protobuf_FieldDescriptorProto.Label? = nil,
    type: Google_Protobuf_FieldDescriptorProto.TypeEnum? = nil,
    typeName: String? = nil,
    extendee: String? = nil,
    defaultValue: String? = nil,
    oneofIndex: Int32? = nil,
    jsonName: String? = nil,
    options: Google_Protobuf_FieldOptions? = nil)
  {
    let storage = _uniqueStorage()
    storage._name = name
    storage._number = number
    storage._label = label
    storage._type = type
    storage._typeName = typeName
    storage._extendee = extendee
    storage._defaultValue = defaultValue
    storage._oneofIndex = oneofIndex
    storage._jsonName = jsonName
    storage._options = options
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_FieldDescriptorProto) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Describes a oneof.
public struct Google_Protobuf_OneofDescriptorProto: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Google_Protobuf_OneofDescriptorProto"}
  public var protoMessageName: String {return "OneofDescriptorProto"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "options": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "options": 2,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Google_Protobuf_OneofDescriptorProto
    var unknown = ProtobufUnknownStorage()
    var _name: String? = nil
    var _options: Google_Protobuf_OneofOptions? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeOptionalMessageField(fieldType: Google_Protobuf_OneofOptions.self, value: &_options)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if let v = _name {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if let v = _options {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "options", jsonFieldName: "options", swiftFieldName: "options")
      }
      unknown.traverse(visitor: &visitor)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if ((_name != nil || other._name != nil) && (_name == nil || other._name == nil || _name! != other._name!)) {return false}
      if ((_options != nil || other._options != nil) && (_options == nil || other._options == nil || _options! != other._options!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone.unknown = unknown
      clone._name = _name
      clone._options = _options
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var name: String? {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  public var options: Google_Protobuf_OneofOptions? {
    get {return _storage._options}
    set {_uniqueStorage()._options = newValue}
  }

  public init() {}

  public init(name: String? = nil,
    options: Google_Protobuf_OneofOptions? = nil)
  {
    let storage = _uniqueStorage()
    storage._name = name
    storage._options = options
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_OneofDescriptorProto) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Describes an enum type.
public struct Google_Protobuf_EnumDescriptorProto: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Google_Protobuf_EnumDescriptorProto"}
  public var protoMessageName: String {return "EnumDescriptorProto"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
    "options": 3,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
    "options": 3,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Google_Protobuf_EnumDescriptorProto
    var unknown = ProtobufUnknownStorage()
    var _name: String? = nil
    var _value: [Google_Protobuf_EnumValueDescriptorProto] = []
    var _options: Google_Protobuf_EnumOptions? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_EnumValueDescriptorProto.self, value: &_value)
      case 3: handled = try setter.decodeOptionalMessageField(fieldType: Google_Protobuf_EnumOptions.self, value: &_options)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if let v = _name {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if !_value.isEmpty {
        try visitor.visitRepeatedMessageField(value: _value, protoFieldNumber: 2, protoFieldName: "value", jsonFieldName: "value", swiftFieldName: "value")
      }
      if let v = _options {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "options", jsonFieldName: "options", swiftFieldName: "options")
      }
      unknown.traverse(visitor: &visitor)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if ((_name != nil || other._name != nil) && (_name == nil || other._name == nil || _name! != other._name!)) {return false}
      if _value != other._value {return false}
      if ((_options != nil || other._options != nil) && (_options == nil || other._options == nil || _options! != other._options!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone.unknown = unknown
      clone._name = _name
      clone._value = _value
      clone._options = _options
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var name: String? {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  public var value: [Google_Protobuf_EnumValueDescriptorProto] {
    get {return _storage._value}
    set {_uniqueStorage()._value = newValue}
  }

  public var options: Google_Protobuf_EnumOptions? {
    get {return _storage._options}
    set {_uniqueStorage()._options = newValue}
  }

  public init() {}

  public init(name: String? = nil,
    value: [Google_Protobuf_EnumValueDescriptorProto] = [],
    options: Google_Protobuf_EnumOptions? = nil)
  {
    let storage = _uniqueStorage()
    storage._name = name
    if !value.isEmpty {
      storage._value = value
    }
    storage._options = options
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_EnumDescriptorProto) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Describes a value within an enum.
public struct Google_Protobuf_EnumValueDescriptorProto: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Google_Protobuf_EnumValueDescriptorProto"}
  public var protoMessageName: String {return "EnumValueDescriptorProto"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "number": 2,
    "options": 3,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "number": 2,
    "options": 3,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Google_Protobuf_EnumValueDescriptorProto
    var unknown = ProtobufUnknownStorage()
    var _name: String? = nil
    var _number: Int32? = nil
    var _options: Google_Protobuf_EnumValueOptions? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufInt32.self, value: &_number)
      case 3: handled = try setter.decodeOptionalMessageField(fieldType: Google_Protobuf_EnumValueOptions.self, value: &_options)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if let v = _name {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if let v = _number {
        try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: v, protoFieldNumber: 2, protoFieldName: "number", jsonFieldName: "number", swiftFieldName: "number")
      }
      if let v = _options {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "options", jsonFieldName: "options", swiftFieldName: "options")
      }
      unknown.traverse(visitor: &visitor)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if ((_name != nil || other._name != nil) && (_name == nil || other._name == nil || _name! != other._name!)) {return false}
      if ((_number != nil || other._number != nil) && (_number == nil || other._number == nil || _number! != other._number!)) {return false}
      if ((_options != nil || other._options != nil) && (_options == nil || other._options == nil || _options! != other._options!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone.unknown = unknown
      clone._name = _name
      clone._number = _number
      clone._options = _options
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var name: String? {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  public var number: Int32? {
    get {return _storage._number}
    set {_uniqueStorage()._number = newValue}
  }

  public var options: Google_Protobuf_EnumValueOptions? {
    get {return _storage._options}
    set {_uniqueStorage()._options = newValue}
  }

  public init() {}

  public init(name: String? = nil,
    number: Int32? = nil,
    options: Google_Protobuf_EnumValueOptions? = nil)
  {
    let storage = _uniqueStorage()
    storage._name = name
    storage._number = number
    storage._options = options
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_EnumValueDescriptorProto) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Describes a service.
public struct Google_Protobuf_ServiceDescriptorProto: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Google_Protobuf_ServiceDescriptorProto"}
  public var protoMessageName: String {return "ServiceDescriptorProto"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "method": 2,
    "options": 3,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "method": 2,
    "options": 3,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Google_Protobuf_ServiceDescriptorProto
    var unknown = ProtobufUnknownStorage()
    var _name: String? = nil
    var _method: [Google_Protobuf_MethodDescriptorProto] = []
    var _options: Google_Protobuf_ServiceOptions? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_MethodDescriptorProto.self, value: &_method)
      case 3: handled = try setter.decodeOptionalMessageField(fieldType: Google_Protobuf_ServiceOptions.self, value: &_options)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if let v = _name {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if !_method.isEmpty {
        try visitor.visitRepeatedMessageField(value: _method, protoFieldNumber: 2, protoFieldName: "method", jsonFieldName: "method", swiftFieldName: "method")
      }
      if let v = _options {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "options", jsonFieldName: "options", swiftFieldName: "options")
      }
      unknown.traverse(visitor: &visitor)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if ((_name != nil || other._name != nil) && (_name == nil || other._name == nil || _name! != other._name!)) {return false}
      if _method != other._method {return false}
      if ((_options != nil || other._options != nil) && (_options == nil || other._options == nil || _options! != other._options!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone.unknown = unknown
      clone._name = _name
      clone._method = _method
      clone._options = _options
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var name: String? {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  public var method: [Google_Protobuf_MethodDescriptorProto] {
    get {return _storage._method}
    set {_uniqueStorage()._method = newValue}
  }

  public var options: Google_Protobuf_ServiceOptions? {
    get {return _storage._options}
    set {_uniqueStorage()._options = newValue}
  }

  public init() {}

  public init(name: String? = nil,
    method: [Google_Protobuf_MethodDescriptorProto] = [],
    options: Google_Protobuf_ServiceOptions? = nil)
  {
    let storage = _uniqueStorage()
    storage._name = name
    if !method.isEmpty {
      storage._method = method
    }
    storage._options = options
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_ServiceDescriptorProto) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Describes a method of a service.
public struct Google_Protobuf_MethodDescriptorProto: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Google_Protobuf_MethodDescriptorProto"}
  public var protoMessageName: String {return "MethodDescriptorProto"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "inputType": 2,
    "outputType": 3,
    "options": 4,
    "clientStreaming": 5,
    "serverStreaming": 6,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "input_type": 2,
    "output_type": 3,
    "options": 4,
    "client_streaming": 5,
    "server_streaming": 6,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Google_Protobuf_MethodDescriptorProto
    var unknown = ProtobufUnknownStorage()
    var _name: String? = nil
    var _inputType: String? = nil
    var _outputType: String? = nil
    var _options: Google_Protobuf_MethodOptions? = nil
    var _clientStreaming: Bool? = nil
    var _serverStreaming: Bool? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &_inputType)
      case 3: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &_outputType)
      case 4: handled = try setter.decodeOptionalMessageField(fieldType: Google_Protobuf_MethodOptions.self, value: &_options)
      case 5: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &_clientStreaming)
      case 6: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &_serverStreaming)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if let v = _name {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if let v = _inputType {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 2, protoFieldName: "input_type", jsonFieldName: "inputType", swiftFieldName: "inputType")
      }
      if let v = _outputType {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 3, protoFieldName: "output_type", jsonFieldName: "outputType", swiftFieldName: "outputType")
      }
      if let v = _options {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 4, protoFieldName: "options", jsonFieldName: "options", swiftFieldName: "options")
      }
      if let v = _clientStreaming {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 5, protoFieldName: "client_streaming", jsonFieldName: "clientStreaming", swiftFieldName: "clientStreaming")
      }
      if let v = _serverStreaming {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 6, protoFieldName: "server_streaming", jsonFieldName: "serverStreaming", swiftFieldName: "serverStreaming")
      }
      unknown.traverse(visitor: &visitor)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if ((_name != nil || other._name != nil) && (_name == nil || other._name == nil || _name! != other._name!)) {return false}
      if ((_inputType != nil || other._inputType != nil) && (_inputType == nil || other._inputType == nil || _inputType! != other._inputType!)) {return false}
      if ((_outputType != nil || other._outputType != nil) && (_outputType == nil || other._outputType == nil || _outputType! != other._outputType!)) {return false}
      if ((_options != nil || other._options != nil) && (_options == nil || other._options == nil || _options! != other._options!)) {return false}
      if (((_clientStreaming != nil && _clientStreaming! != false) || (other._clientStreaming != nil && other._clientStreaming! != false)) && (_clientStreaming == nil || other._clientStreaming == nil || _clientStreaming! != other._clientStreaming!)) {return false}
      if (((_serverStreaming != nil && _serverStreaming! != false) || (other._serverStreaming != nil && other._serverStreaming! != false)) && (_serverStreaming == nil || other._serverStreaming == nil || _serverStreaming! != other._serverStreaming!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone.unknown = unknown
      clone._name = _name
      clone._inputType = _inputType
      clone._outputType = _outputType
      clone._options = _options
      clone._clientStreaming = _clientStreaming
      clone._serverStreaming = _serverStreaming
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var name: String? {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  ///   Input and output type names.  These are resolved in the same way as
  ///   FieldDescriptorProto.type_name, but must refer to a message type.
  public var inputType: String? {
    get {return _storage._inputType}
    set {_uniqueStorage()._inputType = newValue}
  }

  public var outputType: String? {
    get {return _storage._outputType}
    set {_uniqueStorage()._outputType = newValue}
  }

  public var options: Google_Protobuf_MethodOptions? {
    get {return _storage._options}
    set {_uniqueStorage()._options = newValue}
  }

  ///   Identifies if client streams multiple client messages
  public var clientStreaming: Bool? {
    get {return _storage._clientStreaming ?? false}
    set {_uniqueStorage()._clientStreaming = newValue}
  }

  ///   Identifies if server streams multiple server messages
  public var serverStreaming: Bool? {
    get {return _storage._serverStreaming ?? false}
    set {_uniqueStorage()._serverStreaming = newValue}
  }

  public init() {}

  public init(name: String? = nil,
    inputType: String? = nil,
    outputType: String? = nil,
    options: Google_Protobuf_MethodOptions? = nil,
    clientStreaming: Bool? = nil,
    serverStreaming: Bool? = nil)
  {
    let storage = _uniqueStorage()
    storage._name = name
    storage._inputType = inputType
    storage._outputType = outputType
    storage._options = options
    storage._clientStreaming = clientStreaming
    storage._serverStreaming = serverStreaming
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_MethodDescriptorProto) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

//  ===================================================================
//  Options
//  Each of the definitions above may have "options" attached.  These are
//  just annotations which may cause code to be generated slightly differently
//  or may contain hints for code that manipulates protocol messages.
// 
//  Clients may define custom options as extensions of the *Options messages.
//  These extensions may not yet be known at parsing time, so the parser cannot
//  store the values in them.  Instead it stores them in a field in the *Options
//  message called uninterpreted_option. This field must have the same name
//  across all *Options messages. We then use this field to populate the
//  extensions when we build a descriptor, at which point all protos have been
//  parsed and so all extensions are known.
// 
//  Extension numbers for custom options may be chosen as follows:
//  * For options which will only be used within a single application or
//    organization, or for experimental options, use field numbers 50000
//    through 99999.  It is up to you to ensure that you do not use the
//    same number for multiple options.
//  * For options which will be published and used publicly by multiple
//    independent entities, e-mail protobuf-global-extension-registry@google.com
//    to reserve extension numbers. Simply provide your project name (e.g.
//    Objective-C plugin) and your project website (if available) -- there's no
//    need to explain how you intend to use them. Usually you only need one
//    extension number. You can declare multiple options with only one extension
//    number by putting them in a sub-message. See the Custom Options section of
//    the docs for examples:
//    https://developers.google.com/protocol-buffers/docs/proto#options
//    If this turns out to be popular, a web service will be set up
//    to automatically assign option numbers.
public struct Google_Protobuf_FileOptions: ProtobufGeneratedMessage, ProtobufExtensibleMessage {
  public var swiftClassName: String {return "Google_Protobuf_FileOptions"}
  public var protoMessageName: String {return "FileOptions"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "javaPackage": 1,
    "javaOuterClassname": 8,
    "javaMultipleFiles": 10,
    "javaGenerateEqualsAndHash": 20,
    "javaStringCheckUtf8": 27,
    "optimizeFor": 9,
    "goPackage": 11,
    "ccGenericServices": 16,
    "javaGenericServices": 17,
    "pyGenericServices": 18,
    "deprecated": 23,
    "ccEnableArenas": 31,
    "objcClassPrefix": 36,
    "csharpNamespace": 37,
    "swiftPrefix": 39,
    "uninterpretedOption": 999,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "java_package": 1,
    "java_outer_classname": 8,
    "java_multiple_files": 10,
    "java_generate_equals_and_hash": 20,
    "java_string_check_utf8": 27,
    "optimize_for": 9,
    "go_package": 11,
    "cc_generic_services": 16,
    "java_generic_services": 17,
    "py_generic_services": 18,
    "deprecated": 23,
    "cc_enable_arenas": 31,
    "objc_class_prefix": 36,
    "csharp_namespace": 37,
    "swift_prefix": 39,
    "uninterpreted_option": 999,
  ]}

  var unknown = ProtobufUnknownStorage()

  ///   Generated classes can be optimized for speed or code size.
  public enum OptimizeMode: ProtobufEnum {
    public typealias RawValue = Int

    ///   Generate complete code for parsing, serialization,
    case speed // = 1

    ///   etc.
    case codeSize // = 2

    ///   Generate code using MessageLite and the lite runtime.
    case liteRuntime // = 3

    public init() {
      self = .speed
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .speed
      case 2: self = .codeSize
      case 3: self = .liteRuntime
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "speed": self = .speed
      case "codeSize": self = .codeSize
      case "liteRuntime": self = .liteRuntime
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "SPEED": self = .speed
      case "CODE_SIZE": self = .codeSize
      case "LITE_RUNTIME": self = .liteRuntime
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "SPEED": self = .speed
      case "CODE_SIZE": self = .codeSize
      case "LITE_RUNTIME": self = .liteRuntime
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .speed: return 1
        case .codeSize: return 2
        case .liteRuntime: return 3
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .speed: return "\"SPEED\""
        case .codeSize: return "\"CODE_SIZE\""
        case .liteRuntime: return "\"LITE_RUNTIME\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .speed: return ".speed"
        case .codeSize: return ".codeSize"
        case .liteRuntime: return ".liteRuntime"
        }
      }
    }

  }

  ///   Sets the Java package where classes generated from this .proto will be
  ///   placed.  By default, the proto package is used, but this is often
  ///   inappropriate because proto packages do not normally start with backwards
  ///   domain names.
  public var javaPackage: String? = nil

  ///   If set, all the classes from the .proto file are wrapped in a single
  ///   outer class with the given name.  This applies to both Proto1
  ///   (equivalent to the old "--one_java_file" option) and Proto2 (where
  ///   a .proto always translates to a single class, but you may want to
  ///   explicitly choose the class name).
  public var javaOuterClassname: String? = nil

  ///   If set true, then the Java code generator will generate a separate .java
  ///   file for each top-level message, enum, and service defined in the .proto
  ///   file.  Thus, these types will *not* be nested inside the outer class
  ///   named by java_outer_classname.  However, the outer class will still be
  ///   generated to contain the file's getDescriptor() method as well as any
  ///   top-level extensions defined in the file.
  private var _javaMultipleFiles: Bool? = nil
  public var javaMultipleFiles: Bool? {
    get {return _javaMultipleFiles ?? false}
    set {_javaMultipleFiles = newValue}
  }

  ///   If set true, then the Java code generator will generate equals() and
  ///   hashCode() methods for all messages defined in the .proto file.
  ///   This increases generated code size, potentially substantially for large
  ///   protos, which may harm a memory-constrained application.
  ///   - In the full runtime this is a speed optimization, as the
  ///   AbstractMessage base class includes reflection-based implementations of
  ///   these methods.
  ///   - In the lite runtime, setting this option changes the semantics of
  ///   equals() and hashCode() to more closely match those of the full runtime;
  ///   the generated methods compute their results based on field values rather
  ///   than object identity. (Implementations should not assume that hashcodes
  ///   will be consistent across runtimes or versions of the protocol compiler.)
  private var _javaGenerateEqualsAndHash: Bool? = nil
  public var javaGenerateEqualsAndHash: Bool? {
    get {return _javaGenerateEqualsAndHash ?? false}
    set {_javaGenerateEqualsAndHash = newValue}
  }

  ///   If set true, then the Java2 code generator will generate code that
  ///   throws an exception whenever an attempt is made to assign a non-UTF-8
  ///   byte sequence to a string field.
  ///   Message reflection will do the same.
  ///   However, an extension field still accepts non-UTF-8 byte sequences.
  ///   This option has no effect on when used with the lite runtime.
  private var _javaStringCheckUtf8: Bool? = nil
  public var javaStringCheckUtf8: Bool? {
    get {return _javaStringCheckUtf8 ?? false}
    set {_javaStringCheckUtf8 = newValue}
  }

  private var _optimizeFor: Google_Protobuf_FileOptions.OptimizeMode? = nil
  public var optimizeFor: Google_Protobuf_FileOptions.OptimizeMode? {
    get {return _optimizeFor ?? Google_Protobuf_FileOptions.OptimizeMode.speed}
    set {_optimizeFor = newValue}
  }

  ///   Sets the Go package where structs generated from this .proto will be
  ///   placed. If omitted, the Go package will be derived from the following:
  ///     - The basename of the package import path, if provided.
  ///     - Otherwise, the package statement in the .proto file, if present.
  ///     - Otherwise, the basename of the .proto file, without extension.
  public var goPackage: String? = nil

  ///   Should generic services be generated in each language?  "Generic" services
  ///   are not specific to any particular RPC system.  They are generated by the
  ///   main code generators in each language (without additional plugins).
  ///   Generic services were the only kind of service generation supported by
  ///   early versions of google.protobuf.
  ///  
  ///   Generic services are now considered deprecated in favor of using plugins
  ///   that generate code specific to your particular RPC system.  Therefore,
  ///   these default to false.  Old code which depends on generic services should
  ///   explicitly set them to true.
  private var _ccGenericServices: Bool? = nil
  public var ccGenericServices: Bool? {
    get {return _ccGenericServices ?? false}
    set {_ccGenericServices = newValue}
  }

  private var _javaGenericServices: Bool? = nil
  public var javaGenericServices: Bool? {
    get {return _javaGenericServices ?? false}
    set {_javaGenericServices = newValue}
  }

  private var _pyGenericServices: Bool? = nil
  public var pyGenericServices: Bool? {
    get {return _pyGenericServices ?? false}
    set {_pyGenericServices = newValue}
  }

  ///   Is this file deprecated?
  ///   Depending on the target platform, this can emit Deprecated annotations
  ///   for everything in the file, or it will be completely ignored; in the very
  ///   least, this is a formalization for deprecating files.
  private var _deprecated: Bool? = nil
  public var deprecated: Bool? {
    get {return _deprecated ?? false}
    set {_deprecated = newValue}
  }

  ///   Enables the use of arenas for the proto messages in this file. This applies
  ///   only to generated classes for C++.
  private var _ccEnableArenas: Bool? = nil
  public var ccEnableArenas: Bool? {
    get {return _ccEnableArenas ?? false}
    set {_ccEnableArenas = newValue}
  }

  ///   Sets the objective c class prefix which is prepended to all objective c
  ///   generated classes from this .proto. There is no default.
  public var objcClassPrefix: String? = nil

  ///   Namespace for generated classes; defaults to the package.
  public var csharpNamespace: String? = nil

  ///   Prefix prepended to all Swift generated top-level types.
  ///   Default is CamelCased package name.
  public var swiftPrefix: String? = nil

  ///   The parser stores options it doesn't recognize here. See above.
  public var uninterpretedOption: [Google_Protobuf_UninterpretedOption] = []

  public init() {}

  public init(javaPackage: String? = nil,
    javaOuterClassname: String? = nil,
    javaMultipleFiles: Bool? = nil,
    javaGenerateEqualsAndHash: Bool? = nil,
    javaStringCheckUtf8: Bool? = nil,
    optimizeFor: Google_Protobuf_FileOptions.OptimizeMode? = nil,
    goPackage: String? = nil,
    ccGenericServices: Bool? = nil,
    javaGenericServices: Bool? = nil,
    pyGenericServices: Bool? = nil,
    deprecated: Bool? = nil,
    ccEnableArenas: Bool? = nil,
    objcClassPrefix: String? = nil,
    csharpNamespace: String? = nil,
    swiftPrefix: String? = nil,
    uninterpretedOption: [Google_Protobuf_UninterpretedOption] = [])
  {
    self.javaPackage = javaPackage
    self.javaOuterClassname = javaOuterClassname
    self.javaMultipleFiles = javaMultipleFiles
    self.javaGenerateEqualsAndHash = javaGenerateEqualsAndHash
    self.javaStringCheckUtf8 = javaStringCheckUtf8
    self.optimizeFor = optimizeFor
    self.goPackage = goPackage
    self.ccGenericServices = ccGenericServices
    self.javaGenericServices = javaGenericServices
    self.pyGenericServices = pyGenericServices
    self.deprecated = deprecated
    self.ccEnableArenas = ccEnableArenas
    self.objcClassPrefix = objcClassPrefix
    self.csharpNamespace = csharpNamespace
    self.swiftPrefix = swiftPrefix
    if !uninterpretedOption.isEmpty {
      self.uninterpretedOption = uninterpretedOption
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &javaPackage)
    case 8: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &javaOuterClassname)
    case 10: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &javaMultipleFiles)
    case 20: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &javaGenerateEqualsAndHash)
    case 27: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &javaStringCheckUtf8)
    case 9: handled = try setter.decodeOptionalField(fieldType: Google_Protobuf_FileOptions.OptimizeMode.self, value: &optimizeFor)
    case 11: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &goPackage)
    case 16: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &ccGenericServices)
    case 17: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &javaGenericServices)
    case 18: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &pyGenericServices)
    case 23: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &deprecated)
    case 31: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &ccEnableArenas)
    case 36: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &objcClassPrefix)
    case 37: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &csharpNamespace)
    case 39: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &swiftPrefix)
    case 999: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_UninterpretedOption.self, value: &uninterpretedOption)
    default:
      if (1000 <= protoFieldNumber && protoFieldNumber < 536870912) {
        handled = try setter.decodeExtensionField(values: &extensionFieldValues, messageType: Google_Protobuf_FileOptions.self, protoFieldNumber: protoFieldNumber)
      } else {
        handled = false
      }
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if let v = javaPackage {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 1, protoFieldName: "java_package", jsonFieldName: "javaPackage", swiftFieldName: "javaPackage")
    }
    if let v = javaOuterClassname {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 8, protoFieldName: "java_outer_classname", jsonFieldName: "javaOuterClassname", swiftFieldName: "javaOuterClassname")
    }
    if let v = optimizeFor {
      try visitor.visitSingularField(fieldType: Google_Protobuf_FileOptions.OptimizeMode.self, value: v, protoFieldNumber: 9, protoFieldName: "optimize_for", jsonFieldName: "optimizeFor", swiftFieldName: "optimizeFor")
    }
    if let v = javaMultipleFiles {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 10, protoFieldName: "java_multiple_files", jsonFieldName: "javaMultipleFiles", swiftFieldName: "javaMultipleFiles")
    }
    if let v = goPackage {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 11, protoFieldName: "go_package", jsonFieldName: "goPackage", swiftFieldName: "goPackage")
    }
    if let v = ccGenericServices {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 16, protoFieldName: "cc_generic_services", jsonFieldName: "ccGenericServices", swiftFieldName: "ccGenericServices")
    }
    if let v = javaGenericServices {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 17, protoFieldName: "java_generic_services", jsonFieldName: "javaGenericServices", swiftFieldName: "javaGenericServices")
    }
    if let v = pyGenericServices {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 18, protoFieldName: "py_generic_services", jsonFieldName: "pyGenericServices", swiftFieldName: "pyGenericServices")
    }
    if let v = javaGenerateEqualsAndHash {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 20, protoFieldName: "java_generate_equals_and_hash", jsonFieldName: "javaGenerateEqualsAndHash", swiftFieldName: "javaGenerateEqualsAndHash")
    }
    if let v = deprecated {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 23, protoFieldName: "deprecated", jsonFieldName: "deprecated", swiftFieldName: "deprecated")
    }
    if let v = javaStringCheckUtf8 {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 27, protoFieldName: "java_string_check_utf8", jsonFieldName: "javaStringCheckUtf8", swiftFieldName: "javaStringCheckUtf8")
    }
    if let v = ccEnableArenas {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 31, protoFieldName: "cc_enable_arenas", jsonFieldName: "ccEnableArenas", swiftFieldName: "ccEnableArenas")
    }
    if let v = objcClassPrefix {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 36, protoFieldName: "objc_class_prefix", jsonFieldName: "objcClassPrefix", swiftFieldName: "objcClassPrefix")
    }
    if let v = csharpNamespace {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 37, protoFieldName: "csharp_namespace", jsonFieldName: "csharpNamespace", swiftFieldName: "csharpNamespace")
    }
    if let v = swiftPrefix {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 39, protoFieldName: "swift_prefix", jsonFieldName: "swiftPrefix", swiftFieldName: "swiftPrefix")
    }
    if !uninterpretedOption.isEmpty {
      try visitor.visitRepeatedMessageField(value: uninterpretedOption, protoFieldNumber: 999, protoFieldName: "uninterpreted_option", jsonFieldName: "uninterpretedOption", swiftFieldName: "uninterpretedOption")
    }
    try extensionFieldValues.traverse(visitor: &visitor, start: 1000, end: 536870912)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_FileOptions) -> Bool {
    if ((javaPackage != nil || other.javaPackage != nil) && (javaPackage == nil || other.javaPackage == nil || javaPackage! != other.javaPackage!)) {return false}
    if ((javaOuterClassname != nil || other.javaOuterClassname != nil) && (javaOuterClassname == nil || other.javaOuterClassname == nil || javaOuterClassname! != other.javaOuterClassname!)) {return false}
    if (((javaMultipleFiles != nil && javaMultipleFiles! != false) || (other.javaMultipleFiles != nil && other.javaMultipleFiles! != false)) && (javaMultipleFiles == nil || other.javaMultipleFiles == nil || javaMultipleFiles! != other.javaMultipleFiles!)) {return false}
    if (((javaGenerateEqualsAndHash != nil && javaGenerateEqualsAndHash! != false) || (other.javaGenerateEqualsAndHash != nil && other.javaGenerateEqualsAndHash! != false)) && (javaGenerateEqualsAndHash == nil || other.javaGenerateEqualsAndHash == nil || javaGenerateEqualsAndHash! != other.javaGenerateEqualsAndHash!)) {return false}
    if (((javaStringCheckUtf8 != nil && javaStringCheckUtf8! != false) || (other.javaStringCheckUtf8 != nil && other.javaStringCheckUtf8! != false)) && (javaStringCheckUtf8 == nil || other.javaStringCheckUtf8 == nil || javaStringCheckUtf8! != other.javaStringCheckUtf8!)) {return false}
    if (((optimizeFor != nil && optimizeFor! != Google_Protobuf_FileOptions.OptimizeMode.speed) || (other.optimizeFor != nil && other.optimizeFor! != Google_Protobuf_FileOptions.OptimizeMode.speed)) && (optimizeFor == nil || other.optimizeFor == nil || optimizeFor! != other.optimizeFor!)) {return false}
    if ((goPackage != nil || other.goPackage != nil) && (goPackage == nil || other.goPackage == nil || goPackage! != other.goPackage!)) {return false}
    if (((ccGenericServices != nil && ccGenericServices! != false) || (other.ccGenericServices != nil && other.ccGenericServices! != false)) && (ccGenericServices == nil || other.ccGenericServices == nil || ccGenericServices! != other.ccGenericServices!)) {return false}
    if (((javaGenericServices != nil && javaGenericServices! != false) || (other.javaGenericServices != nil && other.javaGenericServices! != false)) && (javaGenericServices == nil || other.javaGenericServices == nil || javaGenericServices! != other.javaGenericServices!)) {return false}
    if (((pyGenericServices != nil && pyGenericServices! != false) || (other.pyGenericServices != nil && other.pyGenericServices! != false)) && (pyGenericServices == nil || other.pyGenericServices == nil || pyGenericServices! != other.pyGenericServices!)) {return false}
    if (((deprecated != nil && deprecated! != false) || (other.deprecated != nil && other.deprecated! != false)) && (deprecated == nil || other.deprecated == nil || deprecated! != other.deprecated!)) {return false}
    if (((ccEnableArenas != nil && ccEnableArenas! != false) || (other.ccEnableArenas != nil && other.ccEnableArenas! != false)) && (ccEnableArenas == nil || other.ccEnableArenas == nil || ccEnableArenas! != other.ccEnableArenas!)) {return false}
    if ((objcClassPrefix != nil || other.objcClassPrefix != nil) && (objcClassPrefix == nil || other.objcClassPrefix == nil || objcClassPrefix! != other.objcClassPrefix!)) {return false}
    if ((csharpNamespace != nil || other.csharpNamespace != nil) && (csharpNamespace == nil || other.csharpNamespace == nil || csharpNamespace! != other.csharpNamespace!)) {return false}
    if ((swiftPrefix != nil || other.swiftPrefix != nil) && (swiftPrefix == nil || other.swiftPrefix == nil || swiftPrefix! != other.swiftPrefix!)) {return false}
    if uninterpretedOption != other.uninterpretedOption {return false}
    if unknown != other.unknown {return false}
    if extensionFieldValues != other.extensionFieldValues {return false}
    return true
  }

  private var extensionFieldValues = ProtobufExtensionFieldValueSet()

  public mutating func setExtensionValue<F: ProtobufExtensionField>(ext: ProtobufGenericMessageExtension<F, Google_Protobuf_FileOptions>, value: F.ValueType) {
    extensionFieldValues[ext.protoFieldNumber] = ext.set(value: value)
  }

  public func getExtensionValue<F: ProtobufExtensionField>(ext: ProtobufGenericMessageExtension<F, Google_Protobuf_FileOptions>) -> F.ValueType {
    if let fieldValue = extensionFieldValues[ext.protoFieldNumber] as? F {
      return fieldValue.value
    }
    return ext.defaultValue
  }
}

public struct Google_Protobuf_MessageOptions: ProtobufGeneratedMessage, ProtobufExtensibleMessage {
  public var swiftClassName: String {return "Google_Protobuf_MessageOptions"}
  public var protoMessageName: String {return "MessageOptions"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "messageSetWireFormat": 1,
    "noStandardDescriptorAccessor": 2,
    "deprecated": 3,
    "mapEntry": 7,
    "uninterpretedOption": 999,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "message_set_wire_format": 1,
    "no_standard_descriptor_accessor": 2,
    "deprecated": 3,
    "map_entry": 7,
    "uninterpreted_option": 999,
  ]}

  var unknown = ProtobufUnknownStorage()

  ///   Set true to use the old proto1 MessageSet wire format for extensions.
  ///   This is provided for backwards-compatibility with the MessageSet wire
  ///   format.  You should not use this for any other reason:  It's less
  ///   efficient, has fewer features, and is more complicated.
  ///  
  ///   The message must be defined exactly as follows:
  ///     message Foo {
  ///       option message_set_wire_format = true;
  ///       extensions 4 to max;
  ///     }
  ///   Note that the message cannot have any defined fields; MessageSets only
  ///   have extensions.
  ///  
  ///   All extensions of your type must be singular messages; e.g. they cannot
  ///   be int32s, enums, or repeated messages.
  ///  
  ///   Because this is an option, the above two restrictions are not enforced by
  ///   the protocol compiler.
  private var _messageSetWireFormat: Bool? = nil
  public var messageSetWireFormat: Bool? {
    get {return _messageSetWireFormat ?? false}
    set {_messageSetWireFormat = newValue}
  }

  ///   Disables the generation of the standard "descriptor()" accessor, which can
  ///   conflict with a field of the same name.  This is meant to make migration
  ///   from proto1 easier; new code should avoid fields named "descriptor".
  private var _noStandardDescriptorAccessor: Bool? = nil
  public var noStandardDescriptorAccessor: Bool? {
    get {return _noStandardDescriptorAccessor ?? false}
    set {_noStandardDescriptorAccessor = newValue}
  }

  ///   Is this message deprecated?
  ///   Depending on the target platform, this can emit Deprecated annotations
  ///   for the message, or it will be completely ignored; in the very least,
  ///   this is a formalization for deprecating messages.
  private var _deprecated: Bool? = nil
  public var deprecated: Bool? {
    get {return _deprecated ?? false}
    set {_deprecated = newValue}
  }

  ///   Whether the message is an automatically generated map entry type for the
  ///   maps field.
  ///  
  ///   For maps fields:
  ///       map<KeyType, ValueType> map_field = 1;
  ///   The parsed descriptor looks like:
  ///       message MapFieldEntry {
  ///           option map_entry = true;
  ///           optional KeyType key = 1;
  ///           optional ValueType value = 2;
  ///       }
  ///       repeated MapFieldEntry map_field = 1;
  ///  
  ///   Implementations may choose not to generate the map_entry=true message, but
  ///   use a native map in the target language to hold the keys and values.
  ///   The reflection APIs in such implementions still need to work as
  ///   if the field is a repeated message field.
  ///  
  ///   NOTE: Do not set the option in .proto files. Always use the maps syntax
  ///   instead. The option should only be implicitly set by the proto compiler
  ///   parser.
  public var mapEntry: Bool? = nil

  ///   The parser stores options it doesn't recognize here. See above.
  public var uninterpretedOption: [Google_Protobuf_UninterpretedOption] = []

  public init() {}

  public init(messageSetWireFormat: Bool? = nil,
    noStandardDescriptorAccessor: Bool? = nil,
    deprecated: Bool? = nil,
    mapEntry: Bool? = nil,
    uninterpretedOption: [Google_Protobuf_UninterpretedOption] = [])
  {
    self.messageSetWireFormat = messageSetWireFormat
    self.noStandardDescriptorAccessor = noStandardDescriptorAccessor
    self.deprecated = deprecated
    self.mapEntry = mapEntry
    if !uninterpretedOption.isEmpty {
      self.uninterpretedOption = uninterpretedOption
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &messageSetWireFormat)
    case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &noStandardDescriptorAccessor)
    case 3: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &deprecated)
    case 7: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &mapEntry)
    case 999: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_UninterpretedOption.self, value: &uninterpretedOption)
    default:
      if (1000 <= protoFieldNumber && protoFieldNumber < 536870912) {
        handled = try setter.decodeExtensionField(values: &extensionFieldValues, messageType: Google_Protobuf_MessageOptions.self, protoFieldNumber: protoFieldNumber)
      } else {
        handled = false
      }
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if let v = messageSetWireFormat {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 1, protoFieldName: "message_set_wire_format", jsonFieldName: "messageSetWireFormat", swiftFieldName: "messageSetWireFormat")
    }
    if let v = noStandardDescriptorAccessor {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 2, protoFieldName: "no_standard_descriptor_accessor", jsonFieldName: "noStandardDescriptorAccessor", swiftFieldName: "noStandardDescriptorAccessor")
    }
    if let v = deprecated {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 3, protoFieldName: "deprecated", jsonFieldName: "deprecated", swiftFieldName: "deprecated")
    }
    if let v = mapEntry {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 7, protoFieldName: "map_entry", jsonFieldName: "mapEntry", swiftFieldName: "mapEntry")
    }
    if !uninterpretedOption.isEmpty {
      try visitor.visitRepeatedMessageField(value: uninterpretedOption, protoFieldNumber: 999, protoFieldName: "uninterpreted_option", jsonFieldName: "uninterpretedOption", swiftFieldName: "uninterpretedOption")
    }
    try extensionFieldValues.traverse(visitor: &visitor, start: 1000, end: 536870912)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_MessageOptions) -> Bool {
    if (((messageSetWireFormat != nil && messageSetWireFormat! != false) || (other.messageSetWireFormat != nil && other.messageSetWireFormat! != false)) && (messageSetWireFormat == nil || other.messageSetWireFormat == nil || messageSetWireFormat! != other.messageSetWireFormat!)) {return false}
    if (((noStandardDescriptorAccessor != nil && noStandardDescriptorAccessor! != false) || (other.noStandardDescriptorAccessor != nil && other.noStandardDescriptorAccessor! != false)) && (noStandardDescriptorAccessor == nil || other.noStandardDescriptorAccessor == nil || noStandardDescriptorAccessor! != other.noStandardDescriptorAccessor!)) {return false}
    if (((deprecated != nil && deprecated! != false) || (other.deprecated != nil && other.deprecated! != false)) && (deprecated == nil || other.deprecated == nil || deprecated! != other.deprecated!)) {return false}
    if ((mapEntry != nil || other.mapEntry != nil) && (mapEntry == nil || other.mapEntry == nil || mapEntry! != other.mapEntry!)) {return false}
    if uninterpretedOption != other.uninterpretedOption {return false}
    if unknown != other.unknown {return false}
    if extensionFieldValues != other.extensionFieldValues {return false}
    return true
  }

  private var extensionFieldValues = ProtobufExtensionFieldValueSet()

  public mutating func setExtensionValue<F: ProtobufExtensionField>(ext: ProtobufGenericMessageExtension<F, Google_Protobuf_MessageOptions>, value: F.ValueType) {
    extensionFieldValues[ext.protoFieldNumber] = ext.set(value: value)
  }

  public func getExtensionValue<F: ProtobufExtensionField>(ext: ProtobufGenericMessageExtension<F, Google_Protobuf_MessageOptions>) -> F.ValueType {
    if let fieldValue = extensionFieldValues[ext.protoFieldNumber] as? F {
      return fieldValue.value
    }
    return ext.defaultValue
  }
}

public struct Google_Protobuf_FieldOptions: ProtobufGeneratedMessage, ProtobufExtensibleMessage {
  public var swiftClassName: String {return "Google_Protobuf_FieldOptions"}
  public var protoMessageName: String {return "FieldOptions"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "ctype": 1,
    "packed": 2,
    "jstype": 6,
    "lazy": 5,
    "deprecated": 3,
    "weak": 10,
    "uninterpretedOption": 999,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "ctype": 1,
    "packed": 2,
    "jstype": 6,
    "lazy": 5,
    "deprecated": 3,
    "weak": 10,
    "uninterpreted_option": 999,
  ]}

  var unknown = ProtobufUnknownStorage()

  public enum CType: ProtobufEnum {
    public typealias RawValue = Int

    ///   Default mode.
    case string // = 0
    case cord // = 1
    case stringPiece // = 2

    public init() {
      self = .string
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .string
      case 1: self = .cord
      case 2: self = .stringPiece
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "string": self = .string
      case "cord": self = .cord
      case "stringPiece": self = .stringPiece
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "STRING": self = .string
      case "CORD": self = .cord
      case "STRING_PIECE": self = .stringPiece
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "STRING": self = .string
      case "CORD": self = .cord
      case "STRING_PIECE": self = .stringPiece
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .string: return 0
        case .cord: return 1
        case .stringPiece: return 2
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .string: return "\"STRING\""
        case .cord: return "\"CORD\""
        case .stringPiece: return "\"STRING_PIECE\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .string: return ".string"
        case .cord: return ".cord"
        case .stringPiece: return ".stringPiece"
        }
      }
    }

  }

  public enum JSType: ProtobufEnum {
    public typealias RawValue = Int

    ///   Use the default type.
    case jsNormal // = 0

    ///   Use JavaScript strings.
    case jsString // = 1

    ///   Use JavaScript numbers.
    case jsNumber // = 2

    public init() {
      self = .jsNormal
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .jsNormal
      case 1: self = .jsString
      case 2: self = .jsNumber
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "jsNormal": self = .jsNormal
      case "jsString": self = .jsString
      case "jsNumber": self = .jsNumber
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "JS_NORMAL": self = .jsNormal
      case "JS_STRING": self = .jsString
      case "JS_NUMBER": self = .jsNumber
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "JS_NORMAL": self = .jsNormal
      case "JS_STRING": self = .jsString
      case "JS_NUMBER": self = .jsNumber
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .jsNormal: return 0
        case .jsString: return 1
        case .jsNumber: return 2
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .jsNormal: return "\"JS_NORMAL\""
        case .jsString: return "\"JS_STRING\""
        case .jsNumber: return "\"JS_NUMBER\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .jsNormal: return ".jsNormal"
        case .jsString: return ".jsString"
        case .jsNumber: return ".jsNumber"
        }
      }
    }

  }

  ///   The ctype option instructs the C++ code generator to use a different
  ///   representation of the field than it normally would.  See the specific
  ///   options below.  This option is not yet implemented in the open source
  ///   release -- sorry, we'll try to include it in a future version!
  private var _ctype: Google_Protobuf_FieldOptions.CType? = nil
  public var ctype: Google_Protobuf_FieldOptions.CType? {
    get {return _ctype ?? Google_Protobuf_FieldOptions.CType.string}
    set {_ctype = newValue}
  }

  ///   The packed option can be enabled for repeated primitive fields to enable
  ///   a more efficient representation on the wire. Rather than repeatedly
  ///   writing the tag and type for each element, the entire array is encoded as
  ///   a single length-delimited blob. In proto3, only explicit setting it to
  ///   false will avoid using packed encoding.
  public var packed: Bool? = nil

  ///   The jstype option determines the JavaScript type used for values of the
  ///   field.  The option is permitted only for 64 bit integral and fixed types
  ///   (int64, uint64, sint64, fixed64, sfixed64).  By default these types are
  ///   represented as JavaScript strings.  This avoids loss of precision that can
  ///   happen when a large value is converted to a floating point JavaScript
  ///   numbers.  Specifying JS_NUMBER for the jstype causes the generated
  ///   JavaScript code to use the JavaScript "number" type instead of strings.
  ///   This option is an enum to permit additional types to be added,
  ///   e.g. goog.math.Integer.
  private var _jstype: Google_Protobuf_FieldOptions.JSType? = nil
  public var jstype: Google_Protobuf_FieldOptions.JSType? {
    get {return _jstype ?? Google_Protobuf_FieldOptions.JSType.jsNormal}
    set {_jstype = newValue}
  }

  ///   Should this field be parsed lazily?  Lazy applies only to message-type
  ///   fields.  It means that when the outer message is initially parsed, the
  ///   inner message's contents will not be parsed but instead stored in encoded
  ///   form.  The inner message will actually be parsed when it is first accessed.
  ///  
  ///   This is only a hint.  Implementations are free to choose whether to use
  ///   eager or lazy parsing regardless of the value of this option.  However,
  ///   setting this option true suggests that the protocol author believes that
  ///   using lazy parsing on this field is worth the additional bookkeeping
  ///   overhead typically needed to implement it.
  ///  
  ///   This option does not affect the public interface of any generated code;
  ///   all method signatures remain the same.  Furthermore, thread-safety of the
  ///   interface is not affected by this option; const methods remain safe to
  ///   call from multiple threads concurrently, while non-const methods continue
  ///   to require exclusive access.
  ///  
  ///  
  ///   Note that implementations may choose not to check required fields within
  ///   a lazy sub-message.  That is, calling IsInitialized() on the outher message
  ///   may return true even if the inner message has missing required fields.
  ///   This is necessary because otherwise the inner message would have to be
  ///   parsed in order to perform the check, defeating the purpose of lazy
  ///   parsing.  An implementation which chooses not to check required fields
  ///   must be consistent about it.  That is, for any particular sub-message, the
  ///   implementation must either *always* check its required fields, or *never*
  ///   check its required fields, regardless of whether or not the message has
  ///   been parsed.
  private var _lazy: Bool? = nil
  public var lazy: Bool? {
    get {return _lazy ?? false}
    set {_lazy = newValue}
  }

  ///   Is this field deprecated?
  ///   Depending on the target platform, this can emit Deprecated annotations
  ///   for accessors, or it will be completely ignored; in the very least, this
  ///   is a formalization for deprecating fields.
  private var _deprecated: Bool? = nil
  public var deprecated: Bool? {
    get {return _deprecated ?? false}
    set {_deprecated = newValue}
  }

  ///   For Google-internal migration only. Do not use.
  private var _weak: Bool? = nil
  public var weak: Bool? {
    get {return _weak ?? false}
    set {_weak = newValue}
  }

  ///   The parser stores options it doesn't recognize here. See above.
  public var uninterpretedOption: [Google_Protobuf_UninterpretedOption] = []

  public init() {}

  public init(ctype: Google_Protobuf_FieldOptions.CType? = nil,
    packed: Bool? = nil,
    jstype: Google_Protobuf_FieldOptions.JSType? = nil,
    lazy: Bool? = nil,
    deprecated: Bool? = nil,
    weak: Bool? = nil,
    uninterpretedOption: [Google_Protobuf_UninterpretedOption] = [])
  {
    self.ctype = ctype
    self.packed = packed
    self.jstype = jstype
    self.lazy = lazy
    self.deprecated = deprecated
    self.weak = weak
    if !uninterpretedOption.isEmpty {
      self.uninterpretedOption = uninterpretedOption
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeOptionalField(fieldType: Google_Protobuf_FieldOptions.CType.self, value: &ctype)
    case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &packed)
    case 6: handled = try setter.decodeOptionalField(fieldType: Google_Protobuf_FieldOptions.JSType.self, value: &jstype)
    case 5: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &lazy)
    case 3: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &deprecated)
    case 10: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &weak)
    case 999: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_UninterpretedOption.self, value: &uninterpretedOption)
    default:
      if (1000 <= protoFieldNumber && protoFieldNumber < 536870912) {
        handled = try setter.decodeExtensionField(values: &extensionFieldValues, messageType: Google_Protobuf_FieldOptions.self, protoFieldNumber: protoFieldNumber)
      } else {
        handled = false
      }
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if let v = ctype {
      try visitor.visitSingularField(fieldType: Google_Protobuf_FieldOptions.CType.self, value: v, protoFieldNumber: 1, protoFieldName: "ctype", jsonFieldName: "ctype", swiftFieldName: "ctype")
    }
    if let v = packed {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 2, protoFieldName: "packed", jsonFieldName: "packed", swiftFieldName: "packed")
    }
    if let v = deprecated {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 3, protoFieldName: "deprecated", jsonFieldName: "deprecated", swiftFieldName: "deprecated")
    }
    if let v = lazy {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 5, protoFieldName: "lazy", jsonFieldName: "lazy", swiftFieldName: "lazy")
    }
    if let v = jstype {
      try visitor.visitSingularField(fieldType: Google_Protobuf_FieldOptions.JSType.self, value: v, protoFieldNumber: 6, protoFieldName: "jstype", jsonFieldName: "jstype", swiftFieldName: "jstype")
    }
    if let v = weak {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 10, protoFieldName: "weak", jsonFieldName: "weak", swiftFieldName: "weak")
    }
    if !uninterpretedOption.isEmpty {
      try visitor.visitRepeatedMessageField(value: uninterpretedOption, protoFieldNumber: 999, protoFieldName: "uninterpreted_option", jsonFieldName: "uninterpretedOption", swiftFieldName: "uninterpretedOption")
    }
    try extensionFieldValues.traverse(visitor: &visitor, start: 1000, end: 536870912)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_FieldOptions) -> Bool {
    if (((ctype != nil && ctype! != Google_Protobuf_FieldOptions.CType.string) || (other.ctype != nil && other.ctype! != Google_Protobuf_FieldOptions.CType.string)) && (ctype == nil || other.ctype == nil || ctype! != other.ctype!)) {return false}
    if ((packed != nil || other.packed != nil) && (packed == nil || other.packed == nil || packed! != other.packed!)) {return false}
    if (((jstype != nil && jstype! != Google_Protobuf_FieldOptions.JSType.jsNormal) || (other.jstype != nil && other.jstype! != Google_Protobuf_FieldOptions.JSType.jsNormal)) && (jstype == nil || other.jstype == nil || jstype! != other.jstype!)) {return false}
    if (((lazy != nil && lazy! != false) || (other.lazy != nil && other.lazy! != false)) && (lazy == nil || other.lazy == nil || lazy! != other.lazy!)) {return false}
    if (((deprecated != nil && deprecated! != false) || (other.deprecated != nil && other.deprecated! != false)) && (deprecated == nil || other.deprecated == nil || deprecated! != other.deprecated!)) {return false}
    if (((weak != nil && weak! != false) || (other.weak != nil && other.weak! != false)) && (weak == nil || other.weak == nil || weak! != other.weak!)) {return false}
    if uninterpretedOption != other.uninterpretedOption {return false}
    if unknown != other.unknown {return false}
    if extensionFieldValues != other.extensionFieldValues {return false}
    return true
  }

  private var extensionFieldValues = ProtobufExtensionFieldValueSet()

  public mutating func setExtensionValue<F: ProtobufExtensionField>(ext: ProtobufGenericMessageExtension<F, Google_Protobuf_FieldOptions>, value: F.ValueType) {
    extensionFieldValues[ext.protoFieldNumber] = ext.set(value: value)
  }

  public func getExtensionValue<F: ProtobufExtensionField>(ext: ProtobufGenericMessageExtension<F, Google_Protobuf_FieldOptions>) -> F.ValueType {
    if let fieldValue = extensionFieldValues[ext.protoFieldNumber] as? F {
      return fieldValue.value
    }
    return ext.defaultValue
  }
}

public struct Google_Protobuf_OneofOptions: ProtobufGeneratedMessage, ProtobufExtensibleMessage {
  public var swiftClassName: String {return "Google_Protobuf_OneofOptions"}
  public var protoMessageName: String {return "OneofOptions"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "uninterpretedOption": 999,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "uninterpreted_option": 999,
  ]}

  var unknown = ProtobufUnknownStorage()

  ///   The parser stores options it doesn't recognize here. See above.
  public var uninterpretedOption: [Google_Protobuf_UninterpretedOption] = []

  public init() {}

  public init(uninterpretedOption: [Google_Protobuf_UninterpretedOption] = [])
  {
    if !uninterpretedOption.isEmpty {
      self.uninterpretedOption = uninterpretedOption
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 999: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_UninterpretedOption.self, value: &uninterpretedOption)
    default:
      if (1000 <= protoFieldNumber && protoFieldNumber < 536870912) {
        handled = try setter.decodeExtensionField(values: &extensionFieldValues, messageType: Google_Protobuf_OneofOptions.self, protoFieldNumber: protoFieldNumber)
      } else {
        handled = false
      }
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !uninterpretedOption.isEmpty {
      try visitor.visitRepeatedMessageField(value: uninterpretedOption, protoFieldNumber: 999, protoFieldName: "uninterpreted_option", jsonFieldName: "uninterpretedOption", swiftFieldName: "uninterpretedOption")
    }
    try extensionFieldValues.traverse(visitor: &visitor, start: 1000, end: 536870912)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_OneofOptions) -> Bool {
    if uninterpretedOption != other.uninterpretedOption {return false}
    if unknown != other.unknown {return false}
    if extensionFieldValues != other.extensionFieldValues {return false}
    return true
  }

  private var extensionFieldValues = ProtobufExtensionFieldValueSet()

  public mutating func setExtensionValue<F: ProtobufExtensionField>(ext: ProtobufGenericMessageExtension<F, Google_Protobuf_OneofOptions>, value: F.ValueType) {
    extensionFieldValues[ext.protoFieldNumber] = ext.set(value: value)
  }

  public func getExtensionValue<F: ProtobufExtensionField>(ext: ProtobufGenericMessageExtension<F, Google_Protobuf_OneofOptions>) -> F.ValueType {
    if let fieldValue = extensionFieldValues[ext.protoFieldNumber] as? F {
      return fieldValue.value
    }
    return ext.defaultValue
  }
}

public struct Google_Protobuf_EnumOptions: ProtobufGeneratedMessage, ProtobufExtensibleMessage {
  public var swiftClassName: String {return "Google_Protobuf_EnumOptions"}
  public var protoMessageName: String {return "EnumOptions"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "allowAlias": 2,
    "deprecated": 3,
    "uninterpretedOption": 999,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "allow_alias": 2,
    "deprecated": 3,
    "uninterpreted_option": 999,
  ]}

  var unknown = ProtobufUnknownStorage()

  ///   Set this option to true to allow mapping different tag names to the same
  ///   value.
  public var allowAlias: Bool? = nil

  ///   Is this enum deprecated?
  ///   Depending on the target platform, this can emit Deprecated annotations
  ///   for the enum, or it will be completely ignored; in the very least, this
  ///   is a formalization for deprecating enums.
  private var _deprecated: Bool? = nil
  public var deprecated: Bool? {
    get {return _deprecated ?? false}
    set {_deprecated = newValue}
  }

  ///   The parser stores options it doesn't recognize here. See above.
  public var uninterpretedOption: [Google_Protobuf_UninterpretedOption] = []

  public init() {}

  public init(allowAlias: Bool? = nil,
    deprecated: Bool? = nil,
    uninterpretedOption: [Google_Protobuf_UninterpretedOption] = [])
  {
    self.allowAlias = allowAlias
    self.deprecated = deprecated
    if !uninterpretedOption.isEmpty {
      self.uninterpretedOption = uninterpretedOption
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &allowAlias)
    case 3: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &deprecated)
    case 999: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_UninterpretedOption.self, value: &uninterpretedOption)
    default:
      if (1000 <= protoFieldNumber && protoFieldNumber < 536870912) {
        handled = try setter.decodeExtensionField(values: &extensionFieldValues, messageType: Google_Protobuf_EnumOptions.self, protoFieldNumber: protoFieldNumber)
      } else {
        handled = false
      }
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if let v = allowAlias {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 2, protoFieldName: "allow_alias", jsonFieldName: "allowAlias", swiftFieldName: "allowAlias")
    }
    if let v = deprecated {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 3, protoFieldName: "deprecated", jsonFieldName: "deprecated", swiftFieldName: "deprecated")
    }
    if !uninterpretedOption.isEmpty {
      try visitor.visitRepeatedMessageField(value: uninterpretedOption, protoFieldNumber: 999, protoFieldName: "uninterpreted_option", jsonFieldName: "uninterpretedOption", swiftFieldName: "uninterpretedOption")
    }
    try extensionFieldValues.traverse(visitor: &visitor, start: 1000, end: 536870912)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_EnumOptions) -> Bool {
    if ((allowAlias != nil || other.allowAlias != nil) && (allowAlias == nil || other.allowAlias == nil || allowAlias! != other.allowAlias!)) {return false}
    if (((deprecated != nil && deprecated! != false) || (other.deprecated != nil && other.deprecated! != false)) && (deprecated == nil || other.deprecated == nil || deprecated! != other.deprecated!)) {return false}
    if uninterpretedOption != other.uninterpretedOption {return false}
    if unknown != other.unknown {return false}
    if extensionFieldValues != other.extensionFieldValues {return false}
    return true
  }

  private var extensionFieldValues = ProtobufExtensionFieldValueSet()

  public mutating func setExtensionValue<F: ProtobufExtensionField>(ext: ProtobufGenericMessageExtension<F, Google_Protobuf_EnumOptions>, value: F.ValueType) {
    extensionFieldValues[ext.protoFieldNumber] = ext.set(value: value)
  }

  public func getExtensionValue<F: ProtobufExtensionField>(ext: ProtobufGenericMessageExtension<F, Google_Protobuf_EnumOptions>) -> F.ValueType {
    if let fieldValue = extensionFieldValues[ext.protoFieldNumber] as? F {
      return fieldValue.value
    }
    return ext.defaultValue
  }
}

public struct Google_Protobuf_EnumValueOptions: ProtobufGeneratedMessage, ProtobufExtensibleMessage {
  public var swiftClassName: String {return "Google_Protobuf_EnumValueOptions"}
  public var protoMessageName: String {return "EnumValueOptions"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "deprecated": 1,
    "uninterpretedOption": 999,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "deprecated": 1,
    "uninterpreted_option": 999,
  ]}

  var unknown = ProtobufUnknownStorage()

  ///   Is this enum value deprecated?
  ///   Depending on the target platform, this can emit Deprecated annotations
  ///   for the enum value, or it will be completely ignored; in the very least,
  ///   this is a formalization for deprecating enum values.
  private var _deprecated: Bool? = nil
  public var deprecated: Bool? {
    get {return _deprecated ?? false}
    set {_deprecated = newValue}
  }

  ///   The parser stores options it doesn't recognize here. See above.
  public var uninterpretedOption: [Google_Protobuf_UninterpretedOption] = []

  public init() {}

  public init(deprecated: Bool? = nil,
    uninterpretedOption: [Google_Protobuf_UninterpretedOption] = [])
  {
    self.deprecated = deprecated
    if !uninterpretedOption.isEmpty {
      self.uninterpretedOption = uninterpretedOption
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &deprecated)
    case 999: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_UninterpretedOption.self, value: &uninterpretedOption)
    default:
      if (1000 <= protoFieldNumber && protoFieldNumber < 536870912) {
        handled = try setter.decodeExtensionField(values: &extensionFieldValues, messageType: Google_Protobuf_EnumValueOptions.self, protoFieldNumber: protoFieldNumber)
      } else {
        handled = false
      }
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if let v = deprecated {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 1, protoFieldName: "deprecated", jsonFieldName: "deprecated", swiftFieldName: "deprecated")
    }
    if !uninterpretedOption.isEmpty {
      try visitor.visitRepeatedMessageField(value: uninterpretedOption, protoFieldNumber: 999, protoFieldName: "uninterpreted_option", jsonFieldName: "uninterpretedOption", swiftFieldName: "uninterpretedOption")
    }
    try extensionFieldValues.traverse(visitor: &visitor, start: 1000, end: 536870912)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_EnumValueOptions) -> Bool {
    if (((deprecated != nil && deprecated! != false) || (other.deprecated != nil && other.deprecated! != false)) && (deprecated == nil || other.deprecated == nil || deprecated! != other.deprecated!)) {return false}
    if uninterpretedOption != other.uninterpretedOption {return false}
    if unknown != other.unknown {return false}
    if extensionFieldValues != other.extensionFieldValues {return false}
    return true
  }

  private var extensionFieldValues = ProtobufExtensionFieldValueSet()

  public mutating func setExtensionValue<F: ProtobufExtensionField>(ext: ProtobufGenericMessageExtension<F, Google_Protobuf_EnumValueOptions>, value: F.ValueType) {
    extensionFieldValues[ext.protoFieldNumber] = ext.set(value: value)
  }

  public func getExtensionValue<F: ProtobufExtensionField>(ext: ProtobufGenericMessageExtension<F, Google_Protobuf_EnumValueOptions>) -> F.ValueType {
    if let fieldValue = extensionFieldValues[ext.protoFieldNumber] as? F {
      return fieldValue.value
    }
    return ext.defaultValue
  }
}

public struct Google_Protobuf_ServiceOptions: ProtobufGeneratedMessage, ProtobufExtensibleMessage {
  public var swiftClassName: String {return "Google_Protobuf_ServiceOptions"}
  public var protoMessageName: String {return "ServiceOptions"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "deprecated": 33,
    "uninterpretedOption": 999,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "deprecated": 33,
    "uninterpreted_option": 999,
  ]}

  var unknown = ProtobufUnknownStorage()

  //  Note:  Field numbers 1 through 32 are reserved for Google's internal RPC
  //    framework.  We apologize for hoarding these numbers to ourselves, but
  //    we were already using them long before we decided to release Protocol
  //    Buffers.

  ///   Is this service deprecated?
  ///   Depending on the target platform, this can emit Deprecated annotations
  ///   for the service, or it will be completely ignored; in the very least,
  ///   this is a formalization for deprecating services.
  private var _deprecated: Bool? = nil
  public var deprecated: Bool? {
    get {return _deprecated ?? false}
    set {_deprecated = newValue}
  }

  ///   The parser stores options it doesn't recognize here. See above.
  public var uninterpretedOption: [Google_Protobuf_UninterpretedOption] = []

  public init() {}

  public init(deprecated: Bool? = nil,
    uninterpretedOption: [Google_Protobuf_UninterpretedOption] = [])
  {
    self.deprecated = deprecated
    if !uninterpretedOption.isEmpty {
      self.uninterpretedOption = uninterpretedOption
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 33: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &deprecated)
    case 999: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_UninterpretedOption.self, value: &uninterpretedOption)
    default:
      if (1000 <= protoFieldNumber && protoFieldNumber < 536870912) {
        handled = try setter.decodeExtensionField(values: &extensionFieldValues, messageType: Google_Protobuf_ServiceOptions.self, protoFieldNumber: protoFieldNumber)
      } else {
        handled = false
      }
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if let v = deprecated {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 33, protoFieldName: "deprecated", jsonFieldName: "deprecated", swiftFieldName: "deprecated")
    }
    if !uninterpretedOption.isEmpty {
      try visitor.visitRepeatedMessageField(value: uninterpretedOption, protoFieldNumber: 999, protoFieldName: "uninterpreted_option", jsonFieldName: "uninterpretedOption", swiftFieldName: "uninterpretedOption")
    }
    try extensionFieldValues.traverse(visitor: &visitor, start: 1000, end: 536870912)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_ServiceOptions) -> Bool {
    if (((deprecated != nil && deprecated! != false) || (other.deprecated != nil && other.deprecated! != false)) && (deprecated == nil || other.deprecated == nil || deprecated! != other.deprecated!)) {return false}
    if uninterpretedOption != other.uninterpretedOption {return false}
    if unknown != other.unknown {return false}
    if extensionFieldValues != other.extensionFieldValues {return false}
    return true
  }

  private var extensionFieldValues = ProtobufExtensionFieldValueSet()

  public mutating func setExtensionValue<F: ProtobufExtensionField>(ext: ProtobufGenericMessageExtension<F, Google_Protobuf_ServiceOptions>, value: F.ValueType) {
    extensionFieldValues[ext.protoFieldNumber] = ext.set(value: value)
  }

  public func getExtensionValue<F: ProtobufExtensionField>(ext: ProtobufGenericMessageExtension<F, Google_Protobuf_ServiceOptions>) -> F.ValueType {
    if let fieldValue = extensionFieldValues[ext.protoFieldNumber] as? F {
      return fieldValue.value
    }
    return ext.defaultValue
  }
}

public struct Google_Protobuf_MethodOptions: ProtobufGeneratedMessage, ProtobufExtensibleMessage {
  public var swiftClassName: String {return "Google_Protobuf_MethodOptions"}
  public var protoMessageName: String {return "MethodOptions"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "deprecated": 33,
    "uninterpretedOption": 999,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "deprecated": 33,
    "uninterpreted_option": 999,
  ]}

  var unknown = ProtobufUnknownStorage()

  //  Note:  Field numbers 1 through 32 are reserved for Google's internal RPC
  //    framework.  We apologize for hoarding these numbers to ourselves, but
  //    we were already using them long before we decided to release Protocol
  //    Buffers.

  ///   Is this method deprecated?
  ///   Depending on the target platform, this can emit Deprecated annotations
  ///   for the method, or it will be completely ignored; in the very least,
  ///   this is a formalization for deprecating methods.
  private var _deprecated: Bool? = nil
  public var deprecated: Bool? {
    get {return _deprecated ?? false}
    set {_deprecated = newValue}
  }

  ///   The parser stores options it doesn't recognize here. See above.
  public var uninterpretedOption: [Google_Protobuf_UninterpretedOption] = []

  public init() {}

  public init(deprecated: Bool? = nil,
    uninterpretedOption: [Google_Protobuf_UninterpretedOption] = [])
  {
    self.deprecated = deprecated
    if !uninterpretedOption.isEmpty {
      self.uninterpretedOption = uninterpretedOption
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 33: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &deprecated)
    case 999: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_UninterpretedOption.self, value: &uninterpretedOption)
    default:
      if (1000 <= protoFieldNumber && protoFieldNumber < 536870912) {
        handled = try setter.decodeExtensionField(values: &extensionFieldValues, messageType: Google_Protobuf_MethodOptions.self, protoFieldNumber: protoFieldNumber)
      } else {
        handled = false
      }
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if let v = deprecated {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 33, protoFieldName: "deprecated", jsonFieldName: "deprecated", swiftFieldName: "deprecated")
    }
    if !uninterpretedOption.isEmpty {
      try visitor.visitRepeatedMessageField(value: uninterpretedOption, protoFieldNumber: 999, protoFieldName: "uninterpreted_option", jsonFieldName: "uninterpretedOption", swiftFieldName: "uninterpretedOption")
    }
    try extensionFieldValues.traverse(visitor: &visitor, start: 1000, end: 536870912)
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_MethodOptions) -> Bool {
    if (((deprecated != nil && deprecated! != false) || (other.deprecated != nil && other.deprecated! != false)) && (deprecated == nil || other.deprecated == nil || deprecated! != other.deprecated!)) {return false}
    if uninterpretedOption != other.uninterpretedOption {return false}
    if unknown != other.unknown {return false}
    if extensionFieldValues != other.extensionFieldValues {return false}
    return true
  }

  private var extensionFieldValues = ProtobufExtensionFieldValueSet()

  public mutating func setExtensionValue<F: ProtobufExtensionField>(ext: ProtobufGenericMessageExtension<F, Google_Protobuf_MethodOptions>, value: F.ValueType) {
    extensionFieldValues[ext.protoFieldNumber] = ext.set(value: value)
  }

  public func getExtensionValue<F: ProtobufExtensionField>(ext: ProtobufGenericMessageExtension<F, Google_Protobuf_MethodOptions>) -> F.ValueType {
    if let fieldValue = extensionFieldValues[ext.protoFieldNumber] as? F {
      return fieldValue.value
    }
    return ext.defaultValue
  }
}

///   A message representing a option the parser does not recognize. This only
///   appears in options protos created by the compiler::Parser class.
///   DescriptorPool resolves these when building Descriptor objects. Therefore,
///   options protos in descriptor objects (e.g. returned by Descriptor::options(),
///   or produced by Descriptor::CopyTo()) will never have UninterpretedOptions
///   in them.
public struct Google_Protobuf_UninterpretedOption: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Google_Protobuf_UninterpretedOption"}
  public var protoMessageName: String {return "UninterpretedOption"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 2,
    "identifierValue": 3,
    "positiveIntValue": 4,
    "negativeIntValue": 5,
    "doubleValue": 6,
    "stringValue": 7,
    "aggregateValue": 8,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 2,
    "identifier_value": 3,
    "positive_int_value": 4,
    "negative_int_value": 5,
    "double_value": 6,
    "string_value": 7,
    "aggregate_value": 8,
  ]}

  var unknown = ProtobufUnknownStorage()

  ///   The name of the uninterpreted option.  Each string represents a segment in
  ///   a dot-separated name.  is_extension is true iff a segment represents an
  ///   extension (denoted with parentheses in options specs in .proto files).
  ///   E.g.,{ ["foo", false], ["bar.baz", true], ["qux", false] } represents
  ///   "foo.(bar.baz).qux".
  public struct NamePart: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Google_Protobuf_UninterpretedOption.NamePart"}
    public var protoMessageName: String {return "NamePart"}
    public var protoPackageName: String {return "google.protobuf"}
    public var jsonFieldNames: [String: Int] {return [
      "namePart": 1,
      "isExtension": 2,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "name_part": 1,
      "is_extension": 2,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var namePart: String = ""

    public var isExtension: Bool = false

    public init() {}

    public init(namePart: String = "",
      isExtension: Bool = false)
    {
      self.namePart = namePart
      self.isExtension = isExtension
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &namePart)
      case 2: handled = try setter.decodeRequiredField(fieldType: ProtobufBool.self, value: &isExtension)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: namePart, protoFieldNumber: 1, protoFieldName: "name_part", jsonFieldName: "namePart", swiftFieldName: "namePart")
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: isExtension, protoFieldNumber: 2, protoFieldName: "is_extension", jsonFieldName: "isExtension", swiftFieldName: "isExtension")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Google_Protobuf_UninterpretedOption.NamePart) -> Bool {
      if namePart != other.namePart {return false}
      if isExtension != other.isExtension {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public var name: [Google_Protobuf_UninterpretedOption.NamePart] = []

  ///   The value of the uninterpreted option, in whatever type the tokenizer
  ///   identified it as during parsing. Exactly one of these should be set.
  public var identifierValue: String? = nil

  public var positiveIntValue: UInt64? = nil

  public var negativeIntValue: Int64? = nil

  public var doubleValue: Double? = nil

  public var stringValue: Data? = nil

  public var aggregateValue: String? = nil

  public init() {}

  public init(name: [Google_Protobuf_UninterpretedOption.NamePart] = [],
    identifierValue: String? = nil,
    positiveIntValue: UInt64? = nil,
    negativeIntValue: Int64? = nil,
    doubleValue: Double? = nil,
    stringValue: Data? = nil,
    aggregateValue: String? = nil)
  {
    if !name.isEmpty {
      self.name = name
    }
    self.identifierValue = identifierValue
    self.positiveIntValue = positiveIntValue
    self.negativeIntValue = negativeIntValue
    self.doubleValue = doubleValue
    self.stringValue = stringValue
    self.aggregateValue = aggregateValue
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 2: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_UninterpretedOption.NamePart.self, value: &name)
    case 3: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &identifierValue)
    case 4: handled = try setter.decodeOptionalField(fieldType: ProtobufUInt64.self, value: &positiveIntValue)
    case 5: handled = try setter.decodeOptionalField(fieldType: ProtobufInt64.self, value: &negativeIntValue)
    case 6: handled = try setter.decodeOptionalField(fieldType: ProtobufDouble.self, value: &doubleValue)
    case 7: handled = try setter.decodeOptionalField(fieldType: ProtobufBytes.self, value: &stringValue)
    case 8: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &aggregateValue)
    default:
      handled = false
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !name.isEmpty {
      try visitor.visitRepeatedMessageField(value: name, protoFieldNumber: 2, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
    }
    if let v = identifierValue {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 3, protoFieldName: "identifier_value", jsonFieldName: "identifierValue", swiftFieldName: "identifierValue")
    }
    if let v = positiveIntValue {
      try visitor.visitSingularField(fieldType: ProtobufUInt64.self, value: v, protoFieldNumber: 4, protoFieldName: "positive_int_value", jsonFieldName: "positiveIntValue", swiftFieldName: "positiveIntValue")
    }
    if let v = negativeIntValue {
      try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: v, protoFieldNumber: 5, protoFieldName: "negative_int_value", jsonFieldName: "negativeIntValue", swiftFieldName: "negativeIntValue")
    }
    if let v = doubleValue {
      try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: v, protoFieldNumber: 6, protoFieldName: "double_value", jsonFieldName: "doubleValue", swiftFieldName: "doubleValue")
    }
    if let v = stringValue {
      try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: v, protoFieldNumber: 7, protoFieldName: "string_value", jsonFieldName: "stringValue", swiftFieldName: "stringValue")
    }
    if let v = aggregateValue {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 8, protoFieldName: "aggregate_value", jsonFieldName: "aggregateValue", swiftFieldName: "aggregateValue")
    }
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_UninterpretedOption) -> Bool {
    if name != other.name {return false}
    if ((identifierValue != nil || other.identifierValue != nil) && (identifierValue == nil || other.identifierValue == nil || identifierValue! != other.identifierValue!)) {return false}
    if ((positiveIntValue != nil || other.positiveIntValue != nil) && (positiveIntValue == nil || other.positiveIntValue == nil || positiveIntValue! != other.positiveIntValue!)) {return false}
    if ((negativeIntValue != nil || other.negativeIntValue != nil) && (negativeIntValue == nil || other.negativeIntValue == nil || negativeIntValue! != other.negativeIntValue!)) {return false}
    if ((doubleValue != nil || other.doubleValue != nil) && (doubleValue == nil || other.doubleValue == nil || doubleValue! != other.doubleValue!)) {return false}
    if ((stringValue != nil || other.stringValue != nil) && (stringValue == nil || other.stringValue == nil || stringValue! != other.stringValue!)) {return false}
    if ((aggregateValue != nil || other.aggregateValue != nil) && (aggregateValue == nil || other.aggregateValue == nil || aggregateValue! != other.aggregateValue!)) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

//  ===================================================================
//  Optional source code info

///   Encapsulates information about the original source file from which a
///   FileDescriptorProto was generated.
public struct Google_Protobuf_SourceCodeInfo: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Google_Protobuf_SourceCodeInfo"}
  public var protoMessageName: String {return "SourceCodeInfo"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "location": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "location": 1,
  ]}

  var unknown = ProtobufUnknownStorage()

  public struct Location: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Google_Protobuf_SourceCodeInfo.Location"}
    public var protoMessageName: String {return "Location"}
    public var protoPackageName: String {return "google.protobuf"}
    public var jsonFieldNames: [String: Int] {return [
      "path": 1,
      "span": 2,
      "leadingComments": 3,
      "trailingComments": 4,
      "leadingDetachedComments": 6,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "path": 1,
      "span": 2,
      "leading_comments": 3,
      "trailing_comments": 4,
      "leading_detached_comments": 6,
    ]}

    var unknown = ProtobufUnknownStorage()

    ///   Identifies which part of the FileDescriptorProto was defined at this
    ///   location.
    ///  
    ///   Each element is a field number or an index.  They form a path from
    ///   the root FileDescriptorProto to the place where the definition.  For
    ///   example, this path:
    ///     [ 4, 3, 2, 7, 1 ]
    ///   refers to:
    ///     file.message_type(3)  // 4, 3
    ///         .field(7)         // 2, 7
    ///         .name()           // 1
    ///   This is because FileDescriptorProto.message_type has field number 4:
    ///     repeated DescriptorProto message_type = 4;
    ///   and DescriptorProto.field has field number 2:
    ///     repeated FieldDescriptorProto field = 2;
    ///   and FieldDescriptorProto.name has field number 1:
    ///     optional string name = 1;
    ///  
    ///   Thus, the above path gives the location of a field name.  If we removed
    ///   the last element:
    ///     [ 4, 3, 2, 7 ]
    ///   this path refers to the whole field declaration (from the beginning
    ///   of the label to the terminating semicolon).
    public var path: [Int32] = []

    ///   Always has exactly three or four elements: start line, start column,
    ///   end line (optional, otherwise assumed same as start line), end column.
    ///   These are packed into a single field for efficiency.  Note that line
    ///   and column numbers are zero-based -- typically you will want to add
    ///   1 to each before displaying to a user.
    public var span: [Int32] = []

    ///   If this SourceCodeInfo represents a complete declaration, these are any
    ///   comments appearing before and after the declaration which appear to be
    ///   attached to the declaration.
    ///  
    ///   A series of line comments appearing on consecutive lines, with no other
    ///   tokens appearing on those lines, will be treated as a single comment.
    ///  
    ///   leading_detached_comments will keep paragraphs of comments that appear
    ///   before (but not connected to) the current element. Each paragraph,
    ///   separated by empty lines, will be one comment element in the repeated
    ///   field.
    ///  
    ///   Only the comment content is provided; comment markers (e.g. //) are
    ///   stripped out.  For block comments, leading whitespace and an asterisk
    ///   will be stripped from the beginning of each line other than the first.
    ///   Newlines are included in the output.
    ///  
    ///   Examples:
    ///  
    ///     optional int32 foo = 1;  // Comment attached to foo.
    ///     // Comment attached to bar.
    ///     optional int32 bar = 2;
    ///  
    ///     optional string baz = 3;
    ///     // Comment attached to baz.
    ///     // Another line attached to baz.
    ///  
    ///     // Comment attached to qux.
    ///     //
    ///     // Another line attached to qux.
    ///     optional double qux = 4;
    ///  
    ///     // Detached comment for corge. This is not leading or trailing comments
    ///     // to qux or corge because there are blank lines separating it from
    ///     // both.
    ///  
    ///     // Detached comment for corge paragraph 2.
    ///  
    ///     optional string corge = 5;
    ///     /* Block comment attached
    ///      * to corge.  Leading asterisks
    ///      * will be removed. */
    ///     /* Block comment attached to
    ///      * grault. */
    ///     optional int32 grault = 6;
    ///  
    ///     // ignored detached comments.
    public var leadingComments: String? = nil

    public var trailingComments: String? = nil

    public var leadingDetachedComments: [String] = []

    public init() {}

    public init(path: [Int32] = [],
      span: [Int32] = [],
      leadingComments: String? = nil,
      trailingComments: String? = nil,
      leadingDetachedComments: [String] = [])
    {
      if !path.isEmpty {
        self.path = path
      }
      if !span.isEmpty {
        self.span = span
      }
      self.leadingComments = leadingComments
      self.trailingComments = trailingComments
      if !leadingDetachedComments.isEmpty {
        self.leadingDetachedComments = leadingDetachedComments
      }
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodePackedField(fieldType: ProtobufInt32.self, value: &path)
      case 2: handled = try setter.decodePackedField(fieldType: ProtobufInt32.self, value: &span)
      case 3: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &leadingComments)
      case 4: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &trailingComments)
      case 6: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &leadingDetachedComments)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      if !path.isEmpty {
        try visitor.visitPackedField(fieldType: ProtobufInt32.self, value: path, protoFieldNumber: 1, protoFieldName: "path", jsonFieldName: "path", swiftFieldName: "path")
      }
      if !span.isEmpty {
        try visitor.visitPackedField(fieldType: ProtobufInt32.self, value: span, protoFieldNumber: 2, protoFieldName: "span", jsonFieldName: "span", swiftFieldName: "span")
      }
      if let v = leadingComments {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 3, protoFieldName: "leading_comments", jsonFieldName: "leadingComments", swiftFieldName: "leadingComments")
      }
      if let v = trailingComments {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 4, protoFieldName: "trailing_comments", jsonFieldName: "trailingComments", swiftFieldName: "trailingComments")
      }
      if !leadingDetachedComments.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: leadingDetachedComments, protoFieldNumber: 6, protoFieldName: "leading_detached_comments", jsonFieldName: "leadingDetachedComments", swiftFieldName: "leadingDetachedComments")
      }
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Google_Protobuf_SourceCodeInfo.Location) -> Bool {
      if path != other.path {return false}
      if span != other.span {return false}
      if ((leadingComments != nil || other.leadingComments != nil) && (leadingComments == nil || other.leadingComments == nil || leadingComments! != other.leadingComments!)) {return false}
      if ((trailingComments != nil || other.trailingComments != nil) && (trailingComments == nil || other.trailingComments == nil || trailingComments! != other.trailingComments!)) {return false}
      if leadingDetachedComments != other.leadingDetachedComments {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  ///   A Location identifies a piece of source code in a .proto file which
  ///   corresponds to a particular definition.  This information is intended
  ///   to be useful to IDEs, code indexers, documentation generators, and similar
  ///   tools.
  ///  
  ///   For example, say we have a file like:
  ///     message Foo {
  ///       optional string foo = 1;
  ///     }
  ///   Let's look at just the field definition:
  ///     optional string foo = 1;
  ///     ^       ^^     ^^  ^  ^^^
  ///     a       bc     de  f  ghi
  ///   We have the following locations:
  ///     span   path               represents
  ///     [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
  ///     [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
  ///     [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
  ///     [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
  ///     [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
  ///  
  ///   Notes:
  ///   - A location may refer to a repeated field itself (i.e. not to any
  ///     particular index within it).  This is used whenever a set of elements are
  ///     logically enclosed in a single code segment.  For example, an entire
  ///     extend block (possibly containing multiple extension definitions) will
  ///     have an outer location whose path refers to the "extensions" repeated
  ///     field without an index.
  ///   - Multiple locations may have the same path.  This happens when a single
  ///     logical declaration is spread out across multiple places.  The most
  ///     obvious example is the "extend" block again -- there may be multiple
  ///     extend blocks in the same scope, each of which will have the same path.
  ///   - A location's span is not always a subset of its parent's span.  For
  ///     example, the "extendee" of an extension declaration appears at the
  ///     beginning of the "extend" block and is shared by all extensions within
  ///     the block.
  ///   - Just because a location's span is a subset of some other location's span
  ///     does not mean that it is a descendent.  For example, a "group" defines
  ///     both a type and a field in a single declaration.  Thus, the locations
  ///     corresponding to the type and field and their components will overlap.
  ///   - Code which tries to interpret locations should probably be designed to
  ///     ignore those that it doesn't understand, as more types of locations could
  ///     be recorded in the future.
  public var location: [Google_Protobuf_SourceCodeInfo.Location] = []

  public init() {}

  public init(location: [Google_Protobuf_SourceCodeInfo.Location] = [])
  {
    if !location.isEmpty {
      self.location = location
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_SourceCodeInfo.Location.self, value: &location)
    default:
      handled = false
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !location.isEmpty {
      try visitor.visitRepeatedMessageField(value: location, protoFieldNumber: 1, protoFieldName: "location", jsonFieldName: "location", swiftFieldName: "location")
    }
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_SourceCodeInfo) -> Bool {
    if location != other.location {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

///   Describes the relationship between generated code and its original source
///   file. A GeneratedCodeInfo message is associated with only one generated
///   source file, but may contain references to different source .proto files.
public struct Google_Protobuf_GeneratedCodeInfo: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Google_Protobuf_GeneratedCodeInfo"}
  public var protoMessageName: String {return "GeneratedCodeInfo"}
  public var protoPackageName: String {return "google.protobuf"}
  public var jsonFieldNames: [String: Int] {return [
    "annotation": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "annotation": 1,
  ]}

  var unknown = ProtobufUnknownStorage()

  public struct Annotation: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Google_Protobuf_GeneratedCodeInfo.Annotation"}
    public var protoMessageName: String {return "Annotation"}
    public var protoPackageName: String {return "google.protobuf"}
    public var jsonFieldNames: [String: Int] {return [
      "path": 1,
      "sourceFile": 2,
      "begin": 3,
      "end": 4,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "path": 1,
      "source_file": 2,
      "begin": 3,
      "end": 4,
    ]}

    var unknown = ProtobufUnknownStorage()

    ///   Identifies the element in the original source .proto file. This field
    ///   is formatted the same as SourceCodeInfo.Location.path.
    public var path: [Int32] = []

    ///   Identifies the filesystem path to the original source .proto.
    public var sourceFile: String? = nil

    ///   Identifies the starting offset in bytes in the generated code
    ///   that relates to the identified object.
    public var begin: Int32? = nil

    ///   Identifies the ending offset in bytes in the generated code that
    ///   relates to the identified offset. The end offset should be one past
    ///   the last relevant byte (so the length of the text = end - begin).
    public var end: Int32? = nil

    public init() {}

    public init(path: [Int32] = [],
      sourceFile: String? = nil,
      begin: Int32? = nil,
      end: Int32? = nil)
    {
      if !path.isEmpty {
        self.path = path
      }
      self.sourceFile = sourceFile
      self.begin = begin
      self.end = end
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodePackedField(fieldType: ProtobufInt32.self, value: &path)
      case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &sourceFile)
      case 3: handled = try setter.decodeOptionalField(fieldType: ProtobufInt32.self, value: &begin)
      case 4: handled = try setter.decodeOptionalField(fieldType: ProtobufInt32.self, value: &end)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      if !path.isEmpty {
        try visitor.visitPackedField(fieldType: ProtobufInt32.self, value: path, protoFieldNumber: 1, protoFieldName: "path", jsonFieldName: "path", swiftFieldName: "path")
      }
      if let v = sourceFile {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 2, protoFieldName: "source_file", jsonFieldName: "sourceFile", swiftFieldName: "sourceFile")
      }
      if let v = begin {
        try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: v, protoFieldNumber: 3, protoFieldName: "begin", jsonFieldName: "begin", swiftFieldName: "begin")
      }
      if let v = end {
        try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: v, protoFieldNumber: 4, protoFieldName: "end", jsonFieldName: "end", swiftFieldName: "end")
      }
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Google_Protobuf_GeneratedCodeInfo.Annotation) -> Bool {
      if path != other.path {return false}
      if ((sourceFile != nil || other.sourceFile != nil) && (sourceFile == nil || other.sourceFile == nil || sourceFile! != other.sourceFile!)) {return false}
      if ((begin != nil || other.begin != nil) && (begin == nil || other.begin == nil || begin! != other.begin!)) {return false}
      if ((end != nil || other.end != nil) && (end == nil || other.end == nil || end! != other.end!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  ///   An Annotation connects some span of text in generated code to an element
  ///   of its generating .proto file.
  public var annotation: [Google_Protobuf_GeneratedCodeInfo.Annotation] = []

  public init() {}

  public init(annotation: [Google_Protobuf_GeneratedCodeInfo.Annotation] = [])
  {
    if !annotation.isEmpty {
      self.annotation = annotation
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_GeneratedCodeInfo.Annotation.self, value: &annotation)
    default:
      handled = false
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !annotation.isEmpty {
      try visitor.visitRepeatedMessageField(value: annotation, protoFieldNumber: 1, protoFieldName: "annotation", jsonFieldName: "annotation", swiftFieldName: "annotation")
    }
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Google_Protobuf_GeneratedCodeInfo) -> Bool {
    if annotation != other.annotation {return false}
    if unknown != other.unknown {return false}
    return true
  }
}
