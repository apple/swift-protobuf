/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: google/protobuf/test_messages_proto3.proto
 *
 */

//  Protocol Buffers - Google's data interchange format
//  Copyright 2008 Google Inc.  All rights reserved.
//  https://developers.google.com/protocol-buffers/
// 
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//      * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//      * Redistributions in binary form must reproduce the above
//  copyright notice, this list of conditions and the following disclaimer
//  in the documentation and/or other materials provided with the
//  distribution.
//      * Neither the name of Google Inc. nor the names of its
//  contributors may be used to endorse or promote products derived from
//  this software without specific prior written permission.
// 
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
//  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
//  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
//  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
//  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
//  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
//  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// 
//  Test schema for proto3 messages.  This test schema is used by:
// 
//  - benchmarks
//  - fuzz tests
//  - conformance tests

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _1: SwiftProtobuf.ProtobufAPIVersion_1 {}
  typealias Version = _1
}

enum ProtobufTestMessages_Proto3_ForeignEnum: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case foreignFoo // = 0
  case foreignBar // = 1
  case foreignBaz // = 2
  case UNRECOGNIZED(Int)

  init() {
    self = .foreignFoo
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .foreignFoo
    case 1: self = .foreignBar
    case 2: self = .foreignBaz
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "FOREIGN_FOO": self = .foreignFoo
    case "FOREIGN_BAR": self = .foreignBar
    case "FOREIGN_BAZ": self = .foreignBaz
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "FOREIGN_FOO": self = .foreignFoo
    case "FOREIGN_BAR": self = .foreignBar
    case "FOREIGN_BAZ": self = .foreignBaz
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .foreignFoo: return 0
      case .foreignBar: return 1
      case .foreignBaz: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }
  }

  var _protobuf_jsonName: String? {
    get {
      switch self {
      case .foreignFoo: return "FOREIGN_FOO"
      case .foreignBar: return "FOREIGN_BAR"
      case .foreignBaz: return "FOREIGN_BAZ"
      case .UNRECOGNIZED: return nil
      }
    }
  }

}

///   This proto includes every type of field in both singular and repeated
///   forms.
///  
///   Also, crucially, all messages and enums in this file are eventually
///   submessages of this message.  So for example, a fuzz test of TestAllTypes
///   could trigger bugs that occur in any message type in this file.  We verify
///   this stays true in a unit test.
struct ProtobufTestMessages_Proto3_TestAllTypes: SwiftProtobuf.Proto3Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "TestAllTypes"
  static let protoPackageName: String = "protobuf_test_messages.proto3"
  static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "optional_int32", json: "optionalInt32"),
    2: .unique(proto: "optional_int64", json: "optionalInt64"),
    3: .unique(proto: "optional_uint32", json: "optionalUint32"),
    4: .unique(proto: "optional_uint64", json: "optionalUint64"),
    5: .unique(proto: "optional_sint32", json: "optionalSint32"),
    6: .unique(proto: "optional_sint64", json: "optionalSint64"),
    7: .unique(proto: "optional_fixed32", json: "optionalFixed32"),
    8: .unique(proto: "optional_fixed64", json: "optionalFixed64"),
    9: .unique(proto: "optional_sfixed32", json: "optionalSfixed32"),
    10: .unique(proto: "optional_sfixed64", json: "optionalSfixed64"),
    11: .unique(proto: "optional_float", json: "optionalFloat"),
    12: .unique(proto: "optional_double", json: "optionalDouble"),
    13: .unique(proto: "optional_bool", json: "optionalBool"),
    14: .unique(proto: "optional_string", json: "optionalString"),
    15: .unique(proto: "optional_bytes", json: "optionalBytes"),
    18: .unique(proto: "optional_nested_message", json: "optionalNestedMessage"),
    19: .unique(proto: "optional_foreign_message", json: "optionalForeignMessage"),
    21: .unique(proto: "optional_nested_enum", json: "optionalNestedEnum"),
    22: .unique(proto: "optional_foreign_enum", json: "optionalForeignEnum"),
    24: .unique(proto: "optional_string_piece", json: "optionalStringPiece"),
    25: .unique(proto: "optional_cord", json: "optionalCord"),
    27: .unique(proto: "recursive_message", json: "recursiveMessage"),
    31: .unique(proto: "repeated_int32", json: "repeatedInt32"),
    32: .unique(proto: "repeated_int64", json: "repeatedInt64"),
    33: .unique(proto: "repeated_uint32", json: "repeatedUint32"),
    34: .unique(proto: "repeated_uint64", json: "repeatedUint64"),
    35: .unique(proto: "repeated_sint32", json: "repeatedSint32"),
    36: .unique(proto: "repeated_sint64", json: "repeatedSint64"),
    37: .unique(proto: "repeated_fixed32", json: "repeatedFixed32"),
    38: .unique(proto: "repeated_fixed64", json: "repeatedFixed64"),
    39: .unique(proto: "repeated_sfixed32", json: "repeatedSfixed32"),
    40: .unique(proto: "repeated_sfixed64", json: "repeatedSfixed64"),
    41: .unique(proto: "repeated_float", json: "repeatedFloat"),
    42: .unique(proto: "repeated_double", json: "repeatedDouble"),
    43: .unique(proto: "repeated_bool", json: "repeatedBool"),
    44: .unique(proto: "repeated_string", json: "repeatedString"),
    45: .unique(proto: "repeated_bytes", json: "repeatedBytes"),
    48: .unique(proto: "repeated_nested_message", json: "repeatedNestedMessage"),
    49: .unique(proto: "repeated_foreign_message", json: "repeatedForeignMessage"),
    51: .unique(proto: "repeated_nested_enum", json: "repeatedNestedEnum"),
    52: .unique(proto: "repeated_foreign_enum", json: "repeatedForeignEnum"),
    54: .unique(proto: "repeated_string_piece", json: "repeatedStringPiece"),
    55: .unique(proto: "repeated_cord", json: "repeatedCord"),
    56: .unique(proto: "map_int32_int32", json: "mapInt32Int32"),
    57: .unique(proto: "map_int64_int64", json: "mapInt64Int64"),
    58: .unique(proto: "map_uint32_uint32", json: "mapUint32Uint32"),
    59: .unique(proto: "map_uint64_uint64", json: "mapUint64Uint64"),
    60: .unique(proto: "map_sint32_sint32", json: "mapSint32Sint32"),
    61: .unique(proto: "map_sint64_sint64", json: "mapSint64Sint64"),
    62: .unique(proto: "map_fixed32_fixed32", json: "mapFixed32Fixed32"),
    63: .unique(proto: "map_fixed64_fixed64", json: "mapFixed64Fixed64"),
    64: .unique(proto: "map_sfixed32_sfixed32", json: "mapSfixed32Sfixed32"),
    65: .unique(proto: "map_sfixed64_sfixed64", json: "mapSfixed64Sfixed64"),
    66: .unique(proto: "map_int32_float", json: "mapInt32Float"),
    67: .unique(proto: "map_int32_double", json: "mapInt32Double"),
    68: .unique(proto: "map_bool_bool", json: "mapBoolBool"),
    69: .unique(proto: "map_string_string", json: "mapStringString"),
    70: .unique(proto: "map_string_bytes", json: "mapStringBytes"),
    71: .unique(proto: "map_string_nested_message", json: "mapStringNestedMessage"),
    72: .unique(proto: "map_string_foreign_message", json: "mapStringForeignMessage"),
    73: .unique(proto: "map_string_nested_enum", json: "mapStringNestedEnum"),
    74: .unique(proto: "map_string_foreign_enum", json: "mapStringForeignEnum"),
    111: .unique(proto: "oneof_uint32", json: "oneofUint32"),
    112: .unique(proto: "oneof_nested_message", json: "oneofNestedMessage"),
    113: .unique(proto: "oneof_string", json: "oneofString"),
    114: .unique(proto: "oneof_bytes", json: "oneofBytes"),
    115: .unique(proto: "oneof_bool", json: "oneofBool"),
    116: .unique(proto: "oneof_uint64", json: "oneofUint64"),
    117: .unique(proto: "oneof_float", json: "oneofFloat"),
    118: .unique(proto: "oneof_double", json: "oneofDouble"),
    119: .unique(proto: "oneof_enum", json: "oneofEnum"),
    201: .unique(proto: "optional_bool_wrapper", json: "optionalBoolWrapper"),
    202: .unique(proto: "optional_int32_wrapper", json: "optionalInt32Wrapper"),
    203: .unique(proto: "optional_int64_wrapper", json: "optionalInt64Wrapper"),
    204: .unique(proto: "optional_uint32_wrapper", json: "optionalUint32Wrapper"),
    205: .unique(proto: "optional_uint64_wrapper", json: "optionalUint64Wrapper"),
    206: .unique(proto: "optional_float_wrapper", json: "optionalFloatWrapper"),
    207: .unique(proto: "optional_double_wrapper", json: "optionalDoubleWrapper"),
    208: .unique(proto: "optional_string_wrapper", json: "optionalStringWrapper"),
    209: .unique(proto: "optional_bytes_wrapper", json: "optionalBytesWrapper"),
    211: .unique(proto: "repeated_bool_wrapper", json: "repeatedBoolWrapper"),
    212: .unique(proto: "repeated_int32_wrapper", json: "repeatedInt32Wrapper"),
    213: .unique(proto: "repeated_int64_wrapper", json: "repeatedInt64Wrapper"),
    214: .unique(proto: "repeated_uint32_wrapper", json: "repeatedUint32Wrapper"),
    215: .unique(proto: "repeated_uint64_wrapper", json: "repeatedUint64Wrapper"),
    216: .unique(proto: "repeated_float_wrapper", json: "repeatedFloatWrapper"),
    217: .unique(proto: "repeated_double_wrapper", json: "repeatedDoubleWrapper"),
    218: .unique(proto: "repeated_string_wrapper", json: "repeatedStringWrapper"),
    219: .unique(proto: "repeated_bytes_wrapper", json: "repeatedBytesWrapper"),
    301: .unique(proto: "optional_duration", json: "optionalDuration"),
    302: .unique(proto: "optional_timestamp", json: "optionalTimestamp"),
    303: .unique(proto: "optional_field_mask", json: "optionalFieldMask"),
    304: .unique(proto: "optional_struct", json: "optionalStruct"),
    305: .unique(proto: "optional_any", json: "optionalAny"),
    306: .unique(proto: "optional_value", json: "optionalValue"),
    311: .unique(proto: "repeated_duration", json: "repeatedDuration"),
    312: .unique(proto: "repeated_timestamp", json: "repeatedTimestamp"),
    313: .unique(proto: "repeated_fieldmask", json: "repeatedFieldmask"),
    324: .unique(proto: "repeated_struct", json: "repeatedStruct"),
    315: .unique(proto: "repeated_any", json: "repeatedAny"),
    316: .unique(proto: "repeated_value", json: "repeatedValue"),
    401: .same(proto: "fieldname1"),
    402: .unique(proto: "field_name2", json: "fieldName2"),
    403: .unique(proto: "_field_name3", json: "FieldName3"),
    404: .unique(proto: "field__name4_", json: "fieldName4"),
    405: .same(proto: "field0name5"),
    406: .unique(proto: "field_0_name6", json: "field0Name6"),
    407: .same(proto: "fieldName7"),
    408: .same(proto: "FieldName8"),
    409: .unique(proto: "field_Name9", json: "fieldName9"),
    410: .unique(proto: "Field_Name10", json: "FieldName10"),
    411: .unique(proto: "FIELD_NAME11", json: "FIELDNAME11"),
    412: .unique(proto: "FIELD_name12", json: "FIELDName12"),
    413: .unique(proto: "__field_name13", json: "FieldName13"),
    414: .unique(proto: "__Field_name14", json: "FieldName14"),
    415: .unique(proto: "field__name15", json: "fieldName15"),
    416: .unique(proto: "field__Name16", json: "fieldName16"),
    417: .unique(proto: "field_name17__", json: "fieldName17"),
    418: .unique(proto: "Field_name18__", json: "FieldName18"),
  ]

  private class _StorageClass {
    var _optionalInt32: Int32 = 0
    var _optionalInt64: Int64 = 0
    var _optionalUint32: UInt32 = 0
    var _optionalUint64: UInt64 = 0
    var _optionalSint32: Int32 = 0
    var _optionalSint64: Int64 = 0
    var _optionalFixed32: UInt32 = 0
    var _optionalFixed64: UInt64 = 0
    var _optionalSfixed32: Int32 = 0
    var _optionalSfixed64: Int64 = 0
    var _optionalFloat: Float = 0
    var _optionalDouble: Double = 0
    var _optionalBool: Bool = false
    var _optionalString: String = ""
    var _optionalBytes: Data = Data()
    var _optionalNestedMessage: ProtobufTestMessages_Proto3_TestAllTypes.NestedMessage? = nil
    var _optionalForeignMessage: ProtobufTestMessages_Proto3_ForeignMessage? = nil
    var _optionalNestedEnum: ProtobufTestMessages_Proto3_TestAllTypes.NestedEnum = ProtobufTestMessages_Proto3_TestAllTypes.NestedEnum.foo
    var _optionalForeignEnum: ProtobufTestMessages_Proto3_ForeignEnum = ProtobufTestMessages_Proto3_ForeignEnum.foreignFoo
    var _optionalStringPiece: String = ""
    var _optionalCord: String = ""
    var _recursiveMessage: ProtobufTestMessages_Proto3_TestAllTypes? = nil
    var _repeatedInt32: [Int32] = []
    var _repeatedInt64: [Int64] = []
    var _repeatedUint32: [UInt32] = []
    var _repeatedUint64: [UInt64] = []
    var _repeatedSint32: [Int32] = []
    var _repeatedSint64: [Int64] = []
    var _repeatedFixed32: [UInt32] = []
    var _repeatedFixed64: [UInt64] = []
    var _repeatedSfixed32: [Int32] = []
    var _repeatedSfixed64: [Int64] = []
    var _repeatedFloat: [Float] = []
    var _repeatedDouble: [Double] = []
    var _repeatedBool: [Bool] = []
    var _repeatedString: [String] = []
    var _repeatedBytes: [Data] = []
    var _repeatedNestedMessage: [ProtobufTestMessages_Proto3_TestAllTypes.NestedMessage] = []
    var _repeatedForeignMessage: [ProtobufTestMessages_Proto3_ForeignMessage] = []
    var _repeatedNestedEnum: [ProtobufTestMessages_Proto3_TestAllTypes.NestedEnum] = []
    var _repeatedForeignEnum: [ProtobufTestMessages_Proto3_ForeignEnum] = []
    var _repeatedStringPiece: [String] = []
    var _repeatedCord: [String] = []
    var _mapInt32Int32: Dictionary<Int32,Int32> = [:]
    var _mapInt64Int64: Dictionary<Int64,Int64> = [:]
    var _mapUint32Uint32: Dictionary<UInt32,UInt32> = [:]
    var _mapUint64Uint64: Dictionary<UInt64,UInt64> = [:]
    var _mapSint32Sint32: Dictionary<Int32,Int32> = [:]
    var _mapSint64Sint64: Dictionary<Int64,Int64> = [:]
    var _mapFixed32Fixed32: Dictionary<UInt32,UInt32> = [:]
    var _mapFixed64Fixed64: Dictionary<UInt64,UInt64> = [:]
    var _mapSfixed32Sfixed32: Dictionary<Int32,Int32> = [:]
    var _mapSfixed64Sfixed64: Dictionary<Int64,Int64> = [:]
    var _mapInt32Float: Dictionary<Int32,Float> = [:]
    var _mapInt32Double: Dictionary<Int32,Double> = [:]
    var _mapBoolBool: Dictionary<Bool,Bool> = [:]
    var _mapStringString: Dictionary<String,String> = [:]
    var _mapStringBytes: Dictionary<String,Data> = [:]
    var _mapStringNestedMessage: Dictionary<String,ProtobufTestMessages_Proto3_TestAllTypes.NestedMessage> = [:]
    var _mapStringForeignMessage: Dictionary<String,ProtobufTestMessages_Proto3_ForeignMessage> = [:]
    var _mapStringNestedEnum: Dictionary<String,ProtobufTestMessages_Proto3_TestAllTypes.NestedEnum> = [:]
    var _mapStringForeignEnum: Dictionary<String,ProtobufTestMessages_Proto3_ForeignEnum> = [:]
    var _oneofField: ProtobufTestMessages_Proto3_TestAllTypes.OneOf_OneofField?
    var _optionalBoolWrapper: Google_Protobuf_BoolValue? = nil
    var _optionalInt32Wrapper: Google_Protobuf_Int32Value? = nil
    var _optionalInt64Wrapper: Google_Protobuf_Int64Value? = nil
    var _optionalUint32Wrapper: Google_Protobuf_UInt32Value? = nil
    var _optionalUint64Wrapper: Google_Protobuf_UInt64Value? = nil
    var _optionalFloatWrapper: Google_Protobuf_FloatValue? = nil
    var _optionalDoubleWrapper: Google_Protobuf_DoubleValue? = nil
    var _optionalStringWrapper: Google_Protobuf_StringValue? = nil
    var _optionalBytesWrapper: Google_Protobuf_BytesValue? = nil
    var _repeatedBoolWrapper: [Google_Protobuf_BoolValue] = []
    var _repeatedInt32Wrapper: [Google_Protobuf_Int32Value] = []
    var _repeatedInt64Wrapper: [Google_Protobuf_Int64Value] = []
    var _repeatedUint32Wrapper: [Google_Protobuf_UInt32Value] = []
    var _repeatedUint64Wrapper: [Google_Protobuf_UInt64Value] = []
    var _repeatedFloatWrapper: [Google_Protobuf_FloatValue] = []
    var _repeatedDoubleWrapper: [Google_Protobuf_DoubleValue] = []
    var _repeatedStringWrapper: [Google_Protobuf_StringValue] = []
    var _repeatedBytesWrapper: [Google_Protobuf_BytesValue] = []
    var _optionalDuration: Google_Protobuf_Duration? = nil
    var _optionalTimestamp: Google_Protobuf_Timestamp? = nil
    var _optionalFieldMask: Google_Protobuf_FieldMask? = nil
    var _optionalStruct: Google_Protobuf_Struct? = nil
    var _optionalAny: Google_Protobuf_Any? = nil
    var _optionalValue: Google_Protobuf_Value? = nil
    var _repeatedDuration: [Google_Protobuf_Duration] = []
    var _repeatedTimestamp: [Google_Protobuf_Timestamp] = []
    var _repeatedFieldmask: [Google_Protobuf_FieldMask] = []
    var _repeatedStruct: [Google_Protobuf_Struct] = []
    var _repeatedAny: [Google_Protobuf_Any] = []
    var _repeatedValue: [Google_Protobuf_Value] = []
    var _fieldname1: Int32 = 0
    var _fieldName2: Int32 = 0
    var _fieldName3: Int32 = 0
    var _field_Name4_: Int32 = 0
    var _field0Name5: Int32 = 0
    var _field0Name6: Int32 = 0
    var _fieldName7: Int32 = 0
    var _fieldName8: Int32 = 0
    var _fieldName9: Int32 = 0
    var _fieldName10: Int32 = 0
    var _fieldName11: Int32 = 0
    var _fieldName12: Int32 = 0
    var __FieldName13: Int32 = 0
    var __FieldName14: Int32 = 0
    var _field_Name15: Int32 = 0
    var _field_Name16: Int32 = 0
    var _fieldName17__: Int32 = 0
    var _fieldName18__: Int32 = 0

    init() {}

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._optionalInt32 = _optionalInt32
      clone._optionalInt64 = _optionalInt64
      clone._optionalUint32 = _optionalUint32
      clone._optionalUint64 = _optionalUint64
      clone._optionalSint32 = _optionalSint32
      clone._optionalSint64 = _optionalSint64
      clone._optionalFixed32 = _optionalFixed32
      clone._optionalFixed64 = _optionalFixed64
      clone._optionalSfixed32 = _optionalSfixed32
      clone._optionalSfixed64 = _optionalSfixed64
      clone._optionalFloat = _optionalFloat
      clone._optionalDouble = _optionalDouble
      clone._optionalBool = _optionalBool
      clone._optionalString = _optionalString
      clone._optionalBytes = _optionalBytes
      clone._optionalNestedMessage = _optionalNestedMessage
      clone._optionalForeignMessage = _optionalForeignMessage
      clone._optionalNestedEnum = _optionalNestedEnum
      clone._optionalForeignEnum = _optionalForeignEnum
      clone._optionalStringPiece = _optionalStringPiece
      clone._optionalCord = _optionalCord
      clone._recursiveMessage = _recursiveMessage
      clone._repeatedInt32 = _repeatedInt32
      clone._repeatedInt64 = _repeatedInt64
      clone._repeatedUint32 = _repeatedUint32
      clone._repeatedUint64 = _repeatedUint64
      clone._repeatedSint32 = _repeatedSint32
      clone._repeatedSint64 = _repeatedSint64
      clone._repeatedFixed32 = _repeatedFixed32
      clone._repeatedFixed64 = _repeatedFixed64
      clone._repeatedSfixed32 = _repeatedSfixed32
      clone._repeatedSfixed64 = _repeatedSfixed64
      clone._repeatedFloat = _repeatedFloat
      clone._repeatedDouble = _repeatedDouble
      clone._repeatedBool = _repeatedBool
      clone._repeatedString = _repeatedString
      clone._repeatedBytes = _repeatedBytes
      clone._repeatedNestedMessage = _repeatedNestedMessage
      clone._repeatedForeignMessage = _repeatedForeignMessage
      clone._repeatedNestedEnum = _repeatedNestedEnum
      clone._repeatedForeignEnum = _repeatedForeignEnum
      clone._repeatedStringPiece = _repeatedStringPiece
      clone._repeatedCord = _repeatedCord
      clone._mapInt32Int32 = _mapInt32Int32
      clone._mapInt64Int64 = _mapInt64Int64
      clone._mapUint32Uint32 = _mapUint32Uint32
      clone._mapUint64Uint64 = _mapUint64Uint64
      clone._mapSint32Sint32 = _mapSint32Sint32
      clone._mapSint64Sint64 = _mapSint64Sint64
      clone._mapFixed32Fixed32 = _mapFixed32Fixed32
      clone._mapFixed64Fixed64 = _mapFixed64Fixed64
      clone._mapSfixed32Sfixed32 = _mapSfixed32Sfixed32
      clone._mapSfixed64Sfixed64 = _mapSfixed64Sfixed64
      clone._mapInt32Float = _mapInt32Float
      clone._mapInt32Double = _mapInt32Double
      clone._mapBoolBool = _mapBoolBool
      clone._mapStringString = _mapStringString
      clone._mapStringBytes = _mapStringBytes
      clone._mapStringNestedMessage = _mapStringNestedMessage
      clone._mapStringForeignMessage = _mapStringForeignMessage
      clone._mapStringNestedEnum = _mapStringNestedEnum
      clone._mapStringForeignEnum = _mapStringForeignEnum
      clone._oneofField = _oneofField
      clone._optionalBoolWrapper = _optionalBoolWrapper
      clone._optionalInt32Wrapper = _optionalInt32Wrapper
      clone._optionalInt64Wrapper = _optionalInt64Wrapper
      clone._optionalUint32Wrapper = _optionalUint32Wrapper
      clone._optionalUint64Wrapper = _optionalUint64Wrapper
      clone._optionalFloatWrapper = _optionalFloatWrapper
      clone._optionalDoubleWrapper = _optionalDoubleWrapper
      clone._optionalStringWrapper = _optionalStringWrapper
      clone._optionalBytesWrapper = _optionalBytesWrapper
      clone._repeatedBoolWrapper = _repeatedBoolWrapper
      clone._repeatedInt32Wrapper = _repeatedInt32Wrapper
      clone._repeatedInt64Wrapper = _repeatedInt64Wrapper
      clone._repeatedUint32Wrapper = _repeatedUint32Wrapper
      clone._repeatedUint64Wrapper = _repeatedUint64Wrapper
      clone._repeatedFloatWrapper = _repeatedFloatWrapper
      clone._repeatedDoubleWrapper = _repeatedDoubleWrapper
      clone._repeatedStringWrapper = _repeatedStringWrapper
      clone._repeatedBytesWrapper = _repeatedBytesWrapper
      clone._optionalDuration = _optionalDuration
      clone._optionalTimestamp = _optionalTimestamp
      clone._optionalFieldMask = _optionalFieldMask
      clone._optionalStruct = _optionalStruct
      clone._optionalAny = _optionalAny
      clone._optionalValue = _optionalValue
      clone._repeatedDuration = _repeatedDuration
      clone._repeatedTimestamp = _repeatedTimestamp
      clone._repeatedFieldmask = _repeatedFieldmask
      clone._repeatedStruct = _repeatedStruct
      clone._repeatedAny = _repeatedAny
      clone._repeatedValue = _repeatedValue
      clone._fieldname1 = _fieldname1
      clone._fieldName2 = _fieldName2
      clone._fieldName3 = _fieldName3
      clone._field_Name4_ = _field_Name4_
      clone._field0Name5 = _field0Name5
      clone._field0Name6 = _field0Name6
      clone._fieldName7 = _fieldName7
      clone._fieldName8 = _fieldName8
      clone._fieldName9 = _fieldName9
      clone._fieldName10 = _fieldName10
      clone._fieldName11 = _fieldName11
      clone._fieldName12 = _fieldName12
      clone.__FieldName13 = __FieldName13
      clone.__FieldName14 = __FieldName14
      clone._field_Name15 = _field_Name15
      clone._field_Name16 = _field_Name16
      clone._fieldName17__ = _fieldName17__
      clone._fieldName18__ = _fieldName18__
      return clone
    }
  }

  private var _storage = _StorageClass()

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }

  ///   Singular
  var optionalInt32: Int32 {
    get {return _storage._optionalInt32}
    set {_uniqueStorage()._optionalInt32 = newValue}
  }

  var optionalInt64: Int64 {
    get {return _storage._optionalInt64}
    set {_uniqueStorage()._optionalInt64 = newValue}
  }

  var optionalUint32: UInt32 {
    get {return _storage._optionalUint32}
    set {_uniqueStorage()._optionalUint32 = newValue}
  }

  var optionalUint64: UInt64 {
    get {return _storage._optionalUint64}
    set {_uniqueStorage()._optionalUint64 = newValue}
  }

  var optionalSint32: Int32 {
    get {return _storage._optionalSint32}
    set {_uniqueStorage()._optionalSint32 = newValue}
  }

  var optionalSint64: Int64 {
    get {return _storage._optionalSint64}
    set {_uniqueStorage()._optionalSint64 = newValue}
  }

  var optionalFixed32: UInt32 {
    get {return _storage._optionalFixed32}
    set {_uniqueStorage()._optionalFixed32 = newValue}
  }

  var optionalFixed64: UInt64 {
    get {return _storage._optionalFixed64}
    set {_uniqueStorage()._optionalFixed64 = newValue}
  }

  var optionalSfixed32: Int32 {
    get {return _storage._optionalSfixed32}
    set {_uniqueStorage()._optionalSfixed32 = newValue}
  }

  var optionalSfixed64: Int64 {
    get {return _storage._optionalSfixed64}
    set {_uniqueStorage()._optionalSfixed64 = newValue}
  }

  var optionalFloat: Float {
    get {return _storage._optionalFloat}
    set {_uniqueStorage()._optionalFloat = newValue}
  }

  var optionalDouble: Double {
    get {return _storage._optionalDouble}
    set {_uniqueStorage()._optionalDouble = newValue}
  }

  var optionalBool: Bool {
    get {return _storage._optionalBool}
    set {_uniqueStorage()._optionalBool = newValue}
  }

  var optionalString: String {
    get {return _storage._optionalString}
    set {_uniqueStorage()._optionalString = newValue}
  }

  var optionalBytes: Data {
    get {return _storage._optionalBytes}
    set {_uniqueStorage()._optionalBytes = newValue}
  }

  var optionalNestedMessage: ProtobufTestMessages_Proto3_TestAllTypes.NestedMessage {
    get {return _storage._optionalNestedMessage ?? ProtobufTestMessages_Proto3_TestAllTypes.NestedMessage()}
    set {_uniqueStorage()._optionalNestedMessage = newValue}
  }
  var hasOptionalNestedMessage: Bool {
    return _storage._optionalNestedMessage != nil
  }
  mutating func clearOptionalNestedMessage() {
    return _storage._optionalNestedMessage = nil
  }

  var optionalForeignMessage: ProtobufTestMessages_Proto3_ForeignMessage {
    get {return _storage._optionalForeignMessage ?? ProtobufTestMessages_Proto3_ForeignMessage()}
    set {_uniqueStorage()._optionalForeignMessage = newValue}
  }
  var hasOptionalForeignMessage: Bool {
    return _storage._optionalForeignMessage != nil
  }
  mutating func clearOptionalForeignMessage() {
    return _storage._optionalForeignMessage = nil
  }

  var optionalNestedEnum: ProtobufTestMessages_Proto3_TestAllTypes.NestedEnum {
    get {return _storage._optionalNestedEnum}
    set {_uniqueStorage()._optionalNestedEnum = newValue}
  }

  var optionalForeignEnum: ProtobufTestMessages_Proto3_ForeignEnum {
    get {return _storage._optionalForeignEnum}
    set {_uniqueStorage()._optionalForeignEnum = newValue}
  }

  var optionalStringPiece: String {
    get {return _storage._optionalStringPiece}
    set {_uniqueStorage()._optionalStringPiece = newValue}
  }

  var optionalCord: String {
    get {return _storage._optionalCord}
    set {_uniqueStorage()._optionalCord = newValue}
  }

  var recursiveMessage: ProtobufTestMessages_Proto3_TestAllTypes {
    get {return _storage._recursiveMessage ?? ProtobufTestMessages_Proto3_TestAllTypes()}
    set {_uniqueStorage()._recursiveMessage = newValue}
  }
  var hasRecursiveMessage: Bool {
    return _storage._recursiveMessage != nil
  }
  mutating func clearRecursiveMessage() {
    return _storage._recursiveMessage = nil
  }

  ///   Repeated
  var repeatedInt32: [Int32] {
    get {return _storage._repeatedInt32}
    set {_uniqueStorage()._repeatedInt32 = newValue}
  }

  var repeatedInt64: [Int64] {
    get {return _storage._repeatedInt64}
    set {_uniqueStorage()._repeatedInt64 = newValue}
  }

  var repeatedUint32: [UInt32] {
    get {return _storage._repeatedUint32}
    set {_uniqueStorage()._repeatedUint32 = newValue}
  }

  var repeatedUint64: [UInt64] {
    get {return _storage._repeatedUint64}
    set {_uniqueStorage()._repeatedUint64 = newValue}
  }

  var repeatedSint32: [Int32] {
    get {return _storage._repeatedSint32}
    set {_uniqueStorage()._repeatedSint32 = newValue}
  }

  var repeatedSint64: [Int64] {
    get {return _storage._repeatedSint64}
    set {_uniqueStorage()._repeatedSint64 = newValue}
  }

  var repeatedFixed32: [UInt32] {
    get {return _storage._repeatedFixed32}
    set {_uniqueStorage()._repeatedFixed32 = newValue}
  }

  var repeatedFixed64: [UInt64] {
    get {return _storage._repeatedFixed64}
    set {_uniqueStorage()._repeatedFixed64 = newValue}
  }

  var repeatedSfixed32: [Int32] {
    get {return _storage._repeatedSfixed32}
    set {_uniqueStorage()._repeatedSfixed32 = newValue}
  }

  var repeatedSfixed64: [Int64] {
    get {return _storage._repeatedSfixed64}
    set {_uniqueStorage()._repeatedSfixed64 = newValue}
  }

  var repeatedFloat: [Float] {
    get {return _storage._repeatedFloat}
    set {_uniqueStorage()._repeatedFloat = newValue}
  }

  var repeatedDouble: [Double] {
    get {return _storage._repeatedDouble}
    set {_uniqueStorage()._repeatedDouble = newValue}
  }

  var repeatedBool: [Bool] {
    get {return _storage._repeatedBool}
    set {_uniqueStorage()._repeatedBool = newValue}
  }

  var repeatedString: [String] {
    get {return _storage._repeatedString}
    set {_uniqueStorage()._repeatedString = newValue}
  }

  var repeatedBytes: [Data] {
    get {return _storage._repeatedBytes}
    set {_uniqueStorage()._repeatedBytes = newValue}
  }

  var repeatedNestedMessage: [ProtobufTestMessages_Proto3_TestAllTypes.NestedMessage] {
    get {return _storage._repeatedNestedMessage}
    set {_uniqueStorage()._repeatedNestedMessage = newValue}
  }

  var repeatedForeignMessage: [ProtobufTestMessages_Proto3_ForeignMessage] {
    get {return _storage._repeatedForeignMessage}
    set {_uniqueStorage()._repeatedForeignMessage = newValue}
  }

  var repeatedNestedEnum: [ProtobufTestMessages_Proto3_TestAllTypes.NestedEnum] {
    get {return _storage._repeatedNestedEnum}
    set {_uniqueStorage()._repeatedNestedEnum = newValue}
  }

  var repeatedForeignEnum: [ProtobufTestMessages_Proto3_ForeignEnum] {
    get {return _storage._repeatedForeignEnum}
    set {_uniqueStorage()._repeatedForeignEnum = newValue}
  }

  var repeatedStringPiece: [String] {
    get {return _storage._repeatedStringPiece}
    set {_uniqueStorage()._repeatedStringPiece = newValue}
  }

  var repeatedCord: [String] {
    get {return _storage._repeatedCord}
    set {_uniqueStorage()._repeatedCord = newValue}
  }

  ///   Map
  var mapInt32Int32: Dictionary<Int32,Int32> {
    get {return _storage._mapInt32Int32}
    set {_uniqueStorage()._mapInt32Int32 = newValue}
  }

  var mapInt64Int64: Dictionary<Int64,Int64> {
    get {return _storage._mapInt64Int64}
    set {_uniqueStorage()._mapInt64Int64 = newValue}
  }

  var mapUint32Uint32: Dictionary<UInt32,UInt32> {
    get {return _storage._mapUint32Uint32}
    set {_uniqueStorage()._mapUint32Uint32 = newValue}
  }

  var mapUint64Uint64: Dictionary<UInt64,UInt64> {
    get {return _storage._mapUint64Uint64}
    set {_uniqueStorage()._mapUint64Uint64 = newValue}
  }

  var mapSint32Sint32: Dictionary<Int32,Int32> {
    get {return _storage._mapSint32Sint32}
    set {_uniqueStorage()._mapSint32Sint32 = newValue}
  }

  var mapSint64Sint64: Dictionary<Int64,Int64> {
    get {return _storage._mapSint64Sint64}
    set {_uniqueStorage()._mapSint64Sint64 = newValue}
  }

  var mapFixed32Fixed32: Dictionary<UInt32,UInt32> {
    get {return _storage._mapFixed32Fixed32}
    set {_uniqueStorage()._mapFixed32Fixed32 = newValue}
  }

  var mapFixed64Fixed64: Dictionary<UInt64,UInt64> {
    get {return _storage._mapFixed64Fixed64}
    set {_uniqueStorage()._mapFixed64Fixed64 = newValue}
  }

  var mapSfixed32Sfixed32: Dictionary<Int32,Int32> {
    get {return _storage._mapSfixed32Sfixed32}
    set {_uniqueStorage()._mapSfixed32Sfixed32 = newValue}
  }

  var mapSfixed64Sfixed64: Dictionary<Int64,Int64> {
    get {return _storage._mapSfixed64Sfixed64}
    set {_uniqueStorage()._mapSfixed64Sfixed64 = newValue}
  }

  var mapInt32Float: Dictionary<Int32,Float> {
    get {return _storage._mapInt32Float}
    set {_uniqueStorage()._mapInt32Float = newValue}
  }

  var mapInt32Double: Dictionary<Int32,Double> {
    get {return _storage._mapInt32Double}
    set {_uniqueStorage()._mapInt32Double = newValue}
  }

  var mapBoolBool: Dictionary<Bool,Bool> {
    get {return _storage._mapBoolBool}
    set {_uniqueStorage()._mapBoolBool = newValue}
  }

  var mapStringString: Dictionary<String,String> {
    get {return _storage._mapStringString}
    set {_uniqueStorage()._mapStringString = newValue}
  }

  var mapStringBytes: Dictionary<String,Data> {
    get {return _storage._mapStringBytes}
    set {_uniqueStorage()._mapStringBytes = newValue}
  }

  var mapStringNestedMessage: Dictionary<String,ProtobufTestMessages_Proto3_TestAllTypes.NestedMessage> {
    get {return _storage._mapStringNestedMessage}
    set {_uniqueStorage()._mapStringNestedMessage = newValue}
  }

  var mapStringForeignMessage: Dictionary<String,ProtobufTestMessages_Proto3_ForeignMessage> {
    get {return _storage._mapStringForeignMessage}
    set {_uniqueStorage()._mapStringForeignMessage = newValue}
  }

  var mapStringNestedEnum: Dictionary<String,ProtobufTestMessages_Proto3_TestAllTypes.NestedEnum> {
    get {return _storage._mapStringNestedEnum}
    set {_uniqueStorage()._mapStringNestedEnum = newValue}
  }

  var mapStringForeignEnum: Dictionary<String,ProtobufTestMessages_Proto3_ForeignEnum> {
    get {return _storage._mapStringForeignEnum}
    set {_uniqueStorage()._mapStringForeignEnum = newValue}
  }

  var oneofUint32: UInt32 {
    get {
      if case .oneofUint32(let v)? = _storage._oneofField {
        return v
      }
      return 0
    }
    set {
      _uniqueStorage()._oneofField = .oneofUint32(newValue)
    }
  }

  var oneofNestedMessage: ProtobufTestMessages_Proto3_TestAllTypes.NestedMessage {
    get {
      if case .oneofNestedMessage(let v)? = _storage._oneofField {
        return v
      }
      return ProtobufTestMessages_Proto3_TestAllTypes.NestedMessage()
    }
    set {
      _uniqueStorage()._oneofField = .oneofNestedMessage(newValue)
    }
  }

  var oneofString: String {
    get {
      if case .oneofString(let v)? = _storage._oneofField {
        return v
      }
      return ""
    }
    set {
      _uniqueStorage()._oneofField = .oneofString(newValue)
    }
  }

  var oneofBytes: Data {
    get {
      if case .oneofBytes(let v)? = _storage._oneofField {
        return v
      }
      return Data()
    }
    set {
      _uniqueStorage()._oneofField = .oneofBytes(newValue)
    }
  }

  var oneofBool: Bool {
    get {
      if case .oneofBool(let v)? = _storage._oneofField {
        return v
      }
      return false
    }
    set {
      _uniqueStorage()._oneofField = .oneofBool(newValue)
    }
  }

  var oneofUint64: UInt64 {
    get {
      if case .oneofUint64(let v)? = _storage._oneofField {
        return v
      }
      return 0
    }
    set {
      _uniqueStorage()._oneofField = .oneofUint64(newValue)
    }
  }

  var oneofFloat: Float {
    get {
      if case .oneofFloat(let v)? = _storage._oneofField {
        return v
      }
      return 0
    }
    set {
      _uniqueStorage()._oneofField = .oneofFloat(newValue)
    }
  }

  var oneofDouble: Double {
    get {
      if case .oneofDouble(let v)? = _storage._oneofField {
        return v
      }
      return 0
    }
    set {
      _uniqueStorage()._oneofField = .oneofDouble(newValue)
    }
  }

  var oneofEnum: ProtobufTestMessages_Proto3_TestAllTypes.NestedEnum {
    get {
      if case .oneofEnum(let v)? = _storage._oneofField {
        return v
      }
      return ProtobufTestMessages_Proto3_TestAllTypes.NestedEnum.foo
    }
    set {
      _uniqueStorage()._oneofField = .oneofEnum(newValue)
    }
  }

  ///   Well-known types
  var optionalBoolWrapper: Google_Protobuf_BoolValue {
    get {return _storage._optionalBoolWrapper ?? Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._optionalBoolWrapper = newValue}
  }
  var hasOptionalBoolWrapper: Bool {
    return _storage._optionalBoolWrapper != nil
  }
  mutating func clearOptionalBoolWrapper() {
    return _storage._optionalBoolWrapper = nil
  }

  var optionalInt32Wrapper: Google_Protobuf_Int32Value {
    get {return _storage._optionalInt32Wrapper ?? Google_Protobuf_Int32Value()}
    set {_uniqueStorage()._optionalInt32Wrapper = newValue}
  }
  var hasOptionalInt32Wrapper: Bool {
    return _storage._optionalInt32Wrapper != nil
  }
  mutating func clearOptionalInt32Wrapper() {
    return _storage._optionalInt32Wrapper = nil
  }

  var optionalInt64Wrapper: Google_Protobuf_Int64Value {
    get {return _storage._optionalInt64Wrapper ?? Google_Protobuf_Int64Value()}
    set {_uniqueStorage()._optionalInt64Wrapper = newValue}
  }
  var hasOptionalInt64Wrapper: Bool {
    return _storage._optionalInt64Wrapper != nil
  }
  mutating func clearOptionalInt64Wrapper() {
    return _storage._optionalInt64Wrapper = nil
  }

  var optionalUint32Wrapper: Google_Protobuf_UInt32Value {
    get {return _storage._optionalUint32Wrapper ?? Google_Protobuf_UInt32Value()}
    set {_uniqueStorage()._optionalUint32Wrapper = newValue}
  }
  var hasOptionalUint32Wrapper: Bool {
    return _storage._optionalUint32Wrapper != nil
  }
  mutating func clearOptionalUint32Wrapper() {
    return _storage._optionalUint32Wrapper = nil
  }

  var optionalUint64Wrapper: Google_Protobuf_UInt64Value {
    get {return _storage._optionalUint64Wrapper ?? Google_Protobuf_UInt64Value()}
    set {_uniqueStorage()._optionalUint64Wrapper = newValue}
  }
  var hasOptionalUint64Wrapper: Bool {
    return _storage._optionalUint64Wrapper != nil
  }
  mutating func clearOptionalUint64Wrapper() {
    return _storage._optionalUint64Wrapper = nil
  }

  var optionalFloatWrapper: Google_Protobuf_FloatValue {
    get {return _storage._optionalFloatWrapper ?? Google_Protobuf_FloatValue()}
    set {_uniqueStorage()._optionalFloatWrapper = newValue}
  }
  var hasOptionalFloatWrapper: Bool {
    return _storage._optionalFloatWrapper != nil
  }
  mutating func clearOptionalFloatWrapper() {
    return _storage._optionalFloatWrapper = nil
  }

  var optionalDoubleWrapper: Google_Protobuf_DoubleValue {
    get {return _storage._optionalDoubleWrapper ?? Google_Protobuf_DoubleValue()}
    set {_uniqueStorage()._optionalDoubleWrapper = newValue}
  }
  var hasOptionalDoubleWrapper: Bool {
    return _storage._optionalDoubleWrapper != nil
  }
  mutating func clearOptionalDoubleWrapper() {
    return _storage._optionalDoubleWrapper = nil
  }

  var optionalStringWrapper: Google_Protobuf_StringValue {
    get {return _storage._optionalStringWrapper ?? Google_Protobuf_StringValue()}
    set {_uniqueStorage()._optionalStringWrapper = newValue}
  }
  var hasOptionalStringWrapper: Bool {
    return _storage._optionalStringWrapper != nil
  }
  mutating func clearOptionalStringWrapper() {
    return _storage._optionalStringWrapper = nil
  }

  var optionalBytesWrapper: Google_Protobuf_BytesValue {
    get {return _storage._optionalBytesWrapper ?? Google_Protobuf_BytesValue()}
    set {_uniqueStorage()._optionalBytesWrapper = newValue}
  }
  var hasOptionalBytesWrapper: Bool {
    return _storage._optionalBytesWrapper != nil
  }
  mutating func clearOptionalBytesWrapper() {
    return _storage._optionalBytesWrapper = nil
  }

  var repeatedBoolWrapper: [Google_Protobuf_BoolValue] {
    get {return _storage._repeatedBoolWrapper}
    set {_uniqueStorage()._repeatedBoolWrapper = newValue}
  }

  var repeatedInt32Wrapper: [Google_Protobuf_Int32Value] {
    get {return _storage._repeatedInt32Wrapper}
    set {_uniqueStorage()._repeatedInt32Wrapper = newValue}
  }

  var repeatedInt64Wrapper: [Google_Protobuf_Int64Value] {
    get {return _storage._repeatedInt64Wrapper}
    set {_uniqueStorage()._repeatedInt64Wrapper = newValue}
  }

  var repeatedUint32Wrapper: [Google_Protobuf_UInt32Value] {
    get {return _storage._repeatedUint32Wrapper}
    set {_uniqueStorage()._repeatedUint32Wrapper = newValue}
  }

  var repeatedUint64Wrapper: [Google_Protobuf_UInt64Value] {
    get {return _storage._repeatedUint64Wrapper}
    set {_uniqueStorage()._repeatedUint64Wrapper = newValue}
  }

  var repeatedFloatWrapper: [Google_Protobuf_FloatValue] {
    get {return _storage._repeatedFloatWrapper}
    set {_uniqueStorage()._repeatedFloatWrapper = newValue}
  }

  var repeatedDoubleWrapper: [Google_Protobuf_DoubleValue] {
    get {return _storage._repeatedDoubleWrapper}
    set {_uniqueStorage()._repeatedDoubleWrapper = newValue}
  }

  var repeatedStringWrapper: [Google_Protobuf_StringValue] {
    get {return _storage._repeatedStringWrapper}
    set {_uniqueStorage()._repeatedStringWrapper = newValue}
  }

  var repeatedBytesWrapper: [Google_Protobuf_BytesValue] {
    get {return _storage._repeatedBytesWrapper}
    set {_uniqueStorage()._repeatedBytesWrapper = newValue}
  }

  var optionalDuration: Google_Protobuf_Duration {
    get {return _storage._optionalDuration ?? Google_Protobuf_Duration()}
    set {_uniqueStorage()._optionalDuration = newValue}
  }
  var hasOptionalDuration: Bool {
    return _storage._optionalDuration != nil
  }
  mutating func clearOptionalDuration() {
    return _storage._optionalDuration = nil
  }

  var optionalTimestamp: Google_Protobuf_Timestamp {
    get {return _storage._optionalTimestamp ?? Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._optionalTimestamp = newValue}
  }
  var hasOptionalTimestamp: Bool {
    return _storage._optionalTimestamp != nil
  }
  mutating func clearOptionalTimestamp() {
    return _storage._optionalTimestamp = nil
  }

  var optionalFieldMask: Google_Protobuf_FieldMask {
    get {return _storage._optionalFieldMask ?? Google_Protobuf_FieldMask()}
    set {_uniqueStorage()._optionalFieldMask = newValue}
  }
  var hasOptionalFieldMask: Bool {
    return _storage._optionalFieldMask != nil
  }
  mutating func clearOptionalFieldMask() {
    return _storage._optionalFieldMask = nil
  }

  var optionalStruct: Google_Protobuf_Struct {
    get {return _storage._optionalStruct ?? Google_Protobuf_Struct()}
    set {_uniqueStorage()._optionalStruct = newValue}
  }
  var hasOptionalStruct: Bool {
    return _storage._optionalStruct != nil
  }
  mutating func clearOptionalStruct() {
    return _storage._optionalStruct = nil
  }

  var optionalAny: Google_Protobuf_Any {
    get {return _storage._optionalAny ?? Google_Protobuf_Any()}
    set {_uniqueStorage()._optionalAny = newValue}
  }
  var hasOptionalAny: Bool {
    return _storage._optionalAny != nil
  }
  mutating func clearOptionalAny() {
    return _storage._optionalAny = nil
  }

  var optionalValue: Google_Protobuf_Value {
    get {return _storage._optionalValue ?? Google_Protobuf_Value()}
    set {_uniqueStorage()._optionalValue = newValue}
  }
  var hasOptionalValue: Bool {
    return _storage._optionalValue != nil
  }
  mutating func clearOptionalValue() {
    return _storage._optionalValue = nil
  }

  var repeatedDuration: [Google_Protobuf_Duration] {
    get {return _storage._repeatedDuration}
    set {_uniqueStorage()._repeatedDuration = newValue}
  }

  var repeatedTimestamp: [Google_Protobuf_Timestamp] {
    get {return _storage._repeatedTimestamp}
    set {_uniqueStorage()._repeatedTimestamp = newValue}
  }

  var repeatedFieldmask: [Google_Protobuf_FieldMask] {
    get {return _storage._repeatedFieldmask}
    set {_uniqueStorage()._repeatedFieldmask = newValue}
  }

  var repeatedStruct: [Google_Protobuf_Struct] {
    get {return _storage._repeatedStruct}
    set {_uniqueStorage()._repeatedStruct = newValue}
  }

  var repeatedAny: [Google_Protobuf_Any] {
    get {return _storage._repeatedAny}
    set {_uniqueStorage()._repeatedAny = newValue}
  }

  var repeatedValue: [Google_Protobuf_Value] {
    get {return _storage._repeatedValue}
    set {_uniqueStorage()._repeatedValue = newValue}
  }

  ///   Test field-name-to-JSON-name convention.
  ///   (protobuf says names can be any valid C/C++ identifier.)
  var fieldname1: Int32 {
    get {return _storage._fieldname1}
    set {_uniqueStorage()._fieldname1 = newValue}
  }

  var fieldName2: Int32 {
    get {return _storage._fieldName2}
    set {_uniqueStorage()._fieldName2 = newValue}
  }

  var fieldName3: Int32 {
    get {return _storage._fieldName3}
    set {_uniqueStorage()._fieldName3 = newValue}
  }

  var field_Name4_: Int32 {
    get {return _storage._field_Name4_}
    set {_uniqueStorage()._field_Name4_ = newValue}
  }

  var field0Name5: Int32 {
    get {return _storage._field0Name5}
    set {_uniqueStorage()._field0Name5 = newValue}
  }

  var field0Name6: Int32 {
    get {return _storage._field0Name6}
    set {_uniqueStorage()._field0Name6 = newValue}
  }

  var fieldName7: Int32 {
    get {return _storage._fieldName7}
    set {_uniqueStorage()._fieldName7 = newValue}
  }

  var fieldName8: Int32 {
    get {return _storage._fieldName8}
    set {_uniqueStorage()._fieldName8 = newValue}
  }

  var fieldName9: Int32 {
    get {return _storage._fieldName9}
    set {_uniqueStorage()._fieldName9 = newValue}
  }

  var fieldName10: Int32 {
    get {return _storage._fieldName10}
    set {_uniqueStorage()._fieldName10 = newValue}
  }

  var fieldName11: Int32 {
    get {return _storage._fieldName11}
    set {_uniqueStorage()._fieldName11 = newValue}
  }

  var fieldName12: Int32 {
    get {return _storage._fieldName12}
    set {_uniqueStorage()._fieldName12 = newValue}
  }

  var _FieldName13: Int32 {
    get {return _storage.__FieldName13}
    set {_uniqueStorage().__FieldName13 = newValue}
  }

  var _FieldName14: Int32 {
    get {return _storage.__FieldName14}
    set {_uniqueStorage().__FieldName14 = newValue}
  }

  var field_Name15: Int32 {
    get {return _storage._field_Name15}
    set {_uniqueStorage()._field_Name15 = newValue}
  }

  var field_Name16: Int32 {
    get {return _storage._field_Name16}
    set {_uniqueStorage()._field_Name16 = newValue}
  }

  var fieldName17__: Int32 {
    get {return _storage._fieldName17__}
    set {_uniqueStorage()._fieldName17__ = newValue}
  }

  var fieldName18__: Int32 {
    get {return _storage._fieldName18__}
    set {_uniqueStorage()._fieldName18__ = newValue}
  }

  var oneofField: OneOf_OneofField? {
    get {return _storage._oneofField}
    set {
      _uniqueStorage()._oneofField = newValue
    }
  }


  enum OneOf_OneofField: Equatable {
    case oneofUint32(UInt32)
    case oneofNestedMessage(ProtobufTestMessages_Proto3_TestAllTypes.NestedMessage)
    case oneofString(String)
    case oneofBytes(Data)
    case oneofBool(Bool)
    case oneofUint64(UInt64)
    case oneofFloat(Float)
    case oneofDouble(Double)
    case oneofEnum(ProtobufTestMessages_Proto3_TestAllTypes.NestedEnum)

    static func ==(lhs: ProtobufTestMessages_Proto3_TestAllTypes.OneOf_OneofField, rhs: ProtobufTestMessages_Proto3_TestAllTypes.OneOf_OneofField) -> Bool {
      switch (lhs, rhs) {
      case (.oneofUint32(let l), .oneofUint32(let r)): return l == r
      case (.oneofNestedMessage(let l), .oneofNestedMessage(let r)): return l == r
      case (.oneofString(let l), .oneofString(let r)): return l == r
      case (.oneofBytes(let l), .oneofBytes(let r)): return l == r
      case (.oneofBool(let l), .oneofBool(let r)): return l == r
      case (.oneofUint64(let l), .oneofUint64(let r)): return l == r
      case (.oneofFloat(let l), .oneofFloat(let r)): return l == r
      case (.oneofDouble(let l), .oneofDouble(let r)): return l == r
      case (.oneofEnum(let l), .oneofEnum(let r)): return l == r
      default: return false
      }
    }

    fileprivate init?<T: SwiftProtobuf.Decoder>(byDecodingFrom decoder: inout T, fieldNumber: Int) throws {
      switch fieldNumber {
      case 111:
        var value = UInt32()
        try decoder.decodeSingularUInt32Field(value: &value)
        self = .oneofUint32(value)
        return
      case 112:
        var value: ProtobufTestMessages_Proto3_TestAllTypes.NestedMessage?
        try decoder.decodeSingularMessageField(value: &value)
        if let value = value {
          self = .oneofNestedMessage(value)
          return
        }
      case 113:
        var value = String()
        try decoder.decodeSingularStringField(value: &value)
        self = .oneofString(value)
        return
      case 114:
        var value = Data()
        try decoder.decodeSingularBytesField(value: &value)
        self = .oneofBytes(value)
        return
      case 115:
        var value = Bool()
        try decoder.decodeSingularBoolField(value: &value)
        self = .oneofBool(value)
        return
      case 116:
        var value = UInt64()
        try decoder.decodeSingularUInt64Field(value: &value)
        self = .oneofUint64(value)
        return
      case 117:
        var value = Float()
        try decoder.decodeSingularFloatField(value: &value)
        self = .oneofFloat(value)
        return
      case 118:
        var value = Double()
        try decoder.decodeSingularDoubleField(value: &value)
        self = .oneofDouble(value)
        return
      case 119:
        var value = ProtobufTestMessages_Proto3_TestAllTypes.NestedEnum()
        try decoder.decodeSingularEnumField(value: &value)
        self = .oneofEnum(value)
        return
      default:
        break
      }
      return nil
    }

    fileprivate func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V, start: Int, end: Int) throws {
      switch self {
      case .oneofUint32(let v):
        if start <= 111 && 111 < end {
          try visitor.visitSingularUInt32Field(value: v, fieldNumber: 111)
        }
      case .oneofNestedMessage(let v):
        if start <= 112 && 112 < end {
          try visitor.visitSingularMessageField(value: v, fieldNumber: 112)
        }
      case .oneofString(let v):
        if start <= 113 && 113 < end {
          try visitor.visitSingularStringField(value: v, fieldNumber: 113)
        }
      case .oneofBytes(let v):
        if start <= 114 && 114 < end {
          try visitor.visitSingularBytesField(value: v, fieldNumber: 114)
        }
      case .oneofBool(let v):
        if start <= 115 && 115 < end {
          try visitor.visitSingularBoolField(value: v, fieldNumber: 115)
        }
      case .oneofUint64(let v):
        if start <= 116 && 116 < end {
          try visitor.visitSingularUInt64Field(value: v, fieldNumber: 116)
        }
      case .oneofFloat(let v):
        if start <= 117 && 117 < end {
          try visitor.visitSingularFloatField(value: v, fieldNumber: 117)
        }
      case .oneofDouble(let v):
        if start <= 118 && 118 < end {
          try visitor.visitSingularDoubleField(value: v, fieldNumber: 118)
        }
      case .oneofEnum(let v):
        if start <= 119 && 119 < end {
          try visitor.visitSingularEnumField(value: v, fieldNumber: 119)
        }
      }
    }
  }

  enum NestedEnum: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case foo // = 0
    case bar // = 1
    case baz // = 2

    ///   Intentionally negative.
    case neg // = -1
    case UNRECOGNIZED(Int)

    init() {
      self = .foo
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .foo
      case 1: self = .bar
      case 2: self = .baz
      case -1: self = .neg
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    init?(jsonName: String) {
      switch jsonName {
      case "FOO": self = .foo
      case "BAR": self = .bar
      case "BAZ": self = .baz
      case "NEG": self = .neg
      default: return nil
      }
    }

    init?(protoName: String) {
      switch protoName {
      case "FOO": self = .foo
      case "BAR": self = .bar
      case "BAZ": self = .baz
      case "NEG": self = .neg
      default: return nil
      }
    }

    var rawValue: Int {
      get {
        switch self {
        case .foo: return 0
        case .bar: return 1
        case .baz: return 2
        case .neg: return -1
        case .UNRECOGNIZED(let i): return i
        }
      }
    }

    var _protobuf_jsonName: String? {
      get {
        switch self {
        case .foo: return "FOO"
        case .bar: return "BAR"
        case .baz: return "BAZ"
        case .neg: return "NEG"
        case .UNRECOGNIZED: return nil
        }
      }
    }

  }

  struct NestedMessage: SwiftProtobuf.Proto3Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
    static let protoMessageName: String = "NestedMessage"
    static let protoPackageName: String = "protobuf_test_messages.proto3"
    static let _protobuf_fieldNames: FieldNameMap = [
      1: .same(proto: "a"),
      2: .same(proto: "corecursive"),
    ]

    private class _StorageClass {
      var _a: Int32 = 0
      var _corecursive: ProtobufTestMessages_Proto3_TestAllTypes? = nil

      init() {}

      func copy() -> _StorageClass {
        let clone = _StorageClass()
        clone._a = _a
        clone._corecursive = _corecursive
        return clone
      }
    }

    private var _storage = _StorageClass()

    private mutating func _uniqueStorage() -> _StorageClass {
      if !isKnownUniquelyReferenced(&_storage) {
        _storage = _storage.copy()
      }
      return _storage
    }

    var a: Int32 {
      get {return _storage._a}
      set {_uniqueStorage()._a = newValue}
    }

    var corecursive: ProtobufTestMessages_Proto3_TestAllTypes {
      get {return _storage._corecursive ?? ProtobufTestMessages_Proto3_TestAllTypes()}
      set {_uniqueStorage()._corecursive = newValue}
    }
    var hasCorecursive: Bool {
      return _storage._corecursive != nil
    }
    mutating func clearCorecursive() {
      return _storage._corecursive = nil
    }


    init() {}

    mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
        while let fieldNumber = try decoder.nextFieldNumber() {
          try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
        }
      }
    }

    mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt32Field(value: &_storage._a)
      case 2: try decoder.decodeSingularMessageField(value: &_storage._corecursive)
      default: break
      }
    }

    func _protoc_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
      try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
        if _storage._a != 0 {
          try visitor.visitSingularInt32Field(value: _storage._a, fieldNumber: 1)
        }
        if let v = _storage._corecursive {
          try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
        }
      }
    }

    func _protoc_generated_isEqualTo(other: ProtobufTestMessages_Proto3_TestAllTypes.NestedMessage) -> Bool {
      return withExtendedLifetime((_storage, other._storage)) { (_storage, other_storage) in
        if _storage._a != other_storage._a {return false}
        if _storage._corecursive != other_storage._corecursive {return false}
        return true
      }
    }
  }

  init() {}

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }
    }
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 1: try decoder.decodeSingularInt32Field(value: &_storage._optionalInt32)
    case 2: try decoder.decodeSingularInt64Field(value: &_storage._optionalInt64)
    case 3: try decoder.decodeSingularUInt32Field(value: &_storage._optionalUint32)
    case 4: try decoder.decodeSingularUInt64Field(value: &_storage._optionalUint64)
    case 5: try decoder.decodeSingularSInt32Field(value: &_storage._optionalSint32)
    case 6: try decoder.decodeSingularSInt64Field(value: &_storage._optionalSint64)
    case 7: try decoder.decodeSingularFixed32Field(value: &_storage._optionalFixed32)
    case 8: try decoder.decodeSingularFixed64Field(value: &_storage._optionalFixed64)
    case 9: try decoder.decodeSingularSFixed32Field(value: &_storage._optionalSfixed32)
    case 10: try decoder.decodeSingularSFixed64Field(value: &_storage._optionalSfixed64)
    case 11: try decoder.decodeSingularFloatField(value: &_storage._optionalFloat)
    case 12: try decoder.decodeSingularDoubleField(value: &_storage._optionalDouble)
    case 13: try decoder.decodeSingularBoolField(value: &_storage._optionalBool)
    case 14: try decoder.decodeSingularStringField(value: &_storage._optionalString)
    case 15: try decoder.decodeSingularBytesField(value: &_storage._optionalBytes)
    case 18: try decoder.decodeSingularMessageField(value: &_storage._optionalNestedMessage)
    case 19: try decoder.decodeSingularMessageField(value: &_storage._optionalForeignMessage)
    case 21: try decoder.decodeSingularEnumField(value: &_storage._optionalNestedEnum)
    case 22: try decoder.decodeSingularEnumField(value: &_storage._optionalForeignEnum)
    case 24: try decoder.decodeSingularStringField(value: &_storage._optionalStringPiece)
    case 25: try decoder.decodeSingularStringField(value: &_storage._optionalCord)
    case 27: try decoder.decodeSingularMessageField(value: &_storage._recursiveMessage)
    case 31: try decoder.decodeRepeatedInt32Field(value: &_storage._repeatedInt32)
    case 32: try decoder.decodeRepeatedInt64Field(value: &_storage._repeatedInt64)
    case 33: try decoder.decodeRepeatedUInt32Field(value: &_storage._repeatedUint32)
    case 34: try decoder.decodeRepeatedUInt64Field(value: &_storage._repeatedUint64)
    case 35: try decoder.decodeRepeatedSInt32Field(value: &_storage._repeatedSint32)
    case 36: try decoder.decodeRepeatedSInt64Field(value: &_storage._repeatedSint64)
    case 37: try decoder.decodeRepeatedFixed32Field(value: &_storage._repeatedFixed32)
    case 38: try decoder.decodeRepeatedFixed64Field(value: &_storage._repeatedFixed64)
    case 39: try decoder.decodeRepeatedSFixed32Field(value: &_storage._repeatedSfixed32)
    case 40: try decoder.decodeRepeatedSFixed64Field(value: &_storage._repeatedSfixed64)
    case 41: try decoder.decodeRepeatedFloatField(value: &_storage._repeatedFloat)
    case 42: try decoder.decodeRepeatedDoubleField(value: &_storage._repeatedDouble)
    case 43: try decoder.decodeRepeatedBoolField(value: &_storage._repeatedBool)
    case 44: try decoder.decodeRepeatedStringField(value: &_storage._repeatedString)
    case 45: try decoder.decodeRepeatedBytesField(value: &_storage._repeatedBytes)
    case 48: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedNestedMessage)
    case 49: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedForeignMessage)
    case 51: try decoder.decodeRepeatedEnumField(value: &_storage._repeatedNestedEnum)
    case 52: try decoder.decodeRepeatedEnumField(value: &_storage._repeatedForeignEnum)
    case 54: try decoder.decodeRepeatedStringField(value: &_storage._repeatedStringPiece)
    case 55: try decoder.decodeRepeatedStringField(value: &_storage._repeatedCord)
    case 56: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufInt32,SwiftProtobuf.ProtobufInt32>.self, value: &_storage._mapInt32Int32)
    case 57: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufInt64,SwiftProtobuf.ProtobufInt64>.self, value: &_storage._mapInt64Int64)
    case 58: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufUInt32,SwiftProtobuf.ProtobufUInt32>.self, value: &_storage._mapUint32Uint32)
    case 59: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufUInt64,SwiftProtobuf.ProtobufUInt64>.self, value: &_storage._mapUint64Uint64)
    case 60: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufSInt32,SwiftProtobuf.ProtobufSInt32>.self, value: &_storage._mapSint32Sint32)
    case 61: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufSInt64,SwiftProtobuf.ProtobufSInt64>.self, value: &_storage._mapSint64Sint64)
    case 62: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufFixed32,SwiftProtobuf.ProtobufFixed32>.self, value: &_storage._mapFixed32Fixed32)
    case 63: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufFixed64,SwiftProtobuf.ProtobufFixed64>.self, value: &_storage._mapFixed64Fixed64)
    case 64: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufSFixed32,SwiftProtobuf.ProtobufSFixed32>.self, value: &_storage._mapSfixed32Sfixed32)
    case 65: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufSFixed64,SwiftProtobuf.ProtobufSFixed64>.self, value: &_storage._mapSfixed64Sfixed64)
    case 66: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufInt32,SwiftProtobuf.ProtobufFloat>.self, value: &_storage._mapInt32Float)
    case 67: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufInt32,SwiftProtobuf.ProtobufDouble>.self, value: &_storage._mapInt32Double)
    case 68: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufBool,SwiftProtobuf.ProtobufBool>.self, value: &_storage._mapBoolBool)
    case 69: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &_storage._mapStringString)
    case 70: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufBytes>.self, value: &_storage._mapStringBytes)
    case 71: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMessageMap<SwiftProtobuf.ProtobufString,ProtobufTestMessages_Proto3_TestAllTypes.NestedMessage>.self, value: &_storage._mapStringNestedMessage)
    case 72: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMessageMap<SwiftProtobuf.ProtobufString,ProtobufTestMessages_Proto3_ForeignMessage>.self, value: &_storage._mapStringForeignMessage)
    case 73: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufEnumMap<SwiftProtobuf.ProtobufString,ProtobufTestMessages_Proto3_TestAllTypes.NestedEnum>.self, value: &_storage._mapStringNestedEnum)
    case 74: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufEnumMap<SwiftProtobuf.ProtobufString,ProtobufTestMessages_Proto3_ForeignEnum>.self, value: &_storage._mapStringForeignEnum)
    case 111, 112, 113, 114, 115, 116, 117, 118, 119:
      if _storage._oneofField != nil {
        try decoder.handleConflictingOneOf()
      }
      _storage._oneofField = try ProtobufTestMessages_Proto3_TestAllTypes.OneOf_OneofField(byDecodingFrom: &decoder, fieldNumber: fieldNumber)
    case 201: try decoder.decodeSingularMessageField(value: &_storage._optionalBoolWrapper)
    case 202: try decoder.decodeSingularMessageField(value: &_storage._optionalInt32Wrapper)
    case 203: try decoder.decodeSingularMessageField(value: &_storage._optionalInt64Wrapper)
    case 204: try decoder.decodeSingularMessageField(value: &_storage._optionalUint32Wrapper)
    case 205: try decoder.decodeSingularMessageField(value: &_storage._optionalUint64Wrapper)
    case 206: try decoder.decodeSingularMessageField(value: &_storage._optionalFloatWrapper)
    case 207: try decoder.decodeSingularMessageField(value: &_storage._optionalDoubleWrapper)
    case 208: try decoder.decodeSingularMessageField(value: &_storage._optionalStringWrapper)
    case 209: try decoder.decodeSingularMessageField(value: &_storage._optionalBytesWrapper)
    case 211: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedBoolWrapper)
    case 212: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedInt32Wrapper)
    case 213: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedInt64Wrapper)
    case 214: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedUint32Wrapper)
    case 215: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedUint64Wrapper)
    case 216: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedFloatWrapper)
    case 217: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedDoubleWrapper)
    case 218: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedStringWrapper)
    case 219: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedBytesWrapper)
    case 301: try decoder.decodeSingularMessageField(value: &_storage._optionalDuration)
    case 302: try decoder.decodeSingularMessageField(value: &_storage._optionalTimestamp)
    case 303: try decoder.decodeSingularMessageField(value: &_storage._optionalFieldMask)
    case 304: try decoder.decodeSingularMessageField(value: &_storage._optionalStruct)
    case 305: try decoder.decodeSingularMessageField(value: &_storage._optionalAny)
    case 306: try decoder.decodeSingularMessageField(value: &_storage._optionalValue)
    case 311: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedDuration)
    case 312: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedTimestamp)
    case 313: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedFieldmask)
    case 324: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedStruct)
    case 315: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedAny)
    case 316: try decoder.decodeRepeatedMessageField(value: &_storage._repeatedValue)
    case 401: try decoder.decodeSingularInt32Field(value: &_storage._fieldname1)
    case 402: try decoder.decodeSingularInt32Field(value: &_storage._fieldName2)
    case 403: try decoder.decodeSingularInt32Field(value: &_storage._fieldName3)
    case 404: try decoder.decodeSingularInt32Field(value: &_storage._field_Name4_)
    case 405: try decoder.decodeSingularInt32Field(value: &_storage._field0Name5)
    case 406: try decoder.decodeSingularInt32Field(value: &_storage._field0Name6)
    case 407: try decoder.decodeSingularInt32Field(value: &_storage._fieldName7)
    case 408: try decoder.decodeSingularInt32Field(value: &_storage._fieldName8)
    case 409: try decoder.decodeSingularInt32Field(value: &_storage._fieldName9)
    case 410: try decoder.decodeSingularInt32Field(value: &_storage._fieldName10)
    case 411: try decoder.decodeSingularInt32Field(value: &_storage._fieldName11)
    case 412: try decoder.decodeSingularInt32Field(value: &_storage._fieldName12)
    case 413: try decoder.decodeSingularInt32Field(value: &_storage.__FieldName13)
    case 414: try decoder.decodeSingularInt32Field(value: &_storage.__FieldName14)
    case 415: try decoder.decodeSingularInt32Field(value: &_storage._field_Name15)
    case 416: try decoder.decodeSingularInt32Field(value: &_storage._field_Name16)
    case 417: try decoder.decodeSingularInt32Field(value: &_storage._fieldName17__)
    case 418: try decoder.decodeSingularInt32Field(value: &_storage._fieldName18__)
    default: break
    }
  }

  func _protoc_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._optionalInt32 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._optionalInt32, fieldNumber: 1)
      }
      if _storage._optionalInt64 != 0 {
        try visitor.visitSingularInt64Field(value: _storage._optionalInt64, fieldNumber: 2)
      }
      if _storage._optionalUint32 != 0 {
        try visitor.visitSingularUInt32Field(value: _storage._optionalUint32, fieldNumber: 3)
      }
      if _storage._optionalUint64 != 0 {
        try visitor.visitSingularUInt64Field(value: _storage._optionalUint64, fieldNumber: 4)
      }
      if _storage._optionalSint32 != 0 {
        try visitor.visitSingularSInt32Field(value: _storage._optionalSint32, fieldNumber: 5)
      }
      if _storage._optionalSint64 != 0 {
        try visitor.visitSingularSInt64Field(value: _storage._optionalSint64, fieldNumber: 6)
      }
      if _storage._optionalFixed32 != 0 {
        try visitor.visitSingularFixed32Field(value: _storage._optionalFixed32, fieldNumber: 7)
      }
      if _storage._optionalFixed64 != 0 {
        try visitor.visitSingularFixed64Field(value: _storage._optionalFixed64, fieldNumber: 8)
      }
      if _storage._optionalSfixed32 != 0 {
        try visitor.visitSingularSFixed32Field(value: _storage._optionalSfixed32, fieldNumber: 9)
      }
      if _storage._optionalSfixed64 != 0 {
        try visitor.visitSingularSFixed64Field(value: _storage._optionalSfixed64, fieldNumber: 10)
      }
      if _storage._optionalFloat != 0 {
        try visitor.visitSingularFloatField(value: _storage._optionalFloat, fieldNumber: 11)
      }
      if _storage._optionalDouble != 0 {
        try visitor.visitSingularDoubleField(value: _storage._optionalDouble, fieldNumber: 12)
      }
      if _storage._optionalBool != false {
        try visitor.visitSingularBoolField(value: _storage._optionalBool, fieldNumber: 13)
      }
      if !_storage._optionalString.isEmpty {
        try visitor.visitSingularStringField(value: _storage._optionalString, fieldNumber: 14)
      }
      if _storage._optionalBytes != Data() {
        try visitor.visitSingularBytesField(value: _storage._optionalBytes, fieldNumber: 15)
      }
      if let v = _storage._optionalNestedMessage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 18)
      }
      if let v = _storage._optionalForeignMessage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 19)
      }
      if _storage._optionalNestedEnum != ProtobufTestMessages_Proto3_TestAllTypes.NestedEnum.foo {
        try visitor.visitSingularEnumField(value: _storage._optionalNestedEnum, fieldNumber: 21)
      }
      if _storage._optionalForeignEnum != ProtobufTestMessages_Proto3_ForeignEnum.foreignFoo {
        try visitor.visitSingularEnumField(value: _storage._optionalForeignEnum, fieldNumber: 22)
      }
      if !_storage._optionalStringPiece.isEmpty {
        try visitor.visitSingularStringField(value: _storage._optionalStringPiece, fieldNumber: 24)
      }
      if !_storage._optionalCord.isEmpty {
        try visitor.visitSingularStringField(value: _storage._optionalCord, fieldNumber: 25)
      }
      if let v = _storage._recursiveMessage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 27)
      }
      if !_storage._repeatedInt32.isEmpty {
        try visitor.visitPackedInt32Field(value: _storage._repeatedInt32, fieldNumber: 31)
      }
      if !_storage._repeatedInt64.isEmpty {
        try visitor.visitPackedInt64Field(value: _storage._repeatedInt64, fieldNumber: 32)
      }
      if !_storage._repeatedUint32.isEmpty {
        try visitor.visitPackedUInt32Field(value: _storage._repeatedUint32, fieldNumber: 33)
      }
      if !_storage._repeatedUint64.isEmpty {
        try visitor.visitPackedUInt64Field(value: _storage._repeatedUint64, fieldNumber: 34)
      }
      if !_storage._repeatedSint32.isEmpty {
        try visitor.visitPackedSInt32Field(value: _storage._repeatedSint32, fieldNumber: 35)
      }
      if !_storage._repeatedSint64.isEmpty {
        try visitor.visitPackedSInt64Field(value: _storage._repeatedSint64, fieldNumber: 36)
      }
      if !_storage._repeatedFixed32.isEmpty {
        try visitor.visitPackedFixed32Field(value: _storage._repeatedFixed32, fieldNumber: 37)
      }
      if !_storage._repeatedFixed64.isEmpty {
        try visitor.visitPackedFixed64Field(value: _storage._repeatedFixed64, fieldNumber: 38)
      }
      if !_storage._repeatedSfixed32.isEmpty {
        try visitor.visitPackedSFixed32Field(value: _storage._repeatedSfixed32, fieldNumber: 39)
      }
      if !_storage._repeatedSfixed64.isEmpty {
        try visitor.visitPackedSFixed64Field(value: _storage._repeatedSfixed64, fieldNumber: 40)
      }
      if !_storage._repeatedFloat.isEmpty {
        try visitor.visitPackedFloatField(value: _storage._repeatedFloat, fieldNumber: 41)
      }
      if !_storage._repeatedDouble.isEmpty {
        try visitor.visitPackedDoubleField(value: _storage._repeatedDouble, fieldNumber: 42)
      }
      if !_storage._repeatedBool.isEmpty {
        try visitor.visitPackedBoolField(value: _storage._repeatedBool, fieldNumber: 43)
      }
      if !_storage._repeatedString.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._repeatedString, fieldNumber: 44)
      }
      if !_storage._repeatedBytes.isEmpty {
        try visitor.visitRepeatedBytesField(value: _storage._repeatedBytes, fieldNumber: 45)
      }
      if !_storage._repeatedNestedMessage.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedNestedMessage, fieldNumber: 48)
      }
      if !_storage._repeatedForeignMessage.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedForeignMessage, fieldNumber: 49)
      }
      if !_storage._repeatedNestedEnum.isEmpty {
        try visitor.visitPackedEnumField(value: _storage._repeatedNestedEnum, fieldNumber: 51)
      }
      if !_storage._repeatedForeignEnum.isEmpty {
        try visitor.visitPackedEnumField(value: _storage._repeatedForeignEnum, fieldNumber: 52)
      }
      if !_storage._repeatedStringPiece.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._repeatedStringPiece, fieldNumber: 54)
      }
      if !_storage._repeatedCord.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._repeatedCord, fieldNumber: 55)
      }
      if !_storage._mapInt32Int32.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufInt32,SwiftProtobuf.ProtobufInt32>.self, value: _storage._mapInt32Int32, fieldNumber: 56)
      }
      if !_storage._mapInt64Int64.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufInt64,SwiftProtobuf.ProtobufInt64>.self, value: _storage._mapInt64Int64, fieldNumber: 57)
      }
      if !_storage._mapUint32Uint32.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufUInt32,SwiftProtobuf.ProtobufUInt32>.self, value: _storage._mapUint32Uint32, fieldNumber: 58)
      }
      if !_storage._mapUint64Uint64.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufUInt64,SwiftProtobuf.ProtobufUInt64>.self, value: _storage._mapUint64Uint64, fieldNumber: 59)
      }
      if !_storage._mapSint32Sint32.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufSInt32,SwiftProtobuf.ProtobufSInt32>.self, value: _storage._mapSint32Sint32, fieldNumber: 60)
      }
      if !_storage._mapSint64Sint64.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufSInt64,SwiftProtobuf.ProtobufSInt64>.self, value: _storage._mapSint64Sint64, fieldNumber: 61)
      }
      if !_storage._mapFixed32Fixed32.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufFixed32,SwiftProtobuf.ProtobufFixed32>.self, value: _storage._mapFixed32Fixed32, fieldNumber: 62)
      }
      if !_storage._mapFixed64Fixed64.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufFixed64,SwiftProtobuf.ProtobufFixed64>.self, value: _storage._mapFixed64Fixed64, fieldNumber: 63)
      }
      if !_storage._mapSfixed32Sfixed32.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufSFixed32,SwiftProtobuf.ProtobufSFixed32>.self, value: _storage._mapSfixed32Sfixed32, fieldNumber: 64)
      }
      if !_storage._mapSfixed64Sfixed64.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufSFixed64,SwiftProtobuf.ProtobufSFixed64>.self, value: _storage._mapSfixed64Sfixed64, fieldNumber: 65)
      }
      if !_storage._mapInt32Float.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufInt32,SwiftProtobuf.ProtobufFloat>.self, value: _storage._mapInt32Float, fieldNumber: 66)
      }
      if !_storage._mapInt32Double.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufInt32,SwiftProtobuf.ProtobufDouble>.self, value: _storage._mapInt32Double, fieldNumber: 67)
      }
      if !_storage._mapBoolBool.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufBool,SwiftProtobuf.ProtobufBool>.self, value: _storage._mapBoolBool, fieldNumber: 68)
      }
      if !_storage._mapStringString.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: _storage._mapStringString, fieldNumber: 69)
      }
      if !_storage._mapStringBytes.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufBytes>.self, value: _storage._mapStringBytes, fieldNumber: 70)
      }
      if !_storage._mapStringNestedMessage.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMessageMap<SwiftProtobuf.ProtobufString,ProtobufTestMessages_Proto3_TestAllTypes.NestedMessage>.self, value: _storage._mapStringNestedMessage, fieldNumber: 71)
      }
      if !_storage._mapStringForeignMessage.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMessageMap<SwiftProtobuf.ProtobufString,ProtobufTestMessages_Proto3_ForeignMessage>.self, value: _storage._mapStringForeignMessage, fieldNumber: 72)
      }
      if !_storage._mapStringNestedEnum.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufEnumMap<SwiftProtobuf.ProtobufString,ProtobufTestMessages_Proto3_TestAllTypes.NestedEnum>.self, value: _storage._mapStringNestedEnum, fieldNumber: 73)
      }
      if !_storage._mapStringForeignEnum.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufEnumMap<SwiftProtobuf.ProtobufString,ProtobufTestMessages_Proto3_ForeignEnum>.self, value: _storage._mapStringForeignEnum, fieldNumber: 74)
      }
      try _storage._oneofField?.traverse(visitor: &visitor, start: 111, end: 120)
      if let v = _storage._optionalBoolWrapper {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 201)
      }
      if let v = _storage._optionalInt32Wrapper {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 202)
      }
      if let v = _storage._optionalInt64Wrapper {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 203)
      }
      if let v = _storage._optionalUint32Wrapper {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 204)
      }
      if let v = _storage._optionalUint64Wrapper {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 205)
      }
      if let v = _storage._optionalFloatWrapper {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 206)
      }
      if let v = _storage._optionalDoubleWrapper {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 207)
      }
      if let v = _storage._optionalStringWrapper {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 208)
      }
      if let v = _storage._optionalBytesWrapper {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 209)
      }
      if !_storage._repeatedBoolWrapper.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedBoolWrapper, fieldNumber: 211)
      }
      if !_storage._repeatedInt32Wrapper.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedInt32Wrapper, fieldNumber: 212)
      }
      if !_storage._repeatedInt64Wrapper.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedInt64Wrapper, fieldNumber: 213)
      }
      if !_storage._repeatedUint32Wrapper.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedUint32Wrapper, fieldNumber: 214)
      }
      if !_storage._repeatedUint64Wrapper.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedUint64Wrapper, fieldNumber: 215)
      }
      if !_storage._repeatedFloatWrapper.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedFloatWrapper, fieldNumber: 216)
      }
      if !_storage._repeatedDoubleWrapper.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedDoubleWrapper, fieldNumber: 217)
      }
      if !_storage._repeatedStringWrapper.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedStringWrapper, fieldNumber: 218)
      }
      if !_storage._repeatedBytesWrapper.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedBytesWrapper, fieldNumber: 219)
      }
      if let v = _storage._optionalDuration {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 301)
      }
      if let v = _storage._optionalTimestamp {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 302)
      }
      if let v = _storage._optionalFieldMask {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 303)
      }
      if let v = _storage._optionalStruct {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 304)
      }
      if let v = _storage._optionalAny {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 305)
      }
      if let v = _storage._optionalValue {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 306)
      }
      if !_storage._repeatedDuration.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedDuration, fieldNumber: 311)
      }
      if !_storage._repeatedTimestamp.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedTimestamp, fieldNumber: 312)
      }
      if !_storage._repeatedFieldmask.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedFieldmask, fieldNumber: 313)
      }
      if !_storage._repeatedAny.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedAny, fieldNumber: 315)
      }
      if !_storage._repeatedValue.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedValue, fieldNumber: 316)
      }
      if !_storage._repeatedStruct.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._repeatedStruct, fieldNumber: 324)
      }
      if _storage._fieldname1 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldname1, fieldNumber: 401)
      }
      if _storage._fieldName2 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldName2, fieldNumber: 402)
      }
      if _storage._fieldName3 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldName3, fieldNumber: 403)
      }
      if _storage._field_Name4_ != 0 {
        try visitor.visitSingularInt32Field(value: _storage._field_Name4_, fieldNumber: 404)
      }
      if _storage._field0Name5 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._field0Name5, fieldNumber: 405)
      }
      if _storage._field0Name6 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._field0Name6, fieldNumber: 406)
      }
      if _storage._fieldName7 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldName7, fieldNumber: 407)
      }
      if _storage._fieldName8 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldName8, fieldNumber: 408)
      }
      if _storage._fieldName9 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldName9, fieldNumber: 409)
      }
      if _storage._fieldName10 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldName10, fieldNumber: 410)
      }
      if _storage._fieldName11 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldName11, fieldNumber: 411)
      }
      if _storage._fieldName12 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldName12, fieldNumber: 412)
      }
      if _storage.__FieldName13 != 0 {
        try visitor.visitSingularInt32Field(value: _storage.__FieldName13, fieldNumber: 413)
      }
      if _storage.__FieldName14 != 0 {
        try visitor.visitSingularInt32Field(value: _storage.__FieldName14, fieldNumber: 414)
      }
      if _storage._field_Name15 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._field_Name15, fieldNumber: 415)
      }
      if _storage._field_Name16 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._field_Name16, fieldNumber: 416)
      }
      if _storage._fieldName17__ != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldName17__, fieldNumber: 417)
      }
      if _storage._fieldName18__ != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldName18__, fieldNumber: 418)
      }
    }
  }

  func _protoc_generated_isEqualTo(other: ProtobufTestMessages_Proto3_TestAllTypes) -> Bool {
    return withExtendedLifetime((_storage, other._storage)) { (_storage, other_storage) in
      if _storage._optionalInt32 != other_storage._optionalInt32 {return false}
      if _storage._optionalInt64 != other_storage._optionalInt64 {return false}
      if _storage._optionalUint32 != other_storage._optionalUint32 {return false}
      if _storage._optionalUint64 != other_storage._optionalUint64 {return false}
      if _storage._optionalSint32 != other_storage._optionalSint32 {return false}
      if _storage._optionalSint64 != other_storage._optionalSint64 {return false}
      if _storage._optionalFixed32 != other_storage._optionalFixed32 {return false}
      if _storage._optionalFixed64 != other_storage._optionalFixed64 {return false}
      if _storage._optionalSfixed32 != other_storage._optionalSfixed32 {return false}
      if _storage._optionalSfixed64 != other_storage._optionalSfixed64 {return false}
      if _storage._optionalFloat != other_storage._optionalFloat {return false}
      if _storage._optionalDouble != other_storage._optionalDouble {return false}
      if _storage._optionalBool != other_storage._optionalBool {return false}
      if _storage._optionalString != other_storage._optionalString {return false}
      if _storage._optionalBytes != other_storage._optionalBytes {return false}
      if _storage._optionalNestedMessage != other_storage._optionalNestedMessage {return false}
      if _storage._optionalForeignMessage != other_storage._optionalForeignMessage {return false}
      if _storage._optionalNestedEnum != other_storage._optionalNestedEnum {return false}
      if _storage._optionalForeignEnum != other_storage._optionalForeignEnum {return false}
      if _storage._optionalStringPiece != other_storage._optionalStringPiece {return false}
      if _storage._optionalCord != other_storage._optionalCord {return false}
      if _storage._recursiveMessage != other_storage._recursiveMessage {return false}
      if _storage._repeatedInt32 != other_storage._repeatedInt32 {return false}
      if _storage._repeatedInt64 != other_storage._repeatedInt64 {return false}
      if _storage._repeatedUint32 != other_storage._repeatedUint32 {return false}
      if _storage._repeatedUint64 != other_storage._repeatedUint64 {return false}
      if _storage._repeatedSint32 != other_storage._repeatedSint32 {return false}
      if _storage._repeatedSint64 != other_storage._repeatedSint64 {return false}
      if _storage._repeatedFixed32 != other_storage._repeatedFixed32 {return false}
      if _storage._repeatedFixed64 != other_storage._repeatedFixed64 {return false}
      if _storage._repeatedSfixed32 != other_storage._repeatedSfixed32 {return false}
      if _storage._repeatedSfixed64 != other_storage._repeatedSfixed64 {return false}
      if _storage._repeatedFloat != other_storage._repeatedFloat {return false}
      if _storage._repeatedDouble != other_storage._repeatedDouble {return false}
      if _storage._repeatedBool != other_storage._repeatedBool {return false}
      if _storage._repeatedString != other_storage._repeatedString {return false}
      if _storage._repeatedBytes != other_storage._repeatedBytes {return false}
      if _storage._repeatedNestedMessage != other_storage._repeatedNestedMessage {return false}
      if _storage._repeatedForeignMessage != other_storage._repeatedForeignMessage {return false}
      if _storage._repeatedNestedEnum != other_storage._repeatedNestedEnum {return false}
      if _storage._repeatedForeignEnum != other_storage._repeatedForeignEnum {return false}
      if _storage._repeatedStringPiece != other_storage._repeatedStringPiece {return false}
      if _storage._repeatedCord != other_storage._repeatedCord {return false}
      if _storage._mapInt32Int32 != other_storage._mapInt32Int32 {return false}
      if _storage._mapInt64Int64 != other_storage._mapInt64Int64 {return false}
      if _storage._mapUint32Uint32 != other_storage._mapUint32Uint32 {return false}
      if _storage._mapUint64Uint64 != other_storage._mapUint64Uint64 {return false}
      if _storage._mapSint32Sint32 != other_storage._mapSint32Sint32 {return false}
      if _storage._mapSint64Sint64 != other_storage._mapSint64Sint64 {return false}
      if _storage._mapFixed32Fixed32 != other_storage._mapFixed32Fixed32 {return false}
      if _storage._mapFixed64Fixed64 != other_storage._mapFixed64Fixed64 {return false}
      if _storage._mapSfixed32Sfixed32 != other_storage._mapSfixed32Sfixed32 {return false}
      if _storage._mapSfixed64Sfixed64 != other_storage._mapSfixed64Sfixed64 {return false}
      if _storage._mapInt32Float != other_storage._mapInt32Float {return false}
      if _storage._mapInt32Double != other_storage._mapInt32Double {return false}
      if _storage._mapBoolBool != other_storage._mapBoolBool {return false}
      if _storage._mapStringString != other_storage._mapStringString {return false}
      if _storage._mapStringBytes != other_storage._mapStringBytes {return false}
      if _storage._mapStringNestedMessage != other_storage._mapStringNestedMessage {return false}
      if _storage._mapStringForeignMessage != other_storage._mapStringForeignMessage {return false}
      if _storage._mapStringNestedEnum != other_storage._mapStringNestedEnum {return false}
      if _storage._mapStringForeignEnum != other_storage._mapStringForeignEnum {return false}
      if _storage._oneofField != other_storage._oneofField {return false}
      if _storage._optionalBoolWrapper != other_storage._optionalBoolWrapper {return false}
      if _storage._optionalInt32Wrapper != other_storage._optionalInt32Wrapper {return false}
      if _storage._optionalInt64Wrapper != other_storage._optionalInt64Wrapper {return false}
      if _storage._optionalUint32Wrapper != other_storage._optionalUint32Wrapper {return false}
      if _storage._optionalUint64Wrapper != other_storage._optionalUint64Wrapper {return false}
      if _storage._optionalFloatWrapper != other_storage._optionalFloatWrapper {return false}
      if _storage._optionalDoubleWrapper != other_storage._optionalDoubleWrapper {return false}
      if _storage._optionalStringWrapper != other_storage._optionalStringWrapper {return false}
      if _storage._optionalBytesWrapper != other_storage._optionalBytesWrapper {return false}
      if _storage._repeatedBoolWrapper != other_storage._repeatedBoolWrapper {return false}
      if _storage._repeatedInt32Wrapper != other_storage._repeatedInt32Wrapper {return false}
      if _storage._repeatedInt64Wrapper != other_storage._repeatedInt64Wrapper {return false}
      if _storage._repeatedUint32Wrapper != other_storage._repeatedUint32Wrapper {return false}
      if _storage._repeatedUint64Wrapper != other_storage._repeatedUint64Wrapper {return false}
      if _storage._repeatedFloatWrapper != other_storage._repeatedFloatWrapper {return false}
      if _storage._repeatedDoubleWrapper != other_storage._repeatedDoubleWrapper {return false}
      if _storage._repeatedStringWrapper != other_storage._repeatedStringWrapper {return false}
      if _storage._repeatedBytesWrapper != other_storage._repeatedBytesWrapper {return false}
      if _storage._optionalDuration != other_storage._optionalDuration {return false}
      if _storage._optionalTimestamp != other_storage._optionalTimestamp {return false}
      if _storage._optionalFieldMask != other_storage._optionalFieldMask {return false}
      if _storage._optionalStruct != other_storage._optionalStruct {return false}
      if _storage._optionalAny != other_storage._optionalAny {return false}
      if _storage._optionalValue != other_storage._optionalValue {return false}
      if _storage._repeatedDuration != other_storage._repeatedDuration {return false}
      if _storage._repeatedTimestamp != other_storage._repeatedTimestamp {return false}
      if _storage._repeatedFieldmask != other_storage._repeatedFieldmask {return false}
      if _storage._repeatedStruct != other_storage._repeatedStruct {return false}
      if _storage._repeatedAny != other_storage._repeatedAny {return false}
      if _storage._repeatedValue != other_storage._repeatedValue {return false}
      if _storage._fieldname1 != other_storage._fieldname1 {return false}
      if _storage._fieldName2 != other_storage._fieldName2 {return false}
      if _storage._fieldName3 != other_storage._fieldName3 {return false}
      if _storage._field_Name4_ != other_storage._field_Name4_ {return false}
      if _storage._field0Name5 != other_storage._field0Name5 {return false}
      if _storage._field0Name6 != other_storage._field0Name6 {return false}
      if _storage._fieldName7 != other_storage._fieldName7 {return false}
      if _storage._fieldName8 != other_storage._fieldName8 {return false}
      if _storage._fieldName9 != other_storage._fieldName9 {return false}
      if _storage._fieldName10 != other_storage._fieldName10 {return false}
      if _storage._fieldName11 != other_storage._fieldName11 {return false}
      if _storage._fieldName12 != other_storage._fieldName12 {return false}
      if _storage.__FieldName13 != other_storage.__FieldName13 {return false}
      if _storage.__FieldName14 != other_storage.__FieldName14 {return false}
      if _storage._field_Name15 != other_storage._field_Name15 {return false}
      if _storage._field_Name16 != other_storage._field_Name16 {return false}
      if _storage._fieldName17__ != other_storage._fieldName17__ {return false}
      if _storage._fieldName18__ != other_storage._fieldName18__ {return false}
      return true
    }
  }
}

struct ProtobufTestMessages_Proto3_ForeignMessage: SwiftProtobuf.Proto3Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "ForeignMessage"
  static let protoPackageName: String = "protobuf_test_messages.proto3"
  static let _protobuf_fieldNames: FieldNameMap = [
    1: .same(proto: "c"),
  ]

  var c: Int32 = 0


  init() {}

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 1: try decoder.decodeSingularInt32Field(value: &c)
    default: break
    }
  }

  func _protoc_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if c != 0 {
      try visitor.visitSingularInt32Field(value: c, fieldNumber: 1)
    }
  }

  func _protoc_generated_isEqualTo(other: ProtobufTestMessages_Proto3_ForeignMessage) -> Bool {
    if c != other.c {return false}
    return true
  }
}
