// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/protobuf/test_messages_proto2.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file or at
// https://developers.google.com/open-source/licenses/bsd
//
// Test schema for proto2 messages.  This test schema is used by:
//
// - conformance tests

// LINT: ALLOW_GROUPS

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _3: SwiftProtobuf.ProtobufAPIVersion_3 {}
  typealias Version = _3
}

enum ProtobufTestMessages_Proto2_ForeignEnumProto2: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case foreignFoo // = 0
  case foreignBar // = 1
  case foreignBaz // = 2

  init() {
    self = .foreignFoo
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .foreignFoo
    case 1: self = .foreignBar
    case 2: self = .foreignBaz
    default: return nil
    }
  }

  var rawValue: Int {
    switch self {
    case .foreignFoo: return 0
    case .foreignBar: return 1
    case .foreignBaz: return 2
    }
  }

}

/// This proto includes every type of field in both singular and repeated
/// forms.
///
/// Also, crucially, all messages and enums in this file are eventually
/// submessages of this message.  So for example, a fuzz test of TestAllTypes
/// could trigger bugs that occur in any message type in this file.  We verify
/// this stays true in a unit test.
struct ProtobufTestMessages_Proto2_TestAllTypesProto2: SwiftProtobuf.ExtensibleMessage, @unchecked Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Singular
  var optionalInt32: Int32 {
    get {return _storage._optionalInt32 ?? 0}
    set {_uniqueStorage()._optionalInt32 = newValue}
  }
  /// Returns true if `optionalInt32` has been explicitly set.
  var hasOptionalInt32: Bool {return _storage._optionalInt32 != nil}
  /// Clears the value of `optionalInt32`. Subsequent reads from it will return its default value.
  mutating func clearOptionalInt32() {_uniqueStorage()._optionalInt32 = nil}

  var optionalInt64: Int64 {
    get {return _storage._optionalInt64 ?? 0}
    set {_uniqueStorage()._optionalInt64 = newValue}
  }
  /// Returns true if `optionalInt64` has been explicitly set.
  var hasOptionalInt64: Bool {return _storage._optionalInt64 != nil}
  /// Clears the value of `optionalInt64`. Subsequent reads from it will return its default value.
  mutating func clearOptionalInt64() {_uniqueStorage()._optionalInt64 = nil}

  var optionalUint32: UInt32 {
    get {return _storage._optionalUint32 ?? 0}
    set {_uniqueStorage()._optionalUint32 = newValue}
  }
  /// Returns true if `optionalUint32` has been explicitly set.
  var hasOptionalUint32: Bool {return _storage._optionalUint32 != nil}
  /// Clears the value of `optionalUint32`. Subsequent reads from it will return its default value.
  mutating func clearOptionalUint32() {_uniqueStorage()._optionalUint32 = nil}

  var optionalUint64: UInt64 {
    get {return _storage._optionalUint64 ?? 0}
    set {_uniqueStorage()._optionalUint64 = newValue}
  }
  /// Returns true if `optionalUint64` has been explicitly set.
  var hasOptionalUint64: Bool {return _storage._optionalUint64 != nil}
  /// Clears the value of `optionalUint64`. Subsequent reads from it will return its default value.
  mutating func clearOptionalUint64() {_uniqueStorage()._optionalUint64 = nil}

  var optionalSint32: Int32 {
    get {return _storage._optionalSint32 ?? 0}
    set {_uniqueStorage()._optionalSint32 = newValue}
  }
  /// Returns true if `optionalSint32` has been explicitly set.
  var hasOptionalSint32: Bool {return _storage._optionalSint32 != nil}
  /// Clears the value of `optionalSint32`. Subsequent reads from it will return its default value.
  mutating func clearOptionalSint32() {_uniqueStorage()._optionalSint32 = nil}

  var optionalSint64: Int64 {
    get {return _storage._optionalSint64 ?? 0}
    set {_uniqueStorage()._optionalSint64 = newValue}
  }
  /// Returns true if `optionalSint64` has been explicitly set.
  var hasOptionalSint64: Bool {return _storage._optionalSint64 != nil}
  /// Clears the value of `optionalSint64`. Subsequent reads from it will return its default value.
  mutating func clearOptionalSint64() {_uniqueStorage()._optionalSint64 = nil}

  var optionalFixed32: UInt32 {
    get {return _storage._optionalFixed32 ?? 0}
    set {_uniqueStorage()._optionalFixed32 = newValue}
  }
  /// Returns true if `optionalFixed32` has been explicitly set.
  var hasOptionalFixed32: Bool {return _storage._optionalFixed32 != nil}
  /// Clears the value of `optionalFixed32`. Subsequent reads from it will return its default value.
  mutating func clearOptionalFixed32() {_uniqueStorage()._optionalFixed32 = nil}

  var optionalFixed64: UInt64 {
    get {return _storage._optionalFixed64 ?? 0}
    set {_uniqueStorage()._optionalFixed64 = newValue}
  }
  /// Returns true if `optionalFixed64` has been explicitly set.
  var hasOptionalFixed64: Bool {return _storage._optionalFixed64 != nil}
  /// Clears the value of `optionalFixed64`. Subsequent reads from it will return its default value.
  mutating func clearOptionalFixed64() {_uniqueStorage()._optionalFixed64 = nil}

  var optionalSfixed32: Int32 {
    get {return _storage._optionalSfixed32 ?? 0}
    set {_uniqueStorage()._optionalSfixed32 = newValue}
  }
  /// Returns true if `optionalSfixed32` has been explicitly set.
  var hasOptionalSfixed32: Bool {return _storage._optionalSfixed32 != nil}
  /// Clears the value of `optionalSfixed32`. Subsequent reads from it will return its default value.
  mutating func clearOptionalSfixed32() {_uniqueStorage()._optionalSfixed32 = nil}

  var optionalSfixed64: Int64 {
    get {return _storage._optionalSfixed64 ?? 0}
    set {_uniqueStorage()._optionalSfixed64 = newValue}
  }
  /// Returns true if `optionalSfixed64` has been explicitly set.
  var hasOptionalSfixed64: Bool {return _storage._optionalSfixed64 != nil}
  /// Clears the value of `optionalSfixed64`. Subsequent reads from it will return its default value.
  mutating func clearOptionalSfixed64() {_uniqueStorage()._optionalSfixed64 = nil}

  var optionalFloat: Float {
    get {return _storage._optionalFloat ?? 0}
    set {_uniqueStorage()._optionalFloat = newValue}
  }
  /// Returns true if `optionalFloat` has been explicitly set.
  var hasOptionalFloat: Bool {return _storage._optionalFloat != nil}
  /// Clears the value of `optionalFloat`. Subsequent reads from it will return its default value.
  mutating func clearOptionalFloat() {_uniqueStorage()._optionalFloat = nil}

  var optionalDouble: Double {
    get {return _storage._optionalDouble ?? 0}
    set {_uniqueStorage()._optionalDouble = newValue}
  }
  /// Returns true if `optionalDouble` has been explicitly set.
  var hasOptionalDouble: Bool {return _storage._optionalDouble != nil}
  /// Clears the value of `optionalDouble`. Subsequent reads from it will return its default value.
  mutating func clearOptionalDouble() {_uniqueStorage()._optionalDouble = nil}

  var optionalBool: Bool {
    get {return _storage._optionalBool ?? false}
    set {_uniqueStorage()._optionalBool = newValue}
  }
  /// Returns true if `optionalBool` has been explicitly set.
  var hasOptionalBool: Bool {return _storage._optionalBool != nil}
  /// Clears the value of `optionalBool`. Subsequent reads from it will return its default value.
  mutating func clearOptionalBool() {_uniqueStorage()._optionalBool = nil}

  var optionalString: String {
    get {return _storage._optionalString ?? String()}
    set {_uniqueStorage()._optionalString = newValue}
  }
  /// Returns true if `optionalString` has been explicitly set.
  var hasOptionalString: Bool {return _storage._optionalString != nil}
  /// Clears the value of `optionalString`. Subsequent reads from it will return its default value.
  mutating func clearOptionalString() {_uniqueStorage()._optionalString = nil}

  var optionalBytes: Data {
    get {return _storage._optionalBytes ?? Data()}
    set {_uniqueStorage()._optionalBytes = newValue}
  }
  /// Returns true if `optionalBytes` has been explicitly set.
  var hasOptionalBytes: Bool {return _storage._optionalBytes != nil}
  /// Clears the value of `optionalBytes`. Subsequent reads from it will return its default value.
  mutating func clearOptionalBytes() {_uniqueStorage()._optionalBytes = nil}

  var optionalNestedMessage: ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedMessage {
    get {return _storage._optionalNestedMessage ?? ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedMessage()}
    set {_uniqueStorage()._optionalNestedMessage = newValue}
  }
  /// Returns true if `optionalNestedMessage` has been explicitly set.
  var hasOptionalNestedMessage: Bool {return _storage._optionalNestedMessage != nil}
  /// Clears the value of `optionalNestedMessage`. Subsequent reads from it will return its default value.
  mutating func clearOptionalNestedMessage() {_uniqueStorage()._optionalNestedMessage = nil}

  var optionalForeignMessage: ProtobufTestMessages_Proto2_ForeignMessageProto2 {
    get {return _storage._optionalForeignMessage ?? ProtobufTestMessages_Proto2_ForeignMessageProto2()}
    set {_uniqueStorage()._optionalForeignMessage = newValue}
  }
  /// Returns true if `optionalForeignMessage` has been explicitly set.
  var hasOptionalForeignMessage: Bool {return _storage._optionalForeignMessage != nil}
  /// Clears the value of `optionalForeignMessage`. Subsequent reads from it will return its default value.
  mutating func clearOptionalForeignMessage() {_uniqueStorage()._optionalForeignMessage = nil}

  var optionalNestedEnum: ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedEnum {
    get {return _storage._optionalNestedEnum ?? .foo}
    set {_uniqueStorage()._optionalNestedEnum = newValue}
  }
  /// Returns true if `optionalNestedEnum` has been explicitly set.
  var hasOptionalNestedEnum: Bool {return _storage._optionalNestedEnum != nil}
  /// Clears the value of `optionalNestedEnum`. Subsequent reads from it will return its default value.
  mutating func clearOptionalNestedEnum() {_uniqueStorage()._optionalNestedEnum = nil}

  var optionalForeignEnum: ProtobufTestMessages_Proto2_ForeignEnumProto2 {
    get {return _storage._optionalForeignEnum ?? .foreignFoo}
    set {_uniqueStorage()._optionalForeignEnum = newValue}
  }
  /// Returns true if `optionalForeignEnum` has been explicitly set.
  var hasOptionalForeignEnum: Bool {return _storage._optionalForeignEnum != nil}
  /// Clears the value of `optionalForeignEnum`. Subsequent reads from it will return its default value.
  mutating func clearOptionalForeignEnum() {_uniqueStorage()._optionalForeignEnum = nil}

  var optionalStringPiece: String {
    get {return _storage._optionalStringPiece ?? String()}
    set {_uniqueStorage()._optionalStringPiece = newValue}
  }
  /// Returns true if `optionalStringPiece` has been explicitly set.
  var hasOptionalStringPiece: Bool {return _storage._optionalStringPiece != nil}
  /// Clears the value of `optionalStringPiece`. Subsequent reads from it will return its default value.
  mutating func clearOptionalStringPiece() {_uniqueStorage()._optionalStringPiece = nil}

  var optionalCord: String {
    get {return _storage._optionalCord ?? String()}
    set {_uniqueStorage()._optionalCord = newValue}
  }
  /// Returns true if `optionalCord` has been explicitly set.
  var hasOptionalCord: Bool {return _storage._optionalCord != nil}
  /// Clears the value of `optionalCord`. Subsequent reads from it will return its default value.
  mutating func clearOptionalCord() {_uniqueStorage()._optionalCord = nil}

  var recursiveMessage: ProtobufTestMessages_Proto2_TestAllTypesProto2 {
    get {return _storage._recursiveMessage ?? ProtobufTestMessages_Proto2_TestAllTypesProto2()}
    set {_uniqueStorage()._recursiveMessage = newValue}
  }
  /// Returns true if `recursiveMessage` has been explicitly set.
  var hasRecursiveMessage: Bool {return _storage._recursiveMessage != nil}
  /// Clears the value of `recursiveMessage`. Subsequent reads from it will return its default value.
  mutating func clearRecursiveMessage() {_uniqueStorage()._recursiveMessage = nil}

  /// Repeated
  var repeatedInt32: [Int32] {
    get {return _storage._repeatedInt32}
    set {_uniqueStorage()._repeatedInt32 = newValue}
  }

  var repeatedInt64: [Int64] {
    get {return _storage._repeatedInt64}
    set {_uniqueStorage()._repeatedInt64 = newValue}
  }

  var repeatedUint32: [UInt32] {
    get {return _storage._repeatedUint32}
    set {_uniqueStorage()._repeatedUint32 = newValue}
  }

  var repeatedUint64: [UInt64] {
    get {return _storage._repeatedUint64}
    set {_uniqueStorage()._repeatedUint64 = newValue}
  }

  var repeatedSint32: [Int32] {
    get {return _storage._repeatedSint32}
    set {_uniqueStorage()._repeatedSint32 = newValue}
  }

  var repeatedSint64: [Int64] {
    get {return _storage._repeatedSint64}
    set {_uniqueStorage()._repeatedSint64 = newValue}
  }

  var repeatedFixed32: [UInt32] {
    get {return _storage._repeatedFixed32}
    set {_uniqueStorage()._repeatedFixed32 = newValue}
  }

  var repeatedFixed64: [UInt64] {
    get {return _storage._repeatedFixed64}
    set {_uniqueStorage()._repeatedFixed64 = newValue}
  }

  var repeatedSfixed32: [Int32] {
    get {return _storage._repeatedSfixed32}
    set {_uniqueStorage()._repeatedSfixed32 = newValue}
  }

  var repeatedSfixed64: [Int64] {
    get {return _storage._repeatedSfixed64}
    set {_uniqueStorage()._repeatedSfixed64 = newValue}
  }

  var repeatedFloat: [Float] {
    get {return _storage._repeatedFloat}
    set {_uniqueStorage()._repeatedFloat = newValue}
  }

  var repeatedDouble: [Double] {
    get {return _storage._repeatedDouble}
    set {_uniqueStorage()._repeatedDouble = newValue}
  }

  var repeatedBool: [Bool] {
    get {return _storage._repeatedBool}
    set {_uniqueStorage()._repeatedBool = newValue}
  }

  var repeatedString: [String] {
    get {return _storage._repeatedString}
    set {_uniqueStorage()._repeatedString = newValue}
  }

  var repeatedBytes: [Data] {
    get {return _storage._repeatedBytes}
    set {_uniqueStorage()._repeatedBytes = newValue}
  }

  var repeatedNestedMessage: [ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedMessage] {
    get {return _storage._repeatedNestedMessage}
    set {_uniqueStorage()._repeatedNestedMessage = newValue}
  }

  var repeatedForeignMessage: [ProtobufTestMessages_Proto2_ForeignMessageProto2] {
    get {return _storage._repeatedForeignMessage}
    set {_uniqueStorage()._repeatedForeignMessage = newValue}
  }

  var repeatedNestedEnum: [ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedEnum] {
    get {return _storage._repeatedNestedEnum}
    set {_uniqueStorage()._repeatedNestedEnum = newValue}
  }

  var repeatedForeignEnum: [ProtobufTestMessages_Proto2_ForeignEnumProto2] {
    get {return _storage._repeatedForeignEnum}
    set {_uniqueStorage()._repeatedForeignEnum = newValue}
  }

  var repeatedStringPiece: [String] {
    get {return _storage._repeatedStringPiece}
    set {_uniqueStorage()._repeatedStringPiece = newValue}
  }

  var repeatedCord: [String] {
    get {return _storage._repeatedCord}
    set {_uniqueStorage()._repeatedCord = newValue}
  }

  /// Packed
  var packedInt32: [Int32] {
    get {return _storage._packedInt32}
    set {_uniqueStorage()._packedInt32 = newValue}
  }

  var packedInt64: [Int64] {
    get {return _storage._packedInt64}
    set {_uniqueStorage()._packedInt64 = newValue}
  }

  var packedUint32: [UInt32] {
    get {return _storage._packedUint32}
    set {_uniqueStorage()._packedUint32 = newValue}
  }

  var packedUint64: [UInt64] {
    get {return _storage._packedUint64}
    set {_uniqueStorage()._packedUint64 = newValue}
  }

  var packedSint32: [Int32] {
    get {return _storage._packedSint32}
    set {_uniqueStorage()._packedSint32 = newValue}
  }

  var packedSint64: [Int64] {
    get {return _storage._packedSint64}
    set {_uniqueStorage()._packedSint64 = newValue}
  }

  var packedFixed32: [UInt32] {
    get {return _storage._packedFixed32}
    set {_uniqueStorage()._packedFixed32 = newValue}
  }

  var packedFixed64: [UInt64] {
    get {return _storage._packedFixed64}
    set {_uniqueStorage()._packedFixed64 = newValue}
  }

  var packedSfixed32: [Int32] {
    get {return _storage._packedSfixed32}
    set {_uniqueStorage()._packedSfixed32 = newValue}
  }

  var packedSfixed64: [Int64] {
    get {return _storage._packedSfixed64}
    set {_uniqueStorage()._packedSfixed64 = newValue}
  }

  var packedFloat: [Float] {
    get {return _storage._packedFloat}
    set {_uniqueStorage()._packedFloat = newValue}
  }

  var packedDouble: [Double] {
    get {return _storage._packedDouble}
    set {_uniqueStorage()._packedDouble = newValue}
  }

  var packedBool: [Bool] {
    get {return _storage._packedBool}
    set {_uniqueStorage()._packedBool = newValue}
  }

  var packedNestedEnum: [ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedEnum] {
    get {return _storage._packedNestedEnum}
    set {_uniqueStorage()._packedNestedEnum = newValue}
  }

  /// Unpacked
  var unpackedInt32: [Int32] {
    get {return _storage._unpackedInt32}
    set {_uniqueStorage()._unpackedInt32 = newValue}
  }

  var unpackedInt64: [Int64] {
    get {return _storage._unpackedInt64}
    set {_uniqueStorage()._unpackedInt64 = newValue}
  }

  var unpackedUint32: [UInt32] {
    get {return _storage._unpackedUint32}
    set {_uniqueStorage()._unpackedUint32 = newValue}
  }

  var unpackedUint64: [UInt64] {
    get {return _storage._unpackedUint64}
    set {_uniqueStorage()._unpackedUint64 = newValue}
  }

  var unpackedSint32: [Int32] {
    get {return _storage._unpackedSint32}
    set {_uniqueStorage()._unpackedSint32 = newValue}
  }

  var unpackedSint64: [Int64] {
    get {return _storage._unpackedSint64}
    set {_uniqueStorage()._unpackedSint64 = newValue}
  }

  var unpackedFixed32: [UInt32] {
    get {return _storage._unpackedFixed32}
    set {_uniqueStorage()._unpackedFixed32 = newValue}
  }

  var unpackedFixed64: [UInt64] {
    get {return _storage._unpackedFixed64}
    set {_uniqueStorage()._unpackedFixed64 = newValue}
  }

  var unpackedSfixed32: [Int32] {
    get {return _storage._unpackedSfixed32}
    set {_uniqueStorage()._unpackedSfixed32 = newValue}
  }

  var unpackedSfixed64: [Int64] {
    get {return _storage._unpackedSfixed64}
    set {_uniqueStorage()._unpackedSfixed64 = newValue}
  }

  var unpackedFloat: [Float] {
    get {return _storage._unpackedFloat}
    set {_uniqueStorage()._unpackedFloat = newValue}
  }

  var unpackedDouble: [Double] {
    get {return _storage._unpackedDouble}
    set {_uniqueStorage()._unpackedDouble = newValue}
  }

  var unpackedBool: [Bool] {
    get {return _storage._unpackedBool}
    set {_uniqueStorage()._unpackedBool = newValue}
  }

  var unpackedNestedEnum: [ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedEnum] {
    get {return _storage._unpackedNestedEnum}
    set {_uniqueStorage()._unpackedNestedEnum = newValue}
  }

  /// Map
  var mapInt32Int32: Dictionary<Int32,Int32> {
    get {return _storage._mapInt32Int32}
    set {_uniqueStorage()._mapInt32Int32 = newValue}
  }

  var mapInt64Int64: Dictionary<Int64,Int64> {
    get {return _storage._mapInt64Int64}
    set {_uniqueStorage()._mapInt64Int64 = newValue}
  }

  var mapUint32Uint32: Dictionary<UInt32,UInt32> {
    get {return _storage._mapUint32Uint32}
    set {_uniqueStorage()._mapUint32Uint32 = newValue}
  }

  var mapUint64Uint64: Dictionary<UInt64,UInt64> {
    get {return _storage._mapUint64Uint64}
    set {_uniqueStorage()._mapUint64Uint64 = newValue}
  }

  var mapSint32Sint32: Dictionary<Int32,Int32> {
    get {return _storage._mapSint32Sint32}
    set {_uniqueStorage()._mapSint32Sint32 = newValue}
  }

  var mapSint64Sint64: Dictionary<Int64,Int64> {
    get {return _storage._mapSint64Sint64}
    set {_uniqueStorage()._mapSint64Sint64 = newValue}
  }

  var mapFixed32Fixed32: Dictionary<UInt32,UInt32> {
    get {return _storage._mapFixed32Fixed32}
    set {_uniqueStorage()._mapFixed32Fixed32 = newValue}
  }

  var mapFixed64Fixed64: Dictionary<UInt64,UInt64> {
    get {return _storage._mapFixed64Fixed64}
    set {_uniqueStorage()._mapFixed64Fixed64 = newValue}
  }

  var mapSfixed32Sfixed32: Dictionary<Int32,Int32> {
    get {return _storage._mapSfixed32Sfixed32}
    set {_uniqueStorage()._mapSfixed32Sfixed32 = newValue}
  }

  var mapSfixed64Sfixed64: Dictionary<Int64,Int64> {
    get {return _storage._mapSfixed64Sfixed64}
    set {_uniqueStorage()._mapSfixed64Sfixed64 = newValue}
  }

  var mapInt32Float: Dictionary<Int32,Float> {
    get {return _storage._mapInt32Float}
    set {_uniqueStorage()._mapInt32Float = newValue}
  }

  var mapInt32Double: Dictionary<Int32,Double> {
    get {return _storage._mapInt32Double}
    set {_uniqueStorage()._mapInt32Double = newValue}
  }

  var mapBoolBool: Dictionary<Bool,Bool> {
    get {return _storage._mapBoolBool}
    set {_uniqueStorage()._mapBoolBool = newValue}
  }

  var mapStringString: Dictionary<String,String> {
    get {return _storage._mapStringString}
    set {_uniqueStorage()._mapStringString = newValue}
  }

  var mapStringBytes: Dictionary<String,Data> {
    get {return _storage._mapStringBytes}
    set {_uniqueStorage()._mapStringBytes = newValue}
  }

  var mapStringNestedMessage: Dictionary<String,ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedMessage> {
    get {return _storage._mapStringNestedMessage}
    set {_uniqueStorage()._mapStringNestedMessage = newValue}
  }

  var mapStringForeignMessage: Dictionary<String,ProtobufTestMessages_Proto2_ForeignMessageProto2> {
    get {return _storage._mapStringForeignMessage}
    set {_uniqueStorage()._mapStringForeignMessage = newValue}
  }

  var mapStringNestedEnum: Dictionary<String,ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedEnum> {
    get {return _storage._mapStringNestedEnum}
    set {_uniqueStorage()._mapStringNestedEnum = newValue}
  }

  var mapStringForeignEnum: Dictionary<String,ProtobufTestMessages_Proto2_ForeignEnumProto2> {
    get {return _storage._mapStringForeignEnum}
    set {_uniqueStorage()._mapStringForeignEnum = newValue}
  }

  var oneofField: OneOf_OneofField? {
    get {return _storage._oneofField}
    set {_uniqueStorage()._oneofField = newValue}
  }

  var oneofUint32: UInt32 {
    get {
      if case .oneofUint32(let v)? = _storage._oneofField {return v}
      return 0
    }
    set {_uniqueStorage()._oneofField = .oneofUint32(newValue)}
  }

  var oneofNestedMessage: ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedMessage {
    get {
      if case .oneofNestedMessage(let v)? = _storage._oneofField {return v}
      return ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedMessage()
    }
    set {_uniqueStorage()._oneofField = .oneofNestedMessage(newValue)}
  }

  var oneofString: String {
    get {
      if case .oneofString(let v)? = _storage._oneofField {return v}
      return String()
    }
    set {_uniqueStorage()._oneofField = .oneofString(newValue)}
  }

  var oneofBytes: Data {
    get {
      if case .oneofBytes(let v)? = _storage._oneofField {return v}
      return Data()
    }
    set {_uniqueStorage()._oneofField = .oneofBytes(newValue)}
  }

  var oneofBool: Bool {
    get {
      if case .oneofBool(let v)? = _storage._oneofField {return v}
      return false
    }
    set {_uniqueStorage()._oneofField = .oneofBool(newValue)}
  }

  var oneofUint64: UInt64 {
    get {
      if case .oneofUint64(let v)? = _storage._oneofField {return v}
      return 0
    }
    set {_uniqueStorage()._oneofField = .oneofUint64(newValue)}
  }

  var oneofFloat: Float {
    get {
      if case .oneofFloat(let v)? = _storage._oneofField {return v}
      return 0
    }
    set {_uniqueStorage()._oneofField = .oneofFloat(newValue)}
  }

  var oneofDouble: Double {
    get {
      if case .oneofDouble(let v)? = _storage._oneofField {return v}
      return 0
    }
    set {_uniqueStorage()._oneofField = .oneofDouble(newValue)}
  }

  var oneofEnum: ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedEnum {
    get {
      if case .oneofEnum(let v)? = _storage._oneofField {return v}
      return .foo
    }
    set {_uniqueStorage()._oneofField = .oneofEnum(newValue)}
  }

  var data: ProtobufTestMessages_Proto2_TestAllTypesProto2.DataMessage {
    get {return _storage._data ?? ProtobufTestMessages_Proto2_TestAllTypesProto2.DataMessage()}
    set {_uniqueStorage()._data = newValue}
  }
  /// Returns true if `data` has been explicitly set.
  var hasData: Bool {return _storage._data != nil}
  /// Clears the value of `data`. Subsequent reads from it will return its default value.
  mutating func clearData() {_uniqueStorage()._data = nil}

  /// default values
  var defaultInt32: Int32 {
    get {return _storage._defaultInt32 ?? -123456789}
    set {_uniqueStorage()._defaultInt32 = newValue}
  }
  /// Returns true if `defaultInt32` has been explicitly set.
  var hasDefaultInt32: Bool {return _storage._defaultInt32 != nil}
  /// Clears the value of `defaultInt32`. Subsequent reads from it will return its default value.
  mutating func clearDefaultInt32() {_uniqueStorage()._defaultInt32 = nil}

  var defaultInt64: Int64 {
    get {return _storage._defaultInt64 ?? -9123456789123456789}
    set {_uniqueStorage()._defaultInt64 = newValue}
  }
  /// Returns true if `defaultInt64` has been explicitly set.
  var hasDefaultInt64: Bool {return _storage._defaultInt64 != nil}
  /// Clears the value of `defaultInt64`. Subsequent reads from it will return its default value.
  mutating func clearDefaultInt64() {_uniqueStorage()._defaultInt64 = nil}

  var defaultUint32: UInt32 {
    get {return _storage._defaultUint32 ?? 2123456789}
    set {_uniqueStorage()._defaultUint32 = newValue}
  }
  /// Returns true if `defaultUint32` has been explicitly set.
  var hasDefaultUint32: Bool {return _storage._defaultUint32 != nil}
  /// Clears the value of `defaultUint32`. Subsequent reads from it will return its default value.
  mutating func clearDefaultUint32() {_uniqueStorage()._defaultUint32 = nil}

  var defaultUint64: UInt64 {
    get {return _storage._defaultUint64 ?? 10123456789123456789}
    set {_uniqueStorage()._defaultUint64 = newValue}
  }
  /// Returns true if `defaultUint64` has been explicitly set.
  var hasDefaultUint64: Bool {return _storage._defaultUint64 != nil}
  /// Clears the value of `defaultUint64`. Subsequent reads from it will return its default value.
  mutating func clearDefaultUint64() {_uniqueStorage()._defaultUint64 = nil}

  var defaultSint32: Int32 {
    get {return _storage._defaultSint32 ?? -123456789}
    set {_uniqueStorage()._defaultSint32 = newValue}
  }
  /// Returns true if `defaultSint32` has been explicitly set.
  var hasDefaultSint32: Bool {return _storage._defaultSint32 != nil}
  /// Clears the value of `defaultSint32`. Subsequent reads from it will return its default value.
  mutating func clearDefaultSint32() {_uniqueStorage()._defaultSint32 = nil}

  var defaultSint64: Int64 {
    get {return _storage._defaultSint64 ?? -9123456789123456789}
    set {_uniqueStorage()._defaultSint64 = newValue}
  }
  /// Returns true if `defaultSint64` has been explicitly set.
  var hasDefaultSint64: Bool {return _storage._defaultSint64 != nil}
  /// Clears the value of `defaultSint64`. Subsequent reads from it will return its default value.
  mutating func clearDefaultSint64() {_uniqueStorage()._defaultSint64 = nil}

  var defaultFixed32: UInt32 {
    get {return _storage._defaultFixed32 ?? 2123456789}
    set {_uniqueStorage()._defaultFixed32 = newValue}
  }
  /// Returns true if `defaultFixed32` has been explicitly set.
  var hasDefaultFixed32: Bool {return _storage._defaultFixed32 != nil}
  /// Clears the value of `defaultFixed32`. Subsequent reads from it will return its default value.
  mutating func clearDefaultFixed32() {_uniqueStorage()._defaultFixed32 = nil}

  var defaultFixed64: UInt64 {
    get {return _storage._defaultFixed64 ?? 10123456789123456789}
    set {_uniqueStorage()._defaultFixed64 = newValue}
  }
  /// Returns true if `defaultFixed64` has been explicitly set.
  var hasDefaultFixed64: Bool {return _storage._defaultFixed64 != nil}
  /// Clears the value of `defaultFixed64`. Subsequent reads from it will return its default value.
  mutating func clearDefaultFixed64() {_uniqueStorage()._defaultFixed64 = nil}

  var defaultSfixed32: Int32 {
    get {return _storage._defaultSfixed32 ?? -123456789}
    set {_uniqueStorage()._defaultSfixed32 = newValue}
  }
  /// Returns true if `defaultSfixed32` has been explicitly set.
  var hasDefaultSfixed32: Bool {return _storage._defaultSfixed32 != nil}
  /// Clears the value of `defaultSfixed32`. Subsequent reads from it will return its default value.
  mutating func clearDefaultSfixed32() {_uniqueStorage()._defaultSfixed32 = nil}

  var defaultSfixed64: Int64 {
    get {return _storage._defaultSfixed64 ?? -9123456789123456789}
    set {_uniqueStorage()._defaultSfixed64 = newValue}
  }
  /// Returns true if `defaultSfixed64` has been explicitly set.
  var hasDefaultSfixed64: Bool {return _storage._defaultSfixed64 != nil}
  /// Clears the value of `defaultSfixed64`. Subsequent reads from it will return its default value.
  mutating func clearDefaultSfixed64() {_uniqueStorage()._defaultSfixed64 = nil}

  var defaultFloat: Float {
    get {return _storage._defaultFloat ?? 9e+09}
    set {_uniqueStorage()._defaultFloat = newValue}
  }
  /// Returns true if `defaultFloat` has been explicitly set.
  var hasDefaultFloat: Bool {return _storage._defaultFloat != nil}
  /// Clears the value of `defaultFloat`. Subsequent reads from it will return its default value.
  mutating func clearDefaultFloat() {_uniqueStorage()._defaultFloat = nil}

  var defaultDouble: Double {
    get {return _storage._defaultDouble ?? 7e+22}
    set {_uniqueStorage()._defaultDouble = newValue}
  }
  /// Returns true if `defaultDouble` has been explicitly set.
  var hasDefaultDouble: Bool {return _storage._defaultDouble != nil}
  /// Clears the value of `defaultDouble`. Subsequent reads from it will return its default value.
  mutating func clearDefaultDouble() {_uniqueStorage()._defaultDouble = nil}

  var defaultBool: Bool {
    get {return _storage._defaultBool ?? true}
    set {_uniqueStorage()._defaultBool = newValue}
  }
  /// Returns true if `defaultBool` has been explicitly set.
  var hasDefaultBool: Bool {return _storage._defaultBool != nil}
  /// Clears the value of `defaultBool`. Subsequent reads from it will return its default value.
  mutating func clearDefaultBool() {_uniqueStorage()._defaultBool = nil}

  var defaultString: String {
    get {return _storage._defaultString ?? "Rosebud"}
    set {_uniqueStorage()._defaultString = newValue}
  }
  /// Returns true if `defaultString` has been explicitly set.
  var hasDefaultString: Bool {return _storage._defaultString != nil}
  /// Clears the value of `defaultString`. Subsequent reads from it will return its default value.
  mutating func clearDefaultString() {_uniqueStorage()._defaultString = nil}

  var defaultBytes: Data {
    get {return _storage._defaultBytes ?? Data([106, 111, 115, 104, 117, 97])}
    set {_uniqueStorage()._defaultBytes = newValue}
  }
  /// Returns true if `defaultBytes` has been explicitly set.
  var hasDefaultBytes: Bool {return _storage._defaultBytes != nil}
  /// Clears the value of `defaultBytes`. Subsequent reads from it will return its default value.
  mutating func clearDefaultBytes() {_uniqueStorage()._defaultBytes = nil}

  /// Test field-name-to-JSON-name convention.
  /// (protobuf says names can be any valid C/C++ identifier.)
  var fieldname1: Int32 {
    get {return _storage._fieldname1 ?? 0}
    set {_uniqueStorage()._fieldname1 = newValue}
  }
  /// Returns true if `fieldname1` has been explicitly set.
  var hasFieldname1: Bool {return _storage._fieldname1 != nil}
  /// Clears the value of `fieldname1`. Subsequent reads from it will return its default value.
  mutating func clearFieldname1() {_uniqueStorage()._fieldname1 = nil}

  var fieldName2: Int32 {
    get {return _storage._fieldName2 ?? 0}
    set {_uniqueStorage()._fieldName2 = newValue}
  }
  /// Returns true if `fieldName2` has been explicitly set.
  var hasFieldName2: Bool {return _storage._fieldName2 != nil}
  /// Clears the value of `fieldName2`. Subsequent reads from it will return its default value.
  mutating func clearFieldName2() {_uniqueStorage()._fieldName2 = nil}

  var fieldName3: Int32 {
    get {return _storage._fieldName3 ?? 0}
    set {_uniqueStorage()._fieldName3 = newValue}
  }
  /// Returns true if `fieldName3` has been explicitly set.
  var hasFieldName3: Bool {return _storage._fieldName3 != nil}
  /// Clears the value of `fieldName3`. Subsequent reads from it will return its default value.
  mutating func clearFieldName3() {_uniqueStorage()._fieldName3 = nil}

  var field_Name4_: Int32 {
    get {return _storage._field_Name4_ ?? 0}
    set {_uniqueStorage()._field_Name4_ = newValue}
  }
  /// Returns true if `field_Name4_` has been explicitly set.
  var hasField_Name4_: Bool {return _storage._field_Name4_ != nil}
  /// Clears the value of `field_Name4_`. Subsequent reads from it will return its default value.
  mutating func clearField_Name4_() {_uniqueStorage()._field_Name4_ = nil}

  var field0Name5: Int32 {
    get {return _storage._field0Name5 ?? 0}
    set {_uniqueStorage()._field0Name5 = newValue}
  }
  /// Returns true if `field0Name5` has been explicitly set.
  var hasField0Name5: Bool {return _storage._field0Name5 != nil}
  /// Clears the value of `field0Name5`. Subsequent reads from it will return its default value.
  mutating func clearField0Name5() {_uniqueStorage()._field0Name5 = nil}

  var field0Name6: Int32 {
    get {return _storage._field0Name6 ?? 0}
    set {_uniqueStorage()._field0Name6 = newValue}
  }
  /// Returns true if `field0Name6` has been explicitly set.
  var hasField0Name6: Bool {return _storage._field0Name6 != nil}
  /// Clears the value of `field0Name6`. Subsequent reads from it will return its default value.
  mutating func clearField0Name6() {_uniqueStorage()._field0Name6 = nil}

  var fieldName7: Int32 {
    get {return _storage._fieldName7 ?? 0}
    set {_uniqueStorage()._fieldName7 = newValue}
  }
  /// Returns true if `fieldName7` has been explicitly set.
  var hasFieldName7: Bool {return _storage._fieldName7 != nil}
  /// Clears the value of `fieldName7`. Subsequent reads from it will return its default value.
  mutating func clearFieldName7() {_uniqueStorage()._fieldName7 = nil}

  var fieldName8: Int32 {
    get {return _storage._fieldName8 ?? 0}
    set {_uniqueStorage()._fieldName8 = newValue}
  }
  /// Returns true if `fieldName8` has been explicitly set.
  var hasFieldName8: Bool {return _storage._fieldName8 != nil}
  /// Clears the value of `fieldName8`. Subsequent reads from it will return its default value.
  mutating func clearFieldName8() {_uniqueStorage()._fieldName8 = nil}

  var fieldName9: Int32 {
    get {return _storage._fieldName9 ?? 0}
    set {_uniqueStorage()._fieldName9 = newValue}
  }
  /// Returns true if `fieldName9` has been explicitly set.
  var hasFieldName9: Bool {return _storage._fieldName9 != nil}
  /// Clears the value of `fieldName9`. Subsequent reads from it will return its default value.
  mutating func clearFieldName9() {_uniqueStorage()._fieldName9 = nil}

  var fieldName10: Int32 {
    get {return _storage._fieldName10 ?? 0}
    set {_uniqueStorage()._fieldName10 = newValue}
  }
  /// Returns true if `fieldName10` has been explicitly set.
  var hasFieldName10: Bool {return _storage._fieldName10 != nil}
  /// Clears the value of `fieldName10`. Subsequent reads from it will return its default value.
  mutating func clearFieldName10() {_uniqueStorage()._fieldName10 = nil}

  var fieldName11: Int32 {
    get {return _storage._fieldName11 ?? 0}
    set {_uniqueStorage()._fieldName11 = newValue}
  }
  /// Returns true if `fieldName11` has been explicitly set.
  var hasFieldName11: Bool {return _storage._fieldName11 != nil}
  /// Clears the value of `fieldName11`. Subsequent reads from it will return its default value.
  mutating func clearFieldName11() {_uniqueStorage()._fieldName11 = nil}

  var fieldName12: Int32 {
    get {return _storage._fieldName12 ?? 0}
    set {_uniqueStorage()._fieldName12 = newValue}
  }
  /// Returns true if `fieldName12` has been explicitly set.
  var hasFieldName12: Bool {return _storage._fieldName12 != nil}
  /// Clears the value of `fieldName12`. Subsequent reads from it will return its default value.
  mutating func clearFieldName12() {_uniqueStorage()._fieldName12 = nil}

  var _FieldName13: Int32 {
    get {return _storage.__FieldName13 ?? 0}
    set {_uniqueStorage().__FieldName13 = newValue}
  }
  /// Returns true if `_FieldName13` has been explicitly set.
  var has_FieldName13: Bool {return _storage.__FieldName13 != nil}
  /// Clears the value of `_FieldName13`. Subsequent reads from it will return its default value.
  mutating func clear_FieldName13() {_uniqueStorage().__FieldName13 = nil}

  var _FieldName14: Int32 {
    get {return _storage.__FieldName14 ?? 0}
    set {_uniqueStorage().__FieldName14 = newValue}
  }
  /// Returns true if `_FieldName14` has been explicitly set.
  var has_FieldName14: Bool {return _storage.__FieldName14 != nil}
  /// Clears the value of `_FieldName14`. Subsequent reads from it will return its default value.
  mutating func clear_FieldName14() {_uniqueStorage().__FieldName14 = nil}

  var field_Name15: Int32 {
    get {return _storage._field_Name15 ?? 0}
    set {_uniqueStorage()._field_Name15 = newValue}
  }
  /// Returns true if `field_Name15` has been explicitly set.
  var hasField_Name15: Bool {return _storage._field_Name15 != nil}
  /// Clears the value of `field_Name15`. Subsequent reads from it will return its default value.
  mutating func clearField_Name15() {_uniqueStorage()._field_Name15 = nil}

  var field_Name16: Int32 {
    get {return _storage._field_Name16 ?? 0}
    set {_uniqueStorage()._field_Name16 = newValue}
  }
  /// Returns true if `field_Name16` has been explicitly set.
  var hasField_Name16: Bool {return _storage._field_Name16 != nil}
  /// Clears the value of `field_Name16`. Subsequent reads from it will return its default value.
  mutating func clearField_Name16() {_uniqueStorage()._field_Name16 = nil}

  var fieldName17__: Int32 {
    get {return _storage._fieldName17__ ?? 0}
    set {_uniqueStorage()._fieldName17__ = newValue}
  }
  /// Returns true if `fieldName17__` has been explicitly set.
  var hasFieldName17__: Bool {return _storage._fieldName17__ != nil}
  /// Clears the value of `fieldName17__`. Subsequent reads from it will return its default value.
  mutating func clearFieldName17__() {_uniqueStorage()._fieldName17__ = nil}

  var fieldName18__: Int32 {
    get {return _storage._fieldName18__ ?? 0}
    set {_uniqueStorage()._fieldName18__ = newValue}
  }
  /// Returns true if `fieldName18__` has been explicitly set.
  var hasFieldName18__: Bool {return _storage._fieldName18__ != nil}
  /// Clears the value of `fieldName18__`. Subsequent reads from it will return its default value.
  mutating func clearFieldName18__() {_uniqueStorage()._fieldName18__ = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum OneOf_OneofField: Equatable, @unchecked Sendable {
    case oneofUint32(UInt32)
    case oneofNestedMessage(ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedMessage)
    case oneofString(String)
    case oneofBytes(Data)
    case oneofBool(Bool)
    case oneofUint64(UInt64)
    case oneofFloat(Float)
    case oneofDouble(Double)
    case oneofEnum(ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedEnum)

    fileprivate var isInitialized: Bool {
      guard case .oneofNestedMessage(let v) = self else {return true}
      return v.isInitialized
    }

  }

  enum NestedEnum: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case foo // = 0
    case bar // = 1
    case baz // = 2

    /// Intentionally negative.
    case neg // = -1

    init() {
      self = .foo
    }

    init?(rawValue: Int) {
      switch rawValue {
      case -1: self = .neg
      case 0: self = .foo
      case 1: self = .bar
      case 2: self = .baz
      default: return nil
      }
    }

    var rawValue: Int {
      switch self {
      case .neg: return -1
      case .foo: return 0
      case .bar: return 1
      case .baz: return 2
      }
    }

  }

  struct NestedMessage: @unchecked Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var a: Int32 {
      get {return _storage._a ?? 0}
      set {_uniqueStorage()._a = newValue}
    }
    /// Returns true if `a` has been explicitly set.
    var hasA: Bool {return _storage._a != nil}
    /// Clears the value of `a`. Subsequent reads from it will return its default value.
    mutating func clearA() {_uniqueStorage()._a = nil}

    var corecursive: ProtobufTestMessages_Proto2_TestAllTypesProto2 {
      get {return _storage._corecursive ?? ProtobufTestMessages_Proto2_TestAllTypesProto2()}
      set {_uniqueStorage()._corecursive = newValue}
    }
    /// Returns true if `corecursive` has been explicitly set.
    var hasCorecursive: Bool {return _storage._corecursive != nil}
    /// Clears the value of `corecursive`. Subsequent reads from it will return its default value.
    mutating func clearCorecursive() {_uniqueStorage()._corecursive = nil}

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    fileprivate var _storage = _StorageClass.defaultInstance
  }

  /// groups
  struct DataMessage: Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var groupInt32: Int32 {
      get {return _groupInt32 ?? 0}
      set {_groupInt32 = newValue}
    }
    /// Returns true if `groupInt32` has been explicitly set.
    var hasGroupInt32: Bool {return self._groupInt32 != nil}
    /// Clears the value of `groupInt32`. Subsequent reads from it will return its default value.
    mutating func clearGroupInt32() {self._groupInt32 = nil}

    var groupUint32: UInt32 {
      get {return _groupUint32 ?? 0}
      set {_groupUint32 = newValue}
    }
    /// Returns true if `groupUint32` has been explicitly set.
    var hasGroupUint32: Bool {return self._groupUint32 != nil}
    /// Clears the value of `groupUint32`. Subsequent reads from it will return its default value.
    mutating func clearGroupUint32() {self._groupUint32 = nil}

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    fileprivate var _groupInt32: Int32? = nil
    fileprivate var _groupUint32: UInt32? = nil
  }

  /// message_set test case.
  struct MessageSetCorrect: SwiftProtobuf.ExtensibleMessage, Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
  }

  struct MessageSetCorrectExtension1: Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var str: String {
      get {return _str ?? String()}
      set {_str = newValue}
    }
    /// Returns true if `str` has been explicitly set.
    var hasStr: Bool {return self._str != nil}
    /// Clears the value of `str`. Subsequent reads from it will return its default value.
    mutating func clearStr() {self._str = nil}

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    fileprivate var _str: String? = nil
  }

  struct MessageSetCorrectExtension2: Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var i: Int32 {
      get {return _i ?? 0}
      set {_i = newValue}
    }
    /// Returns true if `i` has been explicitly set.
    var hasI: Bool {return self._i != nil}
    /// Clears the value of `i`. Subsequent reads from it will return its default value.
    mutating func clearI() {self._i = nil}

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    fileprivate var _i: Int32? = nil
  }

  init() {}

  var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
  fileprivate var _storage = _StorageClass.defaultInstance
}

struct ProtobufTestMessages_Proto2_ForeignMessageProto2: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var c: Int32 {
    get {return _c ?? 0}
    set {_c = newValue}
  }
  /// Returns true if `c` has been explicitly set.
  var hasC: Bool {return self._c != nil}
  /// Clears the value of `c`. Subsequent reads from it will return its default value.
  mutating func clearC() {self._c = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _c: Int32? = nil
}

struct ProtobufTestMessages_Proto2_UnknownToTestAllTypes: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var optionalInt32: Int32 {
    get {return _optionalInt32 ?? 0}
    set {_optionalInt32 = newValue}
  }
  /// Returns true if `optionalInt32` has been explicitly set.
  var hasOptionalInt32: Bool {return self._optionalInt32 != nil}
  /// Clears the value of `optionalInt32`. Subsequent reads from it will return its default value.
  mutating func clearOptionalInt32() {self._optionalInt32 = nil}

  var optionalString: String {
    get {return _optionalString ?? String()}
    set {_optionalString = newValue}
  }
  /// Returns true if `optionalString` has been explicitly set.
  var hasOptionalString: Bool {return self._optionalString != nil}
  /// Clears the value of `optionalString`. Subsequent reads from it will return its default value.
  mutating func clearOptionalString() {self._optionalString = nil}

  var nestedMessage: ProtobufTestMessages_Proto2_ForeignMessageProto2 {
    get {return _nestedMessage ?? ProtobufTestMessages_Proto2_ForeignMessageProto2()}
    set {_nestedMessage = newValue}
  }
  /// Returns true if `nestedMessage` has been explicitly set.
  var hasNestedMessage: Bool {return self._nestedMessage != nil}
  /// Clears the value of `nestedMessage`. Subsequent reads from it will return its default value.
  mutating func clearNestedMessage() {self._nestedMessage = nil}

  var optionalGroup: ProtobufTestMessages_Proto2_UnknownToTestAllTypes.OptionalGroup {
    get {return _optionalGroup ?? ProtobufTestMessages_Proto2_UnknownToTestAllTypes.OptionalGroup()}
    set {_optionalGroup = newValue}
  }
  /// Returns true if `optionalGroup` has been explicitly set.
  var hasOptionalGroup: Bool {return self._optionalGroup != nil}
  /// Clears the value of `optionalGroup`. Subsequent reads from it will return its default value.
  mutating func clearOptionalGroup() {self._optionalGroup = nil}

  var optionalBool: Bool {
    get {return _optionalBool ?? false}
    set {_optionalBool = newValue}
  }
  /// Returns true if `optionalBool` has been explicitly set.
  var hasOptionalBool: Bool {return self._optionalBool != nil}
  /// Clears the value of `optionalBool`. Subsequent reads from it will return its default value.
  mutating func clearOptionalBool() {self._optionalBool = nil}

  var repeatedInt32: [Int32] = []

  var unknownFields = SwiftProtobuf.UnknownStorage()

  struct OptionalGroup: Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var a: Int32 {
      get {return _a ?? 0}
      set {_a = newValue}
    }
    /// Returns true if `a` has been explicitly set.
    var hasA: Bool {return self._a != nil}
    /// Clears the value of `a`. Subsequent reads from it will return its default value.
    mutating func clearA() {self._a = nil}

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    fileprivate var _a: Int32? = nil
  }

  init() {}

  fileprivate var _optionalInt32: Int32? = nil
  fileprivate var _optionalString: String? = nil
  fileprivate var _nestedMessage: ProtobufTestMessages_Proto2_ForeignMessageProto2? = nil
  fileprivate var _optionalGroup: ProtobufTestMessages_Proto2_UnknownToTestAllTypes.OptionalGroup? = nil
  fileprivate var _optionalBool: Bool? = nil
}

struct ProtobufTestMessages_Proto2_NullHypothesisProto2: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

struct ProtobufTestMessages_Proto2_EnumOnlyProto2: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum BoolEnum: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case kFalse // = 0
    case kTrue // = 1

    init() {
      self = .kFalse
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .kFalse
      case 1: self = .kTrue
      default: return nil
      }
    }

    var rawValue: Int {
      switch self {
      case .kFalse: return 0
      case .kTrue: return 1
      }
    }

  }

  init() {}
}

struct ProtobufTestMessages_Proto2_OneStringProto2: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var data: String {
    get {return _data ?? String()}
    set {_data = newValue}
  }
  /// Returns true if `data` has been explicitly set.
  var hasData: Bool {return self._data != nil}
  /// Clears the value of `data`. Subsequent reads from it will return its default value.
  mutating func clearData() {self._data = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _data: String? = nil
}

struct ProtobufTestMessages_Proto2_ProtoWithKeywords: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var inline: Int32 {
    get {return _inline ?? 0}
    set {_inline = newValue}
  }
  /// Returns true if `inline` has been explicitly set.
  var hasInline: Bool {return self._inline != nil}
  /// Clears the value of `inline`. Subsequent reads from it will return its default value.
  mutating func clearInline() {self._inline = nil}

  var concept: String {
    get {return _concept ?? String()}
    set {_concept = newValue}
  }
  /// Returns true if `concept` has been explicitly set.
  var hasConcept: Bool {return self._concept != nil}
  /// Clears the value of `concept`. Subsequent reads from it will return its default value.
  mutating func clearConcept() {self._concept = nil}

  var requires: [String] = []

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _inline: Int32? = nil
  fileprivate var _concept: String? = nil
}

struct ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2: SwiftProtobuf.ExtensibleMessage, @unchecked Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Singular
  var requiredInt32: Int32 {
    get {return _storage._requiredInt32 ?? 0}
    set {_uniqueStorage()._requiredInt32 = newValue}
  }
  /// Returns true if `requiredInt32` has been explicitly set.
  var hasRequiredInt32: Bool {return _storage._requiredInt32 != nil}
  /// Clears the value of `requiredInt32`. Subsequent reads from it will return its default value.
  mutating func clearRequiredInt32() {_uniqueStorage()._requiredInt32 = nil}

  var requiredInt64: Int64 {
    get {return _storage._requiredInt64 ?? 0}
    set {_uniqueStorage()._requiredInt64 = newValue}
  }
  /// Returns true if `requiredInt64` has been explicitly set.
  var hasRequiredInt64: Bool {return _storage._requiredInt64 != nil}
  /// Clears the value of `requiredInt64`. Subsequent reads from it will return its default value.
  mutating func clearRequiredInt64() {_uniqueStorage()._requiredInt64 = nil}

  var requiredUint32: UInt32 {
    get {return _storage._requiredUint32 ?? 0}
    set {_uniqueStorage()._requiredUint32 = newValue}
  }
  /// Returns true if `requiredUint32` has been explicitly set.
  var hasRequiredUint32: Bool {return _storage._requiredUint32 != nil}
  /// Clears the value of `requiredUint32`. Subsequent reads from it will return its default value.
  mutating func clearRequiredUint32() {_uniqueStorage()._requiredUint32 = nil}

  var requiredUint64: UInt64 {
    get {return _storage._requiredUint64 ?? 0}
    set {_uniqueStorage()._requiredUint64 = newValue}
  }
  /// Returns true if `requiredUint64` has been explicitly set.
  var hasRequiredUint64: Bool {return _storage._requiredUint64 != nil}
  /// Clears the value of `requiredUint64`. Subsequent reads from it will return its default value.
  mutating func clearRequiredUint64() {_uniqueStorage()._requiredUint64 = nil}

  var requiredSint32: Int32 {
    get {return _storage._requiredSint32 ?? 0}
    set {_uniqueStorage()._requiredSint32 = newValue}
  }
  /// Returns true if `requiredSint32` has been explicitly set.
  var hasRequiredSint32: Bool {return _storage._requiredSint32 != nil}
  /// Clears the value of `requiredSint32`. Subsequent reads from it will return its default value.
  mutating func clearRequiredSint32() {_uniqueStorage()._requiredSint32 = nil}

  var requiredSint64: Int64 {
    get {return _storage._requiredSint64 ?? 0}
    set {_uniqueStorage()._requiredSint64 = newValue}
  }
  /// Returns true if `requiredSint64` has been explicitly set.
  var hasRequiredSint64: Bool {return _storage._requiredSint64 != nil}
  /// Clears the value of `requiredSint64`. Subsequent reads from it will return its default value.
  mutating func clearRequiredSint64() {_uniqueStorage()._requiredSint64 = nil}

  var requiredFixed32: UInt32 {
    get {return _storage._requiredFixed32 ?? 0}
    set {_uniqueStorage()._requiredFixed32 = newValue}
  }
  /// Returns true if `requiredFixed32` has been explicitly set.
  var hasRequiredFixed32: Bool {return _storage._requiredFixed32 != nil}
  /// Clears the value of `requiredFixed32`. Subsequent reads from it will return its default value.
  mutating func clearRequiredFixed32() {_uniqueStorage()._requiredFixed32 = nil}

  var requiredFixed64: UInt64 {
    get {return _storage._requiredFixed64 ?? 0}
    set {_uniqueStorage()._requiredFixed64 = newValue}
  }
  /// Returns true if `requiredFixed64` has been explicitly set.
  var hasRequiredFixed64: Bool {return _storage._requiredFixed64 != nil}
  /// Clears the value of `requiredFixed64`. Subsequent reads from it will return its default value.
  mutating func clearRequiredFixed64() {_uniqueStorage()._requiredFixed64 = nil}

  var requiredSfixed32: Int32 {
    get {return _storage._requiredSfixed32 ?? 0}
    set {_uniqueStorage()._requiredSfixed32 = newValue}
  }
  /// Returns true if `requiredSfixed32` has been explicitly set.
  var hasRequiredSfixed32: Bool {return _storage._requiredSfixed32 != nil}
  /// Clears the value of `requiredSfixed32`. Subsequent reads from it will return its default value.
  mutating func clearRequiredSfixed32() {_uniqueStorage()._requiredSfixed32 = nil}

  var requiredSfixed64: Int64 {
    get {return _storage._requiredSfixed64 ?? 0}
    set {_uniqueStorage()._requiredSfixed64 = newValue}
  }
  /// Returns true if `requiredSfixed64` has been explicitly set.
  var hasRequiredSfixed64: Bool {return _storage._requiredSfixed64 != nil}
  /// Clears the value of `requiredSfixed64`. Subsequent reads from it will return its default value.
  mutating func clearRequiredSfixed64() {_uniqueStorage()._requiredSfixed64 = nil}

  var requiredFloat: Float {
    get {return _storage._requiredFloat ?? 0}
    set {_uniqueStorage()._requiredFloat = newValue}
  }
  /// Returns true if `requiredFloat` has been explicitly set.
  var hasRequiredFloat: Bool {return _storage._requiredFloat != nil}
  /// Clears the value of `requiredFloat`. Subsequent reads from it will return its default value.
  mutating func clearRequiredFloat() {_uniqueStorage()._requiredFloat = nil}

  var requiredDouble: Double {
    get {return _storage._requiredDouble ?? 0}
    set {_uniqueStorage()._requiredDouble = newValue}
  }
  /// Returns true if `requiredDouble` has been explicitly set.
  var hasRequiredDouble: Bool {return _storage._requiredDouble != nil}
  /// Clears the value of `requiredDouble`. Subsequent reads from it will return its default value.
  mutating func clearRequiredDouble() {_uniqueStorage()._requiredDouble = nil}

  var requiredBool: Bool {
    get {return _storage._requiredBool ?? false}
    set {_uniqueStorage()._requiredBool = newValue}
  }
  /// Returns true if `requiredBool` has been explicitly set.
  var hasRequiredBool: Bool {return _storage._requiredBool != nil}
  /// Clears the value of `requiredBool`. Subsequent reads from it will return its default value.
  mutating func clearRequiredBool() {_uniqueStorage()._requiredBool = nil}

  var requiredString: String {
    get {return _storage._requiredString ?? String()}
    set {_uniqueStorage()._requiredString = newValue}
  }
  /// Returns true if `requiredString` has been explicitly set.
  var hasRequiredString: Bool {return _storage._requiredString != nil}
  /// Clears the value of `requiredString`. Subsequent reads from it will return its default value.
  mutating func clearRequiredString() {_uniqueStorage()._requiredString = nil}

  var requiredBytes: Data {
    get {return _storage._requiredBytes ?? Data()}
    set {_uniqueStorage()._requiredBytes = newValue}
  }
  /// Returns true if `requiredBytes` has been explicitly set.
  var hasRequiredBytes: Bool {return _storage._requiredBytes != nil}
  /// Clears the value of `requiredBytes`. Subsequent reads from it will return its default value.
  mutating func clearRequiredBytes() {_uniqueStorage()._requiredBytes = nil}

  var requiredNestedMessage: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.NestedMessage {
    get {return _storage._requiredNestedMessage ?? ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.NestedMessage()}
    set {_uniqueStorage()._requiredNestedMessage = newValue}
  }
  /// Returns true if `requiredNestedMessage` has been explicitly set.
  var hasRequiredNestedMessage: Bool {return _storage._requiredNestedMessage != nil}
  /// Clears the value of `requiredNestedMessage`. Subsequent reads from it will return its default value.
  mutating func clearRequiredNestedMessage() {_uniqueStorage()._requiredNestedMessage = nil}

  var requiredForeignMessage: ProtobufTestMessages_Proto2_ForeignMessageProto2 {
    get {return _storage._requiredForeignMessage ?? ProtobufTestMessages_Proto2_ForeignMessageProto2()}
    set {_uniqueStorage()._requiredForeignMessage = newValue}
  }
  /// Returns true if `requiredForeignMessage` has been explicitly set.
  var hasRequiredForeignMessage: Bool {return _storage._requiredForeignMessage != nil}
  /// Clears the value of `requiredForeignMessage`. Subsequent reads from it will return its default value.
  mutating func clearRequiredForeignMessage() {_uniqueStorage()._requiredForeignMessage = nil}

  var requiredNestedEnum: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.NestedEnum {
    get {return _storage._requiredNestedEnum ?? .foo}
    set {_uniqueStorage()._requiredNestedEnum = newValue}
  }
  /// Returns true if `requiredNestedEnum` has been explicitly set.
  var hasRequiredNestedEnum: Bool {return _storage._requiredNestedEnum != nil}
  /// Clears the value of `requiredNestedEnum`. Subsequent reads from it will return its default value.
  mutating func clearRequiredNestedEnum() {_uniqueStorage()._requiredNestedEnum = nil}

  var requiredForeignEnum: ProtobufTestMessages_Proto2_ForeignEnumProto2 {
    get {return _storage._requiredForeignEnum ?? .foreignFoo}
    set {_uniqueStorage()._requiredForeignEnum = newValue}
  }
  /// Returns true if `requiredForeignEnum` has been explicitly set.
  var hasRequiredForeignEnum: Bool {return _storage._requiredForeignEnum != nil}
  /// Clears the value of `requiredForeignEnum`. Subsequent reads from it will return its default value.
  mutating func clearRequiredForeignEnum() {_uniqueStorage()._requiredForeignEnum = nil}

  var requiredStringPiece: String {
    get {return _storage._requiredStringPiece ?? String()}
    set {_uniqueStorage()._requiredStringPiece = newValue}
  }
  /// Returns true if `requiredStringPiece` has been explicitly set.
  var hasRequiredStringPiece: Bool {return _storage._requiredStringPiece != nil}
  /// Clears the value of `requiredStringPiece`. Subsequent reads from it will return its default value.
  mutating func clearRequiredStringPiece() {_uniqueStorage()._requiredStringPiece = nil}

  var requiredCord: String {
    get {return _storage._requiredCord ?? String()}
    set {_uniqueStorage()._requiredCord = newValue}
  }
  /// Returns true if `requiredCord` has been explicitly set.
  var hasRequiredCord: Bool {return _storage._requiredCord != nil}
  /// Clears the value of `requiredCord`. Subsequent reads from it will return its default value.
  mutating func clearRequiredCord() {_uniqueStorage()._requiredCord = nil}

  var recursiveMessage: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2 {
    get {return _storage._recursiveMessage ?? ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2()}
    set {_uniqueStorage()._recursiveMessage = newValue}
  }
  /// Returns true if `recursiveMessage` has been explicitly set.
  var hasRecursiveMessage: Bool {return _storage._recursiveMessage != nil}
  /// Clears the value of `recursiveMessage`. Subsequent reads from it will return its default value.
  mutating func clearRecursiveMessage() {_uniqueStorage()._recursiveMessage = nil}

  var optionalRecursiveMessage: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2 {
    get {return _storage._optionalRecursiveMessage ?? ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2()}
    set {_uniqueStorage()._optionalRecursiveMessage = newValue}
  }
  /// Returns true if `optionalRecursiveMessage` has been explicitly set.
  var hasOptionalRecursiveMessage: Bool {return _storage._optionalRecursiveMessage != nil}
  /// Clears the value of `optionalRecursiveMessage`. Subsequent reads from it will return its default value.
  mutating func clearOptionalRecursiveMessage() {_uniqueStorage()._optionalRecursiveMessage = nil}

  var data: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.DataMessage {
    get {return _storage._data ?? ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.DataMessage()}
    set {_uniqueStorage()._data = newValue}
  }
  /// Returns true if `data` has been explicitly set.
  var hasData: Bool {return _storage._data != nil}
  /// Clears the value of `data`. Subsequent reads from it will return its default value.
  mutating func clearData() {_uniqueStorage()._data = nil}

  /// default values
  var defaultInt32: Int32 {
    get {return _storage._defaultInt32 ?? -123456789}
    set {_uniqueStorage()._defaultInt32 = newValue}
  }
  /// Returns true if `defaultInt32` has been explicitly set.
  var hasDefaultInt32: Bool {return _storage._defaultInt32 != nil}
  /// Clears the value of `defaultInt32`. Subsequent reads from it will return its default value.
  mutating func clearDefaultInt32() {_uniqueStorage()._defaultInt32 = nil}

  var defaultInt64: Int64 {
    get {return _storage._defaultInt64 ?? -9123456789123456789}
    set {_uniqueStorage()._defaultInt64 = newValue}
  }
  /// Returns true if `defaultInt64` has been explicitly set.
  var hasDefaultInt64: Bool {return _storage._defaultInt64 != nil}
  /// Clears the value of `defaultInt64`. Subsequent reads from it will return its default value.
  mutating func clearDefaultInt64() {_uniqueStorage()._defaultInt64 = nil}

  var defaultUint32: UInt32 {
    get {return _storage._defaultUint32 ?? 2123456789}
    set {_uniqueStorage()._defaultUint32 = newValue}
  }
  /// Returns true if `defaultUint32` has been explicitly set.
  var hasDefaultUint32: Bool {return _storage._defaultUint32 != nil}
  /// Clears the value of `defaultUint32`. Subsequent reads from it will return its default value.
  mutating func clearDefaultUint32() {_uniqueStorage()._defaultUint32 = nil}

  var defaultUint64: UInt64 {
    get {return _storage._defaultUint64 ?? 10123456789123456789}
    set {_uniqueStorage()._defaultUint64 = newValue}
  }
  /// Returns true if `defaultUint64` has been explicitly set.
  var hasDefaultUint64: Bool {return _storage._defaultUint64 != nil}
  /// Clears the value of `defaultUint64`. Subsequent reads from it will return its default value.
  mutating func clearDefaultUint64() {_uniqueStorage()._defaultUint64 = nil}

  var defaultSint32: Int32 {
    get {return _storage._defaultSint32 ?? -123456789}
    set {_uniqueStorage()._defaultSint32 = newValue}
  }
  /// Returns true if `defaultSint32` has been explicitly set.
  var hasDefaultSint32: Bool {return _storage._defaultSint32 != nil}
  /// Clears the value of `defaultSint32`. Subsequent reads from it will return its default value.
  mutating func clearDefaultSint32() {_uniqueStorage()._defaultSint32 = nil}

  var defaultSint64: Int64 {
    get {return _storage._defaultSint64 ?? -9123456789123456789}
    set {_uniqueStorage()._defaultSint64 = newValue}
  }
  /// Returns true if `defaultSint64` has been explicitly set.
  var hasDefaultSint64: Bool {return _storage._defaultSint64 != nil}
  /// Clears the value of `defaultSint64`. Subsequent reads from it will return its default value.
  mutating func clearDefaultSint64() {_uniqueStorage()._defaultSint64 = nil}

  var defaultFixed32: UInt32 {
    get {return _storage._defaultFixed32 ?? 2123456789}
    set {_uniqueStorage()._defaultFixed32 = newValue}
  }
  /// Returns true if `defaultFixed32` has been explicitly set.
  var hasDefaultFixed32: Bool {return _storage._defaultFixed32 != nil}
  /// Clears the value of `defaultFixed32`. Subsequent reads from it will return its default value.
  mutating func clearDefaultFixed32() {_uniqueStorage()._defaultFixed32 = nil}

  var defaultFixed64: UInt64 {
    get {return _storage._defaultFixed64 ?? 10123456789123456789}
    set {_uniqueStorage()._defaultFixed64 = newValue}
  }
  /// Returns true if `defaultFixed64` has been explicitly set.
  var hasDefaultFixed64: Bool {return _storage._defaultFixed64 != nil}
  /// Clears the value of `defaultFixed64`. Subsequent reads from it will return its default value.
  mutating func clearDefaultFixed64() {_uniqueStorage()._defaultFixed64 = nil}

  var defaultSfixed32: Int32 {
    get {return _storage._defaultSfixed32 ?? -123456789}
    set {_uniqueStorage()._defaultSfixed32 = newValue}
  }
  /// Returns true if `defaultSfixed32` has been explicitly set.
  var hasDefaultSfixed32: Bool {return _storage._defaultSfixed32 != nil}
  /// Clears the value of `defaultSfixed32`. Subsequent reads from it will return its default value.
  mutating func clearDefaultSfixed32() {_uniqueStorage()._defaultSfixed32 = nil}

  var defaultSfixed64: Int64 {
    get {return _storage._defaultSfixed64 ?? -9123456789123456789}
    set {_uniqueStorage()._defaultSfixed64 = newValue}
  }
  /// Returns true if `defaultSfixed64` has been explicitly set.
  var hasDefaultSfixed64: Bool {return _storage._defaultSfixed64 != nil}
  /// Clears the value of `defaultSfixed64`. Subsequent reads from it will return its default value.
  mutating func clearDefaultSfixed64() {_uniqueStorage()._defaultSfixed64 = nil}

  var defaultFloat: Float {
    get {return _storage._defaultFloat ?? 9e+09}
    set {_uniqueStorage()._defaultFloat = newValue}
  }
  /// Returns true if `defaultFloat` has been explicitly set.
  var hasDefaultFloat: Bool {return _storage._defaultFloat != nil}
  /// Clears the value of `defaultFloat`. Subsequent reads from it will return its default value.
  mutating func clearDefaultFloat() {_uniqueStorage()._defaultFloat = nil}

  var defaultDouble: Double {
    get {return _storage._defaultDouble ?? 7e+22}
    set {_uniqueStorage()._defaultDouble = newValue}
  }
  /// Returns true if `defaultDouble` has been explicitly set.
  var hasDefaultDouble: Bool {return _storage._defaultDouble != nil}
  /// Clears the value of `defaultDouble`. Subsequent reads from it will return its default value.
  mutating func clearDefaultDouble() {_uniqueStorage()._defaultDouble = nil}

  var defaultBool: Bool {
    get {return _storage._defaultBool ?? true}
    set {_uniqueStorage()._defaultBool = newValue}
  }
  /// Returns true if `defaultBool` has been explicitly set.
  var hasDefaultBool: Bool {return _storage._defaultBool != nil}
  /// Clears the value of `defaultBool`. Subsequent reads from it will return its default value.
  mutating func clearDefaultBool() {_uniqueStorage()._defaultBool = nil}

  var defaultString: String {
    get {return _storage._defaultString ?? "Rosebud"}
    set {_uniqueStorage()._defaultString = newValue}
  }
  /// Returns true if `defaultString` has been explicitly set.
  var hasDefaultString: Bool {return _storage._defaultString != nil}
  /// Clears the value of `defaultString`. Subsequent reads from it will return its default value.
  mutating func clearDefaultString() {_uniqueStorage()._defaultString = nil}

  var defaultBytes: Data {
    get {return _storage._defaultBytes ?? Data([106, 111, 115, 104, 117, 97])}
    set {_uniqueStorage()._defaultBytes = newValue}
  }
  /// Returns true if `defaultBytes` has been explicitly set.
  var hasDefaultBytes: Bool {return _storage._defaultBytes != nil}
  /// Clears the value of `defaultBytes`. Subsequent reads from it will return its default value.
  mutating func clearDefaultBytes() {_uniqueStorage()._defaultBytes = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum NestedEnum: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case foo // = 0
    case bar // = 1
    case baz // = 2

    /// Intentionally negative.
    case neg // = -1

    init() {
      self = .foo
    }

    init?(rawValue: Int) {
      switch rawValue {
      case -1: self = .neg
      case 0: self = .foo
      case 1: self = .bar
      case 2: self = .baz
      default: return nil
      }
    }

    var rawValue: Int {
      switch self {
      case .neg: return -1
      case .foo: return 0
      case .bar: return 1
      case .baz: return 2
      }
    }

  }

  struct NestedMessage: @unchecked Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var a: Int32 {
      get {return _storage._a ?? 0}
      set {_uniqueStorage()._a = newValue}
    }
    /// Returns true if `a` has been explicitly set.
    var hasA: Bool {return _storage._a != nil}
    /// Clears the value of `a`. Subsequent reads from it will return its default value.
    mutating func clearA() {_uniqueStorage()._a = nil}

    var corecursive: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2 {
      get {return _storage._corecursive ?? ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2()}
      set {_uniqueStorage()._corecursive = newValue}
    }
    /// Returns true if `corecursive` has been explicitly set.
    var hasCorecursive: Bool {return _storage._corecursive != nil}
    /// Clears the value of `corecursive`. Subsequent reads from it will return its default value.
    mutating func clearCorecursive() {_uniqueStorage()._corecursive = nil}

    var optionalCorecursive: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2 {
      get {return _storage._optionalCorecursive ?? ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2()}
      set {_uniqueStorage()._optionalCorecursive = newValue}
    }
    /// Returns true if `optionalCorecursive` has been explicitly set.
    var hasOptionalCorecursive: Bool {return _storage._optionalCorecursive != nil}
    /// Clears the value of `optionalCorecursive`. Subsequent reads from it will return its default value.
    mutating func clearOptionalCorecursive() {_uniqueStorage()._optionalCorecursive = nil}

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    fileprivate var _storage = _StorageClass.defaultInstance
  }

  /// groups
  struct DataMessage: Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var groupInt32: Int32 {
      get {return _groupInt32 ?? 0}
      set {_groupInt32 = newValue}
    }
    /// Returns true if `groupInt32` has been explicitly set.
    var hasGroupInt32: Bool {return self._groupInt32 != nil}
    /// Clears the value of `groupInt32`. Subsequent reads from it will return its default value.
    mutating func clearGroupInt32() {self._groupInt32 = nil}

    var groupUint32: UInt32 {
      get {return _groupUint32 ?? 0}
      set {_groupUint32 = newValue}
    }
    /// Returns true if `groupUint32` has been explicitly set.
    var hasGroupUint32: Bool {return self._groupUint32 != nil}
    /// Clears the value of `groupUint32`. Subsequent reads from it will return its default value.
    mutating func clearGroupUint32() {self._groupUint32 = nil}

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    fileprivate var _groupInt32: Int32? = nil
    fileprivate var _groupUint32: UInt32? = nil
  }

  /// message_set test case.
  struct MessageSetCorrect: SwiftProtobuf.ExtensibleMessage, Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
  }

  struct MessageSetCorrectExtension1: Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var str: String {
      get {return _str ?? String()}
      set {_str = newValue}
    }
    /// Returns true if `str` has been explicitly set.
    var hasStr: Bool {return self._str != nil}
    /// Clears the value of `str`. Subsequent reads from it will return its default value.
    mutating func clearStr() {self._str = nil}

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    fileprivate var _str: String? = nil
  }

  struct MessageSetCorrectExtension2: Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var i: Int32 {
      get {return _i ?? 0}
      set {_i = newValue}
    }
    /// Returns true if `i` has been explicitly set.
    var hasI: Bool {return self._i != nil}
    /// Clears the value of `i`. Subsequent reads from it will return its default value.
    mutating func clearI() {self._i = nil}

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    fileprivate var _i: Int32? = nil
  }

  init() {}

  var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Extension support defined in test_messages_proto2.proto.

// MARK: - Extension Properties

// Swift Extensions on the exteneded Messages to add easy access to the declared
// extension fields. The names are based on the extension field name from the proto
// declaration. To avoid naming collisions, the names are prefixed with the name of
// the scope where the extend directive occurs.

extension ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrect {

  var ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2_MessageSetCorrectExtension1_messageSetExtension: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension1 {
    get {return getExtensionValue(ext: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension1.Extensions.message_set_extension) ?? ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension1()}
    set {setExtensionValue(ext: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension1.Extensions.message_set_extension, value: newValue)}
  }
  /// Returns true if extension `ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension1.Extensions.message_set_extension`
  /// has been explicitly set.
  var hasProtobufTestMessages_Proto2_TestAllRequiredTypesProto2_MessageSetCorrectExtension1_messageSetExtension: Bool {
    return hasExtensionValue(ext: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension1.Extensions.message_set_extension)
  }
  /// Clears the value of extension `ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension1.Extensions.message_set_extension`.
  /// Subsequent reads from it will return its default value.
  mutating func clearProtobufTestMessages_Proto2_TestAllRequiredTypesProto2_MessageSetCorrectExtension1_messageSetExtension() {
    clearExtensionValue(ext: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension1.Extensions.message_set_extension)
  }

  var ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2_MessageSetCorrectExtension2_messageSetExtension: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension2 {
    get {return getExtensionValue(ext: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension2.Extensions.message_set_extension) ?? ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension2()}
    set {setExtensionValue(ext: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension2.Extensions.message_set_extension, value: newValue)}
  }
  /// Returns true if extension `ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension2.Extensions.message_set_extension`
  /// has been explicitly set.
  var hasProtobufTestMessages_Proto2_TestAllRequiredTypesProto2_MessageSetCorrectExtension2_messageSetExtension: Bool {
    return hasExtensionValue(ext: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension2.Extensions.message_set_extension)
  }
  /// Clears the value of extension `ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension2.Extensions.message_set_extension`.
  /// Subsequent reads from it will return its default value.
  mutating func clearProtobufTestMessages_Proto2_TestAllRequiredTypesProto2_MessageSetCorrectExtension2_messageSetExtension() {
    clearExtensionValue(ext: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension2.Extensions.message_set_extension)
  }
}

extension ProtobufTestMessages_Proto2_TestAllTypesProto2 {

  var ProtobufTestMessages_Proto2_extensionInt32: Int32 {
    get {return getExtensionValue(ext: ProtobufTestMessages_Proto2_Extensions_extension_int32) ?? 0}
    set {setExtensionValue(ext: ProtobufTestMessages_Proto2_Extensions_extension_int32, value: newValue)}
  }
  /// Returns true if extension `ProtobufTestMessages_Proto2_Extensions_extension_int32`
  /// has been explicitly set.
  var hasProtobufTestMessages_Proto2_extensionInt32: Bool {
    return hasExtensionValue(ext: ProtobufTestMessages_Proto2_Extensions_extension_int32)
  }
  /// Clears the value of extension `ProtobufTestMessages_Proto2_Extensions_extension_int32`.
  /// Subsequent reads from it will return its default value.
  mutating func clearProtobufTestMessages_Proto2_extensionInt32() {
    clearExtensionValue(ext: ProtobufTestMessages_Proto2_Extensions_extension_int32)
  }
}

extension ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrect {

  var ProtobufTestMessages_Proto2_TestAllTypesProto2_MessageSetCorrectExtension1_messageSetExtension: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension1 {
    get {return getExtensionValue(ext: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension1.Extensions.message_set_extension) ?? ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension1()}
    set {setExtensionValue(ext: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension1.Extensions.message_set_extension, value: newValue)}
  }
  /// Returns true if extension `ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension1.Extensions.message_set_extension`
  /// has been explicitly set.
  var hasProtobufTestMessages_Proto2_TestAllTypesProto2_MessageSetCorrectExtension1_messageSetExtension: Bool {
    return hasExtensionValue(ext: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension1.Extensions.message_set_extension)
  }
  /// Clears the value of extension `ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension1.Extensions.message_set_extension`.
  /// Subsequent reads from it will return its default value.
  mutating func clearProtobufTestMessages_Proto2_TestAllTypesProto2_MessageSetCorrectExtension1_messageSetExtension() {
    clearExtensionValue(ext: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension1.Extensions.message_set_extension)
  }

  var ProtobufTestMessages_Proto2_TestAllTypesProto2_MessageSetCorrectExtension2_messageSetExtension: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension2 {
    get {return getExtensionValue(ext: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension2.Extensions.message_set_extension) ?? ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension2()}
    set {setExtensionValue(ext: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension2.Extensions.message_set_extension, value: newValue)}
  }
  /// Returns true if extension `ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension2.Extensions.message_set_extension`
  /// has been explicitly set.
  var hasProtobufTestMessages_Proto2_TestAllTypesProto2_MessageSetCorrectExtension2_messageSetExtension: Bool {
    return hasExtensionValue(ext: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension2.Extensions.message_set_extension)
  }
  /// Clears the value of extension `ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension2.Extensions.message_set_extension`.
  /// Subsequent reads from it will return its default value.
  mutating func clearProtobufTestMessages_Proto2_TestAllTypesProto2_MessageSetCorrectExtension2_messageSetExtension() {
    clearExtensionValue(ext: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension2.Extensions.message_set_extension)
  }

}

// MARK: - File's ExtensionMap: ProtobufTestMessages_Proto2_TestMessagesProto2_Extensions

/// A `SwiftProtobuf.SimpleExtensionMap` that includes all of the extensions defined by
/// this .proto file. It can be used any place an `SwiftProtobuf.ExtensionMap` is needed
/// in parsing, or it can be combined with other `SwiftProtobuf.SimpleExtensionMap`s to create
/// a larger `SwiftProtobuf.SimpleExtensionMap`.
let ProtobufTestMessages_Proto2_TestMessagesProto2_Extensions: SwiftProtobuf.SimpleExtensionMap = [
  ProtobufTestMessages_Proto2_Extensions_extension_int32,
  ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension1.Extensions.message_set_extension,
  ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension2.Extensions.message_set_extension,
  ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension1.Extensions.message_set_extension,
  ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension2.Extensions.message_set_extension
]

// Extension Objects - The only reason these might be needed is when manually
// constructing a `SimpleExtensionMap`, otherwise, use the above _Extension Properties_
// accessors for the extension fields on the messages directly.

let ProtobufTestMessages_Proto2_Extensions_extension_int32 = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, ProtobufTestMessages_Proto2_TestAllTypesProto2>(
  _protobuf_fieldNumber: 120,
  fieldName: "protobuf_test_messages.proto2.extension_int32"
)

extension ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension1 {
  enum Extensions {
    static let message_set_extension = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension1>, ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrect>(
      _protobuf_fieldNumber: 1547769,
      fieldName: "protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1"
    )
  }
}

extension ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension2 {
  enum Extensions {
    static let message_set_extension = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension2>, ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrect>(
      _protobuf_fieldNumber: 4135312,
      fieldName: "protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2"
    )
  }
}

extension ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension1 {
  enum Extensions {
    static let message_set_extension = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension1>, ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrect>(
      _protobuf_fieldNumber: 1547769,
      fieldName: "protobuf_test_messages.proto2.TestAllRequiredTypesProto2.MessageSetCorrectExtension1"
    )
  }
}

extension ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension2 {
  enum Extensions {
    static let message_set_extension = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension2>, ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrect>(
      _protobuf_fieldNumber: 4135312,
      fieldName: "protobuf_test_messages.proto2.TestAllRequiredTypesProto2.MessageSetCorrectExtension2"
    )
  }
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "protobuf_test_messages.proto2"

extension ProtobufTestMessages_Proto2_ForeignEnumProto2: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "FOREIGN_FOO"),
    1: .same(proto: "FOREIGN_BAR"),
    2: .same(proto: "FOREIGN_BAZ"),
  ]
}

extension ProtobufTestMessages_Proto2_TestAllTypesProto2: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".TestAllTypesProto2"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "optional_int32"),
    2: .standard(proto: "optional_int64"),
    3: .standard(proto: "optional_uint32"),
    4: .standard(proto: "optional_uint64"),
    5: .standard(proto: "optional_sint32"),
    6: .standard(proto: "optional_sint64"),
    7: .standard(proto: "optional_fixed32"),
    8: .standard(proto: "optional_fixed64"),
    9: .standard(proto: "optional_sfixed32"),
    10: .standard(proto: "optional_sfixed64"),
    11: .standard(proto: "optional_float"),
    12: .standard(proto: "optional_double"),
    13: .standard(proto: "optional_bool"),
    14: .standard(proto: "optional_string"),
    15: .standard(proto: "optional_bytes"),
    18: .standard(proto: "optional_nested_message"),
    19: .standard(proto: "optional_foreign_message"),
    21: .standard(proto: "optional_nested_enum"),
    22: .standard(proto: "optional_foreign_enum"),
    24: .standard(proto: "optional_string_piece"),
    25: .standard(proto: "optional_cord"),
    27: .standard(proto: "recursive_message"),
    31: .standard(proto: "repeated_int32"),
    32: .standard(proto: "repeated_int64"),
    33: .standard(proto: "repeated_uint32"),
    34: .standard(proto: "repeated_uint64"),
    35: .standard(proto: "repeated_sint32"),
    36: .standard(proto: "repeated_sint64"),
    37: .standard(proto: "repeated_fixed32"),
    38: .standard(proto: "repeated_fixed64"),
    39: .standard(proto: "repeated_sfixed32"),
    40: .standard(proto: "repeated_sfixed64"),
    41: .standard(proto: "repeated_float"),
    42: .standard(proto: "repeated_double"),
    43: .standard(proto: "repeated_bool"),
    44: .standard(proto: "repeated_string"),
    45: .standard(proto: "repeated_bytes"),
    48: .standard(proto: "repeated_nested_message"),
    49: .standard(proto: "repeated_foreign_message"),
    51: .standard(proto: "repeated_nested_enum"),
    52: .standard(proto: "repeated_foreign_enum"),
    54: .standard(proto: "repeated_string_piece"),
    55: .standard(proto: "repeated_cord"),
    75: .standard(proto: "packed_int32"),
    76: .standard(proto: "packed_int64"),
    77: .standard(proto: "packed_uint32"),
    78: .standard(proto: "packed_uint64"),
    79: .standard(proto: "packed_sint32"),
    80: .standard(proto: "packed_sint64"),
    81: .standard(proto: "packed_fixed32"),
    82: .standard(proto: "packed_fixed64"),
    83: .standard(proto: "packed_sfixed32"),
    84: .standard(proto: "packed_sfixed64"),
    85: .standard(proto: "packed_float"),
    86: .standard(proto: "packed_double"),
    87: .standard(proto: "packed_bool"),
    88: .standard(proto: "packed_nested_enum"),
    89: .standard(proto: "unpacked_int32"),
    90: .standard(proto: "unpacked_int64"),
    91: .standard(proto: "unpacked_uint32"),
    92: .standard(proto: "unpacked_uint64"),
    93: .standard(proto: "unpacked_sint32"),
    94: .standard(proto: "unpacked_sint64"),
    95: .standard(proto: "unpacked_fixed32"),
    96: .standard(proto: "unpacked_fixed64"),
    97: .standard(proto: "unpacked_sfixed32"),
    98: .standard(proto: "unpacked_sfixed64"),
    99: .standard(proto: "unpacked_float"),
    100: .standard(proto: "unpacked_double"),
    101: .standard(proto: "unpacked_bool"),
    102: .standard(proto: "unpacked_nested_enum"),
    56: .standard(proto: "map_int32_int32"),
    57: .standard(proto: "map_int64_int64"),
    58: .standard(proto: "map_uint32_uint32"),
    59: .standard(proto: "map_uint64_uint64"),
    60: .standard(proto: "map_sint32_sint32"),
    61: .standard(proto: "map_sint64_sint64"),
    62: .standard(proto: "map_fixed32_fixed32"),
    63: .standard(proto: "map_fixed64_fixed64"),
    64: .standard(proto: "map_sfixed32_sfixed32"),
    65: .standard(proto: "map_sfixed64_sfixed64"),
    66: .standard(proto: "map_int32_float"),
    67: .standard(proto: "map_int32_double"),
    68: .standard(proto: "map_bool_bool"),
    69: .standard(proto: "map_string_string"),
    70: .standard(proto: "map_string_bytes"),
    71: .standard(proto: "map_string_nested_message"),
    72: .standard(proto: "map_string_foreign_message"),
    73: .standard(proto: "map_string_nested_enum"),
    74: .standard(proto: "map_string_foreign_enum"),
    111: .standard(proto: "oneof_uint32"),
    112: .standard(proto: "oneof_nested_message"),
    113: .standard(proto: "oneof_string"),
    114: .standard(proto: "oneof_bytes"),
    115: .standard(proto: "oneof_bool"),
    116: .standard(proto: "oneof_uint64"),
    117: .standard(proto: "oneof_float"),
    118: .standard(proto: "oneof_double"),
    119: .standard(proto: "oneof_enum"),
    201: .unique(proto: "Data", json: "data"),
    241: .standard(proto: "default_int32"),
    242: .standard(proto: "default_int64"),
    243: .standard(proto: "default_uint32"),
    244: .standard(proto: "default_uint64"),
    245: .standard(proto: "default_sint32"),
    246: .standard(proto: "default_sint64"),
    247: .standard(proto: "default_fixed32"),
    248: .standard(proto: "default_fixed64"),
    249: .standard(proto: "default_sfixed32"),
    250: .standard(proto: "default_sfixed64"),
    251: .standard(proto: "default_float"),
    252: .standard(proto: "default_double"),
    253: .standard(proto: "default_bool"),
    254: .standard(proto: "default_string"),
    255: .standard(proto: "default_bytes"),
    401: .same(proto: "fieldname1"),
    402: .standard(proto: "field_name2"),
    403: .standard(proto: "_field_name3"),
    404: .standard(proto: "field__name4_"),
    405: .same(proto: "field0name5"),
    406: .standard(proto: "field_0_name6"),
    407: .same(proto: "fieldName7"),
    408: .same(proto: "FieldName8"),
    409: .standard(proto: "field_Name9"),
    410: .standard(proto: "Field_Name10"),
    411: .standard(proto: "FIELD_NAME11"),
    412: .standard(proto: "FIELD_name12"),
    413: .standard(proto: "__field_name13"),
    414: .standard(proto: "__Field_name14"),
    415: .standard(proto: "field__name15"),
    416: .standard(proto: "field__Name16"),
    417: .standard(proto: "field_name17__"),
    418: .standard(proto: "Field_name18__"),
  ]

  fileprivate class _StorageClass {
    var _optionalInt32: Int32? = nil
    var _optionalInt64: Int64? = nil
    var _optionalUint32: UInt32? = nil
    var _optionalUint64: UInt64? = nil
    var _optionalSint32: Int32? = nil
    var _optionalSint64: Int64? = nil
    var _optionalFixed32: UInt32? = nil
    var _optionalFixed64: UInt64? = nil
    var _optionalSfixed32: Int32? = nil
    var _optionalSfixed64: Int64? = nil
    var _optionalFloat: Float? = nil
    var _optionalDouble: Double? = nil
    var _optionalBool: Bool? = nil
    var _optionalString: String? = nil
    var _optionalBytes: Data? = nil
    var _optionalNestedMessage: ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedMessage? = nil
    var _optionalForeignMessage: ProtobufTestMessages_Proto2_ForeignMessageProto2? = nil
    var _optionalNestedEnum: ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedEnum? = nil
    var _optionalForeignEnum: ProtobufTestMessages_Proto2_ForeignEnumProto2? = nil
    var _optionalStringPiece: String? = nil
    var _optionalCord: String? = nil
    var _recursiveMessage: ProtobufTestMessages_Proto2_TestAllTypesProto2? = nil
    var _repeatedInt32: [Int32] = []
    var _repeatedInt64: [Int64] = []
    var _repeatedUint32: [UInt32] = []
    var _repeatedUint64: [UInt64] = []
    var _repeatedSint32: [Int32] = []
    var _repeatedSint64: [Int64] = []
    var _repeatedFixed32: [UInt32] = []
    var _repeatedFixed64: [UInt64] = []
    var _repeatedSfixed32: [Int32] = []
    var _repeatedSfixed64: [Int64] = []
    var _repeatedFloat: [Float] = []
    var _repeatedDouble: [Double] = []
    var _repeatedBool: [Bool] = []
    var _repeatedString: [String] = []
    var _repeatedBytes: [Data] = []
    var _repeatedNestedMessage: [ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedMessage] = []
    var _repeatedForeignMessage: [ProtobufTestMessages_Proto2_ForeignMessageProto2] = []
    var _repeatedNestedEnum: [ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedEnum] = []
    var _repeatedForeignEnum: [ProtobufTestMessages_Proto2_ForeignEnumProto2] = []
    var _repeatedStringPiece: [String] = []
    var _repeatedCord: [String] = []
    var _packedInt32: [Int32] = []
    var _packedInt64: [Int64] = []
    var _packedUint32: [UInt32] = []
    var _packedUint64: [UInt64] = []
    var _packedSint32: [Int32] = []
    var _packedSint64: [Int64] = []
    var _packedFixed32: [UInt32] = []
    var _packedFixed64: [UInt64] = []
    var _packedSfixed32: [Int32] = []
    var _packedSfixed64: [Int64] = []
    var _packedFloat: [Float] = []
    var _packedDouble: [Double] = []
    var _packedBool: [Bool] = []
    var _packedNestedEnum: [ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedEnum] = []
    var _unpackedInt32: [Int32] = []
    var _unpackedInt64: [Int64] = []
    var _unpackedUint32: [UInt32] = []
    var _unpackedUint64: [UInt64] = []
    var _unpackedSint32: [Int32] = []
    var _unpackedSint64: [Int64] = []
    var _unpackedFixed32: [UInt32] = []
    var _unpackedFixed64: [UInt64] = []
    var _unpackedSfixed32: [Int32] = []
    var _unpackedSfixed64: [Int64] = []
    var _unpackedFloat: [Float] = []
    var _unpackedDouble: [Double] = []
    var _unpackedBool: [Bool] = []
    var _unpackedNestedEnum: [ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedEnum] = []
    var _mapInt32Int32: Dictionary<Int32,Int32> = [:]
    var _mapInt64Int64: Dictionary<Int64,Int64> = [:]
    var _mapUint32Uint32: Dictionary<UInt32,UInt32> = [:]
    var _mapUint64Uint64: Dictionary<UInt64,UInt64> = [:]
    var _mapSint32Sint32: Dictionary<Int32,Int32> = [:]
    var _mapSint64Sint64: Dictionary<Int64,Int64> = [:]
    var _mapFixed32Fixed32: Dictionary<UInt32,UInt32> = [:]
    var _mapFixed64Fixed64: Dictionary<UInt64,UInt64> = [:]
    var _mapSfixed32Sfixed32: Dictionary<Int32,Int32> = [:]
    var _mapSfixed64Sfixed64: Dictionary<Int64,Int64> = [:]
    var _mapInt32Float: Dictionary<Int32,Float> = [:]
    var _mapInt32Double: Dictionary<Int32,Double> = [:]
    var _mapBoolBool: Dictionary<Bool,Bool> = [:]
    var _mapStringString: Dictionary<String,String> = [:]
    var _mapStringBytes: Dictionary<String,Data> = [:]
    var _mapStringNestedMessage: Dictionary<String,ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedMessage> = [:]
    var _mapStringForeignMessage: Dictionary<String,ProtobufTestMessages_Proto2_ForeignMessageProto2> = [:]
    var _mapStringNestedEnum: Dictionary<String,ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedEnum> = [:]
    var _mapStringForeignEnum: Dictionary<String,ProtobufTestMessages_Proto2_ForeignEnumProto2> = [:]
    var _oneofField: ProtobufTestMessages_Proto2_TestAllTypesProto2.OneOf_OneofField?
    var _data: ProtobufTestMessages_Proto2_TestAllTypesProto2.DataMessage? = nil
    var _defaultInt32: Int32? = nil
    var _defaultInt64: Int64? = nil
    var _defaultUint32: UInt32? = nil
    var _defaultUint64: UInt64? = nil
    var _defaultSint32: Int32? = nil
    var _defaultSint64: Int64? = nil
    var _defaultFixed32: UInt32? = nil
    var _defaultFixed64: UInt64? = nil
    var _defaultSfixed32: Int32? = nil
    var _defaultSfixed64: Int64? = nil
    var _defaultFloat: Float? = nil
    var _defaultDouble: Double? = nil
    var _defaultBool: Bool? = nil
    var _defaultString: String? = nil
    var _defaultBytes: Data? = nil
    var _fieldname1: Int32? = nil
    var _fieldName2: Int32? = nil
    var _fieldName3: Int32? = nil
    var _field_Name4_: Int32? = nil
    var _field0Name5: Int32? = nil
    var _field0Name6: Int32? = nil
    var _fieldName7: Int32? = nil
    var _fieldName8: Int32? = nil
    var _fieldName9: Int32? = nil
    var _fieldName10: Int32? = nil
    var _fieldName11: Int32? = nil
    var _fieldName12: Int32? = nil
    var __FieldName13: Int32? = nil
    var __FieldName14: Int32? = nil
    var _field_Name15: Int32? = nil
    var _field_Name16: Int32? = nil
    var _fieldName17__: Int32? = nil
    var _fieldName18__: Int32? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _optionalInt32 = source._optionalInt32
      _optionalInt64 = source._optionalInt64
      _optionalUint32 = source._optionalUint32
      _optionalUint64 = source._optionalUint64
      _optionalSint32 = source._optionalSint32
      _optionalSint64 = source._optionalSint64
      _optionalFixed32 = source._optionalFixed32
      _optionalFixed64 = source._optionalFixed64
      _optionalSfixed32 = source._optionalSfixed32
      _optionalSfixed64 = source._optionalSfixed64
      _optionalFloat = source._optionalFloat
      _optionalDouble = source._optionalDouble
      _optionalBool = source._optionalBool
      _optionalString = source._optionalString
      _optionalBytes = source._optionalBytes
      _optionalNestedMessage = source._optionalNestedMessage
      _optionalForeignMessage = source._optionalForeignMessage
      _optionalNestedEnum = source._optionalNestedEnum
      _optionalForeignEnum = source._optionalForeignEnum
      _optionalStringPiece = source._optionalStringPiece
      _optionalCord = source._optionalCord
      _recursiveMessage = source._recursiveMessage
      _repeatedInt32 = source._repeatedInt32
      _repeatedInt64 = source._repeatedInt64
      _repeatedUint32 = source._repeatedUint32
      _repeatedUint64 = source._repeatedUint64
      _repeatedSint32 = source._repeatedSint32
      _repeatedSint64 = source._repeatedSint64
      _repeatedFixed32 = source._repeatedFixed32
      _repeatedFixed64 = source._repeatedFixed64
      _repeatedSfixed32 = source._repeatedSfixed32
      _repeatedSfixed64 = source._repeatedSfixed64
      _repeatedFloat = source._repeatedFloat
      _repeatedDouble = source._repeatedDouble
      _repeatedBool = source._repeatedBool
      _repeatedString = source._repeatedString
      _repeatedBytes = source._repeatedBytes
      _repeatedNestedMessage = source._repeatedNestedMessage
      _repeatedForeignMessage = source._repeatedForeignMessage
      _repeatedNestedEnum = source._repeatedNestedEnum
      _repeatedForeignEnum = source._repeatedForeignEnum
      _repeatedStringPiece = source._repeatedStringPiece
      _repeatedCord = source._repeatedCord
      _packedInt32 = source._packedInt32
      _packedInt64 = source._packedInt64
      _packedUint32 = source._packedUint32
      _packedUint64 = source._packedUint64
      _packedSint32 = source._packedSint32
      _packedSint64 = source._packedSint64
      _packedFixed32 = source._packedFixed32
      _packedFixed64 = source._packedFixed64
      _packedSfixed32 = source._packedSfixed32
      _packedSfixed64 = source._packedSfixed64
      _packedFloat = source._packedFloat
      _packedDouble = source._packedDouble
      _packedBool = source._packedBool
      _packedNestedEnum = source._packedNestedEnum
      _unpackedInt32 = source._unpackedInt32
      _unpackedInt64 = source._unpackedInt64
      _unpackedUint32 = source._unpackedUint32
      _unpackedUint64 = source._unpackedUint64
      _unpackedSint32 = source._unpackedSint32
      _unpackedSint64 = source._unpackedSint64
      _unpackedFixed32 = source._unpackedFixed32
      _unpackedFixed64 = source._unpackedFixed64
      _unpackedSfixed32 = source._unpackedSfixed32
      _unpackedSfixed64 = source._unpackedSfixed64
      _unpackedFloat = source._unpackedFloat
      _unpackedDouble = source._unpackedDouble
      _unpackedBool = source._unpackedBool
      _unpackedNestedEnum = source._unpackedNestedEnum
      _mapInt32Int32 = source._mapInt32Int32
      _mapInt64Int64 = source._mapInt64Int64
      _mapUint32Uint32 = source._mapUint32Uint32
      _mapUint64Uint64 = source._mapUint64Uint64
      _mapSint32Sint32 = source._mapSint32Sint32
      _mapSint64Sint64 = source._mapSint64Sint64
      _mapFixed32Fixed32 = source._mapFixed32Fixed32
      _mapFixed64Fixed64 = source._mapFixed64Fixed64
      _mapSfixed32Sfixed32 = source._mapSfixed32Sfixed32
      _mapSfixed64Sfixed64 = source._mapSfixed64Sfixed64
      _mapInt32Float = source._mapInt32Float
      _mapInt32Double = source._mapInt32Double
      _mapBoolBool = source._mapBoolBool
      _mapStringString = source._mapStringString
      _mapStringBytes = source._mapStringBytes
      _mapStringNestedMessage = source._mapStringNestedMessage
      _mapStringForeignMessage = source._mapStringForeignMessage
      _mapStringNestedEnum = source._mapStringNestedEnum
      _mapStringForeignEnum = source._mapStringForeignEnum
      _oneofField = source._oneofField
      _data = source._data
      _defaultInt32 = source._defaultInt32
      _defaultInt64 = source._defaultInt64
      _defaultUint32 = source._defaultUint32
      _defaultUint64 = source._defaultUint64
      _defaultSint32 = source._defaultSint32
      _defaultSint64 = source._defaultSint64
      _defaultFixed32 = source._defaultFixed32
      _defaultFixed64 = source._defaultFixed64
      _defaultSfixed32 = source._defaultSfixed32
      _defaultSfixed64 = source._defaultSfixed64
      _defaultFloat = source._defaultFloat
      _defaultDouble = source._defaultDouble
      _defaultBool = source._defaultBool
      _defaultString = source._defaultString
      _defaultBytes = source._defaultBytes
      _fieldname1 = source._fieldname1
      _fieldName2 = source._fieldName2
      _fieldName3 = source._fieldName3
      _field_Name4_ = source._field_Name4_
      _field0Name5 = source._field0Name5
      _field0Name6 = source._field0Name6
      _fieldName7 = source._fieldName7
      _fieldName8 = source._fieldName8
      _fieldName9 = source._fieldName9
      _fieldName10 = source._fieldName10
      _fieldName11 = source._fieldName11
      _fieldName12 = source._fieldName12
      __FieldName13 = source.__FieldName13
      __FieldName14 = source.__FieldName14
      _field_Name15 = source._field_Name15
      _field_Name16 = source._field_Name16
      _fieldName17__ = source._fieldName17__
      _fieldName18__ = source._fieldName18__
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._optionalNestedMessage, !v.isInitialized {return false}
      if let v = _storage._recursiveMessage, !v.isInitialized {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._repeatedNestedMessage) {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._mapStringNestedMessage) {return false}
      if let v = _storage._oneofField, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularInt32Field(value: &_storage._optionalInt32) }()
        case 2: try { try decoder.decodeSingularInt64Field(value: &_storage._optionalInt64) }()
        case 3: try { try decoder.decodeSingularUInt32Field(value: &_storage._optionalUint32) }()
        case 4: try { try decoder.decodeSingularUInt64Field(value: &_storage._optionalUint64) }()
        case 5: try { try decoder.decodeSingularSInt32Field(value: &_storage._optionalSint32) }()
        case 6: try { try decoder.decodeSingularSInt64Field(value: &_storage._optionalSint64) }()
        case 7: try { try decoder.decodeSingularFixed32Field(value: &_storage._optionalFixed32) }()
        case 8: try { try decoder.decodeSingularFixed64Field(value: &_storage._optionalFixed64) }()
        case 9: try { try decoder.decodeSingularSFixed32Field(value: &_storage._optionalSfixed32) }()
        case 10: try { try decoder.decodeSingularSFixed64Field(value: &_storage._optionalSfixed64) }()
        case 11: try { try decoder.decodeSingularFloatField(value: &_storage._optionalFloat) }()
        case 12: try { try decoder.decodeSingularDoubleField(value: &_storage._optionalDouble) }()
        case 13: try { try decoder.decodeSingularBoolField(value: &_storage._optionalBool) }()
        case 14: try { try decoder.decodeSingularStringField(value: &_storage._optionalString) }()
        case 15: try { try decoder.decodeSingularBytesField(value: &_storage._optionalBytes) }()
        case 18: try { try decoder.decodeSingularMessageField(value: &_storage._optionalNestedMessage) }()
        case 19: try { try decoder.decodeSingularMessageField(value: &_storage._optionalForeignMessage) }()
        case 21: try { try decoder.decodeSingularEnumField(value: &_storage._optionalNestedEnum) }()
        case 22: try { try decoder.decodeSingularEnumField(value: &_storage._optionalForeignEnum) }()
        case 24: try { try decoder.decodeSingularStringField(value: &_storage._optionalStringPiece) }()
        case 25: try { try decoder.decodeSingularStringField(value: &_storage._optionalCord) }()
        case 27: try { try decoder.decodeSingularMessageField(value: &_storage._recursiveMessage) }()
        case 31: try { try decoder.decodeRepeatedInt32Field(value: &_storage._repeatedInt32) }()
        case 32: try { try decoder.decodeRepeatedInt64Field(value: &_storage._repeatedInt64) }()
        case 33: try { try decoder.decodeRepeatedUInt32Field(value: &_storage._repeatedUint32) }()
        case 34: try { try decoder.decodeRepeatedUInt64Field(value: &_storage._repeatedUint64) }()
        case 35: try { try decoder.decodeRepeatedSInt32Field(value: &_storage._repeatedSint32) }()
        case 36: try { try decoder.decodeRepeatedSInt64Field(value: &_storage._repeatedSint64) }()
        case 37: try { try decoder.decodeRepeatedFixed32Field(value: &_storage._repeatedFixed32) }()
        case 38: try { try decoder.decodeRepeatedFixed64Field(value: &_storage._repeatedFixed64) }()
        case 39: try { try decoder.decodeRepeatedSFixed32Field(value: &_storage._repeatedSfixed32) }()
        case 40: try { try decoder.decodeRepeatedSFixed64Field(value: &_storage._repeatedSfixed64) }()
        case 41: try { try decoder.decodeRepeatedFloatField(value: &_storage._repeatedFloat) }()
        case 42: try { try decoder.decodeRepeatedDoubleField(value: &_storage._repeatedDouble) }()
        case 43: try { try decoder.decodeRepeatedBoolField(value: &_storage._repeatedBool) }()
        case 44: try { try decoder.decodeRepeatedStringField(value: &_storage._repeatedString) }()
        case 45: try { try decoder.decodeRepeatedBytesField(value: &_storage._repeatedBytes) }()
        case 48: try { try decoder.decodeRepeatedMessageField(value: &_storage._repeatedNestedMessage) }()
        case 49: try { try decoder.decodeRepeatedMessageField(value: &_storage._repeatedForeignMessage) }()
        case 51: try { try decoder.decodeRepeatedEnumField(value: &_storage._repeatedNestedEnum) }()
        case 52: try { try decoder.decodeRepeatedEnumField(value: &_storage._repeatedForeignEnum) }()
        case 54: try { try decoder.decodeRepeatedStringField(value: &_storage._repeatedStringPiece) }()
        case 55: try { try decoder.decodeRepeatedStringField(value: &_storage._repeatedCord) }()
        case 56: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufInt32,SwiftProtobuf.ProtobufInt32>.self, value: &_storage._mapInt32Int32) }()
        case 57: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufInt64,SwiftProtobuf.ProtobufInt64>.self, value: &_storage._mapInt64Int64) }()
        case 58: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufUInt32,SwiftProtobuf.ProtobufUInt32>.self, value: &_storage._mapUint32Uint32) }()
        case 59: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufUInt64,SwiftProtobuf.ProtobufUInt64>.self, value: &_storage._mapUint64Uint64) }()
        case 60: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufSInt32,SwiftProtobuf.ProtobufSInt32>.self, value: &_storage._mapSint32Sint32) }()
        case 61: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufSInt64,SwiftProtobuf.ProtobufSInt64>.self, value: &_storage._mapSint64Sint64) }()
        case 62: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufFixed32,SwiftProtobuf.ProtobufFixed32>.self, value: &_storage._mapFixed32Fixed32) }()
        case 63: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufFixed64,SwiftProtobuf.ProtobufFixed64>.self, value: &_storage._mapFixed64Fixed64) }()
        case 64: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufSFixed32,SwiftProtobuf.ProtobufSFixed32>.self, value: &_storage._mapSfixed32Sfixed32) }()
        case 65: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufSFixed64,SwiftProtobuf.ProtobufSFixed64>.self, value: &_storage._mapSfixed64Sfixed64) }()
        case 66: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufInt32,SwiftProtobuf.ProtobufFloat>.self, value: &_storage._mapInt32Float) }()
        case 67: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufInt32,SwiftProtobuf.ProtobufDouble>.self, value: &_storage._mapInt32Double) }()
        case 68: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufBool,SwiftProtobuf.ProtobufBool>.self, value: &_storage._mapBoolBool) }()
        case 69: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &_storage._mapStringString) }()
        case 70: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufBytes>.self, value: &_storage._mapStringBytes) }()
        case 71: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedMessage>.self, value: &_storage._mapStringNestedMessage) }()
        case 72: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,ProtobufTestMessages_Proto2_ForeignMessageProto2>.self, value: &_storage._mapStringForeignMessage) }()
        case 73: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufEnumMap<SwiftProtobuf.ProtobufString,ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedEnum>.self, value: &_storage._mapStringNestedEnum) }()
        case 74: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufEnumMap<SwiftProtobuf.ProtobufString,ProtobufTestMessages_Proto2_ForeignEnumProto2>.self, value: &_storage._mapStringForeignEnum) }()
        case 75: try { try decoder.decodeRepeatedInt32Field(value: &_storage._packedInt32) }()
        case 76: try { try decoder.decodeRepeatedInt64Field(value: &_storage._packedInt64) }()
        case 77: try { try decoder.decodeRepeatedUInt32Field(value: &_storage._packedUint32) }()
        case 78: try { try decoder.decodeRepeatedUInt64Field(value: &_storage._packedUint64) }()
        case 79: try { try decoder.decodeRepeatedSInt32Field(value: &_storage._packedSint32) }()
        case 80: try { try decoder.decodeRepeatedSInt64Field(value: &_storage._packedSint64) }()
        case 81: try { try decoder.decodeRepeatedFixed32Field(value: &_storage._packedFixed32) }()
        case 82: try { try decoder.decodeRepeatedFixed64Field(value: &_storage._packedFixed64) }()
        case 83: try { try decoder.decodeRepeatedSFixed32Field(value: &_storage._packedSfixed32) }()
        case 84: try { try decoder.decodeRepeatedSFixed64Field(value: &_storage._packedSfixed64) }()
        case 85: try { try decoder.decodeRepeatedFloatField(value: &_storage._packedFloat) }()
        case 86: try { try decoder.decodeRepeatedDoubleField(value: &_storage._packedDouble) }()
        case 87: try { try decoder.decodeRepeatedBoolField(value: &_storage._packedBool) }()
        case 88: try { try decoder.decodeRepeatedEnumField(value: &_storage._packedNestedEnum) }()
        case 89: try { try decoder.decodeRepeatedInt32Field(value: &_storage._unpackedInt32) }()
        case 90: try { try decoder.decodeRepeatedInt64Field(value: &_storage._unpackedInt64) }()
        case 91: try { try decoder.decodeRepeatedUInt32Field(value: &_storage._unpackedUint32) }()
        case 92: try { try decoder.decodeRepeatedUInt64Field(value: &_storage._unpackedUint64) }()
        case 93: try { try decoder.decodeRepeatedSInt32Field(value: &_storage._unpackedSint32) }()
        case 94: try { try decoder.decodeRepeatedSInt64Field(value: &_storage._unpackedSint64) }()
        case 95: try { try decoder.decodeRepeatedFixed32Field(value: &_storage._unpackedFixed32) }()
        case 96: try { try decoder.decodeRepeatedFixed64Field(value: &_storage._unpackedFixed64) }()
        case 97: try { try decoder.decodeRepeatedSFixed32Field(value: &_storage._unpackedSfixed32) }()
        case 98: try { try decoder.decodeRepeatedSFixed64Field(value: &_storage._unpackedSfixed64) }()
        case 99: try { try decoder.decodeRepeatedFloatField(value: &_storage._unpackedFloat) }()
        case 100: try { try decoder.decodeRepeatedDoubleField(value: &_storage._unpackedDouble) }()
        case 101: try { try decoder.decodeRepeatedBoolField(value: &_storage._unpackedBool) }()
        case 102: try { try decoder.decodeRepeatedEnumField(value: &_storage._unpackedNestedEnum) }()
        case 111: try {
          var v: UInt32?
          try decoder.decodeSingularUInt32Field(value: &v)
          if let v = v {
            if _storage._oneofField != nil {try decoder.handleConflictingOneOf()}
            _storage._oneofField = .oneofUint32(v)
          }
        }()
        case 112: try {
          var v: ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedMessage?
          var hadOneofValue = false
          if let current = _storage._oneofField {
            hadOneofValue = true
            if case .oneofNestedMessage(let m) = current {v = m}
          }
          try decoder.decodeSingularMessageField(value: &v)
          if let v = v {
            if hadOneofValue {try decoder.handleConflictingOneOf()}
            _storage._oneofField = .oneofNestedMessage(v)
          }
        }()
        case 113: try {
          var v: String?
          try decoder.decodeSingularStringField(value: &v)
          if let v = v {
            if _storage._oneofField != nil {try decoder.handleConflictingOneOf()}
            _storage._oneofField = .oneofString(v)
          }
        }()
        case 114: try {
          var v: Data?
          try decoder.decodeSingularBytesField(value: &v)
          if let v = v {
            if _storage._oneofField != nil {try decoder.handleConflictingOneOf()}
            _storage._oneofField = .oneofBytes(v)
          }
        }()
        case 115: try {
          var v: Bool?
          try decoder.decodeSingularBoolField(value: &v)
          if let v = v {
            if _storage._oneofField != nil {try decoder.handleConflictingOneOf()}
            _storage._oneofField = .oneofBool(v)
          }
        }()
        case 116: try {
          var v: UInt64?
          try decoder.decodeSingularUInt64Field(value: &v)
          if let v = v {
            if _storage._oneofField != nil {try decoder.handleConflictingOneOf()}
            _storage._oneofField = .oneofUint64(v)
          }
        }()
        case 117: try {
          var v: Float?
          try decoder.decodeSingularFloatField(value: &v)
          if let v = v {
            if _storage._oneofField != nil {try decoder.handleConflictingOneOf()}
            _storage._oneofField = .oneofFloat(v)
          }
        }()
        case 118: try {
          var v: Double?
          try decoder.decodeSingularDoubleField(value: &v)
          if let v = v {
            if _storage._oneofField != nil {try decoder.handleConflictingOneOf()}
            _storage._oneofField = .oneofDouble(v)
          }
        }()
        case 119: try {
          var v: ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedEnum?
          try decoder.decodeSingularEnumField(value: &v)
          if let v = v {
            if _storage._oneofField != nil {try decoder.handleConflictingOneOf()}
            _storage._oneofField = .oneofEnum(v)
          }
        }()
        case 201: try { try decoder.decodeSingularGroupField(value: &_storage._data) }()
        case 241: try { try decoder.decodeSingularInt32Field(value: &_storage._defaultInt32) }()
        case 242: try { try decoder.decodeSingularInt64Field(value: &_storage._defaultInt64) }()
        case 243: try { try decoder.decodeSingularUInt32Field(value: &_storage._defaultUint32) }()
        case 244: try { try decoder.decodeSingularUInt64Field(value: &_storage._defaultUint64) }()
        case 245: try { try decoder.decodeSingularSInt32Field(value: &_storage._defaultSint32) }()
        case 246: try { try decoder.decodeSingularSInt64Field(value: &_storage._defaultSint64) }()
        case 247: try { try decoder.decodeSingularFixed32Field(value: &_storage._defaultFixed32) }()
        case 248: try { try decoder.decodeSingularFixed64Field(value: &_storage._defaultFixed64) }()
        case 249: try { try decoder.decodeSingularSFixed32Field(value: &_storage._defaultSfixed32) }()
        case 250: try { try decoder.decodeSingularSFixed64Field(value: &_storage._defaultSfixed64) }()
        case 251: try { try decoder.decodeSingularFloatField(value: &_storage._defaultFloat) }()
        case 252: try { try decoder.decodeSingularDoubleField(value: &_storage._defaultDouble) }()
        case 253: try { try decoder.decodeSingularBoolField(value: &_storage._defaultBool) }()
        case 254: try { try decoder.decodeSingularStringField(value: &_storage._defaultString) }()
        case 255: try { try decoder.decodeSingularBytesField(value: &_storage._defaultBytes) }()
        case 401: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldname1) }()
        case 402: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldName2) }()
        case 403: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldName3) }()
        case 404: try { try decoder.decodeSingularInt32Field(value: &_storage._field_Name4_) }()
        case 405: try { try decoder.decodeSingularInt32Field(value: &_storage._field0Name5) }()
        case 406: try { try decoder.decodeSingularInt32Field(value: &_storage._field0Name6) }()
        case 407: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldName7) }()
        case 408: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldName8) }()
        case 409: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldName9) }()
        case 410: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldName10) }()
        case 411: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldName11) }()
        case 412: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldName12) }()
        case 413: try { try decoder.decodeSingularInt32Field(value: &_storage.__FieldName13) }()
        case 414: try { try decoder.decodeSingularInt32Field(value: &_storage.__FieldName14) }()
        case 415: try { try decoder.decodeSingularInt32Field(value: &_storage._field_Name15) }()
        case 416: try { try decoder.decodeSingularInt32Field(value: &_storage._field_Name16) }()
        case 417: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldName17__) }()
        case 418: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldName18__) }()
        case 120..<201:
          try { try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: ProtobufTestMessages_Proto2_TestAllTypesProto2.self, fieldNumber: fieldNumber) }()
        default: break
        }
      }
    }
  }

  static let _fields: [Field<Self>] = [
    .singularInt32({ $0.optionalInt32 }, fieldNumber: 1, isUnset: { $0._storage._optionalInt32 == nil }),
    .singularInt64({ $0.optionalInt64 }, fieldNumber: 2, isUnset: { $0._storage._optionalInt64 == nil }),
    .singularUInt32({ $0.optionalUint32 }, fieldNumber: 3, isUnset: { $0._storage._optionalUint32 == nil }),
    .singularUInt64({ $0.optionalUint64 }, fieldNumber: 4, isUnset: { $0._storage._optionalUint64 == nil }),
    .singularSInt32({ $0.optionalSint32 }, fieldNumber: 5, isUnset: { $0._storage._optionalSint32 == nil }),
    .singularSInt64({ $0.optionalSint64 }, fieldNumber: 6, isUnset: { $0._storage._optionalSint64 == nil }),
    .singularFixed32({ $0.optionalFixed32 }, fieldNumber: 7, isUnset: { $0._storage._optionalFixed32 == nil }),
    .singularFixed64({ $0.optionalFixed64 }, fieldNumber: 8, isUnset: { $0._storage._optionalFixed64 == nil }),
    .singularSFixed32({ $0.optionalSfixed32 }, fieldNumber: 9, isUnset: { $0._storage._optionalSfixed32 == nil }),
    .singularSFixed64({ $0.optionalSfixed64 }, fieldNumber: 10, isUnset: { $0._storage._optionalSfixed64 == nil }),
    .singularFloat({ $0.optionalFloat }, fieldNumber: 11, isUnset: { $0._storage._optionalFloat == nil }),
    .singularDouble({ $0.optionalDouble }, fieldNumber: 12, isUnset: { $0._storage._optionalDouble == nil }),
    .singularBool({ $0.optionalBool }, fieldNumber: 13, isUnset: { $0._storage._optionalBool == nil }),
    .singularString({ $0.optionalString }, fieldNumber: 14, isUnset: { $0._storage._optionalString == nil }),
    .singularBytes({ $0.optionalBytes }, fieldNumber: 15, isUnset: { $0._storage._optionalBytes == nil }),
    .singularMessage({ $0.optionalNestedMessage }, fieldNumber: 18, isUnset: { $0._storage._optionalNestedMessage == nil }),
    .singularMessage({ $0.optionalForeignMessage }, fieldNumber: 19, isUnset: { $0._storage._optionalForeignMessage == nil }),
    .singularEnum({ $0.optionalNestedEnum }, fieldNumber: 21, isUnset: { $0._storage._optionalNestedEnum == nil }),
    .singularEnum({ $0.optionalForeignEnum }, fieldNumber: 22, isUnset: { $0._storage._optionalForeignEnum == nil }),
    .singularString({ $0.optionalStringPiece }, fieldNumber: 24, isUnset: { $0._storage._optionalStringPiece == nil }),
    .singularString({ $0.optionalCord }, fieldNumber: 25, isUnset: { $0._storage._optionalCord == nil }),
    .singularMessage({ $0.recursiveMessage }, fieldNumber: 27, isUnset: { $0._storage._recursiveMessage == nil }),
    .repeatedInt32({ $0.repeatedInt32 }, fieldNumber: 31),
    .repeatedInt64({ $0.repeatedInt64 }, fieldNumber: 32),
    .repeatedUInt32({ $0.repeatedUint32 }, fieldNumber: 33),
    .repeatedUInt64({ $0.repeatedUint64 }, fieldNumber: 34),
    .repeatedSInt32({ $0.repeatedSint32 }, fieldNumber: 35),
    .repeatedSInt64({ $0.repeatedSint64 }, fieldNumber: 36),
    .repeatedFixed32({ $0.repeatedFixed32 }, fieldNumber: 37),
    .repeatedFixed64({ $0.repeatedFixed64 }, fieldNumber: 38),
    .repeatedSFixed32({ $0.repeatedSfixed32 }, fieldNumber: 39),
    .repeatedSFixed64({ $0.repeatedSfixed64 }, fieldNumber: 40),
    .repeatedFloat({ $0.repeatedFloat }, fieldNumber: 41),
    .repeatedDouble({ $0.repeatedDouble }, fieldNumber: 42),
    .repeatedBool({ $0.repeatedBool }, fieldNumber: 43),
    .repeatedString({ $0.repeatedString }, fieldNumber: 44),
    .repeatedBytes({ $0.repeatedBytes }, fieldNumber: 45),
    .repeatedMessage({ $0.repeatedNestedMessage }, fieldNumber: 48),
    .repeatedMessage({ $0.repeatedForeignMessage }, fieldNumber: 49),
    .repeatedEnum({ $0.repeatedNestedEnum }, fieldNumber: 51),
    .repeatedEnum({ $0.repeatedForeignEnum }, fieldNumber: 52),
    .repeatedString({ $0.repeatedStringPiece }, fieldNumber: 54),
    .repeatedString({ $0.repeatedCord }, fieldNumber: 55),
    .map(type: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufInt32,SwiftProtobuf.ProtobufInt32>.self, { $0.mapInt32Int32 }, fieldNumber: 56),
    .map(type: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufInt64,SwiftProtobuf.ProtobufInt64>.self, { $0.mapInt64Int64 }, fieldNumber: 57),
    .map(type: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufUInt32,SwiftProtobuf.ProtobufUInt32>.self, { $0.mapUint32Uint32 }, fieldNumber: 58),
    .map(type: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufUInt64,SwiftProtobuf.ProtobufUInt64>.self, { $0.mapUint64Uint64 }, fieldNumber: 59),
    .map(type: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufSInt32,SwiftProtobuf.ProtobufSInt32>.self, { $0.mapSint32Sint32 }, fieldNumber: 60),
    .map(type: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufSInt64,SwiftProtobuf.ProtobufSInt64>.self, { $0.mapSint64Sint64 }, fieldNumber: 61),
    .map(type: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufFixed32,SwiftProtobuf.ProtobufFixed32>.self, { $0.mapFixed32Fixed32 }, fieldNumber: 62),
    .map(type: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufFixed64,SwiftProtobuf.ProtobufFixed64>.self, { $0.mapFixed64Fixed64 }, fieldNumber: 63),
    .map(type: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufSFixed32,SwiftProtobuf.ProtobufSFixed32>.self, { $0.mapSfixed32Sfixed32 }, fieldNumber: 64),
    .map(type: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufSFixed64,SwiftProtobuf.ProtobufSFixed64>.self, { $0.mapSfixed64Sfixed64 }, fieldNumber: 65),
    .map(type: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufInt32,SwiftProtobuf.ProtobufFloat>.self, { $0.mapInt32Float }, fieldNumber: 66),
    .map(type: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufInt32,SwiftProtobuf.ProtobufDouble>.self, { $0.mapInt32Double }, fieldNumber: 67),
    .map(type: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufBool,SwiftProtobuf.ProtobufBool>.self, { $0.mapBoolBool }, fieldNumber: 68),
    .map(type: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, { $0.mapStringString }, fieldNumber: 69),
    .map(type: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufBytes>.self, { $0.mapStringBytes }, fieldNumber: 70),
    .map(type: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedMessage>.self, { $0.mapStringNestedMessage }, fieldNumber: 71),
    .map(type: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,ProtobufTestMessages_Proto2_ForeignMessageProto2>.self, { $0.mapStringForeignMessage }, fieldNumber: 72),
    .map(type: SwiftProtobuf._ProtobufEnumMap<SwiftProtobuf.ProtobufString,ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedEnum>.self, { $0.mapStringNestedEnum }, fieldNumber: 73),
    .map(type: SwiftProtobuf._ProtobufEnumMap<SwiftProtobuf.ProtobufString,ProtobufTestMessages_Proto2_ForeignEnumProto2>.self, { $0.mapStringForeignEnum }, fieldNumber: 74),
    .packedInt32({ $0.packedInt32 }, fieldNumber: 75),
    .packedInt64({ $0.packedInt64 }, fieldNumber: 76),
    .packedUInt32({ $0.packedUint32 }, fieldNumber: 77),
    .packedUInt64({ $0.packedUint64 }, fieldNumber: 78),
    .packedSInt32({ $0.packedSint32 }, fieldNumber: 79),
    .packedSInt64({ $0.packedSint64 }, fieldNumber: 80),
    .packedFixed32({ $0.packedFixed32 }, fieldNumber: 81),
    .packedFixed64({ $0.packedFixed64 }, fieldNumber: 82),
    .packedSFixed32({ $0.packedSfixed32 }, fieldNumber: 83),
    .packedSFixed64({ $0.packedSfixed64 }, fieldNumber: 84),
    .packedFloat({ $0.packedFloat }, fieldNumber: 85),
    .packedDouble({ $0.packedDouble }, fieldNumber: 86),
    .packedBool({ $0.packedBool }, fieldNumber: 87),
    .packedEnum({ $0.packedNestedEnum }, fieldNumber: 88),
    .repeatedInt32({ $0.unpackedInt32 }, fieldNumber: 89),
    .repeatedInt64({ $0.unpackedInt64 }, fieldNumber: 90),
    .repeatedUInt32({ $0.unpackedUint32 }, fieldNumber: 91),
    .repeatedUInt64({ $0.unpackedUint64 }, fieldNumber: 92),
    .repeatedSInt32({ $0.unpackedSint32 }, fieldNumber: 93),
    .repeatedSInt64({ $0.unpackedSint64 }, fieldNumber: 94),
    .repeatedFixed32({ $0.unpackedFixed32 }, fieldNumber: 95),
    .repeatedFixed64({ $0.unpackedFixed64 }, fieldNumber: 96),
    .repeatedSFixed32({ $0.unpackedSfixed32 }, fieldNumber: 97),
    .repeatedSFixed64({ $0.unpackedSfixed64 }, fieldNumber: 98),
    .repeatedFloat({ $0.unpackedFloat }, fieldNumber: 99),
    .repeatedDouble({ $0.unpackedDouble }, fieldNumber: 100),
    .repeatedBool({ $0.unpackedBool }, fieldNumber: 101),
    .repeatedEnum({ $0.unpackedNestedEnum }, fieldNumber: 102),
    .oneOf({ $0.oneofField }) {
      switch $0 {
      case .oneofUint32:
        return _oneOfField_oneofUint32
      case .oneofNestedMessage:
        return _oneOfField_oneofNestedMessage
      case .oneofString:
        return _oneOfField_oneofString
      case .oneofBytes:
        return _oneOfField_oneofBytes
      case .oneofBool:
        return _oneOfField_oneofBool
      case .oneofUint64:
        return _oneOfField_oneofUint64
      case .oneofFloat:
        return _oneOfField_oneofFloat
      case .oneofDouble:
        return _oneOfField_oneofDouble
      case .oneofEnum:
        return _oneOfField_oneofEnum
      }
    },
    .extensionFields({ $0._protobuf_extensionFieldValues }, start: 120, end: 201),
    .singularGroup({ $0.data }, fieldNumber: 201, isUnset: { $0._storage._data == nil }),
    .singularInt32({ $0.defaultInt32 }, fieldNumber: 241, isUnset: { $0._storage._defaultInt32 == nil }),
    .singularInt64({ $0.defaultInt64 }, fieldNumber: 242, isUnset: { $0._storage._defaultInt64 == nil }),
    .singularUInt32({ $0.defaultUint32 }, fieldNumber: 243, isUnset: { $0._storage._defaultUint32 == nil }),
    .singularUInt64({ $0.defaultUint64 }, fieldNumber: 244, isUnset: { $0._storage._defaultUint64 == nil }),
    .singularSInt32({ $0.defaultSint32 }, fieldNumber: 245, isUnset: { $0._storage._defaultSint32 == nil }),
    .singularSInt64({ $0.defaultSint64 }, fieldNumber: 246, isUnset: { $0._storage._defaultSint64 == nil }),
    .singularFixed32({ $0.defaultFixed32 }, fieldNumber: 247, isUnset: { $0._storage._defaultFixed32 == nil }),
    .singularFixed64({ $0.defaultFixed64 }, fieldNumber: 248, isUnset: { $0._storage._defaultFixed64 == nil }),
    .singularSFixed32({ $0.defaultSfixed32 }, fieldNumber: 249, isUnset: { $0._storage._defaultSfixed32 == nil }),
    .singularSFixed64({ $0.defaultSfixed64 }, fieldNumber: 250, isUnset: { $0._storage._defaultSfixed64 == nil }),
    .singularFloat({ $0.defaultFloat }, fieldNumber: 251, isUnset: { $0._storage._defaultFloat == nil }),
    .singularDouble({ $0.defaultDouble }, fieldNumber: 252, isUnset: { $0._storage._defaultDouble == nil }),
    .singularBool({ $0.defaultBool }, fieldNumber: 253, isUnset: { $0._storage._defaultBool == nil }),
    .singularString({ $0.defaultString }, fieldNumber: 254, isUnset: { $0._storage._defaultString == nil }),
    .singularBytes({ $0.defaultBytes }, fieldNumber: 255, isUnset: { $0._storage._defaultBytes == nil }),
    .singularInt32({ $0.fieldname1 }, fieldNumber: 401, isUnset: { $0._storage._fieldname1 == nil }),
    .singularInt32({ $0.fieldName2 }, fieldNumber: 402, isUnset: { $0._storage._fieldName2 == nil }),
    .singularInt32({ $0.fieldName3 }, fieldNumber: 403, isUnset: { $0._storage._fieldName3 == nil }),
    .singularInt32({ $0.field_Name4_ }, fieldNumber: 404, isUnset: { $0._storage._field_Name4_ == nil }),
    .singularInt32({ $0.field0Name5 }, fieldNumber: 405, isUnset: { $0._storage._field0Name5 == nil }),
    .singularInt32({ $0.field0Name6 }, fieldNumber: 406, isUnset: { $0._storage._field0Name6 == nil }),
    .singularInt32({ $0.fieldName7 }, fieldNumber: 407, isUnset: { $0._storage._fieldName7 == nil }),
    .singularInt32({ $0.fieldName8 }, fieldNumber: 408, isUnset: { $0._storage._fieldName8 == nil }),
    .singularInt32({ $0.fieldName9 }, fieldNumber: 409, isUnset: { $0._storage._fieldName9 == nil }),
    .singularInt32({ $0.fieldName10 }, fieldNumber: 410, isUnset: { $0._storage._fieldName10 == nil }),
    .singularInt32({ $0.fieldName11 }, fieldNumber: 411, isUnset: { $0._storage._fieldName11 == nil }),
    .singularInt32({ $0.fieldName12 }, fieldNumber: 412, isUnset: { $0._storage._fieldName12 == nil }),
    .singularInt32({ $0._FieldName13 }, fieldNumber: 413, isUnset: { $0._storage.__FieldName13 == nil }),
    .singularInt32({ $0._FieldName14 }, fieldNumber: 414, isUnset: { $0._storage.__FieldName14 == nil }),
    .singularInt32({ $0.field_Name15 }, fieldNumber: 415, isUnset: { $0._storage._field_Name15 == nil }),
    .singularInt32({ $0.field_Name16 }, fieldNumber: 416, isUnset: { $0._storage._field_Name16 == nil }),
    .singularInt32({ $0.fieldName17__ }, fieldNumber: 417, isUnset: { $0._storage._fieldName17__ == nil }),
    .singularInt32({ $0.fieldName18__ }, fieldNumber: 418, isUnset: { $0._storage._fieldName18__ == nil }),
  ]
  private static let _oneOfField_oneofUint32: Field<Self> = .singularUInt32({ $0.oneofUint32 }, fieldNumber: 111, isUnset: { _ in false })
  private static let _oneOfField_oneofNestedMessage: Field<Self> = .singularMessage({ $0.oneofNestedMessage }, fieldNumber: 112, isUnset: { _ in false })
  private static let _oneOfField_oneofString: Field<Self> = .singularString({ $0.oneofString }, fieldNumber: 113, isUnset: { _ in false })
  private static let _oneOfField_oneofBytes: Field<Self> = .singularBytes({ $0.oneofBytes }, fieldNumber: 114, isUnset: { _ in false })
  private static let _oneOfField_oneofBool: Field<Self> = .singularBool({ $0.oneofBool }, fieldNumber: 115, isUnset: { _ in false })
  private static let _oneOfField_oneofUint64: Field<Self> = .singularUInt64({ $0.oneofUint64 }, fieldNumber: 116, isUnset: { _ in false })
  private static let _oneOfField_oneofFloat: Field<Self> = .singularFloat({ $0.oneofFloat }, fieldNumber: 117, isUnset: { _ in false })
  private static let _oneOfField_oneofDouble: Field<Self> = .singularDouble({ $0.oneofDouble }, fieldNumber: 118, isUnset: { _ in false })
  private static let _oneOfField_oneofEnum: Field<Self> = .singularEnum({ $0.oneofEnum }, fieldNumber: 119, isUnset: { _ in false })


  static func ==(lhs: ProtobufTestMessages_Proto2_TestAllTypesProto2, rhs: ProtobufTestMessages_Proto2_TestAllTypesProto2) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._optionalInt32 != rhs_storage._optionalInt32 {return false}
        if _storage._optionalInt64 != rhs_storage._optionalInt64 {return false}
        if _storage._optionalUint32 != rhs_storage._optionalUint32 {return false}
        if _storage._optionalUint64 != rhs_storage._optionalUint64 {return false}
        if _storage._optionalSint32 != rhs_storage._optionalSint32 {return false}
        if _storage._optionalSint64 != rhs_storage._optionalSint64 {return false}
        if _storage._optionalFixed32 != rhs_storage._optionalFixed32 {return false}
        if _storage._optionalFixed64 != rhs_storage._optionalFixed64 {return false}
        if _storage._optionalSfixed32 != rhs_storage._optionalSfixed32 {return false}
        if _storage._optionalSfixed64 != rhs_storage._optionalSfixed64 {return false}
        if _storage._optionalFloat != rhs_storage._optionalFloat {return false}
        if _storage._optionalDouble != rhs_storage._optionalDouble {return false}
        if _storage._optionalBool != rhs_storage._optionalBool {return false}
        if _storage._optionalString != rhs_storage._optionalString {return false}
        if _storage._optionalBytes != rhs_storage._optionalBytes {return false}
        if _storage._optionalNestedMessage != rhs_storage._optionalNestedMessage {return false}
        if _storage._optionalForeignMessage != rhs_storage._optionalForeignMessage {return false}
        if _storage._optionalNestedEnum != rhs_storage._optionalNestedEnum {return false}
        if _storage._optionalForeignEnum != rhs_storage._optionalForeignEnum {return false}
        if _storage._optionalStringPiece != rhs_storage._optionalStringPiece {return false}
        if _storage._optionalCord != rhs_storage._optionalCord {return false}
        if _storage._recursiveMessage != rhs_storage._recursiveMessage {return false}
        if _storage._repeatedInt32 != rhs_storage._repeatedInt32 {return false}
        if _storage._repeatedInt64 != rhs_storage._repeatedInt64 {return false}
        if _storage._repeatedUint32 != rhs_storage._repeatedUint32 {return false}
        if _storage._repeatedUint64 != rhs_storage._repeatedUint64 {return false}
        if _storage._repeatedSint32 != rhs_storage._repeatedSint32 {return false}
        if _storage._repeatedSint64 != rhs_storage._repeatedSint64 {return false}
        if _storage._repeatedFixed32 != rhs_storage._repeatedFixed32 {return false}
        if _storage._repeatedFixed64 != rhs_storage._repeatedFixed64 {return false}
        if _storage._repeatedSfixed32 != rhs_storage._repeatedSfixed32 {return false}
        if _storage._repeatedSfixed64 != rhs_storage._repeatedSfixed64 {return false}
        if _storage._repeatedFloat != rhs_storage._repeatedFloat {return false}
        if _storage._repeatedDouble != rhs_storage._repeatedDouble {return false}
        if _storage._repeatedBool != rhs_storage._repeatedBool {return false}
        if _storage._repeatedString != rhs_storage._repeatedString {return false}
        if _storage._repeatedBytes != rhs_storage._repeatedBytes {return false}
        if _storage._repeatedNestedMessage != rhs_storage._repeatedNestedMessage {return false}
        if _storage._repeatedForeignMessage != rhs_storage._repeatedForeignMessage {return false}
        if _storage._repeatedNestedEnum != rhs_storage._repeatedNestedEnum {return false}
        if _storage._repeatedForeignEnum != rhs_storage._repeatedForeignEnum {return false}
        if _storage._repeatedStringPiece != rhs_storage._repeatedStringPiece {return false}
        if _storage._repeatedCord != rhs_storage._repeatedCord {return false}
        if _storage._packedInt32 != rhs_storage._packedInt32 {return false}
        if _storage._packedInt64 != rhs_storage._packedInt64 {return false}
        if _storage._packedUint32 != rhs_storage._packedUint32 {return false}
        if _storage._packedUint64 != rhs_storage._packedUint64 {return false}
        if _storage._packedSint32 != rhs_storage._packedSint32 {return false}
        if _storage._packedSint64 != rhs_storage._packedSint64 {return false}
        if _storage._packedFixed32 != rhs_storage._packedFixed32 {return false}
        if _storage._packedFixed64 != rhs_storage._packedFixed64 {return false}
        if _storage._packedSfixed32 != rhs_storage._packedSfixed32 {return false}
        if _storage._packedSfixed64 != rhs_storage._packedSfixed64 {return false}
        if _storage._packedFloat != rhs_storage._packedFloat {return false}
        if _storage._packedDouble != rhs_storage._packedDouble {return false}
        if _storage._packedBool != rhs_storage._packedBool {return false}
        if _storage._packedNestedEnum != rhs_storage._packedNestedEnum {return false}
        if _storage._unpackedInt32 != rhs_storage._unpackedInt32 {return false}
        if _storage._unpackedInt64 != rhs_storage._unpackedInt64 {return false}
        if _storage._unpackedUint32 != rhs_storage._unpackedUint32 {return false}
        if _storage._unpackedUint64 != rhs_storage._unpackedUint64 {return false}
        if _storage._unpackedSint32 != rhs_storage._unpackedSint32 {return false}
        if _storage._unpackedSint64 != rhs_storage._unpackedSint64 {return false}
        if _storage._unpackedFixed32 != rhs_storage._unpackedFixed32 {return false}
        if _storage._unpackedFixed64 != rhs_storage._unpackedFixed64 {return false}
        if _storage._unpackedSfixed32 != rhs_storage._unpackedSfixed32 {return false}
        if _storage._unpackedSfixed64 != rhs_storage._unpackedSfixed64 {return false}
        if _storage._unpackedFloat != rhs_storage._unpackedFloat {return false}
        if _storage._unpackedDouble != rhs_storage._unpackedDouble {return false}
        if _storage._unpackedBool != rhs_storage._unpackedBool {return false}
        if _storage._unpackedNestedEnum != rhs_storage._unpackedNestedEnum {return false}
        if _storage._mapInt32Int32 != rhs_storage._mapInt32Int32 {return false}
        if _storage._mapInt64Int64 != rhs_storage._mapInt64Int64 {return false}
        if _storage._mapUint32Uint32 != rhs_storage._mapUint32Uint32 {return false}
        if _storage._mapUint64Uint64 != rhs_storage._mapUint64Uint64 {return false}
        if _storage._mapSint32Sint32 != rhs_storage._mapSint32Sint32 {return false}
        if _storage._mapSint64Sint64 != rhs_storage._mapSint64Sint64 {return false}
        if _storage._mapFixed32Fixed32 != rhs_storage._mapFixed32Fixed32 {return false}
        if _storage._mapFixed64Fixed64 != rhs_storage._mapFixed64Fixed64 {return false}
        if _storage._mapSfixed32Sfixed32 != rhs_storage._mapSfixed32Sfixed32 {return false}
        if _storage._mapSfixed64Sfixed64 != rhs_storage._mapSfixed64Sfixed64 {return false}
        if _storage._mapInt32Float != rhs_storage._mapInt32Float {return false}
        if _storage._mapInt32Double != rhs_storage._mapInt32Double {return false}
        if _storage._mapBoolBool != rhs_storage._mapBoolBool {return false}
        if _storage._mapStringString != rhs_storage._mapStringString {return false}
        if _storage._mapStringBytes != rhs_storage._mapStringBytes {return false}
        if _storage._mapStringNestedMessage != rhs_storage._mapStringNestedMessage {return false}
        if _storage._mapStringForeignMessage != rhs_storage._mapStringForeignMessage {return false}
        if _storage._mapStringNestedEnum != rhs_storage._mapStringNestedEnum {return false}
        if _storage._mapStringForeignEnum != rhs_storage._mapStringForeignEnum {return false}
        if _storage._oneofField != rhs_storage._oneofField {return false}
        if _storage._data != rhs_storage._data {return false}
        if _storage._defaultInt32 != rhs_storage._defaultInt32 {return false}
        if _storage._defaultInt64 != rhs_storage._defaultInt64 {return false}
        if _storage._defaultUint32 != rhs_storage._defaultUint32 {return false}
        if _storage._defaultUint64 != rhs_storage._defaultUint64 {return false}
        if _storage._defaultSint32 != rhs_storage._defaultSint32 {return false}
        if _storage._defaultSint64 != rhs_storage._defaultSint64 {return false}
        if _storage._defaultFixed32 != rhs_storage._defaultFixed32 {return false}
        if _storage._defaultFixed64 != rhs_storage._defaultFixed64 {return false}
        if _storage._defaultSfixed32 != rhs_storage._defaultSfixed32 {return false}
        if _storage._defaultSfixed64 != rhs_storage._defaultSfixed64 {return false}
        if _storage._defaultFloat != rhs_storage._defaultFloat {return false}
        if _storage._defaultDouble != rhs_storage._defaultDouble {return false}
        if _storage._defaultBool != rhs_storage._defaultBool {return false}
        if _storage._defaultString != rhs_storage._defaultString {return false}
        if _storage._defaultBytes != rhs_storage._defaultBytes {return false}
        if _storage._fieldname1 != rhs_storage._fieldname1 {return false}
        if _storage._fieldName2 != rhs_storage._fieldName2 {return false}
        if _storage._fieldName3 != rhs_storage._fieldName3 {return false}
        if _storage._field_Name4_ != rhs_storage._field_Name4_ {return false}
        if _storage._field0Name5 != rhs_storage._field0Name5 {return false}
        if _storage._field0Name6 != rhs_storage._field0Name6 {return false}
        if _storage._fieldName7 != rhs_storage._fieldName7 {return false}
        if _storage._fieldName8 != rhs_storage._fieldName8 {return false}
        if _storage._fieldName9 != rhs_storage._fieldName9 {return false}
        if _storage._fieldName10 != rhs_storage._fieldName10 {return false}
        if _storage._fieldName11 != rhs_storage._fieldName11 {return false}
        if _storage._fieldName12 != rhs_storage._fieldName12 {return false}
        if _storage.__FieldName13 != rhs_storage.__FieldName13 {return false}
        if _storage.__FieldName14 != rhs_storage.__FieldName14 {return false}
        if _storage._field_Name15 != rhs_storage._field_Name15 {return false}
        if _storage._field_Name16 != rhs_storage._field_Name16 {return false}
        if _storage._fieldName17__ != rhs_storage._fieldName17__ {return false}
        if _storage._fieldName18__ != rhs_storage._fieldName18__ {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    if lhs._protobuf_extensionFieldValues != rhs._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedEnum: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    -1: .same(proto: "NEG"),
    0: .same(proto: "FOO"),
    1: .same(proto: "BAR"),
    2: .same(proto: "BAZ"),
  ]
}

extension ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = ProtobufTestMessages_Proto2_TestAllTypesProto2.protoMessageName + ".NestedMessage"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "a"),
    2: .same(proto: "corecursive"),
  ]

  fileprivate class _StorageClass {
    var _a: Int32? = nil
    var _corecursive: ProtobufTestMessages_Proto2_TestAllTypesProto2? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _a = source._a
      _corecursive = source._corecursive
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._corecursive, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularInt32Field(value: &_storage._a) }()
        case 2: try { try decoder.decodeSingularMessageField(value: &_storage._corecursive) }()
        default: break
        }
      }
    }
  }

  static let _fields: [Field<Self>] = [
    .singularInt32({ $0.a }, fieldNumber: 1, isUnset: { $0._storage._a == nil }),
    .singularMessage({ $0.corecursive }, fieldNumber: 2, isUnset: { $0._storage._corecursive == nil }),
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedMessage, rhs: ProtobufTestMessages_Proto2_TestAllTypesProto2.NestedMessage) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._a != rhs_storage._a {return false}
        if _storage._corecursive != rhs_storage._corecursive {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_TestAllTypesProto2.DataMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = ProtobufTestMessages_Proto2_TestAllTypesProto2.protoMessageName + ".Data"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    202: .standard(proto: "group_int32"),
    203: .standard(proto: "group_uint32"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 202: try { try decoder.decodeSingularInt32Field(value: &self._groupInt32) }()
      case 203: try { try decoder.decodeSingularUInt32Field(value: &self._groupUint32) }()
      default: break
      }
    }
  }

  static let _fields: [Field<Self>] = [
    .singularInt32({ $0.groupInt32 }, fieldNumber: 202, isUnset: { $0._groupInt32 == nil }),
    .singularUInt32({ $0.groupUint32 }, fieldNumber: 203, isUnset: { $0._groupUint32 == nil }),
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_TestAllTypesProto2.DataMessage, rhs: ProtobufTestMessages_Proto2_TestAllTypesProto2.DataMessage) -> Bool {
    if lhs._groupInt32 != rhs._groupInt32 {return false}
    if lhs._groupUint32 != rhs._groupUint32 {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrect: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = ProtobufTestMessages_Proto2_TestAllTypesProto2.protoMessageName + ".MessageSetCorrect"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    try decoder.decodeExtensionFieldsAsMessageSet(values: &_protobuf_extensionFieldValues, messageType: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrect.self)
  }

  static let _fields: [Field<Self>] = [
    .extensionFieldsAsMessageSet({ $0._protobuf_extensionFieldValues }, start: 4, end: 2147483647),
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrect, rhs: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrect) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    if lhs._protobuf_extensionFieldValues != rhs._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension1: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = ProtobufTestMessages_Proto2_TestAllTypesProto2.protoMessageName + ".MessageSetCorrectExtension1"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    25: .same(proto: "str"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 25: try { try decoder.decodeSingularStringField(value: &self._str) }()
      default: break
      }
    }
  }

  static let _fields: [Field<Self>] = [
    .singularString({ $0.str }, fieldNumber: 25, isUnset: { $0._str == nil }),
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension1, rhs: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension1) -> Bool {
    if lhs._str != rhs._str {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension2: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = ProtobufTestMessages_Proto2_TestAllTypesProto2.protoMessageName + ".MessageSetCorrectExtension2"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    9: .same(proto: "i"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 9: try { try decoder.decodeSingularInt32Field(value: &self._i) }()
      default: break
      }
    }
  }

  static let _fields: [Field<Self>] = [
    .singularInt32({ $0.i }, fieldNumber: 9, isUnset: { $0._i == nil }),
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension2, rhs: ProtobufTestMessages_Proto2_TestAllTypesProto2.MessageSetCorrectExtension2) -> Bool {
    if lhs._i != rhs._i {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_ForeignMessageProto2: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ForeignMessageProto2"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "c"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularInt32Field(value: &self._c) }()
      default: break
      }
    }
  }

  static let _fields: [Field<Self>] = [
    .singularInt32({ $0.c }, fieldNumber: 1, isUnset: { $0._c == nil }),
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_ForeignMessageProto2, rhs: ProtobufTestMessages_Proto2_ForeignMessageProto2) -> Bool {
    if lhs._c != rhs._c {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_UnknownToTestAllTypes: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".UnknownToTestAllTypes"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1001: .standard(proto: "optional_int32"),
    1002: .standard(proto: "optional_string"),
    1003: .standard(proto: "nested_message"),
    1004: .unique(proto: "OptionalGroup", json: "optionalgroup"),
    1006: .standard(proto: "optional_bool"),
    1011: .standard(proto: "repeated_int32"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1001: try { try decoder.decodeSingularInt32Field(value: &self._optionalInt32) }()
      case 1002: try { try decoder.decodeSingularStringField(value: &self._optionalString) }()
      case 1003: try { try decoder.decodeSingularMessageField(value: &self._nestedMessage) }()
      case 1004: try { try decoder.decodeSingularGroupField(value: &self._optionalGroup) }()
      case 1006: try { try decoder.decodeSingularBoolField(value: &self._optionalBool) }()
      case 1011: try { try decoder.decodeRepeatedInt32Field(value: &self.repeatedInt32) }()
      default: break
      }
    }
  }

  static let _fields: [Field<Self>] = [
    .singularInt32({ $0.optionalInt32 }, fieldNumber: 1001, isUnset: { $0._optionalInt32 == nil }),
    .singularString({ $0.optionalString }, fieldNumber: 1002, isUnset: { $0._optionalString == nil }),
    .singularMessage({ $0.nestedMessage }, fieldNumber: 1003, isUnset: { $0._nestedMessage == nil }),
    .singularGroup({ $0.optionalGroup }, fieldNumber: 1004, isUnset: { $0._optionalGroup == nil }),
    .singularBool({ $0.optionalBool }, fieldNumber: 1006, isUnset: { $0._optionalBool == nil }),
    .repeatedInt32({ $0.repeatedInt32 }, fieldNumber: 1011),
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_UnknownToTestAllTypes, rhs: ProtobufTestMessages_Proto2_UnknownToTestAllTypes) -> Bool {
    if lhs._optionalInt32 != rhs._optionalInt32 {return false}
    if lhs._optionalString != rhs._optionalString {return false}
    if lhs._nestedMessage != rhs._nestedMessage {return false}
    if lhs._optionalGroup != rhs._optionalGroup {return false}
    if lhs._optionalBool != rhs._optionalBool {return false}
    if lhs.repeatedInt32 != rhs.repeatedInt32 {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_UnknownToTestAllTypes.OptionalGroup: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = ProtobufTestMessages_Proto2_UnknownToTestAllTypes.protoMessageName + ".OptionalGroup"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "a"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularInt32Field(value: &self._a) }()
      default: break
      }
    }
  }

  static let _fields: [Field<Self>] = [
    .singularInt32({ $0.a }, fieldNumber: 1, isUnset: { $0._a == nil }),
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_UnknownToTestAllTypes.OptionalGroup, rhs: ProtobufTestMessages_Proto2_UnknownToTestAllTypes.OptionalGroup) -> Bool {
    if lhs._a != rhs._a {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_NullHypothesisProto2: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".NullHypothesisProto2"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    // Load everything into unknown fields
    while try decoder.nextFieldNumber() != nil {}
  }

  static let _fields: [Field<Self>] = [
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_NullHypothesisProto2, rhs: ProtobufTestMessages_Proto2_NullHypothesisProto2) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_EnumOnlyProto2: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".EnumOnlyProto2"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    // Load everything into unknown fields
    while try decoder.nextFieldNumber() != nil {}
  }

  static let _fields: [Field<Self>] = [
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_EnumOnlyProto2, rhs: ProtobufTestMessages_Proto2_EnumOnlyProto2) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_EnumOnlyProto2.BoolEnum: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "kFalse"),
    1: .same(proto: "kTrue"),
  ]
}

extension ProtobufTestMessages_Proto2_OneStringProto2: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".OneStringProto2"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "data"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self._data) }()
      default: break
      }
    }
  }

  static let _fields: [Field<Self>] = [
    .singularString({ $0.data }, fieldNumber: 1, isUnset: { $0._data == nil }),
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_OneStringProto2, rhs: ProtobufTestMessages_Proto2_OneStringProto2) -> Bool {
    if lhs._data != rhs._data {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_ProtoWithKeywords: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ProtoWithKeywords"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "inline"),
    2: .same(proto: "concept"),
    3: .same(proto: "requires"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularInt32Field(value: &self._inline) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self._concept) }()
      case 3: try { try decoder.decodeRepeatedStringField(value: &self.requires) }()
      default: break
      }
    }
  }

  static let _fields: [Field<Self>] = [
    .singularInt32({ $0.inline }, fieldNumber: 1, isUnset: { $0._inline == nil }),
    .singularString({ $0.concept }, fieldNumber: 2, isUnset: { $0._concept == nil }),
    .repeatedString({ $0.requires }, fieldNumber: 3),
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_ProtoWithKeywords, rhs: ProtobufTestMessages_Proto2_ProtoWithKeywords) -> Bool {
    if lhs._inline != rhs._inline {return false}
    if lhs._concept != rhs._concept {return false}
    if lhs.requires != rhs.requires {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".TestAllRequiredTypesProto2"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "required_int32"),
    2: .standard(proto: "required_int64"),
    3: .standard(proto: "required_uint32"),
    4: .standard(proto: "required_uint64"),
    5: .standard(proto: "required_sint32"),
    6: .standard(proto: "required_sint64"),
    7: .standard(proto: "required_fixed32"),
    8: .standard(proto: "required_fixed64"),
    9: .standard(proto: "required_sfixed32"),
    10: .standard(proto: "required_sfixed64"),
    11: .standard(proto: "required_float"),
    12: .standard(proto: "required_double"),
    13: .standard(proto: "required_bool"),
    14: .standard(proto: "required_string"),
    15: .standard(proto: "required_bytes"),
    18: .standard(proto: "required_nested_message"),
    19: .standard(proto: "required_foreign_message"),
    21: .standard(proto: "required_nested_enum"),
    22: .standard(proto: "required_foreign_enum"),
    24: .standard(proto: "required_string_piece"),
    25: .standard(proto: "required_cord"),
    27: .standard(proto: "recursive_message"),
    28: .standard(proto: "optional_recursive_message"),
    201: .unique(proto: "Data", json: "data"),
    241: .standard(proto: "default_int32"),
    242: .standard(proto: "default_int64"),
    243: .standard(proto: "default_uint32"),
    244: .standard(proto: "default_uint64"),
    245: .standard(proto: "default_sint32"),
    246: .standard(proto: "default_sint64"),
    247: .standard(proto: "default_fixed32"),
    248: .standard(proto: "default_fixed64"),
    249: .standard(proto: "default_sfixed32"),
    250: .standard(proto: "default_sfixed64"),
    251: .standard(proto: "default_float"),
    252: .standard(proto: "default_double"),
    253: .standard(proto: "default_bool"),
    254: .standard(proto: "default_string"),
    255: .standard(proto: "default_bytes"),
  ]

  fileprivate class _StorageClass {
    var _requiredInt32: Int32? = nil
    var _requiredInt64: Int64? = nil
    var _requiredUint32: UInt32? = nil
    var _requiredUint64: UInt64? = nil
    var _requiredSint32: Int32? = nil
    var _requiredSint64: Int64? = nil
    var _requiredFixed32: UInt32? = nil
    var _requiredFixed64: UInt64? = nil
    var _requiredSfixed32: Int32? = nil
    var _requiredSfixed64: Int64? = nil
    var _requiredFloat: Float? = nil
    var _requiredDouble: Double? = nil
    var _requiredBool: Bool? = nil
    var _requiredString: String? = nil
    var _requiredBytes: Data? = nil
    var _requiredNestedMessage: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.NestedMessage? = nil
    var _requiredForeignMessage: ProtobufTestMessages_Proto2_ForeignMessageProto2? = nil
    var _requiredNestedEnum: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.NestedEnum? = nil
    var _requiredForeignEnum: ProtobufTestMessages_Proto2_ForeignEnumProto2? = nil
    var _requiredStringPiece: String? = nil
    var _requiredCord: String? = nil
    var _recursiveMessage: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2? = nil
    var _optionalRecursiveMessage: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2? = nil
    var _data: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.DataMessage? = nil
    var _defaultInt32: Int32? = nil
    var _defaultInt64: Int64? = nil
    var _defaultUint32: UInt32? = nil
    var _defaultUint64: UInt64? = nil
    var _defaultSint32: Int32? = nil
    var _defaultSint64: Int64? = nil
    var _defaultFixed32: UInt32? = nil
    var _defaultFixed64: UInt64? = nil
    var _defaultSfixed32: Int32? = nil
    var _defaultSfixed64: Int64? = nil
    var _defaultFloat: Float? = nil
    var _defaultDouble: Double? = nil
    var _defaultBool: Bool? = nil
    var _defaultString: String? = nil
    var _defaultBytes: Data? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _requiredInt32 = source._requiredInt32
      _requiredInt64 = source._requiredInt64
      _requiredUint32 = source._requiredUint32
      _requiredUint64 = source._requiredUint64
      _requiredSint32 = source._requiredSint32
      _requiredSint64 = source._requiredSint64
      _requiredFixed32 = source._requiredFixed32
      _requiredFixed64 = source._requiredFixed64
      _requiredSfixed32 = source._requiredSfixed32
      _requiredSfixed64 = source._requiredSfixed64
      _requiredFloat = source._requiredFloat
      _requiredDouble = source._requiredDouble
      _requiredBool = source._requiredBool
      _requiredString = source._requiredString
      _requiredBytes = source._requiredBytes
      _requiredNestedMessage = source._requiredNestedMessage
      _requiredForeignMessage = source._requiredForeignMessage
      _requiredNestedEnum = source._requiredNestedEnum
      _requiredForeignEnum = source._requiredForeignEnum
      _requiredStringPiece = source._requiredStringPiece
      _requiredCord = source._requiredCord
      _recursiveMessage = source._recursiveMessage
      _optionalRecursiveMessage = source._optionalRecursiveMessage
      _data = source._data
      _defaultInt32 = source._defaultInt32
      _defaultInt64 = source._defaultInt64
      _defaultUint32 = source._defaultUint32
      _defaultUint64 = source._defaultUint64
      _defaultSint32 = source._defaultSint32
      _defaultSint64 = source._defaultSint64
      _defaultFixed32 = source._defaultFixed32
      _defaultFixed64 = source._defaultFixed64
      _defaultSfixed32 = source._defaultSfixed32
      _defaultSfixed64 = source._defaultSfixed64
      _defaultFloat = source._defaultFloat
      _defaultDouble = source._defaultDouble
      _defaultBool = source._defaultBool
      _defaultString = source._defaultString
      _defaultBytes = source._defaultBytes
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._requiredInt32 == nil {return false}
      if _storage._requiredInt64 == nil {return false}
      if _storage._requiredUint32 == nil {return false}
      if _storage._requiredUint64 == nil {return false}
      if _storage._requiredSint32 == nil {return false}
      if _storage._requiredSint64 == nil {return false}
      if _storage._requiredFixed32 == nil {return false}
      if _storage._requiredFixed64 == nil {return false}
      if _storage._requiredSfixed32 == nil {return false}
      if _storage._requiredSfixed64 == nil {return false}
      if _storage._requiredFloat == nil {return false}
      if _storage._requiredDouble == nil {return false}
      if _storage._requiredBool == nil {return false}
      if _storage._requiredString == nil {return false}
      if _storage._requiredBytes == nil {return false}
      if _storage._requiredNestedMessage == nil {return false}
      if _storage._requiredForeignMessage == nil {return false}
      if _storage._requiredNestedEnum == nil {return false}
      if _storage._requiredForeignEnum == nil {return false}
      if _storage._requiredStringPiece == nil {return false}
      if _storage._requiredCord == nil {return false}
      if _storage._recursiveMessage == nil {return false}
      if _storage._data == nil {return false}
      if _storage._defaultInt32 == nil {return false}
      if _storage._defaultInt64 == nil {return false}
      if _storage._defaultUint32 == nil {return false}
      if _storage._defaultUint64 == nil {return false}
      if _storage._defaultSint32 == nil {return false}
      if _storage._defaultSint64 == nil {return false}
      if _storage._defaultFixed32 == nil {return false}
      if _storage._defaultFixed64 == nil {return false}
      if _storage._defaultSfixed32 == nil {return false}
      if _storage._defaultSfixed64 == nil {return false}
      if _storage._defaultFloat == nil {return false}
      if _storage._defaultDouble == nil {return false}
      if _storage._defaultBool == nil {return false}
      if _storage._defaultString == nil {return false}
      if _storage._defaultBytes == nil {return false}
      if let v = _storage._requiredNestedMessage, !v.isInitialized {return false}
      if let v = _storage._recursiveMessage, !v.isInitialized {return false}
      if let v = _storage._optionalRecursiveMessage, !v.isInitialized {return false}
      if let v = _storage._data, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularInt32Field(value: &_storage._requiredInt32) }()
        case 2: try { try decoder.decodeSingularInt64Field(value: &_storage._requiredInt64) }()
        case 3: try { try decoder.decodeSingularUInt32Field(value: &_storage._requiredUint32) }()
        case 4: try { try decoder.decodeSingularUInt64Field(value: &_storage._requiredUint64) }()
        case 5: try { try decoder.decodeSingularSInt32Field(value: &_storage._requiredSint32) }()
        case 6: try { try decoder.decodeSingularSInt64Field(value: &_storage._requiredSint64) }()
        case 7: try { try decoder.decodeSingularFixed32Field(value: &_storage._requiredFixed32) }()
        case 8: try { try decoder.decodeSingularFixed64Field(value: &_storage._requiredFixed64) }()
        case 9: try { try decoder.decodeSingularSFixed32Field(value: &_storage._requiredSfixed32) }()
        case 10: try { try decoder.decodeSingularSFixed64Field(value: &_storage._requiredSfixed64) }()
        case 11: try { try decoder.decodeSingularFloatField(value: &_storage._requiredFloat) }()
        case 12: try { try decoder.decodeSingularDoubleField(value: &_storage._requiredDouble) }()
        case 13: try { try decoder.decodeSingularBoolField(value: &_storage._requiredBool) }()
        case 14: try { try decoder.decodeSingularStringField(value: &_storage._requiredString) }()
        case 15: try { try decoder.decodeSingularBytesField(value: &_storage._requiredBytes) }()
        case 18: try { try decoder.decodeSingularMessageField(value: &_storage._requiredNestedMessage) }()
        case 19: try { try decoder.decodeSingularMessageField(value: &_storage._requiredForeignMessage) }()
        case 21: try { try decoder.decodeSingularEnumField(value: &_storage._requiredNestedEnum) }()
        case 22: try { try decoder.decodeSingularEnumField(value: &_storage._requiredForeignEnum) }()
        case 24: try { try decoder.decodeSingularStringField(value: &_storage._requiredStringPiece) }()
        case 25: try { try decoder.decodeSingularStringField(value: &_storage._requiredCord) }()
        case 27: try { try decoder.decodeSingularMessageField(value: &_storage._recursiveMessage) }()
        case 28: try { try decoder.decodeSingularMessageField(value: &_storage._optionalRecursiveMessage) }()
        case 201: try { try decoder.decodeSingularGroupField(value: &_storage._data) }()
        case 241: try { try decoder.decodeSingularInt32Field(value: &_storage._defaultInt32) }()
        case 242: try { try decoder.decodeSingularInt64Field(value: &_storage._defaultInt64) }()
        case 243: try { try decoder.decodeSingularUInt32Field(value: &_storage._defaultUint32) }()
        case 244: try { try decoder.decodeSingularUInt64Field(value: &_storage._defaultUint64) }()
        case 245: try { try decoder.decodeSingularSInt32Field(value: &_storage._defaultSint32) }()
        case 246: try { try decoder.decodeSingularSInt64Field(value: &_storage._defaultSint64) }()
        case 247: try { try decoder.decodeSingularFixed32Field(value: &_storage._defaultFixed32) }()
        case 248: try { try decoder.decodeSingularFixed64Field(value: &_storage._defaultFixed64) }()
        case 249: try { try decoder.decodeSingularSFixed32Field(value: &_storage._defaultSfixed32) }()
        case 250: try { try decoder.decodeSingularSFixed64Field(value: &_storage._defaultSfixed64) }()
        case 251: try { try decoder.decodeSingularFloatField(value: &_storage._defaultFloat) }()
        case 252: try { try decoder.decodeSingularDoubleField(value: &_storage._defaultDouble) }()
        case 253: try { try decoder.decodeSingularBoolField(value: &_storage._defaultBool) }()
        case 254: try { try decoder.decodeSingularStringField(value: &_storage._defaultString) }()
        case 255: try { try decoder.decodeSingularBytesField(value: &_storage._defaultBytes) }()
        case 120..<201:
          try { try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.self, fieldNumber: fieldNumber) }()
        default: break
        }
      }
    }
  }

  static let _fields: [Field<Self>] = [
    .singularInt32({ $0.requiredInt32 }, fieldNumber: 1, isUnset: { $0._storage._requiredInt32 == nil }),
    .singularInt64({ $0.requiredInt64 }, fieldNumber: 2, isUnset: { $0._storage._requiredInt64 == nil }),
    .singularUInt32({ $0.requiredUint32 }, fieldNumber: 3, isUnset: { $0._storage._requiredUint32 == nil }),
    .singularUInt64({ $0.requiredUint64 }, fieldNumber: 4, isUnset: { $0._storage._requiredUint64 == nil }),
    .singularSInt32({ $0.requiredSint32 }, fieldNumber: 5, isUnset: { $0._storage._requiredSint32 == nil }),
    .singularSInt64({ $0.requiredSint64 }, fieldNumber: 6, isUnset: { $0._storage._requiredSint64 == nil }),
    .singularFixed32({ $0.requiredFixed32 }, fieldNumber: 7, isUnset: { $0._storage._requiredFixed32 == nil }),
    .singularFixed64({ $0.requiredFixed64 }, fieldNumber: 8, isUnset: { $0._storage._requiredFixed64 == nil }),
    .singularSFixed32({ $0.requiredSfixed32 }, fieldNumber: 9, isUnset: { $0._storage._requiredSfixed32 == nil }),
    .singularSFixed64({ $0.requiredSfixed64 }, fieldNumber: 10, isUnset: { $0._storage._requiredSfixed64 == nil }),
    .singularFloat({ $0.requiredFloat }, fieldNumber: 11, isUnset: { $0._storage._requiredFloat == nil }),
    .singularDouble({ $0.requiredDouble }, fieldNumber: 12, isUnset: { $0._storage._requiredDouble == nil }),
    .singularBool({ $0.requiredBool }, fieldNumber: 13, isUnset: { $0._storage._requiredBool == nil }),
    .singularString({ $0.requiredString }, fieldNumber: 14, isUnset: { $0._storage._requiredString == nil }),
    .singularBytes({ $0.requiredBytes }, fieldNumber: 15, isUnset: { $0._storage._requiredBytes == nil }),
    .singularMessage({ $0.requiredNestedMessage }, fieldNumber: 18, isUnset: { $0._storage._requiredNestedMessage == nil }),
    .singularMessage({ $0.requiredForeignMessage }, fieldNumber: 19, isUnset: { $0._storage._requiredForeignMessage == nil }),
    .singularEnum({ $0.requiredNestedEnum }, fieldNumber: 21, isUnset: { $0._storage._requiredNestedEnum == nil }),
    .singularEnum({ $0.requiredForeignEnum }, fieldNumber: 22, isUnset: { $0._storage._requiredForeignEnum == nil }),
    .singularString({ $0.requiredStringPiece }, fieldNumber: 24, isUnset: { $0._storage._requiredStringPiece == nil }),
    .singularString({ $0.requiredCord }, fieldNumber: 25, isUnset: { $0._storage._requiredCord == nil }),
    .singularMessage({ $0.recursiveMessage }, fieldNumber: 27, isUnset: { $0._storage._recursiveMessage == nil }),
    .singularMessage({ $0.optionalRecursiveMessage }, fieldNumber: 28, isUnset: { $0._storage._optionalRecursiveMessage == nil }),
    .extensionFields({ $0._protobuf_extensionFieldValues }, start: 120, end: 201),
    .singularGroup({ $0.data }, fieldNumber: 201, isUnset: { $0._storage._data == nil }),
    .singularInt32({ $0.defaultInt32 }, fieldNumber: 241, isUnset: { $0._storage._defaultInt32 == nil }),
    .singularInt64({ $0.defaultInt64 }, fieldNumber: 242, isUnset: { $0._storage._defaultInt64 == nil }),
    .singularUInt32({ $0.defaultUint32 }, fieldNumber: 243, isUnset: { $0._storage._defaultUint32 == nil }),
    .singularUInt64({ $0.defaultUint64 }, fieldNumber: 244, isUnset: { $0._storage._defaultUint64 == nil }),
    .singularSInt32({ $0.defaultSint32 }, fieldNumber: 245, isUnset: { $0._storage._defaultSint32 == nil }),
    .singularSInt64({ $0.defaultSint64 }, fieldNumber: 246, isUnset: { $0._storage._defaultSint64 == nil }),
    .singularFixed32({ $0.defaultFixed32 }, fieldNumber: 247, isUnset: { $0._storage._defaultFixed32 == nil }),
    .singularFixed64({ $0.defaultFixed64 }, fieldNumber: 248, isUnset: { $0._storage._defaultFixed64 == nil }),
    .singularSFixed32({ $0.defaultSfixed32 }, fieldNumber: 249, isUnset: { $0._storage._defaultSfixed32 == nil }),
    .singularSFixed64({ $0.defaultSfixed64 }, fieldNumber: 250, isUnset: { $0._storage._defaultSfixed64 == nil }),
    .singularFloat({ $0.defaultFloat }, fieldNumber: 251, isUnset: { $0._storage._defaultFloat == nil }),
    .singularDouble({ $0.defaultDouble }, fieldNumber: 252, isUnset: { $0._storage._defaultDouble == nil }),
    .singularBool({ $0.defaultBool }, fieldNumber: 253, isUnset: { $0._storage._defaultBool == nil }),
    .singularString({ $0.defaultString }, fieldNumber: 254, isUnset: { $0._storage._defaultString == nil }),
    .singularBytes({ $0.defaultBytes }, fieldNumber: 255, isUnset: { $0._storage._defaultBytes == nil }),
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2, rhs: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._requiredInt32 != rhs_storage._requiredInt32 {return false}
        if _storage._requiredInt64 != rhs_storage._requiredInt64 {return false}
        if _storage._requiredUint32 != rhs_storage._requiredUint32 {return false}
        if _storage._requiredUint64 != rhs_storage._requiredUint64 {return false}
        if _storage._requiredSint32 != rhs_storage._requiredSint32 {return false}
        if _storage._requiredSint64 != rhs_storage._requiredSint64 {return false}
        if _storage._requiredFixed32 != rhs_storage._requiredFixed32 {return false}
        if _storage._requiredFixed64 != rhs_storage._requiredFixed64 {return false}
        if _storage._requiredSfixed32 != rhs_storage._requiredSfixed32 {return false}
        if _storage._requiredSfixed64 != rhs_storage._requiredSfixed64 {return false}
        if _storage._requiredFloat != rhs_storage._requiredFloat {return false}
        if _storage._requiredDouble != rhs_storage._requiredDouble {return false}
        if _storage._requiredBool != rhs_storage._requiredBool {return false}
        if _storage._requiredString != rhs_storage._requiredString {return false}
        if _storage._requiredBytes != rhs_storage._requiredBytes {return false}
        if _storage._requiredNestedMessage != rhs_storage._requiredNestedMessage {return false}
        if _storage._requiredForeignMessage != rhs_storage._requiredForeignMessage {return false}
        if _storage._requiredNestedEnum != rhs_storage._requiredNestedEnum {return false}
        if _storage._requiredForeignEnum != rhs_storage._requiredForeignEnum {return false}
        if _storage._requiredStringPiece != rhs_storage._requiredStringPiece {return false}
        if _storage._requiredCord != rhs_storage._requiredCord {return false}
        if _storage._recursiveMessage != rhs_storage._recursiveMessage {return false}
        if _storage._optionalRecursiveMessage != rhs_storage._optionalRecursiveMessage {return false}
        if _storage._data != rhs_storage._data {return false}
        if _storage._defaultInt32 != rhs_storage._defaultInt32 {return false}
        if _storage._defaultInt64 != rhs_storage._defaultInt64 {return false}
        if _storage._defaultUint32 != rhs_storage._defaultUint32 {return false}
        if _storage._defaultUint64 != rhs_storage._defaultUint64 {return false}
        if _storage._defaultSint32 != rhs_storage._defaultSint32 {return false}
        if _storage._defaultSint64 != rhs_storage._defaultSint64 {return false}
        if _storage._defaultFixed32 != rhs_storage._defaultFixed32 {return false}
        if _storage._defaultFixed64 != rhs_storage._defaultFixed64 {return false}
        if _storage._defaultSfixed32 != rhs_storage._defaultSfixed32 {return false}
        if _storage._defaultSfixed64 != rhs_storage._defaultSfixed64 {return false}
        if _storage._defaultFloat != rhs_storage._defaultFloat {return false}
        if _storage._defaultDouble != rhs_storage._defaultDouble {return false}
        if _storage._defaultBool != rhs_storage._defaultBool {return false}
        if _storage._defaultString != rhs_storage._defaultString {return false}
        if _storage._defaultBytes != rhs_storage._defaultBytes {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    if lhs._protobuf_extensionFieldValues != rhs._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.NestedEnum: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    -1: .same(proto: "NEG"),
    0: .same(proto: "FOO"),
    1: .same(proto: "BAR"),
    2: .same(proto: "BAZ"),
  ]
}

extension ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.NestedMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.protoMessageName + ".NestedMessage"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "a"),
    2: .same(proto: "corecursive"),
    3: .standard(proto: "optional_corecursive"),
  ]

  fileprivate class _StorageClass {
    var _a: Int32? = nil
    var _corecursive: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2? = nil
    var _optionalCorecursive: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _a = source._a
      _corecursive = source._corecursive
      _optionalCorecursive = source._optionalCorecursive
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._a == nil {return false}
      if _storage._corecursive == nil {return false}
      if let v = _storage._corecursive, !v.isInitialized {return false}
      if let v = _storage._optionalCorecursive, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularInt32Field(value: &_storage._a) }()
        case 2: try { try decoder.decodeSingularMessageField(value: &_storage._corecursive) }()
        case 3: try { try decoder.decodeSingularMessageField(value: &_storage._optionalCorecursive) }()
        default: break
        }
      }
    }
  }

  static let _fields: [Field<Self>] = [
    .singularInt32({ $0.a }, fieldNumber: 1, isUnset: { $0._storage._a == nil }),
    .singularMessage({ $0.corecursive }, fieldNumber: 2, isUnset: { $0._storage._corecursive == nil }),
    .singularMessage({ $0.optionalCorecursive }, fieldNumber: 3, isUnset: { $0._storage._optionalCorecursive == nil }),
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.NestedMessage, rhs: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.NestedMessage) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._a != rhs_storage._a {return false}
        if _storage._corecursive != rhs_storage._corecursive {return false}
        if _storage._optionalCorecursive != rhs_storage._optionalCorecursive {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.DataMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.protoMessageName + ".Data"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    202: .standard(proto: "group_int32"),
    203: .standard(proto: "group_uint32"),
  ]

  public var isInitialized: Bool {
    if self._groupInt32 == nil {return false}
    if self._groupUint32 == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 202: try { try decoder.decodeSingularInt32Field(value: &self._groupInt32) }()
      case 203: try { try decoder.decodeSingularUInt32Field(value: &self._groupUint32) }()
      default: break
      }
    }
  }

  static let _fields: [Field<Self>] = [
    .singularInt32({ $0.groupInt32 }, fieldNumber: 202, isUnset: { $0._groupInt32 == nil }),
    .singularUInt32({ $0.groupUint32 }, fieldNumber: 203, isUnset: { $0._groupUint32 == nil }),
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.DataMessage, rhs: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.DataMessage) -> Bool {
    if lhs._groupInt32 != rhs._groupInt32 {return false}
    if lhs._groupUint32 != rhs._groupUint32 {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrect: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.protoMessageName + ".MessageSetCorrect"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    try decoder.decodeExtensionFieldsAsMessageSet(values: &_protobuf_extensionFieldValues, messageType: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrect.self)
  }

  static let _fields: [Field<Self>] = [
    .extensionFieldsAsMessageSet({ $0._protobuf_extensionFieldValues }, start: 4, end: 2147483647),
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrect, rhs: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrect) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    if lhs._protobuf_extensionFieldValues != rhs._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension1: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.protoMessageName + ".MessageSetCorrectExtension1"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    25: .same(proto: "str"),
  ]

  public var isInitialized: Bool {
    if self._str == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 25: try { try decoder.decodeSingularStringField(value: &self._str) }()
      default: break
      }
    }
  }

  static let _fields: [Field<Self>] = [
    .singularString({ $0.str }, fieldNumber: 25, isUnset: { $0._str == nil }),
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension1, rhs: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension1) -> Bool {
    if lhs._str != rhs._str {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension2: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.protoMessageName + ".MessageSetCorrectExtension2"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    9: .same(proto: "i"),
  ]

  public var isInitialized: Bool {
    if self._i == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 9: try { try decoder.decodeSingularInt32Field(value: &self._i) }()
      default: break
      }
    }
  }

  static let _fields: [Field<Self>] = [
    .singularInt32({ $0.i }, fieldNumber: 9, isUnset: { $0._i == nil }),
  ]


  static func ==(lhs: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension2, rhs: ProtobufTestMessages_Proto2_TestAllRequiredTypesProto2.MessageSetCorrectExtension2) -> Bool {
    if lhs._i != rhs._i {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
