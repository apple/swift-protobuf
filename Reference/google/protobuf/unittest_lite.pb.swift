/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: google/protobuf/unittest_lite.proto
 *
 */

//  Protocol Buffers - Google's data interchange format
//  Copyright 2008 Google Inc.  All rights reserved.
//  https://developers.google.com/protocol-buffers/
// 
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//      * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//      * Redistributions in binary form must reproduce the above
//  copyright notice, this list of conditions and the following disclaimer
//  in the documentation and/or other materials provided with the
//  distribution.
//      * Neither the name of Google Inc. nor the names of its
//  contributors may be used to endorse or promote products derived from
//  this software without specific prior written permission.
// 
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
//  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
//  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
//  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
//  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
//  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
//  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//  Author: kenton@google.com (Kenton Varda)
// 
//  This is like unittest.proto but with optimize_for = LITE_RUNTIME.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _1: SwiftProtobuf.ProtobufAPIVersion_1 {}
  typealias Version = _1
}

enum ProtobufUnittest_ForeignEnumLite: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case foreignLiteFoo // = 4
  case foreignLiteBar // = 5
  case foreignLiteBaz // = 6

  init() {
    self = .foreignLiteFoo
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 4: self = .foreignLiteFoo
    case 5: self = .foreignLiteBar
    case 6: self = .foreignLiteBaz
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "FOREIGN_LITE_FOO": self = .foreignLiteFoo
    case "FOREIGN_LITE_BAR": self = .foreignLiteBar
    case "FOREIGN_LITE_BAZ": self = .foreignLiteBaz
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "FOREIGN_LITE_FOO": self = .foreignLiteFoo
    case "FOREIGN_LITE_BAR": self = .foreignLiteBar
    case "FOREIGN_LITE_BAZ": self = .foreignLiteBaz
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .foreignLiteFoo: return 4
      case .foreignLiteBar: return 5
      case .foreignLiteBaz: return 6
      }
    }
  }

  var _protobuf_jsonName: String? {
    get {
      switch self {
      case .foreignLiteFoo: return "FOREIGN_LITE_FOO"
      case .foreignLiteBar: return "FOREIGN_LITE_BAR"
      case .foreignLiteBaz: return "FOREIGN_LITE_BAZ"
      }
    }
  }

}

enum ProtobufUnittest_V1EnumLite: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case v1First // = 1

  init() {
    self = .v1First
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1: self = .v1First
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "V1_FIRST": self = .v1First
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "V1_FIRST": self = .v1First
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .v1First: return 1
      }
    }
  }

  var _protobuf_jsonName: String? {
    get {
      switch self {
      case .v1First: return "V1_FIRST"
      }
    }
  }

}

enum ProtobufUnittest_V2EnumLite: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case v2First // = 1
  case v2Second // = 2

  init() {
    self = .v2First
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1: self = .v2First
    case 2: self = .v2Second
    default: return nil
    }
  }

  init?(jsonName: String) {
    switch jsonName {
    case "V2_FIRST": self = .v2First
    case "V2_SECOND": self = .v2Second
    default: return nil
    }
  }

  init?(protoName: String) {
    switch protoName {
    case "V2_FIRST": self = .v2First
    case "V2_SECOND": self = .v2Second
    default: return nil
    }
  }

  var rawValue: Int {
    get {
      switch self {
      case .v2First: return 1
      case .v2Second: return 2
      }
    }
  }

  var _protobuf_jsonName: String? {
    get {
      switch self {
      case .v2First: return "V2_FIRST"
      case .v2Second: return "V2_SECOND"
      }
    }
  }

}

///   Same as TestAllTypes but with the lite runtime.
struct ProtobufUnittest_TestAllTypesLite: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  static let protoMessageName: String = "TestAllTypesLite"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "optional_int32", json: "optionalInt32"),
    2: .unique(proto: "optional_int64", json: "optionalInt64"),
    3: .unique(proto: "optional_uint32", json: "optionalUint32"),
    4: .unique(proto: "optional_uint64", json: "optionalUint64"),
    5: .unique(proto: "optional_sint32", json: "optionalSint32"),
    6: .unique(proto: "optional_sint64", json: "optionalSint64"),
    7: .unique(proto: "optional_fixed32", json: "optionalFixed32"),
    8: .unique(proto: "optional_fixed64", json: "optionalFixed64"),
    9: .unique(proto: "optional_sfixed32", json: "optionalSfixed32"),
    10: .unique(proto: "optional_sfixed64", json: "optionalSfixed64"),
    11: .unique(proto: "optional_float", json: "optionalFloat"),
    12: .unique(proto: "optional_double", json: "optionalDouble"),
    13: .unique(proto: "optional_bool", json: "optionalBool"),
    14: .unique(proto: "optional_string", json: "optionalString"),
    15: .unique(proto: "optional_bytes", json: "optionalBytes"),
    16: .unique(proto: "OptionalGroup", json: "optionalgroup"),
    18: .unique(proto: "optional_nested_message", json: "optionalNestedMessage"),
    19: .unique(proto: "optional_foreign_message", json: "optionalForeignMessage"),
    20: .unique(proto: "optional_import_message", json: "optionalImportMessage"),
    21: .unique(proto: "optional_nested_enum", json: "optionalNestedEnum"),
    22: .unique(proto: "optional_foreign_enum", json: "optionalForeignEnum"),
    23: .unique(proto: "optional_import_enum", json: "optionalImportEnum"),
    24: .unique(proto: "optional_string_piece", json: "optionalStringPiece"),
    25: .unique(proto: "optional_cord", json: "optionalCord"),
    26: .unique(proto: "optional_public_import_message", json: "optionalPublicImportMessage"),
    27: .unique(proto: "optional_lazy_message", json: "optionalLazyMessage"),
    31: .unique(proto: "repeated_int32", json: "repeatedInt32"),
    32: .unique(proto: "repeated_int64", json: "repeatedInt64"),
    33: .unique(proto: "repeated_uint32", json: "repeatedUint32"),
    34: .unique(proto: "repeated_uint64", json: "repeatedUint64"),
    35: .unique(proto: "repeated_sint32", json: "repeatedSint32"),
    36: .unique(proto: "repeated_sint64", json: "repeatedSint64"),
    37: .unique(proto: "repeated_fixed32", json: "repeatedFixed32"),
    38: .unique(proto: "repeated_fixed64", json: "repeatedFixed64"),
    39: .unique(proto: "repeated_sfixed32", json: "repeatedSfixed32"),
    40: .unique(proto: "repeated_sfixed64", json: "repeatedSfixed64"),
    41: .unique(proto: "repeated_float", json: "repeatedFloat"),
    42: .unique(proto: "repeated_double", json: "repeatedDouble"),
    43: .unique(proto: "repeated_bool", json: "repeatedBool"),
    44: .unique(proto: "repeated_string", json: "repeatedString"),
    45: .unique(proto: "repeated_bytes", json: "repeatedBytes"),
    46: .unique(proto: "RepeatedGroup", json: "repeatedgroup"),
    48: .unique(proto: "repeated_nested_message", json: "repeatedNestedMessage"),
    49: .unique(proto: "repeated_foreign_message", json: "repeatedForeignMessage"),
    50: .unique(proto: "repeated_import_message", json: "repeatedImportMessage"),
    51: .unique(proto: "repeated_nested_enum", json: "repeatedNestedEnum"),
    52: .unique(proto: "repeated_foreign_enum", json: "repeatedForeignEnum"),
    53: .unique(proto: "repeated_import_enum", json: "repeatedImportEnum"),
    54: .unique(proto: "repeated_string_piece", json: "repeatedStringPiece"),
    55: .unique(proto: "repeated_cord", json: "repeatedCord"),
    57: .unique(proto: "repeated_lazy_message", json: "repeatedLazyMessage"),
    61: .unique(proto: "default_int32", json: "defaultInt32"),
    62: .unique(proto: "default_int64", json: "defaultInt64"),
    63: .unique(proto: "default_uint32", json: "defaultUint32"),
    64: .unique(proto: "default_uint64", json: "defaultUint64"),
    65: .unique(proto: "default_sint32", json: "defaultSint32"),
    66: .unique(proto: "default_sint64", json: "defaultSint64"),
    67: .unique(proto: "default_fixed32", json: "defaultFixed32"),
    68: .unique(proto: "default_fixed64", json: "defaultFixed64"),
    69: .unique(proto: "default_sfixed32", json: "defaultSfixed32"),
    70: .unique(proto: "default_sfixed64", json: "defaultSfixed64"),
    71: .unique(proto: "default_float", json: "defaultFloat"),
    72: .unique(proto: "default_double", json: "defaultDouble"),
    73: .unique(proto: "default_bool", json: "defaultBool"),
    74: .unique(proto: "default_string", json: "defaultString"),
    75: .unique(proto: "default_bytes", json: "defaultBytes"),
    81: .unique(proto: "default_nested_enum", json: "defaultNestedEnum"),
    82: .unique(proto: "default_foreign_enum", json: "defaultForeignEnum"),
    83: .unique(proto: "default_import_enum", json: "defaultImportEnum"),
    84: .unique(proto: "default_string_piece", json: "defaultStringPiece"),
    85: .unique(proto: "default_cord", json: "defaultCord"),
    111: .unique(proto: "oneof_uint32", json: "oneofUint32"),
    112: .unique(proto: "oneof_nested_message", json: "oneofNestedMessage"),
    113: .unique(proto: "oneof_string", json: "oneofString"),
    114: .unique(proto: "oneof_bytes", json: "oneofBytes"),
    115: .unique(proto: "oneof_lazy_nested_message", json: "oneofLazyNestedMessage"),
    116: .unique(proto: "deceptively_named_list", json: "deceptivelyNamedList"),
  ]

  private class _StorageClass {
    typealias ExtendedMessage = ProtobufUnittest_TestAllTypesLite
    var unknownFields = SwiftProtobuf.UnknownStorage()
    var _optionalInt32: Int32? = nil
    var _optionalInt64: Int64? = nil
    var _optionalUint32: UInt32? = nil
    var _optionalUint64: UInt64? = nil
    var _optionalSint32: Int32? = nil
    var _optionalSint64: Int64? = nil
    var _optionalFixed32: UInt32? = nil
    var _optionalFixed64: UInt64? = nil
    var _optionalSfixed32: Int32? = nil
    var _optionalSfixed64: Int64? = nil
    var _optionalFloat: Float? = nil
    var _optionalDouble: Double? = nil
    var _optionalBool: Bool? = nil
    var _optionalString: String? = nil
    var _optionalBytes: Data? = nil
    var _optionalGroup: ProtobufUnittest_TestAllTypesLite.OptionalGroup? = nil
    var _optionalNestedMessage: ProtobufUnittest_TestAllTypesLite.NestedMessage? = nil
    var _optionalForeignMessage: ProtobufUnittest_ForeignMessageLite? = nil
    var _optionalImportMessage: ProtobufUnittestImport_ImportMessageLite? = nil
    var _optionalNestedEnum: ProtobufUnittest_TestAllTypesLite.NestedEnum? = nil
    var _optionalForeignEnum: ProtobufUnittest_ForeignEnumLite? = nil
    var _optionalImportEnum: ProtobufUnittestImport_ImportEnumLite? = nil
    var _optionalStringPiece: String? = nil
    var _optionalCord: String? = nil
    var _optionalPublicImportMessage: ProtobufUnittestImport_PublicImportMessageLite? = nil
    var _optionalLazyMessage: ProtobufUnittest_TestAllTypesLite.NestedMessage? = nil
    var _repeatedInt32: [Int32] = []
    var _repeatedInt64: [Int64] = []
    var _repeatedUint32: [UInt32] = []
    var _repeatedUint64: [UInt64] = []
    var _repeatedSint32: [Int32] = []
    var _repeatedSint64: [Int64] = []
    var _repeatedFixed32: [UInt32] = []
    var _repeatedFixed64: [UInt64] = []
    var _repeatedSfixed32: [Int32] = []
    var _repeatedSfixed64: [Int64] = []
    var _repeatedFloat: [Float] = []
    var _repeatedDouble: [Double] = []
    var _repeatedBool: [Bool] = []
    var _repeatedString: [String] = []
    var _repeatedBytes: [Data] = []
    var _repeatedGroup: [ProtobufUnittest_TestAllTypesLite.RepeatedGroup] = []
    var _repeatedNestedMessage: [ProtobufUnittest_TestAllTypesLite.NestedMessage] = []
    var _repeatedForeignMessage: [ProtobufUnittest_ForeignMessageLite] = []
    var _repeatedImportMessage: [ProtobufUnittestImport_ImportMessageLite] = []
    var _repeatedNestedEnum: [ProtobufUnittest_TestAllTypesLite.NestedEnum] = []
    var _repeatedForeignEnum: [ProtobufUnittest_ForeignEnumLite] = []
    var _repeatedImportEnum: [ProtobufUnittestImport_ImportEnumLite] = []
    var _repeatedStringPiece: [String] = []
    var _repeatedCord: [String] = []
    var _repeatedLazyMessage: [ProtobufUnittest_TestAllTypesLite.NestedMessage] = []
    var _defaultInt32: Int32? = nil
    var _defaultInt64: Int64? = nil
    var _defaultUint32: UInt32? = nil
    var _defaultUint64: UInt64? = nil
    var _defaultSint32: Int32? = nil
    var _defaultSint64: Int64? = nil
    var _defaultFixed32: UInt32? = nil
    var _defaultFixed64: UInt64? = nil
    var _defaultSfixed32: Int32? = nil
    var _defaultSfixed64: Int64? = nil
    var _defaultFloat: Float? = nil
    var _defaultDouble: Double? = nil
    var _defaultBool: Bool? = nil
    var _defaultString: String? = nil
    var _defaultBytes: Data? = nil
    var _defaultNestedEnum: ProtobufUnittest_TestAllTypesLite.NestedEnum? = nil
    var _defaultForeignEnum: ProtobufUnittest_ForeignEnumLite? = nil
    var _defaultImportEnum: ProtobufUnittestImport_ImportEnumLite? = nil
    var _defaultStringPiece: String? = nil
    var _defaultCord: String? = nil
    var _oneofField: ProtobufUnittest_TestAllTypesLite.OneOf_OneofField?
    var _deceptivelyNamedList: Int32? = nil

    func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }
    }

    func decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt32Field(value: &_optionalInt32)
      case 2: try decoder.decodeSingularInt64Field(value: &_optionalInt64)
      case 3: try decoder.decodeSingularUInt32Field(value: &_optionalUint32)
      case 4: try decoder.decodeSingularUInt64Field(value: &_optionalUint64)
      case 5: try decoder.decodeSingularSInt32Field(value: &_optionalSint32)
      case 6: try decoder.decodeSingularSInt64Field(value: &_optionalSint64)
      case 7: try decoder.decodeSingularFixed32Field(value: &_optionalFixed32)
      case 8: try decoder.decodeSingularFixed64Field(value: &_optionalFixed64)
      case 9: try decoder.decodeSingularSFixed32Field(value: &_optionalSfixed32)
      case 10: try decoder.decodeSingularSFixed64Field(value: &_optionalSfixed64)
      case 11: try decoder.decodeSingularFloatField(value: &_optionalFloat)
      case 12: try decoder.decodeSingularDoubleField(value: &_optionalDouble)
      case 13: try decoder.decodeSingularBoolField(value: &_optionalBool)
      case 14: try decoder.decodeSingularStringField(value: &_optionalString)
      case 15: try decoder.decodeSingularBytesField(value: &_optionalBytes)
      case 16: try decoder.decodeSingularGroupField(value: &_optionalGroup)
      case 18: try decoder.decodeSingularMessageField(value: &_optionalNestedMessage)
      case 19: try decoder.decodeSingularMessageField(value: &_optionalForeignMessage)
      case 20: try decoder.decodeSingularMessageField(value: &_optionalImportMessage)
      case 21: try decoder.decodeSingularEnumField(value: &_optionalNestedEnum)
      case 22: try decoder.decodeSingularEnumField(value: &_optionalForeignEnum)
      case 23: try decoder.decodeSingularEnumField(value: &_optionalImportEnum)
      case 24: try decoder.decodeSingularStringField(value: &_optionalStringPiece)
      case 25: try decoder.decodeSingularStringField(value: &_optionalCord)
      case 26: try decoder.decodeSingularMessageField(value: &_optionalPublicImportMessage)
      case 27: try decoder.decodeSingularMessageField(value: &_optionalLazyMessage)
      case 31: try decoder.decodeRepeatedInt32Field(value: &_repeatedInt32)
      case 32: try decoder.decodeRepeatedInt64Field(value: &_repeatedInt64)
      case 33: try decoder.decodeRepeatedUInt32Field(value: &_repeatedUint32)
      case 34: try decoder.decodeRepeatedUInt64Field(value: &_repeatedUint64)
      case 35: try decoder.decodeRepeatedSInt32Field(value: &_repeatedSint32)
      case 36: try decoder.decodeRepeatedSInt64Field(value: &_repeatedSint64)
      case 37: try decoder.decodeRepeatedFixed32Field(value: &_repeatedFixed32)
      case 38: try decoder.decodeRepeatedFixed64Field(value: &_repeatedFixed64)
      case 39: try decoder.decodeRepeatedSFixed32Field(value: &_repeatedSfixed32)
      case 40: try decoder.decodeRepeatedSFixed64Field(value: &_repeatedSfixed64)
      case 41: try decoder.decodeRepeatedFloatField(value: &_repeatedFloat)
      case 42: try decoder.decodeRepeatedDoubleField(value: &_repeatedDouble)
      case 43: try decoder.decodeRepeatedBoolField(value: &_repeatedBool)
      case 44: try decoder.decodeRepeatedStringField(value: &_repeatedString)
      case 45: try decoder.decodeRepeatedBytesField(value: &_repeatedBytes)
      case 46: try decoder.decodeRepeatedGroupField(value: &_repeatedGroup)
      case 48: try decoder.decodeRepeatedMessageField(value: &_repeatedNestedMessage)
      case 49: try decoder.decodeRepeatedMessageField(value: &_repeatedForeignMessage)
      case 50: try decoder.decodeRepeatedMessageField(value: &_repeatedImportMessage)
      case 51: try decoder.decodeRepeatedEnumField(value: &_repeatedNestedEnum)
      case 52: try decoder.decodeRepeatedEnumField(value: &_repeatedForeignEnum)
      case 53: try decoder.decodeRepeatedEnumField(value: &_repeatedImportEnum)
      case 54: try decoder.decodeRepeatedStringField(value: &_repeatedStringPiece)
      case 55: try decoder.decodeRepeatedStringField(value: &_repeatedCord)
      case 57: try decoder.decodeRepeatedMessageField(value: &_repeatedLazyMessage)
      case 61: try decoder.decodeSingularInt32Field(value: &_defaultInt32)
      case 62: try decoder.decodeSingularInt64Field(value: &_defaultInt64)
      case 63: try decoder.decodeSingularUInt32Field(value: &_defaultUint32)
      case 64: try decoder.decodeSingularUInt64Field(value: &_defaultUint64)
      case 65: try decoder.decodeSingularSInt32Field(value: &_defaultSint32)
      case 66: try decoder.decodeSingularSInt64Field(value: &_defaultSint64)
      case 67: try decoder.decodeSingularFixed32Field(value: &_defaultFixed32)
      case 68: try decoder.decodeSingularFixed64Field(value: &_defaultFixed64)
      case 69: try decoder.decodeSingularSFixed32Field(value: &_defaultSfixed32)
      case 70: try decoder.decodeSingularSFixed64Field(value: &_defaultSfixed64)
      case 71: try decoder.decodeSingularFloatField(value: &_defaultFloat)
      case 72: try decoder.decodeSingularDoubleField(value: &_defaultDouble)
      case 73: try decoder.decodeSingularBoolField(value: &_defaultBool)
      case 74: try decoder.decodeSingularStringField(value: &_defaultString)
      case 75: try decoder.decodeSingularBytesField(value: &_defaultBytes)
      case 81: try decoder.decodeSingularEnumField(value: &_defaultNestedEnum)
      case 82: try decoder.decodeSingularEnumField(value: &_defaultForeignEnum)
      case 83: try decoder.decodeSingularEnumField(value: &_defaultImportEnum)
      case 84: try decoder.decodeSingularStringField(value: &_defaultStringPiece)
      case 85: try decoder.decodeSingularStringField(value: &_defaultCord)
      case 111, 112, 113, 114, 115:
        if _oneofField != nil {
          try decoder.handleConflictingOneOf()
        }
        _oneofField = try ProtobufUnittest_TestAllTypesLite.OneOf_OneofField(byDecodingFrom: &decoder, fieldNumber: fieldNumber)
      case 116: try decoder.decodeSingularInt32Field(value: &_deceptivelyNamedList)
      default: break
      }
    }

    func traverse(visitor: SwiftProtobuf.Visitor) throws {
      if let v = _optionalInt32 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: v, fieldNumber: 1)
      }
      if let v = _optionalInt64 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt64.self, value: v, fieldNumber: 2)
      }
      if let v = _optionalUint32 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: v, fieldNumber: 3)
      }
      if let v = _optionalUint64 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt64.self, value: v, fieldNumber: 4)
      }
      if let v = _optionalSint32 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufSInt32.self, value: v, fieldNumber: 5)
      }
      if let v = _optionalSint64 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufSInt64.self, value: v, fieldNumber: 6)
      }
      if let v = _optionalFixed32 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufFixed32.self, value: v, fieldNumber: 7)
      }
      if let v = _optionalFixed64 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufFixed64.self, value: v, fieldNumber: 8)
      }
      if let v = _optionalSfixed32 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufSFixed32.self, value: v, fieldNumber: 9)
      }
      if let v = _optionalSfixed64 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufSFixed64.self, value: v, fieldNumber: 10)
      }
      if let v = _optionalFloat {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufFloat.self, value: v, fieldNumber: 11)
      }
      if let v = _optionalDouble {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufDouble.self, value: v, fieldNumber: 12)
      }
      if let v = _optionalBool {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufBool.self, value: v, fieldNumber: 13)
      }
      if let v = _optionalString {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: v, fieldNumber: 14)
      }
      if let v = _optionalBytes {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufBytes.self, value: v, fieldNumber: 15)
      }
      if let v = _optionalGroup {
        try visitor.visitSingularGroupField(value: v, fieldNumber: 16)
      }
      if let v = _optionalNestedMessage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 18)
      }
      if let v = _optionalForeignMessage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 19)
      }
      if let v = _optionalImportMessage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 20)
      }
      if let v = _optionalNestedEnum {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 21)
      }
      if let v = _optionalForeignEnum {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 22)
      }
      if let v = _optionalImportEnum {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 23)
      }
      if let v = _optionalStringPiece {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: v, fieldNumber: 24)
      }
      if let v = _optionalCord {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: v, fieldNumber: 25)
      }
      if let v = _optionalPublicImportMessage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 26)
      }
      if let v = _optionalLazyMessage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 27)
      }
      if !_repeatedInt32.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: _repeatedInt32, fieldNumber: 31)
      }
      if !_repeatedInt64.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufInt64.self, value: _repeatedInt64, fieldNumber: 32)
      }
      if !_repeatedUint32.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: _repeatedUint32, fieldNumber: 33)
      }
      if !_repeatedUint64.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufUInt64.self, value: _repeatedUint64, fieldNumber: 34)
      }
      if !_repeatedSint32.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufSInt32.self, value: _repeatedSint32, fieldNumber: 35)
      }
      if !_repeatedSint64.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufSInt64.self, value: _repeatedSint64, fieldNumber: 36)
      }
      if !_repeatedFixed32.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufFixed32.self, value: _repeatedFixed32, fieldNumber: 37)
      }
      if !_repeatedFixed64.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufFixed64.self, value: _repeatedFixed64, fieldNumber: 38)
      }
      if !_repeatedSfixed32.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufSFixed32.self, value: _repeatedSfixed32, fieldNumber: 39)
      }
      if !_repeatedSfixed64.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufSFixed64.self, value: _repeatedSfixed64, fieldNumber: 40)
      }
      if !_repeatedFloat.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufFloat.self, value: _repeatedFloat, fieldNumber: 41)
      }
      if !_repeatedDouble.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufDouble.self, value: _repeatedDouble, fieldNumber: 42)
      }
      if !_repeatedBool.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufBool.self, value: _repeatedBool, fieldNumber: 43)
      }
      if !_repeatedString.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufString.self, value: _repeatedString, fieldNumber: 44)
      }
      if !_repeatedBytes.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufBytes.self, value: _repeatedBytes, fieldNumber: 45)
      }
      if !_repeatedGroup.isEmpty {
        try visitor.visitRepeatedGroupField(value: _repeatedGroup, fieldNumber: 46)
      }
      if !_repeatedNestedMessage.isEmpty {
        try visitor.visitRepeatedMessageField(value: _repeatedNestedMessage, fieldNumber: 48)
      }
      if !_repeatedForeignMessage.isEmpty {
        try visitor.visitRepeatedMessageField(value: _repeatedForeignMessage, fieldNumber: 49)
      }
      if !_repeatedImportMessage.isEmpty {
        try visitor.visitRepeatedMessageField(value: _repeatedImportMessage, fieldNumber: 50)
      }
      if !_repeatedNestedEnum.isEmpty {
        try visitor.visitRepeatedEnumField(value: _repeatedNestedEnum, fieldNumber: 51)
      }
      if !_repeatedForeignEnum.isEmpty {
        try visitor.visitRepeatedEnumField(value: _repeatedForeignEnum, fieldNumber: 52)
      }
      if !_repeatedImportEnum.isEmpty {
        try visitor.visitRepeatedEnumField(value: _repeatedImportEnum, fieldNumber: 53)
      }
      if !_repeatedStringPiece.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufString.self, value: _repeatedStringPiece, fieldNumber: 54)
      }
      if !_repeatedCord.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufString.self, value: _repeatedCord, fieldNumber: 55)
      }
      if !_repeatedLazyMessage.isEmpty {
        try visitor.visitRepeatedMessageField(value: _repeatedLazyMessage, fieldNumber: 57)
      }
      if let v = _defaultInt32 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: v, fieldNumber: 61)
      }
      if let v = _defaultInt64 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt64.self, value: v, fieldNumber: 62)
      }
      if let v = _defaultUint32 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: v, fieldNumber: 63)
      }
      if let v = _defaultUint64 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt64.self, value: v, fieldNumber: 64)
      }
      if let v = _defaultSint32 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufSInt32.self, value: v, fieldNumber: 65)
      }
      if let v = _defaultSint64 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufSInt64.self, value: v, fieldNumber: 66)
      }
      if let v = _defaultFixed32 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufFixed32.self, value: v, fieldNumber: 67)
      }
      if let v = _defaultFixed64 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufFixed64.self, value: v, fieldNumber: 68)
      }
      if let v = _defaultSfixed32 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufSFixed32.self, value: v, fieldNumber: 69)
      }
      if let v = _defaultSfixed64 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufSFixed64.self, value: v, fieldNumber: 70)
      }
      if let v = _defaultFloat {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufFloat.self, value: v, fieldNumber: 71)
      }
      if let v = _defaultDouble {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufDouble.self, value: v, fieldNumber: 72)
      }
      if let v = _defaultBool {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufBool.self, value: v, fieldNumber: 73)
      }
      if let v = _defaultString {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: v, fieldNumber: 74)
      }
      if let v = _defaultBytes {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufBytes.self, value: v, fieldNumber: 75)
      }
      if let v = _defaultNestedEnum {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 81)
      }
      if let v = _defaultForeignEnum {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 82)
      }
      if let v = _defaultImportEnum {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 83)
      }
      if let v = _defaultStringPiece {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: v, fieldNumber: 84)
      }
      if let v = _defaultCord {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: v, fieldNumber: 85)
      }
      try _oneofField?.traverse(visitor: visitor, start: 111, end: 116)
      if let v = _deceptivelyNamedList {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: v, fieldNumber: 116)
      }
      unknownFields.traverse(visitor: visitor)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _optionalInt32 != other._optionalInt32 {return false}
      if _optionalInt64 != other._optionalInt64 {return false}
      if _optionalUint32 != other._optionalUint32 {return false}
      if _optionalUint64 != other._optionalUint64 {return false}
      if _optionalSint32 != other._optionalSint32 {return false}
      if _optionalSint64 != other._optionalSint64 {return false}
      if _optionalFixed32 != other._optionalFixed32 {return false}
      if _optionalFixed64 != other._optionalFixed64 {return false}
      if _optionalSfixed32 != other._optionalSfixed32 {return false}
      if _optionalSfixed64 != other._optionalSfixed64 {return false}
      if _optionalFloat != other._optionalFloat {return false}
      if _optionalDouble != other._optionalDouble {return false}
      if _optionalBool != other._optionalBool {return false}
      if _optionalString != other._optionalString {return false}
      if _optionalBytes != other._optionalBytes {return false}
      if _optionalGroup != other._optionalGroup {return false}
      if _optionalNestedMessage != other._optionalNestedMessage {return false}
      if _optionalForeignMessage != other._optionalForeignMessage {return false}
      if _optionalImportMessage != other._optionalImportMessage {return false}
      if _optionalNestedEnum != other._optionalNestedEnum {return false}
      if _optionalForeignEnum != other._optionalForeignEnum {return false}
      if _optionalImportEnum != other._optionalImportEnum {return false}
      if _optionalStringPiece != other._optionalStringPiece {return false}
      if _optionalCord != other._optionalCord {return false}
      if _optionalPublicImportMessage != other._optionalPublicImportMessage {return false}
      if _optionalLazyMessage != other._optionalLazyMessage {return false}
      if _repeatedInt32 != other._repeatedInt32 {return false}
      if _repeatedInt64 != other._repeatedInt64 {return false}
      if _repeatedUint32 != other._repeatedUint32 {return false}
      if _repeatedUint64 != other._repeatedUint64 {return false}
      if _repeatedSint32 != other._repeatedSint32 {return false}
      if _repeatedSint64 != other._repeatedSint64 {return false}
      if _repeatedFixed32 != other._repeatedFixed32 {return false}
      if _repeatedFixed64 != other._repeatedFixed64 {return false}
      if _repeatedSfixed32 != other._repeatedSfixed32 {return false}
      if _repeatedSfixed64 != other._repeatedSfixed64 {return false}
      if _repeatedFloat != other._repeatedFloat {return false}
      if _repeatedDouble != other._repeatedDouble {return false}
      if _repeatedBool != other._repeatedBool {return false}
      if _repeatedString != other._repeatedString {return false}
      if _repeatedBytes != other._repeatedBytes {return false}
      if _repeatedGroup != other._repeatedGroup {return false}
      if _repeatedNestedMessage != other._repeatedNestedMessage {return false}
      if _repeatedForeignMessage != other._repeatedForeignMessage {return false}
      if _repeatedImportMessage != other._repeatedImportMessage {return false}
      if _repeatedNestedEnum != other._repeatedNestedEnum {return false}
      if _repeatedForeignEnum != other._repeatedForeignEnum {return false}
      if _repeatedImportEnum != other._repeatedImportEnum {return false}
      if _repeatedStringPiece != other._repeatedStringPiece {return false}
      if _repeatedCord != other._repeatedCord {return false}
      if _repeatedLazyMessage != other._repeatedLazyMessage {return false}
      if _defaultInt32 != other._defaultInt32 {return false}
      if _defaultInt64 != other._defaultInt64 {return false}
      if _defaultUint32 != other._defaultUint32 {return false}
      if _defaultUint64 != other._defaultUint64 {return false}
      if _defaultSint32 != other._defaultSint32 {return false}
      if _defaultSint64 != other._defaultSint64 {return false}
      if _defaultFixed32 != other._defaultFixed32 {return false}
      if _defaultFixed64 != other._defaultFixed64 {return false}
      if _defaultSfixed32 != other._defaultSfixed32 {return false}
      if _defaultSfixed64 != other._defaultSfixed64 {return false}
      if _defaultFloat != other._defaultFloat {return false}
      if _defaultDouble != other._defaultDouble {return false}
      if _defaultBool != other._defaultBool {return false}
      if _defaultString != other._defaultString {return false}
      if _defaultBytes != other._defaultBytes {return false}
      if _defaultNestedEnum != other._defaultNestedEnum {return false}
      if _defaultForeignEnum != other._defaultForeignEnum {return false}
      if _defaultImportEnum != other._defaultImportEnum {return false}
      if _defaultStringPiece != other._defaultStringPiece {return false}
      if _defaultCord != other._defaultCord {return false}
      if _oneofField != other._oneofField {return false}
      if _deceptivelyNamedList != other._deceptivelyNamedList {return false}
      if unknownFields != other.unknownFields {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone.unknownFields = unknownFields
      clone._optionalInt32 = _optionalInt32
      clone._optionalInt64 = _optionalInt64
      clone._optionalUint32 = _optionalUint32
      clone._optionalUint64 = _optionalUint64
      clone._optionalSint32 = _optionalSint32
      clone._optionalSint64 = _optionalSint64
      clone._optionalFixed32 = _optionalFixed32
      clone._optionalFixed64 = _optionalFixed64
      clone._optionalSfixed32 = _optionalSfixed32
      clone._optionalSfixed64 = _optionalSfixed64
      clone._optionalFloat = _optionalFloat
      clone._optionalDouble = _optionalDouble
      clone._optionalBool = _optionalBool
      clone._optionalString = _optionalString
      clone._optionalBytes = _optionalBytes
      clone._optionalGroup = _optionalGroup
      clone._optionalNestedMessage = _optionalNestedMessage
      clone._optionalForeignMessage = _optionalForeignMessage
      clone._optionalImportMessage = _optionalImportMessage
      clone._optionalNestedEnum = _optionalNestedEnum
      clone._optionalForeignEnum = _optionalForeignEnum
      clone._optionalImportEnum = _optionalImportEnum
      clone._optionalStringPiece = _optionalStringPiece
      clone._optionalCord = _optionalCord
      clone._optionalPublicImportMessage = _optionalPublicImportMessage
      clone._optionalLazyMessage = _optionalLazyMessage
      clone._repeatedInt32 = _repeatedInt32
      clone._repeatedInt64 = _repeatedInt64
      clone._repeatedUint32 = _repeatedUint32
      clone._repeatedUint64 = _repeatedUint64
      clone._repeatedSint32 = _repeatedSint32
      clone._repeatedSint64 = _repeatedSint64
      clone._repeatedFixed32 = _repeatedFixed32
      clone._repeatedFixed64 = _repeatedFixed64
      clone._repeatedSfixed32 = _repeatedSfixed32
      clone._repeatedSfixed64 = _repeatedSfixed64
      clone._repeatedFloat = _repeatedFloat
      clone._repeatedDouble = _repeatedDouble
      clone._repeatedBool = _repeatedBool
      clone._repeatedString = _repeatedString
      clone._repeatedBytes = _repeatedBytes
      clone._repeatedGroup = _repeatedGroup
      clone._repeatedNestedMessage = _repeatedNestedMessage
      clone._repeatedForeignMessage = _repeatedForeignMessage
      clone._repeatedImportMessage = _repeatedImportMessage
      clone._repeatedNestedEnum = _repeatedNestedEnum
      clone._repeatedForeignEnum = _repeatedForeignEnum
      clone._repeatedImportEnum = _repeatedImportEnum
      clone._repeatedStringPiece = _repeatedStringPiece
      clone._repeatedCord = _repeatedCord
      clone._repeatedLazyMessage = _repeatedLazyMessage
      clone._defaultInt32 = _defaultInt32
      clone._defaultInt64 = _defaultInt64
      clone._defaultUint32 = _defaultUint32
      clone._defaultUint64 = _defaultUint64
      clone._defaultSint32 = _defaultSint32
      clone._defaultSint64 = _defaultSint64
      clone._defaultFixed32 = _defaultFixed32
      clone._defaultFixed64 = _defaultFixed64
      clone._defaultSfixed32 = _defaultSfixed32
      clone._defaultSfixed64 = _defaultSfixed64
      clone._defaultFloat = _defaultFloat
      clone._defaultDouble = _defaultDouble
      clone._defaultBool = _defaultBool
      clone._defaultString = _defaultString
      clone._defaultBytes = _defaultBytes
      clone._defaultNestedEnum = _defaultNestedEnum
      clone._defaultForeignEnum = _defaultForeignEnum
      clone._defaultImportEnum = _defaultImportEnum
      clone._defaultStringPiece = _defaultStringPiece
      clone._defaultCord = _defaultCord
      clone._oneofField = _oneofField
      clone._deceptivelyNamedList = _deceptivelyNamedList
      return clone
    }
  }

  private var _storage = _StorageClass()

  var unknownFields: SwiftProtobuf.UnknownStorage {
    get {return _storage.unknownFields}
    set {_storage.unknownFields = newValue}
  }

  enum OneOf_OneofField: Equatable {
    case oneofUint32(UInt32)
    case oneofNestedMessage(ProtobufUnittest_TestAllTypesLite.NestedMessage)
    case oneofString(String)
    case oneofBytes(Data)
    case oneofLazyNestedMessage(ProtobufUnittest_TestAllTypesLite.NestedMessage)

    static func ==(lhs: ProtobufUnittest_TestAllTypesLite.OneOf_OneofField, rhs: ProtobufUnittest_TestAllTypesLite.OneOf_OneofField) -> Bool {
      switch (lhs, rhs) {
      case (.oneofUint32(let l), .oneofUint32(let r)): return l == r
      case (.oneofNestedMessage(let l), .oneofNestedMessage(let r)): return l == r
      case (.oneofString(let l), .oneofString(let r)): return l == r
      case (.oneofBytes(let l), .oneofBytes(let r)): return l == r
      case (.oneofLazyNestedMessage(let l), .oneofLazyNestedMessage(let r)): return l == r
      default: return false
      }
    }

    fileprivate init?<T: SwiftProtobuf.Decoder>(byDecodingFrom decoder: inout T, fieldNumber: Int) throws {
      switch fieldNumber {
      case 111:
        var value: UInt32?
        try decoder.decodeSingularUInt32Field(value: &value)
        if let value = value {
          self = .oneofUint32(value)
          return
        }
      case 112:
        var value: ProtobufUnittest_TestAllTypesLite.NestedMessage?
        try decoder.decodeSingularMessageField(value: &value)
        if let value = value {
          self = .oneofNestedMessage(value)
          return
        }
      case 113:
        var value: String?
        try decoder.decodeSingularStringField(value: &value)
        if let value = value {
          self = .oneofString(value)
          return
        }
      case 114:
        var value: Data?
        try decoder.decodeSingularBytesField(value: &value)
        if let value = value {
          self = .oneofBytes(value)
          return
        }
      case 115:
        var value: ProtobufUnittest_TestAllTypesLite.NestedMessage?
        try decoder.decodeSingularMessageField(value: &value)
        if let value = value {
          self = .oneofLazyNestedMessage(value)
          return
        }
      default:
        break
      }
      return nil
    }

    fileprivate func traverse(visitor: SwiftProtobuf.Visitor, start: Int, end: Int) throws {
      switch self {
      case .oneofUint32(let v):
        if start <= 111 && 111 < end {
          try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: v, fieldNumber: 111)
        }
      case .oneofNestedMessage(let v):
        if start <= 112 && 112 < end {
          try visitor.visitSingularMessageField(value: v, fieldNumber: 112)
        }
      case .oneofString(let v):
        if start <= 113 && 113 < end {
          try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: v, fieldNumber: 113)
        }
      case .oneofBytes(let v):
        if start <= 114 && 114 < end {
          try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufBytes.self, value: v, fieldNumber: 114)
        }
      case .oneofLazyNestedMessage(let v):
        if start <= 115 && 115 < end {
          try visitor.visitSingularMessageField(value: v, fieldNumber: 115)
        }
      }
    }
  }

  enum NestedEnum: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case foo // = 1
    case bar // = 2
    case baz // = 3

    init() {
      self = .foo
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .foo
      case 2: self = .bar
      case 3: self = .baz
      default: return nil
      }
    }

    init?(jsonName: String) {
      switch jsonName {
      case "FOO": self = .foo
      case "BAR": self = .bar
      case "BAZ": self = .baz
      default: return nil
      }
    }

    init?(protoName: String) {
      switch protoName {
      case "FOO": self = .foo
      case "BAR": self = .bar
      case "BAZ": self = .baz
      default: return nil
      }
    }

    var rawValue: Int {
      get {
        switch self {
        case .foo: return 1
        case .bar: return 2
        case .baz: return 3
        }
      }
    }

    var _protobuf_jsonName: String? {
      get {
        switch self {
        case .foo: return "FOO"
        case .bar: return "BAR"
        case .baz: return "BAZ"
        }
      }
    }

  }

  struct NestedMessage: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
    static let protoMessageName: String = "NestedMessage"
    static let protoPackageName: String = "protobuf_unittest"
    static let _protobuf_fieldNames: FieldNameMap = [
      1: .same(proto: "bb"),
      2: .same(proto: "cc"),
    ]

    var unknownFields = SwiftProtobuf.UnknownStorage()

    private var _bb: Int32? = nil
    var bb: Int32 {
      get {return _bb ?? 0}
      set {_bb = newValue}
    }
    var hasBb: Bool {
      return _bb != nil
    }
    mutating func clearBb() {
      return _bb = nil
    }

    private var _cc: Int64? = nil
    var cc: Int64 {
      get {return _cc ?? 0}
      set {_cc = newValue}
    }
    var hasCc: Bool {
      return _cc != nil
    }
    mutating func clearCc() {
      return _cc = nil
    }

    mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }
    }

    mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt32Field(value: &_bb)
      case 2: try decoder.decodeSingularInt64Field(value: &_cc)
      default: break
      }
    }

    func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
      if let v = _bb {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: v, fieldNumber: 1)
      }
      if let v = _cc {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt64.self, value: v, fieldNumber: 2)
      }
      unknownFields.traverse(visitor: visitor)
    }

    func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestAllTypesLite.NestedMessage) -> Bool {
      if _bb != other._bb {return false}
      if _cc != other._cc {return false}
      if unknownFields != other.unknownFields {return false}
      return true
    }
  }

  struct OptionalGroup: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
    static let protoMessageName: String = "OptionalGroup"
    static let protoPackageName: String = "protobuf_unittest"
    static let _protobuf_fieldNames: FieldNameMap = [
      17: .same(proto: "a"),
    ]

    var unknownFields = SwiftProtobuf.UnknownStorage()

    private var _a: Int32? = nil
    var a: Int32 {
      get {return _a ?? 0}
      set {_a = newValue}
    }
    var hasA: Bool {
      return _a != nil
    }
    mutating func clearA() {
      return _a = nil
    }

    mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }
    }

    mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
      switch fieldNumber {
      case 17: try decoder.decodeSingularInt32Field(value: &_a)
      default: break
      }
    }

    func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
      if let v = _a {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: v, fieldNumber: 17)
      }
      unknownFields.traverse(visitor: visitor)
    }

    func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestAllTypesLite.OptionalGroup) -> Bool {
      if _a != other._a {return false}
      if unknownFields != other.unknownFields {return false}
      return true
    }
  }

  struct RepeatedGroup: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
    static let protoMessageName: String = "RepeatedGroup"
    static let protoPackageName: String = "protobuf_unittest"
    static let _protobuf_fieldNames: FieldNameMap = [
      47: .same(proto: "a"),
    ]

    var unknownFields = SwiftProtobuf.UnknownStorage()

    private var _a: Int32? = nil
    var a: Int32 {
      get {return _a ?? 0}
      set {_a = newValue}
    }
    var hasA: Bool {
      return _a != nil
    }
    mutating func clearA() {
      return _a = nil
    }

    mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }
    }

    mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
      switch fieldNumber {
      case 47: try decoder.decodeSingularInt32Field(value: &_a)
      default: break
      }
    }

    func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
      if let v = _a {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: v, fieldNumber: 47)
      }
      unknownFields.traverse(visitor: visitor)
    }

    func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestAllTypesLite.RepeatedGroup) -> Bool {
      if _a != other._a {return false}
      if unknownFields != other.unknownFields {return false}
      return true
    }
  }

  ///   Singular
  var optionalInt32: Int32 {
    get {return _storage._optionalInt32 ?? 0}
    set {_uniqueStorage()._optionalInt32 = newValue}
  }
  var hasOptionalInt32: Bool {
    return _storage._optionalInt32 != nil
  }
  mutating func clearOptionalInt32() {
    return _storage._optionalInt32 = nil
  }

  var optionalInt64: Int64 {
    get {return _storage._optionalInt64 ?? 0}
    set {_uniqueStorage()._optionalInt64 = newValue}
  }
  var hasOptionalInt64: Bool {
    return _storage._optionalInt64 != nil
  }
  mutating func clearOptionalInt64() {
    return _storage._optionalInt64 = nil
  }

  var optionalUint32: UInt32 {
    get {return _storage._optionalUint32 ?? 0}
    set {_uniqueStorage()._optionalUint32 = newValue}
  }
  var hasOptionalUint32: Bool {
    return _storage._optionalUint32 != nil
  }
  mutating func clearOptionalUint32() {
    return _storage._optionalUint32 = nil
  }

  var optionalUint64: UInt64 {
    get {return _storage._optionalUint64 ?? 0}
    set {_uniqueStorage()._optionalUint64 = newValue}
  }
  var hasOptionalUint64: Bool {
    return _storage._optionalUint64 != nil
  }
  mutating func clearOptionalUint64() {
    return _storage._optionalUint64 = nil
  }

  var optionalSint32: Int32 {
    get {return _storage._optionalSint32 ?? 0}
    set {_uniqueStorage()._optionalSint32 = newValue}
  }
  var hasOptionalSint32: Bool {
    return _storage._optionalSint32 != nil
  }
  mutating func clearOptionalSint32() {
    return _storage._optionalSint32 = nil
  }

  var optionalSint64: Int64 {
    get {return _storage._optionalSint64 ?? 0}
    set {_uniqueStorage()._optionalSint64 = newValue}
  }
  var hasOptionalSint64: Bool {
    return _storage._optionalSint64 != nil
  }
  mutating func clearOptionalSint64() {
    return _storage._optionalSint64 = nil
  }

  var optionalFixed32: UInt32 {
    get {return _storage._optionalFixed32 ?? 0}
    set {_uniqueStorage()._optionalFixed32 = newValue}
  }
  var hasOptionalFixed32: Bool {
    return _storage._optionalFixed32 != nil
  }
  mutating func clearOptionalFixed32() {
    return _storage._optionalFixed32 = nil
  }

  var optionalFixed64: UInt64 {
    get {return _storage._optionalFixed64 ?? 0}
    set {_uniqueStorage()._optionalFixed64 = newValue}
  }
  var hasOptionalFixed64: Bool {
    return _storage._optionalFixed64 != nil
  }
  mutating func clearOptionalFixed64() {
    return _storage._optionalFixed64 = nil
  }

  var optionalSfixed32: Int32 {
    get {return _storage._optionalSfixed32 ?? 0}
    set {_uniqueStorage()._optionalSfixed32 = newValue}
  }
  var hasOptionalSfixed32: Bool {
    return _storage._optionalSfixed32 != nil
  }
  mutating func clearOptionalSfixed32() {
    return _storage._optionalSfixed32 = nil
  }

  var optionalSfixed64: Int64 {
    get {return _storage._optionalSfixed64 ?? 0}
    set {_uniqueStorage()._optionalSfixed64 = newValue}
  }
  var hasOptionalSfixed64: Bool {
    return _storage._optionalSfixed64 != nil
  }
  mutating func clearOptionalSfixed64() {
    return _storage._optionalSfixed64 = nil
  }

  var optionalFloat: Float {
    get {return _storage._optionalFloat ?? 0}
    set {_uniqueStorage()._optionalFloat = newValue}
  }
  var hasOptionalFloat: Bool {
    return _storage._optionalFloat != nil
  }
  mutating func clearOptionalFloat() {
    return _storage._optionalFloat = nil
  }

  var optionalDouble: Double {
    get {return _storage._optionalDouble ?? 0}
    set {_uniqueStorage()._optionalDouble = newValue}
  }
  var hasOptionalDouble: Bool {
    return _storage._optionalDouble != nil
  }
  mutating func clearOptionalDouble() {
    return _storage._optionalDouble = nil
  }

  var optionalBool: Bool {
    get {return _storage._optionalBool ?? false}
    set {_uniqueStorage()._optionalBool = newValue}
  }
  var hasOptionalBool: Bool {
    return _storage._optionalBool != nil
  }
  mutating func clearOptionalBool() {
    return _storage._optionalBool = nil
  }

  var optionalString: String {
    get {return _storage._optionalString ?? ""}
    set {_uniqueStorage()._optionalString = newValue}
  }
  var hasOptionalString: Bool {
    return _storage._optionalString != nil
  }
  mutating func clearOptionalString() {
    return _storage._optionalString = nil
  }

  var optionalBytes: Data {
    get {return _storage._optionalBytes ?? Data()}
    set {_uniqueStorage()._optionalBytes = newValue}
  }
  var hasOptionalBytes: Bool {
    return _storage._optionalBytes != nil
  }
  mutating func clearOptionalBytes() {
    return _storage._optionalBytes = nil
  }

  var optionalGroup: ProtobufUnittest_TestAllTypesLite.OptionalGroup {
    get {return _storage._optionalGroup ?? ProtobufUnittest_TestAllTypesLite.OptionalGroup()}
    set {_uniqueStorage()._optionalGroup = newValue}
  }
  var hasOptionalGroup: Bool {
    return _storage._optionalGroup != nil
  }
  mutating func clearOptionalGroup() {
    return _storage._optionalGroup = nil
  }

  var optionalNestedMessage: ProtobufUnittest_TestAllTypesLite.NestedMessage {
    get {return _storage._optionalNestedMessage ?? ProtobufUnittest_TestAllTypesLite.NestedMessage()}
    set {_uniqueStorage()._optionalNestedMessage = newValue}
  }
  var hasOptionalNestedMessage: Bool {
    return _storage._optionalNestedMessage != nil
  }
  mutating func clearOptionalNestedMessage() {
    return _storage._optionalNestedMessage = nil
  }

  var optionalForeignMessage: ProtobufUnittest_ForeignMessageLite {
    get {return _storage._optionalForeignMessage ?? ProtobufUnittest_ForeignMessageLite()}
    set {_uniqueStorage()._optionalForeignMessage = newValue}
  }
  var hasOptionalForeignMessage: Bool {
    return _storage._optionalForeignMessage != nil
  }
  mutating func clearOptionalForeignMessage() {
    return _storage._optionalForeignMessage = nil
  }

  var optionalImportMessage: ProtobufUnittestImport_ImportMessageLite {
    get {return _storage._optionalImportMessage ?? ProtobufUnittestImport_ImportMessageLite()}
    set {_uniqueStorage()._optionalImportMessage = newValue}
  }
  var hasOptionalImportMessage: Bool {
    return _storage._optionalImportMessage != nil
  }
  mutating func clearOptionalImportMessage() {
    return _storage._optionalImportMessage = nil
  }

  var optionalNestedEnum: ProtobufUnittest_TestAllTypesLite.NestedEnum {
    get {return _storage._optionalNestedEnum ?? ProtobufUnittest_TestAllTypesLite.NestedEnum.foo}
    set {_uniqueStorage()._optionalNestedEnum = newValue}
  }
  var hasOptionalNestedEnum: Bool {
    return _storage._optionalNestedEnum != nil
  }
  mutating func clearOptionalNestedEnum() {
    return _storage._optionalNestedEnum = nil
  }

  var optionalForeignEnum: ProtobufUnittest_ForeignEnumLite {
    get {return _storage._optionalForeignEnum ?? ProtobufUnittest_ForeignEnumLite.foreignLiteFoo}
    set {_uniqueStorage()._optionalForeignEnum = newValue}
  }
  var hasOptionalForeignEnum: Bool {
    return _storage._optionalForeignEnum != nil
  }
  mutating func clearOptionalForeignEnum() {
    return _storage._optionalForeignEnum = nil
  }

  var optionalImportEnum: ProtobufUnittestImport_ImportEnumLite {
    get {return _storage._optionalImportEnum ?? ProtobufUnittestImport_ImportEnumLite.importLiteFoo}
    set {_uniqueStorage()._optionalImportEnum = newValue}
  }
  var hasOptionalImportEnum: Bool {
    return _storage._optionalImportEnum != nil
  }
  mutating func clearOptionalImportEnum() {
    return _storage._optionalImportEnum = nil
  }

  var optionalStringPiece: String {
    get {return _storage._optionalStringPiece ?? ""}
    set {_uniqueStorage()._optionalStringPiece = newValue}
  }
  var hasOptionalStringPiece: Bool {
    return _storage._optionalStringPiece != nil
  }
  mutating func clearOptionalStringPiece() {
    return _storage._optionalStringPiece = nil
  }

  var optionalCord: String {
    get {return _storage._optionalCord ?? ""}
    set {_uniqueStorage()._optionalCord = newValue}
  }
  var hasOptionalCord: Bool {
    return _storage._optionalCord != nil
  }
  mutating func clearOptionalCord() {
    return _storage._optionalCord = nil
  }

  ///   Defined in unittest_import_public.proto
  var optionalPublicImportMessage: ProtobufUnittestImport_PublicImportMessageLite {
    get {return _storage._optionalPublicImportMessage ?? ProtobufUnittestImport_PublicImportMessageLite()}
    set {_uniqueStorage()._optionalPublicImportMessage = newValue}
  }
  var hasOptionalPublicImportMessage: Bool {
    return _storage._optionalPublicImportMessage != nil
  }
  mutating func clearOptionalPublicImportMessage() {
    return _storage._optionalPublicImportMessage = nil
  }

  var optionalLazyMessage: ProtobufUnittest_TestAllTypesLite.NestedMessage {
    get {return _storage._optionalLazyMessage ?? ProtobufUnittest_TestAllTypesLite.NestedMessage()}
    set {_uniqueStorage()._optionalLazyMessage = newValue}
  }
  var hasOptionalLazyMessage: Bool {
    return _storage._optionalLazyMessage != nil
  }
  mutating func clearOptionalLazyMessage() {
    return _storage._optionalLazyMessage = nil
  }

  ///   Repeated
  var repeatedInt32: [Int32] {
    get {return _storage._repeatedInt32}
    set {_uniqueStorage()._repeatedInt32 = newValue}
  }

  var repeatedInt64: [Int64] {
    get {return _storage._repeatedInt64}
    set {_uniqueStorage()._repeatedInt64 = newValue}
  }

  var repeatedUint32: [UInt32] {
    get {return _storage._repeatedUint32}
    set {_uniqueStorage()._repeatedUint32 = newValue}
  }

  var repeatedUint64: [UInt64] {
    get {return _storage._repeatedUint64}
    set {_uniqueStorage()._repeatedUint64 = newValue}
  }

  var repeatedSint32: [Int32] {
    get {return _storage._repeatedSint32}
    set {_uniqueStorage()._repeatedSint32 = newValue}
  }

  var repeatedSint64: [Int64] {
    get {return _storage._repeatedSint64}
    set {_uniqueStorage()._repeatedSint64 = newValue}
  }

  var repeatedFixed32: [UInt32] {
    get {return _storage._repeatedFixed32}
    set {_uniqueStorage()._repeatedFixed32 = newValue}
  }

  var repeatedFixed64: [UInt64] {
    get {return _storage._repeatedFixed64}
    set {_uniqueStorage()._repeatedFixed64 = newValue}
  }

  var repeatedSfixed32: [Int32] {
    get {return _storage._repeatedSfixed32}
    set {_uniqueStorage()._repeatedSfixed32 = newValue}
  }

  var repeatedSfixed64: [Int64] {
    get {return _storage._repeatedSfixed64}
    set {_uniqueStorage()._repeatedSfixed64 = newValue}
  }

  var repeatedFloat: [Float] {
    get {return _storage._repeatedFloat}
    set {_uniqueStorage()._repeatedFloat = newValue}
  }

  var repeatedDouble: [Double] {
    get {return _storage._repeatedDouble}
    set {_uniqueStorage()._repeatedDouble = newValue}
  }

  var repeatedBool: [Bool] {
    get {return _storage._repeatedBool}
    set {_uniqueStorage()._repeatedBool = newValue}
  }

  var repeatedString: [String] {
    get {return _storage._repeatedString}
    set {_uniqueStorage()._repeatedString = newValue}
  }

  var repeatedBytes: [Data] {
    get {return _storage._repeatedBytes}
    set {_uniqueStorage()._repeatedBytes = newValue}
  }

  var repeatedGroup: [ProtobufUnittest_TestAllTypesLite.RepeatedGroup] {
    get {return _storage._repeatedGroup}
    set {_uniqueStorage()._repeatedGroup = newValue}
  }

  var repeatedNestedMessage: [ProtobufUnittest_TestAllTypesLite.NestedMessage] {
    get {return _storage._repeatedNestedMessage}
    set {_uniqueStorage()._repeatedNestedMessage = newValue}
  }

  var repeatedForeignMessage: [ProtobufUnittest_ForeignMessageLite] {
    get {return _storage._repeatedForeignMessage}
    set {_uniqueStorage()._repeatedForeignMessage = newValue}
  }

  var repeatedImportMessage: [ProtobufUnittestImport_ImportMessageLite] {
    get {return _storage._repeatedImportMessage}
    set {_uniqueStorage()._repeatedImportMessage = newValue}
  }

  var repeatedNestedEnum: [ProtobufUnittest_TestAllTypesLite.NestedEnum] {
    get {return _storage._repeatedNestedEnum}
    set {_uniqueStorage()._repeatedNestedEnum = newValue}
  }

  var repeatedForeignEnum: [ProtobufUnittest_ForeignEnumLite] {
    get {return _storage._repeatedForeignEnum}
    set {_uniqueStorage()._repeatedForeignEnum = newValue}
  }

  var repeatedImportEnum: [ProtobufUnittestImport_ImportEnumLite] {
    get {return _storage._repeatedImportEnum}
    set {_uniqueStorage()._repeatedImportEnum = newValue}
  }

  var repeatedStringPiece: [String] {
    get {return _storage._repeatedStringPiece}
    set {_uniqueStorage()._repeatedStringPiece = newValue}
  }

  var repeatedCord: [String] {
    get {return _storage._repeatedCord}
    set {_uniqueStorage()._repeatedCord = newValue}
  }

  var repeatedLazyMessage: [ProtobufUnittest_TestAllTypesLite.NestedMessage] {
    get {return _storage._repeatedLazyMessage}
    set {_uniqueStorage()._repeatedLazyMessage = newValue}
  }

  ///   Singular with defaults
  var defaultInt32: Int32 {
    get {return _storage._defaultInt32 ?? 41}
    set {_uniqueStorage()._defaultInt32 = newValue}
  }
  var hasDefaultInt32: Bool {
    return _storage._defaultInt32 != nil
  }
  mutating func clearDefaultInt32() {
    return _storage._defaultInt32 = nil
  }

  var defaultInt64: Int64 {
    get {return _storage._defaultInt64 ?? 42}
    set {_uniqueStorage()._defaultInt64 = newValue}
  }
  var hasDefaultInt64: Bool {
    return _storage._defaultInt64 != nil
  }
  mutating func clearDefaultInt64() {
    return _storage._defaultInt64 = nil
  }

  var defaultUint32: UInt32 {
    get {return _storage._defaultUint32 ?? 43}
    set {_uniqueStorage()._defaultUint32 = newValue}
  }
  var hasDefaultUint32: Bool {
    return _storage._defaultUint32 != nil
  }
  mutating func clearDefaultUint32() {
    return _storage._defaultUint32 = nil
  }

  var defaultUint64: UInt64 {
    get {return _storage._defaultUint64 ?? 44}
    set {_uniqueStorage()._defaultUint64 = newValue}
  }
  var hasDefaultUint64: Bool {
    return _storage._defaultUint64 != nil
  }
  mutating func clearDefaultUint64() {
    return _storage._defaultUint64 = nil
  }

  var defaultSint32: Int32 {
    get {return _storage._defaultSint32 ?? -45}
    set {_uniqueStorage()._defaultSint32 = newValue}
  }
  var hasDefaultSint32: Bool {
    return _storage._defaultSint32 != nil
  }
  mutating func clearDefaultSint32() {
    return _storage._defaultSint32 = nil
  }

  var defaultSint64: Int64 {
    get {return _storage._defaultSint64 ?? 46}
    set {_uniqueStorage()._defaultSint64 = newValue}
  }
  var hasDefaultSint64: Bool {
    return _storage._defaultSint64 != nil
  }
  mutating func clearDefaultSint64() {
    return _storage._defaultSint64 = nil
  }

  var defaultFixed32: UInt32 {
    get {return _storage._defaultFixed32 ?? 47}
    set {_uniqueStorage()._defaultFixed32 = newValue}
  }
  var hasDefaultFixed32: Bool {
    return _storage._defaultFixed32 != nil
  }
  mutating func clearDefaultFixed32() {
    return _storage._defaultFixed32 = nil
  }

  var defaultFixed64: UInt64 {
    get {return _storage._defaultFixed64 ?? 48}
    set {_uniqueStorage()._defaultFixed64 = newValue}
  }
  var hasDefaultFixed64: Bool {
    return _storage._defaultFixed64 != nil
  }
  mutating func clearDefaultFixed64() {
    return _storage._defaultFixed64 = nil
  }

  var defaultSfixed32: Int32 {
    get {return _storage._defaultSfixed32 ?? 49}
    set {_uniqueStorage()._defaultSfixed32 = newValue}
  }
  var hasDefaultSfixed32: Bool {
    return _storage._defaultSfixed32 != nil
  }
  mutating func clearDefaultSfixed32() {
    return _storage._defaultSfixed32 = nil
  }

  var defaultSfixed64: Int64 {
    get {return _storage._defaultSfixed64 ?? -50}
    set {_uniqueStorage()._defaultSfixed64 = newValue}
  }
  var hasDefaultSfixed64: Bool {
    return _storage._defaultSfixed64 != nil
  }
  mutating func clearDefaultSfixed64() {
    return _storage._defaultSfixed64 = nil
  }

  var defaultFloat: Float {
    get {return _storage._defaultFloat ?? 51.5}
    set {_uniqueStorage()._defaultFloat = newValue}
  }
  var hasDefaultFloat: Bool {
    return _storage._defaultFloat != nil
  }
  mutating func clearDefaultFloat() {
    return _storage._defaultFloat = nil
  }

  var defaultDouble: Double {
    get {return _storage._defaultDouble ?? 52000}
    set {_uniqueStorage()._defaultDouble = newValue}
  }
  var hasDefaultDouble: Bool {
    return _storage._defaultDouble != nil
  }
  mutating func clearDefaultDouble() {
    return _storage._defaultDouble = nil
  }

  var defaultBool: Bool {
    get {return _storage._defaultBool ?? true}
    set {_uniqueStorage()._defaultBool = newValue}
  }
  var hasDefaultBool: Bool {
    return _storage._defaultBool != nil
  }
  mutating func clearDefaultBool() {
    return _storage._defaultBool = nil
  }

  var defaultString: String {
    get {return _storage._defaultString ?? "hello"}
    set {_uniqueStorage()._defaultString = newValue}
  }
  var hasDefaultString: Bool {
    return _storage._defaultString != nil
  }
  mutating func clearDefaultString() {
    return _storage._defaultString = nil
  }

  var defaultBytes: Data {
    get {return _storage._defaultBytes ?? Data(bytes: [119, 111, 114, 108, 100])}
    set {_uniqueStorage()._defaultBytes = newValue}
  }
  var hasDefaultBytes: Bool {
    return _storage._defaultBytes != nil
  }
  mutating func clearDefaultBytes() {
    return _storage._defaultBytes = nil
  }

  var defaultNestedEnum: ProtobufUnittest_TestAllTypesLite.NestedEnum {
    get {return _storage._defaultNestedEnum ?? ProtobufUnittest_TestAllTypesLite.NestedEnum.bar}
    set {_uniqueStorage()._defaultNestedEnum = newValue}
  }
  var hasDefaultNestedEnum: Bool {
    return _storage._defaultNestedEnum != nil
  }
  mutating func clearDefaultNestedEnum() {
    return _storage._defaultNestedEnum = nil
  }

  var defaultForeignEnum: ProtobufUnittest_ForeignEnumLite {
    get {return _storage._defaultForeignEnum ?? ProtobufUnittest_ForeignEnumLite.foreignLiteBar}
    set {_uniqueStorage()._defaultForeignEnum = newValue}
  }
  var hasDefaultForeignEnum: Bool {
    return _storage._defaultForeignEnum != nil
  }
  mutating func clearDefaultForeignEnum() {
    return _storage._defaultForeignEnum = nil
  }

  var defaultImportEnum: ProtobufUnittestImport_ImportEnumLite {
    get {return _storage._defaultImportEnum ?? ProtobufUnittestImport_ImportEnumLite.importLiteBar}
    set {_uniqueStorage()._defaultImportEnum = newValue}
  }
  var hasDefaultImportEnum: Bool {
    return _storage._defaultImportEnum != nil
  }
  mutating func clearDefaultImportEnum() {
    return _storage._defaultImportEnum = nil
  }

  var defaultStringPiece: String {
    get {return _storage._defaultStringPiece ?? "abc"}
    set {_uniqueStorage()._defaultStringPiece = newValue}
  }
  var hasDefaultStringPiece: Bool {
    return _storage._defaultStringPiece != nil
  }
  mutating func clearDefaultStringPiece() {
    return _storage._defaultStringPiece = nil
  }

  var defaultCord: String {
    get {return _storage._defaultCord ?? "123"}
    set {_uniqueStorage()._defaultCord = newValue}
  }
  var hasDefaultCord: Bool {
    return _storage._defaultCord != nil
  }
  mutating func clearDefaultCord() {
    return _storage._defaultCord = nil
  }

  var oneofUint32: UInt32 {
    get {
      if case .oneofUint32(let v)? = _storage._oneofField {
        return v
      }
      return 0
    }
    set {
      _uniqueStorage()._oneofField = .oneofUint32(newValue)
    }
  }

  var oneofNestedMessage: ProtobufUnittest_TestAllTypesLite.NestedMessage {
    get {
      if case .oneofNestedMessage(let v)? = _storage._oneofField {
        return v
      }
      return ProtobufUnittest_TestAllTypesLite.NestedMessage()
    }
    set {
      _uniqueStorage()._oneofField = .oneofNestedMessage(newValue)
    }
  }

  var oneofString: String {
    get {
      if case .oneofString(let v)? = _storage._oneofField {
        return v
      }
      return ""
    }
    set {
      _uniqueStorage()._oneofField = .oneofString(newValue)
    }
  }

  var oneofBytes: Data {
    get {
      if case .oneofBytes(let v)? = _storage._oneofField {
        return v
      }
      return Data()
    }
    set {
      _uniqueStorage()._oneofField = .oneofBytes(newValue)
    }
  }

  var oneofLazyNestedMessage: ProtobufUnittest_TestAllTypesLite.NestedMessage {
    get {
      if case .oneofLazyNestedMessage(let v)? = _storage._oneofField {
        return v
      }
      return ProtobufUnittest_TestAllTypesLite.NestedMessage()
    }
    set {
      _uniqueStorage()._oneofField = .oneofLazyNestedMessage(newValue)
    }
  }

  ///   Tests toString for non-repeated fields with a list suffix
  var deceptivelyNamedList: Int32 {
    get {return _storage._deceptivelyNamedList ?? 0}
    set {_uniqueStorage()._deceptivelyNamedList = newValue}
  }
  var hasDeceptivelyNamedList: Bool {
    return _storage._deceptivelyNamedList != nil
  }
  mutating func clearDeceptivelyNamedList() {
    return _storage._deceptivelyNamedList = nil
  }

  var oneofField: OneOf_OneofField? {
    get {return _storage._oneofField}
    set {
      _uniqueStorage()._oneofField = newValue
    }
  }

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    try _uniqueStorage().decodeMessage(decoder: &decoder)
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    try _uniqueStorage().decodeField(decoder: &decoder, fieldNumber: fieldNumber)
  }

  func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    try _storage.traverse(visitor: visitor)
  }

  func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestAllTypesLite) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

struct ProtobufUnittest_ForeignMessageLite: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  static let protoMessageName: String = "ForeignMessageLite"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_fieldNames: FieldNameMap = [
    1: .same(proto: "c"),
  ]

  var unknownFields = SwiftProtobuf.UnknownStorage()

  private var _c: Int32? = nil
  var c: Int32 {
    get {return _c ?? 0}
    set {_c = newValue}
  }
  var hasC: Bool {
    return _c != nil
  }
  mutating func clearC() {
    return _c = nil
  }

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 1: try decoder.decodeSingularInt32Field(value: &_c)
    default: break
    }
  }

  func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    if let v = _c {
      try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: v, fieldNumber: 1)
    }
    unknownFields.traverse(visitor: visitor)
  }

  func _protoc_generated_isEqualTo(other: ProtobufUnittest_ForeignMessageLite) -> Bool {
    if _c != other._c {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

struct ProtobufUnittest_TestPackedTypesLite: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  static let protoMessageName: String = "TestPackedTypesLite"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_fieldNames: FieldNameMap = [
    90: .unique(proto: "packed_int32", json: "packedInt32"),
    91: .unique(proto: "packed_int64", json: "packedInt64"),
    92: .unique(proto: "packed_uint32", json: "packedUint32"),
    93: .unique(proto: "packed_uint64", json: "packedUint64"),
    94: .unique(proto: "packed_sint32", json: "packedSint32"),
    95: .unique(proto: "packed_sint64", json: "packedSint64"),
    96: .unique(proto: "packed_fixed32", json: "packedFixed32"),
    97: .unique(proto: "packed_fixed64", json: "packedFixed64"),
    98: .unique(proto: "packed_sfixed32", json: "packedSfixed32"),
    99: .unique(proto: "packed_sfixed64", json: "packedSfixed64"),
    100: .unique(proto: "packed_float", json: "packedFloat"),
    101: .unique(proto: "packed_double", json: "packedDouble"),
    102: .unique(proto: "packed_bool", json: "packedBool"),
    103: .unique(proto: "packed_enum", json: "packedEnum"),
  ]

  var unknownFields = SwiftProtobuf.UnknownStorage()

  var packedInt32: [Int32] = []

  var packedInt64: [Int64] = []

  var packedUint32: [UInt32] = []

  var packedUint64: [UInt64] = []

  var packedSint32: [Int32] = []

  var packedSint64: [Int64] = []

  var packedFixed32: [UInt32] = []

  var packedFixed64: [UInt64] = []

  var packedSfixed32: [Int32] = []

  var packedSfixed64: [Int64] = []

  var packedFloat: [Float] = []

  var packedDouble: [Double] = []

  var packedBool: [Bool] = []

  var packedEnum: [ProtobufUnittest_ForeignEnumLite] = []

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 90: try decoder.decodeRepeatedInt32Field(value: &packedInt32)
    case 91: try decoder.decodeRepeatedInt64Field(value: &packedInt64)
    case 92: try decoder.decodeRepeatedUInt32Field(value: &packedUint32)
    case 93: try decoder.decodeRepeatedUInt64Field(value: &packedUint64)
    case 94: try decoder.decodeRepeatedSInt32Field(value: &packedSint32)
    case 95: try decoder.decodeRepeatedSInt64Field(value: &packedSint64)
    case 96: try decoder.decodeRepeatedFixed32Field(value: &packedFixed32)
    case 97: try decoder.decodeRepeatedFixed64Field(value: &packedFixed64)
    case 98: try decoder.decodeRepeatedSFixed32Field(value: &packedSfixed32)
    case 99: try decoder.decodeRepeatedSFixed64Field(value: &packedSfixed64)
    case 100: try decoder.decodeRepeatedFloatField(value: &packedFloat)
    case 101: try decoder.decodeRepeatedDoubleField(value: &packedDouble)
    case 102: try decoder.decodeRepeatedBoolField(value: &packedBool)
    case 103: try decoder.decodeRepeatedEnumField(value: &packedEnum)
    default: break
    }
  }

  func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    if !packedInt32.isEmpty {
      try visitor.visitPackedField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: packedInt32, fieldNumber: 90)
    }
    if !packedInt64.isEmpty {
      try visitor.visitPackedField(fieldType: SwiftProtobuf.ProtobufInt64.self, value: packedInt64, fieldNumber: 91)
    }
    if !packedUint32.isEmpty {
      try visitor.visitPackedField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: packedUint32, fieldNumber: 92)
    }
    if !packedUint64.isEmpty {
      try visitor.visitPackedField(fieldType: SwiftProtobuf.ProtobufUInt64.self, value: packedUint64, fieldNumber: 93)
    }
    if !packedSint32.isEmpty {
      try visitor.visitPackedField(fieldType: SwiftProtobuf.ProtobufSInt32.self, value: packedSint32, fieldNumber: 94)
    }
    if !packedSint64.isEmpty {
      try visitor.visitPackedField(fieldType: SwiftProtobuf.ProtobufSInt64.self, value: packedSint64, fieldNumber: 95)
    }
    if !packedFixed32.isEmpty {
      try visitor.visitPackedField(fieldType: SwiftProtobuf.ProtobufFixed32.self, value: packedFixed32, fieldNumber: 96)
    }
    if !packedFixed64.isEmpty {
      try visitor.visitPackedField(fieldType: SwiftProtobuf.ProtobufFixed64.self, value: packedFixed64, fieldNumber: 97)
    }
    if !packedSfixed32.isEmpty {
      try visitor.visitPackedField(fieldType: SwiftProtobuf.ProtobufSFixed32.self, value: packedSfixed32, fieldNumber: 98)
    }
    if !packedSfixed64.isEmpty {
      try visitor.visitPackedField(fieldType: SwiftProtobuf.ProtobufSFixed64.self, value: packedSfixed64, fieldNumber: 99)
    }
    if !packedFloat.isEmpty {
      try visitor.visitPackedField(fieldType: SwiftProtobuf.ProtobufFloat.self, value: packedFloat, fieldNumber: 100)
    }
    if !packedDouble.isEmpty {
      try visitor.visitPackedField(fieldType: SwiftProtobuf.ProtobufDouble.self, value: packedDouble, fieldNumber: 101)
    }
    if !packedBool.isEmpty {
      try visitor.visitPackedField(fieldType: SwiftProtobuf.ProtobufBool.self, value: packedBool, fieldNumber: 102)
    }
    if !packedEnum.isEmpty {
      try visitor.visitPackedEnumField(value: packedEnum, fieldNumber: 103)
    }
    unknownFields.traverse(visitor: visitor)
  }

  func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestPackedTypesLite) -> Bool {
    if packedInt32 != other.packedInt32 {return false}
    if packedInt64 != other.packedInt64 {return false}
    if packedUint32 != other.packedUint32 {return false}
    if packedUint64 != other.packedUint64 {return false}
    if packedSint32 != other.packedSint32 {return false}
    if packedSint64 != other.packedSint64 {return false}
    if packedFixed32 != other.packedFixed32 {return false}
    if packedFixed64 != other.packedFixed64 {return false}
    if packedSfixed32 != other.packedSfixed32 {return false}
    if packedSfixed64 != other.packedSfixed64 {return false}
    if packedFloat != other.packedFloat {return false}
    if packedDouble != other.packedDouble {return false}
    if packedBool != other.packedBool {return false}
    if packedEnum != other.packedEnum {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

struct ProtobufUnittest_TestAllExtensionsLite: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf.ExtensibleMessage, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  static let protoMessageName: String = "TestAllExtensionsLite"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_fieldNames = FieldNameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  public var isInitialized: Bool {
    if !_extensionFieldValues.isInitialized {return false}
    return true
  }

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    if (1 <= fieldNumber && fieldNumber < 536870912) {
      try decoder.decodeExtensionField(values: &_extensionFieldValues, messageType: ProtobufUnittest_TestAllExtensionsLite.self, fieldNumber: fieldNumber)
    }
  }

  func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    try visitor.visitExtensionFields(fields: _extensionFieldValues, start: 1, end: 536870912)
    unknownFields.traverse(visitor: visitor)
  }

  func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestAllExtensionsLite) -> Bool {
    if unknownFields != other.unknownFields {return false}
    if _extensionFieldValues != other._extensionFieldValues {return false}
    return true
  }

  private var _extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()

  mutating func setExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestAllExtensionsLite>, value: F.ValueType) {
    _extensionFieldValues[ext.fieldNumber] = ext.set(value: value)
  }

  mutating func clearExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestAllExtensionsLite>) {
    _extensionFieldValues[ext.fieldNumber] = nil
  }

  func getExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestAllExtensionsLite>) -> F.ValueType {
    if let fieldValue = _extensionFieldValues[ext.fieldNumber] as? F {
      return fieldValue.value
    }
    return ext.defaultValue
  }

  func hasExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestAllExtensionsLite>) -> Bool {
    return _extensionFieldValues[ext.fieldNumber] is F
  }
  func _protobuf_fieldNames(for number: Int) -> FieldNameMap.Names? {
    return ProtobufUnittest_TestAllExtensionsLite._protobuf_fieldNames.fieldNames(for: number) ?? _extensionFieldValues.fieldNames(for: number)
  }
}

struct ProtobufUnittest_OptionalGroup_extension_lite: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  static let protoMessageName: String = "OptionalGroup_extension_lite"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_fieldNames: FieldNameMap = [
    17: .same(proto: "a"),
  ]

  var unknownFields = SwiftProtobuf.UnknownStorage()

  private var _a: Int32? = nil
  var a: Int32 {
    get {return _a ?? 0}
    set {_a = newValue}
  }
  var hasA: Bool {
    return _a != nil
  }
  mutating func clearA() {
    return _a = nil
  }

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 17: try decoder.decodeSingularInt32Field(value: &_a)
    default: break
    }
  }

  func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    if let v = _a {
      try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: v, fieldNumber: 17)
    }
    unknownFields.traverse(visitor: visitor)
  }

  func _protoc_generated_isEqualTo(other: ProtobufUnittest_OptionalGroup_extension_lite) -> Bool {
    if _a != other._a {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

struct ProtobufUnittest_RepeatedGroup_extension_lite: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  static let protoMessageName: String = "RepeatedGroup_extension_lite"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_fieldNames: FieldNameMap = [
    47: .same(proto: "a"),
  ]

  var unknownFields = SwiftProtobuf.UnknownStorage()

  private var _a: Int32? = nil
  var a: Int32 {
    get {return _a ?? 0}
    set {_a = newValue}
  }
  var hasA: Bool {
    return _a != nil
  }
  mutating func clearA() {
    return _a = nil
  }

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 47: try decoder.decodeSingularInt32Field(value: &_a)
    default: break
    }
  }

  func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    if let v = _a {
      try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: v, fieldNumber: 47)
    }
    unknownFields.traverse(visitor: visitor)
  }

  func _protoc_generated_isEqualTo(other: ProtobufUnittest_RepeatedGroup_extension_lite) -> Bool {
    if _a != other._a {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

struct ProtobufUnittest_TestPackedExtensionsLite: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf.ExtensibleMessage, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  static let protoMessageName: String = "TestPackedExtensionsLite"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_fieldNames = FieldNameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  public var isInitialized: Bool {
    if !_extensionFieldValues.isInitialized {return false}
    return true
  }

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    if (1 <= fieldNumber && fieldNumber < 536870912) {
      try decoder.decodeExtensionField(values: &_extensionFieldValues, messageType: ProtobufUnittest_TestPackedExtensionsLite.self, fieldNumber: fieldNumber)
    }
  }

  func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    try visitor.visitExtensionFields(fields: _extensionFieldValues, start: 1, end: 536870912)
    unknownFields.traverse(visitor: visitor)
  }

  func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestPackedExtensionsLite) -> Bool {
    if unknownFields != other.unknownFields {return false}
    if _extensionFieldValues != other._extensionFieldValues {return false}
    return true
  }

  private var _extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()

  mutating func setExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestPackedExtensionsLite>, value: F.ValueType) {
    _extensionFieldValues[ext.fieldNumber] = ext.set(value: value)
  }

  mutating func clearExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestPackedExtensionsLite>) {
    _extensionFieldValues[ext.fieldNumber] = nil
  }

  func getExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestPackedExtensionsLite>) -> F.ValueType {
    if let fieldValue = _extensionFieldValues[ext.fieldNumber] as? F {
      return fieldValue.value
    }
    return ext.defaultValue
  }

  func hasExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestPackedExtensionsLite>) -> Bool {
    return _extensionFieldValues[ext.fieldNumber] is F
  }
  func _protobuf_fieldNames(for number: Int) -> FieldNameMap.Names? {
    return ProtobufUnittest_TestPackedExtensionsLite._protobuf_fieldNames.fieldNames(for: number) ?? _extensionFieldValues.fieldNames(for: number)
  }
}

struct ProtobufUnittest_TestNestedExtensionLite: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  static let protoMessageName: String = "TestNestedExtensionLite"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_fieldNames = FieldNameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  struct Extensions {

    static let nestedExtension = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, ProtobufUnittest_TestAllExtensionsLite>(
      fieldNumber: 12345,
      fieldNames: .same(proto: "protobuf_unittest.TestNestedExtensionLite.nested_extension"),
      defaultValue: 0
    )
  }

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
  }

  func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    unknownFields.traverse(visitor: visitor)
  }

  func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestNestedExtensionLite) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

///   Test that deprecated fields work.  We only verify that they compile (at one
///   point this failed).
struct ProtobufUnittest_TestDeprecatedLite: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  static let protoMessageName: String = "TestDeprecatedLite"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "deprecated_field", json: "deprecatedField"),
  ]

  var unknownFields = SwiftProtobuf.UnknownStorage()

  private var _deprecatedField: Int32? = nil
  var deprecatedField: Int32 {
    get {return _deprecatedField ?? 0}
    set {_deprecatedField = newValue}
  }
  var hasDeprecatedField: Bool {
    return _deprecatedField != nil
  }
  mutating func clearDeprecatedField() {
    return _deprecatedField = nil
  }

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 1: try decoder.decodeSingularInt32Field(value: &_deprecatedField)
    default: break
    }
  }

  func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    if let v = _deprecatedField {
      try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: v, fieldNumber: 1)
    }
    unknownFields.traverse(visitor: visitor)
  }

  func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestDeprecatedLite) -> Bool {
    if _deprecatedField != other._deprecatedField {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

///   See the comments of the same type in unittest.proto.
struct ProtobufUnittest_TestParsingMergeLite: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf.ExtensibleMessage, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  static let protoMessageName: String = "TestParsingMergeLite"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "required_all_types", json: "requiredAllTypes"),
    2: .unique(proto: "optional_all_types", json: "optionalAllTypes"),
    3: .unique(proto: "repeated_all_types", json: "repeatedAllTypes"),
    10: .unique(proto: "OptionalGroup", json: "optionalgroup"),
    20: .unique(proto: "RepeatedGroup", json: "repeatedgroup"),
  ]

  private class _StorageClass: SwiftProtobuf.ExtensibleMessageStorage {
    typealias ExtendedMessage = ProtobufUnittest_TestParsingMergeLite
    var extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
    var unknownFields = SwiftProtobuf.UnknownStorage()
    var _requiredAllTypes: ProtobufUnittest_TestAllTypesLite? = nil
    var _optionalAllTypes: ProtobufUnittest_TestAllTypesLite? = nil
    var _repeatedAllTypes: [ProtobufUnittest_TestAllTypesLite] = []
    var _optionalGroup: ProtobufUnittest_TestParsingMergeLite.OptionalGroup? = nil
    var _repeatedGroup: [ProtobufUnittest_TestParsingMergeLite.RepeatedGroup] = []

    var isInitialized: Bool {
      if !extensionFieldValues.isInitialized {return false}
      if _requiredAllTypes == nil {return false}
      return true
    }

    func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }
    }

    func decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &_requiredAllTypes)
      case 2: try decoder.decodeSingularMessageField(value: &_optionalAllTypes)
      case 3: try decoder.decodeRepeatedMessageField(value: &_repeatedAllTypes)
      case 10: try decoder.decodeSingularGroupField(value: &_optionalGroup)
      case 20: try decoder.decodeRepeatedGroupField(value: &_repeatedGroup)
      default: if (1000 <= fieldNumber && fieldNumber < 536870912) {
          try decoder.decodeExtensionField(values: &extensionFieldValues, messageType: ProtobufUnittest_TestParsingMergeLite.self, fieldNumber: fieldNumber)
        }
      }
    }

    func traverse(visitor: SwiftProtobuf.Visitor) throws {
      if let v = _requiredAllTypes {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _optionalAllTypes {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if !_repeatedAllTypes.isEmpty {
        try visitor.visitRepeatedMessageField(value: _repeatedAllTypes, fieldNumber: 3)
      }
      if let v = _optionalGroup {
        try visitor.visitSingularGroupField(value: v, fieldNumber: 10)
      }
      if !_repeatedGroup.isEmpty {
        try visitor.visitRepeatedGroupField(value: _repeatedGroup, fieldNumber: 20)
      }
      try visitor.visitExtensionFields(fields: extensionFieldValues, start: 1000, end: 536870912)
      unknownFields.traverse(visitor: visitor)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _requiredAllTypes != other._requiredAllTypes {return false}
      if _optionalAllTypes != other._optionalAllTypes {return false}
      if _repeatedAllTypes != other._repeatedAllTypes {return false}
      if _optionalGroup != other._optionalGroup {return false}
      if _repeatedGroup != other._repeatedGroup {return false}
      if unknownFields != other.unknownFields {return false}
      if extensionFieldValues != other.extensionFieldValues {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone.unknownFields = unknownFields
      clone.extensionFieldValues = extensionFieldValues
      clone._requiredAllTypes = _requiredAllTypes
      clone._optionalAllTypes = _optionalAllTypes
      clone._repeatedAllTypes = _repeatedAllTypes
      clone._optionalGroup = _optionalGroup
      clone._repeatedGroup = _repeatedGroup
      return clone
    }
  }

  private var _storage = _StorageClass()

  var unknownFields: SwiftProtobuf.UnknownStorage {
    get {return _storage.unknownFields}
    set {_storage.unknownFields = newValue}
  }

  struct RepeatedFieldsGenerator: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
    static let protoMessageName: String = "RepeatedFieldsGenerator"
    static let protoPackageName: String = "protobuf_unittest"
    static let _protobuf_fieldNames: FieldNameMap = [
      1: .same(proto: "field1"),
      2: .same(proto: "field2"),
      3: .same(proto: "field3"),
      10: .unique(proto: "Group1", json: "group1"),
      20: .unique(proto: "Group2", json: "group2"),
      1000: .same(proto: "ext1"),
      1001: .same(proto: "ext2"),
    ]

    var unknownFields = SwiftProtobuf.UnknownStorage()

    struct Group1: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
      static let protoMessageName: String = "Group1"
      static let protoPackageName: String = "protobuf_unittest"
      static let _protobuf_fieldNames: FieldNameMap = [
        11: .same(proto: "field1"),
      ]

      private class _StorageClass {
        typealias ExtendedMessage = ProtobufUnittest_TestParsingMergeLite.RepeatedFieldsGenerator.Group1
        var unknownFields = SwiftProtobuf.UnknownStorage()
        var _field1: ProtobufUnittest_TestAllTypesLite? = nil

        func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
          while let fieldNumber = try decoder.nextFieldNumber() {
            try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
          }
        }

        func decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
          switch fieldNumber {
          case 11: try decoder.decodeSingularMessageField(value: &_field1)
          default: break
          }
        }

        func traverse(visitor: SwiftProtobuf.Visitor) throws {
          if let v = _field1 {
            try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
          }
          unknownFields.traverse(visitor: visitor)
        }

        func isEqualTo(other: _StorageClass) -> Bool {
          if _field1 != other._field1 {return false}
          if unknownFields != other.unknownFields {return false}
          return true
        }

        func copy() -> _StorageClass {
          let clone = _StorageClass()
          clone.unknownFields = unknownFields
          clone._field1 = _field1
          return clone
        }
      }

      private var _storage = _StorageClass()

      var unknownFields: SwiftProtobuf.UnknownStorage {
        get {return _storage.unknownFields}
        set {_storage.unknownFields = newValue}
      }

      var field1: ProtobufUnittest_TestAllTypesLite {
        get {return _storage._field1 ?? ProtobufUnittest_TestAllTypesLite()}
        set {_uniqueStorage()._field1 = newValue}
      }
      var hasField1: Bool {
        return _storage._field1 != nil
      }
      mutating func clearField1() {
        return _storage._field1 = nil
      }

      mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
        try _uniqueStorage().decodeMessage(decoder: &decoder)
      }

      mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
        try _uniqueStorage().decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }

      func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
        try _storage.traverse(visitor: visitor)
      }

      func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestParsingMergeLite.RepeatedFieldsGenerator.Group1) -> Bool {
        return _storage === other._storage || _storage.isEqualTo(other: other._storage)
      }

      private mutating func _uniqueStorage() -> _StorageClass {
        if !isKnownUniquelyReferenced(&_storage) {
          _storage = _storage.copy()
        }
        return _storage
      }
    }

    struct Group2: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
      static let protoMessageName: String = "Group2"
      static let protoPackageName: String = "protobuf_unittest"
      static let _protobuf_fieldNames: FieldNameMap = [
        21: .same(proto: "field1"),
      ]

      private class _StorageClass {
        typealias ExtendedMessage = ProtobufUnittest_TestParsingMergeLite.RepeatedFieldsGenerator.Group2
        var unknownFields = SwiftProtobuf.UnknownStorage()
        var _field1: ProtobufUnittest_TestAllTypesLite? = nil

        func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
          while let fieldNumber = try decoder.nextFieldNumber() {
            try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
          }
        }

        func decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
          switch fieldNumber {
          case 21: try decoder.decodeSingularMessageField(value: &_field1)
          default: break
          }
        }

        func traverse(visitor: SwiftProtobuf.Visitor) throws {
          if let v = _field1 {
            try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
          }
          unknownFields.traverse(visitor: visitor)
        }

        func isEqualTo(other: _StorageClass) -> Bool {
          if _field1 != other._field1 {return false}
          if unknownFields != other.unknownFields {return false}
          return true
        }

        func copy() -> _StorageClass {
          let clone = _StorageClass()
          clone.unknownFields = unknownFields
          clone._field1 = _field1
          return clone
        }
      }

      private var _storage = _StorageClass()

      var unknownFields: SwiftProtobuf.UnknownStorage {
        get {return _storage.unknownFields}
        set {_storage.unknownFields = newValue}
      }

      var field1: ProtobufUnittest_TestAllTypesLite {
        get {return _storage._field1 ?? ProtobufUnittest_TestAllTypesLite()}
        set {_uniqueStorage()._field1 = newValue}
      }
      var hasField1: Bool {
        return _storage._field1 != nil
      }
      mutating func clearField1() {
        return _storage._field1 = nil
      }

      mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
        try _uniqueStorage().decodeMessage(decoder: &decoder)
      }

      mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
        try _uniqueStorage().decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }

      func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
        try _storage.traverse(visitor: visitor)
      }

      func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestParsingMergeLite.RepeatedFieldsGenerator.Group2) -> Bool {
        return _storage === other._storage || _storage.isEqualTo(other: other._storage)
      }

      private mutating func _uniqueStorage() -> _StorageClass {
        if !isKnownUniquelyReferenced(&_storage) {
          _storage = _storage.copy()
        }
        return _storage
      }
    }

    var field1: [ProtobufUnittest_TestAllTypesLite] = []

    var field2: [ProtobufUnittest_TestAllTypesLite] = []

    var field3: [ProtobufUnittest_TestAllTypesLite] = []

    var group1: [ProtobufUnittest_TestParsingMergeLite.RepeatedFieldsGenerator.Group1] = []

    var group2: [ProtobufUnittest_TestParsingMergeLite.RepeatedFieldsGenerator.Group2] = []

    var ext1: [ProtobufUnittest_TestAllTypesLite] = []

    var ext2: [ProtobufUnittest_TestAllTypesLite] = []

    mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }
    }

    mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &field1)
      case 2: try decoder.decodeRepeatedMessageField(value: &field2)
      case 3: try decoder.decodeRepeatedMessageField(value: &field3)
      case 10: try decoder.decodeRepeatedGroupField(value: &group1)
      case 20: try decoder.decodeRepeatedGroupField(value: &group2)
      case 1000: try decoder.decodeRepeatedMessageField(value: &ext1)
      case 1001: try decoder.decodeRepeatedMessageField(value: &ext2)
      default: break
      }
    }

    func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
      if !field1.isEmpty {
        try visitor.visitRepeatedMessageField(value: field1, fieldNumber: 1)
      }
      if !field2.isEmpty {
        try visitor.visitRepeatedMessageField(value: field2, fieldNumber: 2)
      }
      if !field3.isEmpty {
        try visitor.visitRepeatedMessageField(value: field3, fieldNumber: 3)
      }
      if !group1.isEmpty {
        try visitor.visitRepeatedGroupField(value: group1, fieldNumber: 10)
      }
      if !group2.isEmpty {
        try visitor.visitRepeatedGroupField(value: group2, fieldNumber: 20)
      }
      if !ext1.isEmpty {
        try visitor.visitRepeatedMessageField(value: ext1, fieldNumber: 1000)
      }
      if !ext2.isEmpty {
        try visitor.visitRepeatedMessageField(value: ext2, fieldNumber: 1001)
      }
      unknownFields.traverse(visitor: visitor)
    }

    func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestParsingMergeLite.RepeatedFieldsGenerator) -> Bool {
      if field1 != other.field1 {return false}
      if field2 != other.field2 {return false}
      if field3 != other.field3 {return false}
      if group1 != other.group1 {return false}
      if group2 != other.group2 {return false}
      if ext1 != other.ext1 {return false}
      if ext2 != other.ext2 {return false}
      if unknownFields != other.unknownFields {return false}
      return true
    }
  }

  struct OptionalGroup: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
    static let protoMessageName: String = "OptionalGroup"
    static let protoPackageName: String = "protobuf_unittest"
    static let _protobuf_fieldNames: FieldNameMap = [
      11: .unique(proto: "optional_group_all_types", json: "optionalGroupAllTypes"),
    ]

    private class _StorageClass {
      typealias ExtendedMessage = ProtobufUnittest_TestParsingMergeLite.OptionalGroup
      var unknownFields = SwiftProtobuf.UnknownStorage()
      var _optionalGroupAllTypes: ProtobufUnittest_TestAllTypesLite? = nil

      func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
        while let fieldNumber = try decoder.nextFieldNumber() {
          try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
        }
      }

      func decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
        switch fieldNumber {
        case 11: try decoder.decodeSingularMessageField(value: &_optionalGroupAllTypes)
        default: break
        }
      }

      func traverse(visitor: SwiftProtobuf.Visitor) throws {
        if let v = _optionalGroupAllTypes {
          try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
        }
        unknownFields.traverse(visitor: visitor)
      }

      func isEqualTo(other: _StorageClass) -> Bool {
        if _optionalGroupAllTypes != other._optionalGroupAllTypes {return false}
        if unknownFields != other.unknownFields {return false}
        return true
      }

      func copy() -> _StorageClass {
        let clone = _StorageClass()
        clone.unknownFields = unknownFields
        clone._optionalGroupAllTypes = _optionalGroupAllTypes
        return clone
      }
    }

    private var _storage = _StorageClass()

    var unknownFields: SwiftProtobuf.UnknownStorage {
      get {return _storage.unknownFields}
      set {_storage.unknownFields = newValue}
    }

    var optionalGroupAllTypes: ProtobufUnittest_TestAllTypesLite {
      get {return _storage._optionalGroupAllTypes ?? ProtobufUnittest_TestAllTypesLite()}
      set {_uniqueStorage()._optionalGroupAllTypes = newValue}
    }
    var hasOptionalGroupAllTypes: Bool {
      return _storage._optionalGroupAllTypes != nil
    }
    mutating func clearOptionalGroupAllTypes() {
      return _storage._optionalGroupAllTypes = nil
    }

    mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      try _uniqueStorage().decodeMessage(decoder: &decoder)
    }

    mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
      try _uniqueStorage().decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }

    func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
      try _storage.traverse(visitor: visitor)
    }

    func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestParsingMergeLite.OptionalGroup) -> Bool {
      return _storage === other._storage || _storage.isEqualTo(other: other._storage)
    }

    private mutating func _uniqueStorage() -> _StorageClass {
      if !isKnownUniquelyReferenced(&_storage) {
        _storage = _storage.copy()
      }
      return _storage
    }
  }

  struct RepeatedGroup: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
    static let protoMessageName: String = "RepeatedGroup"
    static let protoPackageName: String = "protobuf_unittest"
    static let _protobuf_fieldNames: FieldNameMap = [
      21: .unique(proto: "repeated_group_all_types", json: "repeatedGroupAllTypes"),
    ]

    private class _StorageClass {
      typealias ExtendedMessage = ProtobufUnittest_TestParsingMergeLite.RepeatedGroup
      var unknownFields = SwiftProtobuf.UnknownStorage()
      var _repeatedGroupAllTypes: ProtobufUnittest_TestAllTypesLite? = nil

      func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
        while let fieldNumber = try decoder.nextFieldNumber() {
          try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
        }
      }

      func decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
        switch fieldNumber {
        case 21: try decoder.decodeSingularMessageField(value: &_repeatedGroupAllTypes)
        default: break
        }
      }

      func traverse(visitor: SwiftProtobuf.Visitor) throws {
        if let v = _repeatedGroupAllTypes {
          try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
        }
        unknownFields.traverse(visitor: visitor)
      }

      func isEqualTo(other: _StorageClass) -> Bool {
        if _repeatedGroupAllTypes != other._repeatedGroupAllTypes {return false}
        if unknownFields != other.unknownFields {return false}
        return true
      }

      func copy() -> _StorageClass {
        let clone = _StorageClass()
        clone.unknownFields = unknownFields
        clone._repeatedGroupAllTypes = _repeatedGroupAllTypes
        return clone
      }
    }

    private var _storage = _StorageClass()

    var unknownFields: SwiftProtobuf.UnknownStorage {
      get {return _storage.unknownFields}
      set {_storage.unknownFields = newValue}
    }

    var repeatedGroupAllTypes: ProtobufUnittest_TestAllTypesLite {
      get {return _storage._repeatedGroupAllTypes ?? ProtobufUnittest_TestAllTypesLite()}
      set {_uniqueStorage()._repeatedGroupAllTypes = newValue}
    }
    var hasRepeatedGroupAllTypes: Bool {
      return _storage._repeatedGroupAllTypes != nil
    }
    mutating func clearRepeatedGroupAllTypes() {
      return _storage._repeatedGroupAllTypes = nil
    }

    mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      try _uniqueStorage().decodeMessage(decoder: &decoder)
    }

    mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
      try _uniqueStorage().decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }

    func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
      try _storage.traverse(visitor: visitor)
    }

    func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestParsingMergeLite.RepeatedGroup) -> Bool {
      return _storage === other._storage || _storage.isEqualTo(other: other._storage)
    }

    private mutating func _uniqueStorage() -> _StorageClass {
      if !isKnownUniquelyReferenced(&_storage) {
        _storage = _storage.copy()
      }
      return _storage
    }
  }

  struct Extensions {

    static let optionalExt = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_TestAllTypesLite>, ProtobufUnittest_TestParsingMergeLite>(
      fieldNumber: 1000,
      fieldNames: .same(proto: "protobuf_unittest.TestParsingMergeLite.optional_ext"),
      defaultValue: ProtobufUnittest_TestAllTypesLite()
    )

    static let repeatedExt = SwiftProtobuf.MessageExtension<RepeatedMessageExtensionField<ProtobufUnittest_TestAllTypesLite>, ProtobufUnittest_TestParsingMergeLite>(
      fieldNumber: 1001,
      fieldNames: .same(proto: "protobuf_unittest.TestParsingMergeLite.repeated_ext"),
      defaultValue: []
    )
  }

  var requiredAllTypes: ProtobufUnittest_TestAllTypesLite {
    get {return _storage._requiredAllTypes ?? ProtobufUnittest_TestAllTypesLite()}
    set {_uniqueStorage()._requiredAllTypes = newValue}
  }
  var hasRequiredAllTypes: Bool {
    return _storage._requiredAllTypes != nil
  }
  mutating func clearRequiredAllTypes() {
    return _storage._requiredAllTypes = nil
  }

  var optionalAllTypes: ProtobufUnittest_TestAllTypesLite {
    get {return _storage._optionalAllTypes ?? ProtobufUnittest_TestAllTypesLite()}
    set {_uniqueStorage()._optionalAllTypes = newValue}
  }
  var hasOptionalAllTypes: Bool {
    return _storage._optionalAllTypes != nil
  }
  mutating func clearOptionalAllTypes() {
    return _storage._optionalAllTypes = nil
  }

  var repeatedAllTypes: [ProtobufUnittest_TestAllTypesLite] {
    get {return _storage._repeatedAllTypes}
    set {_uniqueStorage()._repeatedAllTypes = newValue}
  }

  var optionalGroup: ProtobufUnittest_TestParsingMergeLite.OptionalGroup {
    get {return _storage._optionalGroup ?? ProtobufUnittest_TestParsingMergeLite.OptionalGroup()}
    set {_uniqueStorage()._optionalGroup = newValue}
  }
  var hasOptionalGroup: Bool {
    return _storage._optionalGroup != nil
  }
  mutating func clearOptionalGroup() {
    return _storage._optionalGroup = nil
  }

  var repeatedGroup: [ProtobufUnittest_TestParsingMergeLite.RepeatedGroup] {
    get {return _storage._repeatedGroup}
    set {_uniqueStorage()._repeatedGroup = newValue}
  }

  public var isInitialized: Bool {
    return _storage.isInitialized
  }

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    try _uniqueStorage().decodeMessage(decoder: &decoder)
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    try _uniqueStorage().decodeField(decoder: &decoder, fieldNumber: fieldNumber)
  }

  func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    try _storage.traverse(visitor: visitor)
  }

  func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestParsingMergeLite) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }

  mutating func setExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestParsingMergeLite>, value: F.ValueType) {
    return _uniqueStorage().setExtensionValue(ext: ext, value: value)
  }

  mutating func clearExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestParsingMergeLite>) {
    return _storage.clearExtensionValue(ext: ext)
  }

  func getExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestParsingMergeLite>) -> F.ValueType {
    return _storage.getExtensionValue(ext: ext)
  }

  func hasExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestParsingMergeLite>) -> Bool {
    return _storage.hasExtensionValue(ext: ext)
  }
  func _protobuf_fieldNames(for number: Int) -> FieldNameMap.Names? {
    return ProtobufUnittest_TestParsingMergeLite._protobuf_fieldNames.fieldNames(for: number) ?? _storage.extensionFieldValues.fieldNames(for: number)
  }
}

///   TestEmptyMessageLite is used to test unknown fields support in lite mode.
struct ProtobufUnittest_TestEmptyMessageLite: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  static let protoMessageName: String = "TestEmptyMessageLite"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_fieldNames = FieldNameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
  }

  func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    unknownFields.traverse(visitor: visitor)
  }

  func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestEmptyMessageLite) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

///   Like above, but declare all field numbers as potential extensions.  No
///   actual extensions should ever be defined for this type.
struct ProtobufUnittest_TestEmptyMessageWithExtensionsLite: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf.ExtensibleMessage, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  static let protoMessageName: String = "TestEmptyMessageWithExtensionsLite"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_fieldNames = FieldNameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  public var isInitialized: Bool {
    if !_extensionFieldValues.isInitialized {return false}
    return true
  }

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    if (1 <= fieldNumber && fieldNumber < 536870912) {
      try decoder.decodeExtensionField(values: &_extensionFieldValues, messageType: ProtobufUnittest_TestEmptyMessageWithExtensionsLite.self, fieldNumber: fieldNumber)
    }
  }

  func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    try visitor.visitExtensionFields(fields: _extensionFieldValues, start: 1, end: 536870912)
    unknownFields.traverse(visitor: visitor)
  }

  func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestEmptyMessageWithExtensionsLite) -> Bool {
    if unknownFields != other.unknownFields {return false}
    if _extensionFieldValues != other._extensionFieldValues {return false}
    return true
  }

  private var _extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()

  mutating func setExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestEmptyMessageWithExtensionsLite>, value: F.ValueType) {
    _extensionFieldValues[ext.fieldNumber] = ext.set(value: value)
  }

  mutating func clearExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestEmptyMessageWithExtensionsLite>) {
    _extensionFieldValues[ext.fieldNumber] = nil
  }

  func getExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestEmptyMessageWithExtensionsLite>) -> F.ValueType {
    if let fieldValue = _extensionFieldValues[ext.fieldNumber] as? F {
      return fieldValue.value
    }
    return ext.defaultValue
  }

  func hasExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestEmptyMessageWithExtensionsLite>) -> Bool {
    return _extensionFieldValues[ext.fieldNumber] is F
  }
  func _protobuf_fieldNames(for number: Int) -> FieldNameMap.Names? {
    return ProtobufUnittest_TestEmptyMessageWithExtensionsLite._protobuf_fieldNames.fieldNames(for: number) ?? _extensionFieldValues.fieldNames(for: number)
  }
}

struct ProtobufUnittest_V1MessageLite: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  static let protoMessageName: String = "V1MessageLite"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "int_field", json: "intField"),
    2: .unique(proto: "enum_field", json: "enumField"),
  ]

  var unknownFields = SwiftProtobuf.UnknownStorage()

  private var _intField: Int32? = nil
  var intField: Int32 {
    get {return _intField ?? 0}
    set {_intField = newValue}
  }
  var hasIntField: Bool {
    return _intField != nil
  }
  mutating func clearIntField() {
    return _intField = nil
  }

  private var _enumField: ProtobufUnittest_V1EnumLite? = nil
  var enumField: ProtobufUnittest_V1EnumLite {
    get {return _enumField ?? ProtobufUnittest_V1EnumLite.v1First}
    set {_enumField = newValue}
  }
  var hasEnumField: Bool {
    return _enumField != nil
  }
  mutating func clearEnumField() {
    return _enumField = nil
  }

  public var isInitialized: Bool {
    if _intField == nil {return false}
    return true
  }

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 1: try decoder.decodeSingularInt32Field(value: &_intField)
    case 2: try decoder.decodeSingularEnumField(value: &_enumField)
    default: break
    }
  }

  func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    if let v = _intField {
      try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: v, fieldNumber: 1)
    }
    if let v = _enumField {
      try visitor.visitSingularEnumField(value: v, fieldNumber: 2)
    }
    unknownFields.traverse(visitor: visitor)
  }

  func _protoc_generated_isEqualTo(other: ProtobufUnittest_V1MessageLite) -> Bool {
    if _intField != other._intField {return false}
    if _enumField != other._enumField {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

struct ProtobufUnittest_V2MessageLite: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  static let protoMessageName: String = "V2MessageLite"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_fieldNames: FieldNameMap = [
    1: .unique(proto: "int_field", json: "intField"),
    2: .unique(proto: "enum_field", json: "enumField"),
  ]

  var unknownFields = SwiftProtobuf.UnknownStorage()

  private var _intField: Int32? = nil
  var intField: Int32 {
    get {return _intField ?? 0}
    set {_intField = newValue}
  }
  var hasIntField: Bool {
    return _intField != nil
  }
  mutating func clearIntField() {
    return _intField = nil
  }

  private var _enumField: ProtobufUnittest_V2EnumLite? = nil
  var enumField: ProtobufUnittest_V2EnumLite {
    get {return _enumField ?? ProtobufUnittest_V2EnumLite.v2First}
    set {_enumField = newValue}
  }
  var hasEnumField: Bool {
    return _enumField != nil
  }
  mutating func clearEnumField() {
    return _enumField = nil
  }

  public var isInitialized: Bool {
    if _intField == nil {return false}
    return true
  }

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 1: try decoder.decodeSingularInt32Field(value: &_intField)
    case 2: try decoder.decodeSingularEnumField(value: &_enumField)
    default: break
    }
  }

  func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    if let v = _intField {
      try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: v, fieldNumber: 1)
    }
    if let v = _enumField {
      try visitor.visitSingularEnumField(value: v, fieldNumber: 2)
    }
    unknownFields.traverse(visitor: visitor)
  }

  func _protoc_generated_isEqualTo(other: ProtobufUnittest_V2MessageLite) -> Bool {
    if _intField != other._intField {return false}
    if _enumField != other._enumField {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

struct ProtobufUnittest_TestHugeFieldNumbersLite: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf.ExtensibleMessage, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
  static let protoMessageName: String = "TestHugeFieldNumbersLite"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_fieldNames: FieldNameMap = [
    536870000: .unique(proto: "optional_int32", json: "optionalInt32"),
    536870001: .unique(proto: "fixed_32", json: "fixed32"),
    536870002: .unique(proto: "repeated_int32", json: "repeatedInt32"),
    536870003: .unique(proto: "packed_int32", json: "packedInt32"),
    536870004: .unique(proto: "optional_enum", json: "optionalEnum"),
    536870005: .unique(proto: "optional_string", json: "optionalString"),
    536870006: .unique(proto: "optional_bytes", json: "optionalBytes"),
    536870007: .unique(proto: "optional_message", json: "optionalMessage"),
    536870008: .unique(proto: "OptionalGroup", json: "optionalgroup"),
    536870010: .unique(proto: "string_string_map", json: "stringStringMap"),
    536870011: .unique(proto: "oneof_uint32", json: "oneofUint32"),
    536870012: .unique(proto: "oneof_test_all_types", json: "oneofTestAllTypes"),
    536870013: .unique(proto: "oneof_string", json: "oneofString"),
    536870014: .unique(proto: "oneof_bytes", json: "oneofBytes"),
  ]

  private class _StorageClass: SwiftProtobuf.ExtensibleMessageStorage {
    typealias ExtendedMessage = ProtobufUnittest_TestHugeFieldNumbersLite
    var extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
    var unknownFields = SwiftProtobuf.UnknownStorage()
    var _optionalInt32: Int32? = nil
    var _fixed32: Int32? = nil
    var _repeatedInt32: [Int32] = []
    var _packedInt32: [Int32] = []
    var _optionalEnum: ProtobufUnittest_ForeignEnumLite? = nil
    var _optionalString: String? = nil
    var _optionalBytes: Data? = nil
    var _optionalMessage: ProtobufUnittest_ForeignMessageLite? = nil
    var _optionalGroup: ProtobufUnittest_TestHugeFieldNumbersLite.OptionalGroup? = nil
    var _stringStringMap: Dictionary<String,String> = [:]
    var _oneofField: ProtobufUnittest_TestHugeFieldNumbersLite.OneOf_OneofField?

    var isInitialized: Bool {
      if !extensionFieldValues.isInitialized {return false}
      return true
    }

    func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }
    }

    func decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
      switch fieldNumber {
      case 536870000: try decoder.decodeSingularInt32Field(value: &_optionalInt32)
      case 536870001: try decoder.decodeSingularInt32Field(value: &_fixed32)
      case 536870002: try decoder.decodeRepeatedInt32Field(value: &_repeatedInt32)
      case 536870003: try decoder.decodeRepeatedInt32Field(value: &_packedInt32)
      case 536870004: try decoder.decodeSingularEnumField(value: &_optionalEnum)
      case 536870005: try decoder.decodeSingularStringField(value: &_optionalString)
      case 536870006: try decoder.decodeSingularBytesField(value: &_optionalBytes)
      case 536870007: try decoder.decodeSingularMessageField(value: &_optionalMessage)
      case 536870008: try decoder.decodeSingularGroupField(value: &_optionalGroup)
      case 536870010: try decoder.decodeMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &_stringStringMap)
      case 536870011, 536870012, 536870013, 536870014:
        if _oneofField != nil {
          try decoder.handleConflictingOneOf()
        }
        _oneofField = try ProtobufUnittest_TestHugeFieldNumbersLite.OneOf_OneofField(byDecodingFrom: &decoder, fieldNumber: fieldNumber)
      default: if (536860000 <= fieldNumber && fieldNumber < 536870000) {
          try decoder.decodeExtensionField(values: &extensionFieldValues, messageType: ProtobufUnittest_TestHugeFieldNumbersLite.self, fieldNumber: fieldNumber)
        }
      }
    }

    func traverse(visitor: SwiftProtobuf.Visitor) throws {
      try visitor.visitExtensionFields(fields: extensionFieldValues, start: 536860000, end: 536870000)
      if let v = _optionalInt32 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: v, fieldNumber: 536870000)
      }
      if let v = _fixed32 {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: v, fieldNumber: 536870001)
      }
      if !_repeatedInt32.isEmpty {
        try visitor.visitRepeatedField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: _repeatedInt32, fieldNumber: 536870002)
      }
      if !_packedInt32.isEmpty {
        try visitor.visitPackedField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: _packedInt32, fieldNumber: 536870003)
      }
      if let v = _optionalEnum {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 536870004)
      }
      if let v = _optionalString {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: v, fieldNumber: 536870005)
      }
      if let v = _optionalBytes {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufBytes.self, value: v, fieldNumber: 536870006)
      }
      if let v = _optionalMessage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 536870007)
      }
      if let v = _optionalGroup {
        try visitor.visitSingularGroupField(value: v, fieldNumber: 536870008)
      }
      if !_stringStringMap.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf.ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: _stringStringMap, fieldNumber: 536870010)
      }
      try _oneofField?.traverse(visitor: visitor, start: 536870011, end: 536870015)
      unknownFields.traverse(visitor: visitor)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _optionalInt32 != other._optionalInt32 {return false}
      if _fixed32 != other._fixed32 {return false}
      if _repeatedInt32 != other._repeatedInt32 {return false}
      if _packedInt32 != other._packedInt32 {return false}
      if _optionalEnum != other._optionalEnum {return false}
      if _optionalString != other._optionalString {return false}
      if _optionalBytes != other._optionalBytes {return false}
      if _optionalMessage != other._optionalMessage {return false}
      if _optionalGroup != other._optionalGroup {return false}
      if _stringStringMap != other._stringStringMap {return false}
      if _oneofField != other._oneofField {return false}
      if unknownFields != other.unknownFields {return false}
      if extensionFieldValues != other.extensionFieldValues {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone.unknownFields = unknownFields
      clone.extensionFieldValues = extensionFieldValues
      clone._optionalInt32 = _optionalInt32
      clone._fixed32 = _fixed32
      clone._repeatedInt32 = _repeatedInt32
      clone._packedInt32 = _packedInt32
      clone._optionalEnum = _optionalEnum
      clone._optionalString = _optionalString
      clone._optionalBytes = _optionalBytes
      clone._optionalMessage = _optionalMessage
      clone._optionalGroup = _optionalGroup
      clone._stringStringMap = _stringStringMap
      clone._oneofField = _oneofField
      return clone
    }
  }

  private var _storage = _StorageClass()

  var unknownFields: SwiftProtobuf.UnknownStorage {
    get {return _storage.unknownFields}
    set {_storage.unknownFields = newValue}
  }

  enum OneOf_OneofField: Equatable {
    case oneofUint32(UInt32)
    case oneofTestAllTypes(ProtobufUnittest_TestAllTypesLite)
    case oneofString(String)
    case oneofBytes(Data)

    static func ==(lhs: ProtobufUnittest_TestHugeFieldNumbersLite.OneOf_OneofField, rhs: ProtobufUnittest_TestHugeFieldNumbersLite.OneOf_OneofField) -> Bool {
      switch (lhs, rhs) {
      case (.oneofUint32(let l), .oneofUint32(let r)): return l == r
      case (.oneofTestAllTypes(let l), .oneofTestAllTypes(let r)): return l == r
      case (.oneofString(let l), .oneofString(let r)): return l == r
      case (.oneofBytes(let l), .oneofBytes(let r)): return l == r
      default: return false
      }
    }

    fileprivate init?<T: SwiftProtobuf.Decoder>(byDecodingFrom decoder: inout T, fieldNumber: Int) throws {
      switch fieldNumber {
      case 536870011:
        var value: UInt32?
        try decoder.decodeSingularUInt32Field(value: &value)
        if let value = value {
          self = .oneofUint32(value)
          return
        }
      case 536870012:
        var value: ProtobufUnittest_TestAllTypesLite?
        try decoder.decodeSingularMessageField(value: &value)
        if let value = value {
          self = .oneofTestAllTypes(value)
          return
        }
      case 536870013:
        var value: String?
        try decoder.decodeSingularStringField(value: &value)
        if let value = value {
          self = .oneofString(value)
          return
        }
      case 536870014:
        var value: Data?
        try decoder.decodeSingularBytesField(value: &value)
        if let value = value {
          self = .oneofBytes(value)
          return
        }
      default:
        break
      }
      return nil
    }

    fileprivate func traverse(visitor: SwiftProtobuf.Visitor, start: Int, end: Int) throws {
      switch self {
      case .oneofUint32(let v):
        if start <= 536870011 && 536870011 < end {
          try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufUInt32.self, value: v, fieldNumber: 536870011)
        }
      case .oneofTestAllTypes(let v):
        if start <= 536870012 && 536870012 < end {
          try visitor.visitSingularMessageField(value: v, fieldNumber: 536870012)
        }
      case .oneofString(let v):
        if start <= 536870013 && 536870013 < end {
          try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufString.self, value: v, fieldNumber: 536870013)
        }
      case .oneofBytes(let v):
        if start <= 536870014 && 536870014 < end {
          try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufBytes.self, value: v, fieldNumber: 536870014)
        }
      }
    }
  }

  struct OptionalGroup: SwiftProtobuf.Message, SwiftProtobuf.Proto2Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf.ProtoNameProviding {
    static let protoMessageName: String = "OptionalGroup"
    static let protoPackageName: String = "protobuf_unittest"
    static let _protobuf_fieldNames: FieldNameMap = [
      536870009: .unique(proto: "group_a", json: "groupA"),
    ]

    var unknownFields = SwiftProtobuf.UnknownStorage()

    private var _groupA: Int32? = nil
    var groupA: Int32 {
      get {return _groupA ?? 0}
      set {_groupA = newValue}
    }
    var hasGroupA: Bool {
      return _groupA != nil
    }
    mutating func clearGroupA() {
      return _groupA = nil
    }

    mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }
    }

    mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
      switch fieldNumber {
      case 536870009: try decoder.decodeSingularInt32Field(value: &_groupA)
      default: break
      }
    }

    func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
      if let v = _groupA {
        try visitor.visitSingularField(fieldType: SwiftProtobuf.ProtobufInt32.self, value: v, fieldNumber: 536870009)
      }
      unknownFields.traverse(visitor: visitor)
    }

    func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestHugeFieldNumbersLite.OptionalGroup) -> Bool {
      if _groupA != other._groupA {return false}
      if unknownFields != other.unknownFields {return false}
      return true
    }
  }

  var optionalInt32: Int32 {
    get {return _storage._optionalInt32 ?? 0}
    set {_uniqueStorage()._optionalInt32 = newValue}
  }
  var hasOptionalInt32: Bool {
    return _storage._optionalInt32 != nil
  }
  mutating func clearOptionalInt32() {
    return _storage._optionalInt32 = nil
  }

  var fixed32: Int32 {
    get {return _storage._fixed32 ?? 0}
    set {_uniqueStorage()._fixed32 = newValue}
  }
  var hasFixed32: Bool {
    return _storage._fixed32 != nil
  }
  mutating func clearFixed32() {
    return _storage._fixed32 = nil
  }

  var repeatedInt32: [Int32] {
    get {return _storage._repeatedInt32}
    set {_uniqueStorage()._repeatedInt32 = newValue}
  }

  var packedInt32: [Int32] {
    get {return _storage._packedInt32}
    set {_uniqueStorage()._packedInt32 = newValue}
  }

  var optionalEnum: ProtobufUnittest_ForeignEnumLite {
    get {return _storage._optionalEnum ?? ProtobufUnittest_ForeignEnumLite.foreignLiteFoo}
    set {_uniqueStorage()._optionalEnum = newValue}
  }
  var hasOptionalEnum: Bool {
    return _storage._optionalEnum != nil
  }
  mutating func clearOptionalEnum() {
    return _storage._optionalEnum = nil
  }

  var optionalString: String {
    get {return _storage._optionalString ?? ""}
    set {_uniqueStorage()._optionalString = newValue}
  }
  var hasOptionalString: Bool {
    return _storage._optionalString != nil
  }
  mutating func clearOptionalString() {
    return _storage._optionalString = nil
  }

  var optionalBytes: Data {
    get {return _storage._optionalBytes ?? Data()}
    set {_uniqueStorage()._optionalBytes = newValue}
  }
  var hasOptionalBytes: Bool {
    return _storage._optionalBytes != nil
  }
  mutating func clearOptionalBytes() {
    return _storage._optionalBytes = nil
  }

  var optionalMessage: ProtobufUnittest_ForeignMessageLite {
    get {return _storage._optionalMessage ?? ProtobufUnittest_ForeignMessageLite()}
    set {_uniqueStorage()._optionalMessage = newValue}
  }
  var hasOptionalMessage: Bool {
    return _storage._optionalMessage != nil
  }
  mutating func clearOptionalMessage() {
    return _storage._optionalMessage = nil
  }

  var optionalGroup: ProtobufUnittest_TestHugeFieldNumbersLite.OptionalGroup {
    get {return _storage._optionalGroup ?? ProtobufUnittest_TestHugeFieldNumbersLite.OptionalGroup()}
    set {_uniqueStorage()._optionalGroup = newValue}
  }
  var hasOptionalGroup: Bool {
    return _storage._optionalGroup != nil
  }
  mutating func clearOptionalGroup() {
    return _storage._optionalGroup = nil
  }

  var stringStringMap: Dictionary<String,String> {
    get {return _storage._stringStringMap}
    set {_uniqueStorage()._stringStringMap = newValue}
  }

  var oneofUint32: UInt32 {
    get {
      if case .oneofUint32(let v)? = _storage._oneofField {
        return v
      }
      return 0
    }
    set {
      _uniqueStorage()._oneofField = .oneofUint32(newValue)
    }
  }

  var oneofTestAllTypes: ProtobufUnittest_TestAllTypesLite {
    get {
      if case .oneofTestAllTypes(let v)? = _storage._oneofField {
        return v
      }
      return ProtobufUnittest_TestAllTypesLite()
    }
    set {
      _uniqueStorage()._oneofField = .oneofTestAllTypes(newValue)
    }
  }

  var oneofString: String {
    get {
      if case .oneofString(let v)? = _storage._oneofField {
        return v
      }
      return ""
    }
    set {
      _uniqueStorage()._oneofField = .oneofString(newValue)
    }
  }

  var oneofBytes: Data {
    get {
      if case .oneofBytes(let v)? = _storage._oneofField {
        return v
      }
      return Data()
    }
    set {
      _uniqueStorage()._oneofField = .oneofBytes(newValue)
    }
  }

  var oneofField: OneOf_OneofField? {
    get {return _storage._oneofField}
    set {
      _uniqueStorage()._oneofField = newValue
    }
  }

  public var isInitialized: Bool {
    return _storage.isInitialized
  }

  mutating func _protoc_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    try _uniqueStorage().decodeMessage(decoder: &decoder)
  }

  mutating func _protoc_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    try _uniqueStorage().decodeField(decoder: &decoder, fieldNumber: fieldNumber)
  }

  func _protoc_generated_traverse(visitor: SwiftProtobuf.Visitor) throws {
    try _storage.traverse(visitor: visitor)
  }

  func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestHugeFieldNumbersLite) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }

  mutating func setExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestHugeFieldNumbersLite>, value: F.ValueType) {
    return _uniqueStorage().setExtensionValue(ext: ext, value: value)
  }

  mutating func clearExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestHugeFieldNumbersLite>) {
    return _storage.clearExtensionValue(ext: ext)
  }

  func getExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestHugeFieldNumbersLite>) -> F.ValueType {
    return _storage.getExtensionValue(ext: ext)
  }

  func hasExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_TestHugeFieldNumbersLite>) -> Bool {
    return _storage.hasExtensionValue(ext: ext)
  }
  func _protobuf_fieldNames(for number: Int) -> FieldNameMap.Names? {
    return ProtobufUnittest_TestHugeFieldNumbersLite._protobuf_fieldNames.fieldNames(for: number) ?? _storage.extensionFieldValues.fieldNames(for: number)
  }
}

///   Singular
let ProtobufUnittest_Extensions_optionalInt32ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 1,
  fieldNames: .same(proto: "protobuf_unittest.optional_int32_extension_lite"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_optionalInt64ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt64>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 2,
  fieldNames: .same(proto: "protobuf_unittest.optional_int64_extension_lite"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_optionalUint32ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufUInt32>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 3,
  fieldNames: .same(proto: "protobuf_unittest.optional_uint32_extension_lite"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_optionalUint64ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufUInt64>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 4,
  fieldNames: .same(proto: "protobuf_unittest.optional_uint64_extension_lite"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_optionalSint32ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufSInt32>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 5,
  fieldNames: .same(proto: "protobuf_unittest.optional_sint32_extension_lite"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_optionalSint64ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufSInt64>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 6,
  fieldNames: .same(proto: "protobuf_unittest.optional_sint64_extension_lite"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_optionalFixed32ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufFixed32>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 7,
  fieldNames: .same(proto: "protobuf_unittest.optional_fixed32_extension_lite"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_optionalFixed64ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufFixed64>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 8,
  fieldNames: .same(proto: "protobuf_unittest.optional_fixed64_extension_lite"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_optionalSfixed32ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufSFixed32>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 9,
  fieldNames: .same(proto: "protobuf_unittest.optional_sfixed32_extension_lite"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_optionalSfixed64ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufSFixed64>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 10,
  fieldNames: .same(proto: "protobuf_unittest.optional_sfixed64_extension_lite"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_optionalFloatExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufFloat>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 11,
  fieldNames: .same(proto: "protobuf_unittest.optional_float_extension_lite"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_optionalDoubleExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufDouble>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 12,
  fieldNames: .same(proto: "protobuf_unittest.optional_double_extension_lite"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_optionalBoolExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufBool>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 13,
  fieldNames: .same(proto: "protobuf_unittest.optional_bool_extension_lite"),
  defaultValue: false
)

let ProtobufUnittest_Extensions_optionalStringExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufString>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 14,
  fieldNames: .same(proto: "protobuf_unittest.optional_string_extension_lite"),
  defaultValue: ""
)

let ProtobufUnittest_Extensions_optionalBytesExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufBytes>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 15,
  fieldNames: .same(proto: "protobuf_unittest.optional_bytes_extension_lite"),
  defaultValue: Data()
)

let ProtobufUnittest_Extensions_optionalGroupExtensionLite = SwiftProtobuf.MessageExtension<OptionalGroupExtensionField<ProtobufUnittest_OptionalGroup_extension_lite>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 16,
  fieldNames: .same(proto: "protobuf_unittest.OptionalGroup_extension_lite"),
  defaultValue: ProtobufUnittest_OptionalGroup_extension_lite()
)

let ProtobufUnittest_Extensions_optionalNestedMessageExtensionLite = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_TestAllTypesLite.NestedMessage>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 18,
  fieldNames: .same(proto: "protobuf_unittest.optional_nested_message_extension_lite"),
  defaultValue: ProtobufUnittest_TestAllTypesLite.NestedMessage()
)

let ProtobufUnittest_Extensions_optionalForeignMessageExtensionLite = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_ForeignMessageLite>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 19,
  fieldNames: .same(proto: "protobuf_unittest.optional_foreign_message_extension_lite"),
  defaultValue: ProtobufUnittest_ForeignMessageLite()
)

let ProtobufUnittest_Extensions_optionalImportMessageExtensionLite = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittestImport_ImportMessageLite>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 20,
  fieldNames: .same(proto: "protobuf_unittest.optional_import_message_extension_lite"),
  defaultValue: ProtobufUnittestImport_ImportMessageLite()
)

let ProtobufUnittest_Extensions_optionalNestedEnumExtensionLite = SwiftProtobuf.MessageExtension<OptionalEnumExtensionField<ProtobufUnittest_TestAllTypesLite.NestedEnum>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 21,
  fieldNames: .same(proto: "protobuf_unittest.optional_nested_enum_extension_lite"),
  defaultValue: ProtobufUnittest_TestAllTypesLite.NestedEnum.foo
)

let ProtobufUnittest_Extensions_optionalForeignEnumExtensionLite = SwiftProtobuf.MessageExtension<OptionalEnumExtensionField<ProtobufUnittest_ForeignEnumLite>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 22,
  fieldNames: .same(proto: "protobuf_unittest.optional_foreign_enum_extension_lite"),
  defaultValue: ProtobufUnittest_ForeignEnumLite.foreignLiteFoo
)

let ProtobufUnittest_Extensions_optionalImportEnumExtensionLite = SwiftProtobuf.MessageExtension<OptionalEnumExtensionField<ProtobufUnittestImport_ImportEnumLite>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 23,
  fieldNames: .same(proto: "protobuf_unittest.optional_import_enum_extension_lite"),
  defaultValue: ProtobufUnittestImport_ImportEnumLite.importLiteFoo
)

let ProtobufUnittest_Extensions_optionalStringPieceExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufString>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 24,
  fieldNames: .same(proto: "protobuf_unittest.optional_string_piece_extension_lite"),
  defaultValue: ""
)

let ProtobufUnittest_Extensions_optionalCordExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufString>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 25,
  fieldNames: .same(proto: "protobuf_unittest.optional_cord_extension_lite"),
  defaultValue: ""
)

let ProtobufUnittest_Extensions_optionalPublicImportMessageExtensionLite = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittestImport_PublicImportMessageLite>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 26,
  fieldNames: .same(proto: "protobuf_unittest.optional_public_import_message_extension_lite"),
  defaultValue: ProtobufUnittestImport_PublicImportMessageLite()
)

let ProtobufUnittest_Extensions_optionalLazyMessageExtensionLite = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_TestAllTypesLite.NestedMessage>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 27,
  fieldNames: .same(proto: "protobuf_unittest.optional_lazy_message_extension_lite"),
  defaultValue: ProtobufUnittest_TestAllTypesLite.NestedMessage()
)

///   Repeated
let ProtobufUnittest_Extensions_repeatedInt32ExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufInt32>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 31,
  fieldNames: .same(proto: "protobuf_unittest.repeated_int32_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedInt64ExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufInt64>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 32,
  fieldNames: .same(proto: "protobuf_unittest.repeated_int64_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedUint32ExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufUInt32>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 33,
  fieldNames: .same(proto: "protobuf_unittest.repeated_uint32_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedUint64ExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufUInt64>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 34,
  fieldNames: .same(proto: "protobuf_unittest.repeated_uint64_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedSint32ExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufSInt32>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 35,
  fieldNames: .same(proto: "protobuf_unittest.repeated_sint32_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedSint64ExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufSInt64>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 36,
  fieldNames: .same(proto: "protobuf_unittest.repeated_sint64_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedFixed32ExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufFixed32>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 37,
  fieldNames: .same(proto: "protobuf_unittest.repeated_fixed32_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedFixed64ExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufFixed64>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 38,
  fieldNames: .same(proto: "protobuf_unittest.repeated_fixed64_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedSfixed32ExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufSFixed32>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 39,
  fieldNames: .same(proto: "protobuf_unittest.repeated_sfixed32_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedSfixed64ExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufSFixed64>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 40,
  fieldNames: .same(proto: "protobuf_unittest.repeated_sfixed64_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedFloatExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufFloat>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 41,
  fieldNames: .same(proto: "protobuf_unittest.repeated_float_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedDoubleExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufDouble>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 42,
  fieldNames: .same(proto: "protobuf_unittest.repeated_double_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedBoolExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufBool>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 43,
  fieldNames: .same(proto: "protobuf_unittest.repeated_bool_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedStringExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufString>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 44,
  fieldNames: .same(proto: "protobuf_unittest.repeated_string_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedBytesExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufBytes>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 45,
  fieldNames: .same(proto: "protobuf_unittest.repeated_bytes_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedGroupExtensionLite = SwiftProtobuf.MessageExtension<RepeatedGroupExtensionField<ProtobufUnittest_RepeatedGroup_extension_lite>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 46,
  fieldNames: .same(proto: "protobuf_unittest.RepeatedGroup_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedNestedMessageExtensionLite = SwiftProtobuf.MessageExtension<RepeatedMessageExtensionField<ProtobufUnittest_TestAllTypesLite.NestedMessage>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 48,
  fieldNames: .same(proto: "protobuf_unittest.repeated_nested_message_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedForeignMessageExtensionLite = SwiftProtobuf.MessageExtension<RepeatedMessageExtensionField<ProtobufUnittest_ForeignMessageLite>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 49,
  fieldNames: .same(proto: "protobuf_unittest.repeated_foreign_message_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedImportMessageExtensionLite = SwiftProtobuf.MessageExtension<RepeatedMessageExtensionField<ProtobufUnittestImport_ImportMessageLite>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 50,
  fieldNames: .same(proto: "protobuf_unittest.repeated_import_message_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedNestedEnumExtensionLite = SwiftProtobuf.MessageExtension<RepeatedEnumExtensionField<ProtobufUnittest_TestAllTypesLite.NestedEnum>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 51,
  fieldNames: .same(proto: "protobuf_unittest.repeated_nested_enum_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedForeignEnumExtensionLite = SwiftProtobuf.MessageExtension<RepeatedEnumExtensionField<ProtobufUnittest_ForeignEnumLite>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 52,
  fieldNames: .same(proto: "protobuf_unittest.repeated_foreign_enum_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedImportEnumExtensionLite = SwiftProtobuf.MessageExtension<RepeatedEnumExtensionField<ProtobufUnittestImport_ImportEnumLite>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 53,
  fieldNames: .same(proto: "protobuf_unittest.repeated_import_enum_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedStringPieceExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufString>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 54,
  fieldNames: .same(proto: "protobuf_unittest.repeated_string_piece_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedCordExtensionLite = SwiftProtobuf.MessageExtension<RepeatedExtensionField<SwiftProtobuf.ProtobufString>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 55,
  fieldNames: .same(proto: "protobuf_unittest.repeated_cord_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_repeatedLazyMessageExtensionLite = SwiftProtobuf.MessageExtension<RepeatedMessageExtensionField<ProtobufUnittest_TestAllTypesLite.NestedMessage>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 57,
  fieldNames: .same(proto: "protobuf_unittest.repeated_lazy_message_extension_lite"),
  defaultValue: []
)

///   Singular with defaults
let ProtobufUnittest_Extensions_defaultInt32ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 61,
  fieldNames: .same(proto: "protobuf_unittest.default_int32_extension_lite"),
  defaultValue: 41
)

let ProtobufUnittest_Extensions_defaultInt64ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt64>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 62,
  fieldNames: .same(proto: "protobuf_unittest.default_int64_extension_lite"),
  defaultValue: 42
)

let ProtobufUnittest_Extensions_defaultUint32ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufUInt32>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 63,
  fieldNames: .same(proto: "protobuf_unittest.default_uint32_extension_lite"),
  defaultValue: 43
)

let ProtobufUnittest_Extensions_defaultUint64ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufUInt64>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 64,
  fieldNames: .same(proto: "protobuf_unittest.default_uint64_extension_lite"),
  defaultValue: 44
)

let ProtobufUnittest_Extensions_defaultSint32ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufSInt32>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 65,
  fieldNames: .same(proto: "protobuf_unittest.default_sint32_extension_lite"),
  defaultValue: -45
)

let ProtobufUnittest_Extensions_defaultSint64ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufSInt64>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 66,
  fieldNames: .same(proto: "protobuf_unittest.default_sint64_extension_lite"),
  defaultValue: 46
)

let ProtobufUnittest_Extensions_defaultFixed32ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufFixed32>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 67,
  fieldNames: .same(proto: "protobuf_unittest.default_fixed32_extension_lite"),
  defaultValue: 47
)

let ProtobufUnittest_Extensions_defaultFixed64ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufFixed64>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 68,
  fieldNames: .same(proto: "protobuf_unittest.default_fixed64_extension_lite"),
  defaultValue: 48
)

let ProtobufUnittest_Extensions_defaultSfixed32ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufSFixed32>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 69,
  fieldNames: .same(proto: "protobuf_unittest.default_sfixed32_extension_lite"),
  defaultValue: 49
)

let ProtobufUnittest_Extensions_defaultSfixed64ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufSFixed64>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 70,
  fieldNames: .same(proto: "protobuf_unittest.default_sfixed64_extension_lite"),
  defaultValue: -50
)

let ProtobufUnittest_Extensions_defaultFloatExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufFloat>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 71,
  fieldNames: .same(proto: "protobuf_unittest.default_float_extension_lite"),
  defaultValue: 51.5
)

let ProtobufUnittest_Extensions_defaultDoubleExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufDouble>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 72,
  fieldNames: .same(proto: "protobuf_unittest.default_double_extension_lite"),
  defaultValue: 52000
)

let ProtobufUnittest_Extensions_defaultBoolExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufBool>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 73,
  fieldNames: .same(proto: "protobuf_unittest.default_bool_extension_lite"),
  defaultValue: true
)

let ProtobufUnittest_Extensions_defaultStringExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufString>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 74,
  fieldNames: .same(proto: "protobuf_unittest.default_string_extension_lite"),
  defaultValue: "hello"
)

let ProtobufUnittest_Extensions_defaultBytesExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufBytes>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 75,
  fieldNames: .same(proto: "protobuf_unittest.default_bytes_extension_lite"),
  defaultValue: Data(bytes: [119, 111, 114, 108, 100])
)

let ProtobufUnittest_Extensions_defaultNestedEnumExtensionLite = SwiftProtobuf.MessageExtension<OptionalEnumExtensionField<ProtobufUnittest_TestAllTypesLite.NestedEnum>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 81,
  fieldNames: .same(proto: "protobuf_unittest.default_nested_enum_extension_lite"),
  defaultValue: ProtobufUnittest_TestAllTypesLite.NestedEnum.bar
)

let ProtobufUnittest_Extensions_defaultForeignEnumExtensionLite = SwiftProtobuf.MessageExtension<OptionalEnumExtensionField<ProtobufUnittest_ForeignEnumLite>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 82,
  fieldNames: .same(proto: "protobuf_unittest.default_foreign_enum_extension_lite"),
  defaultValue: ProtobufUnittest_ForeignEnumLite.foreignLiteBar
)

let ProtobufUnittest_Extensions_defaultImportEnumExtensionLite = SwiftProtobuf.MessageExtension<OptionalEnumExtensionField<ProtobufUnittestImport_ImportEnumLite>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 83,
  fieldNames: .same(proto: "protobuf_unittest.default_import_enum_extension_lite"),
  defaultValue: ProtobufUnittestImport_ImportEnumLite.importLiteBar
)

let ProtobufUnittest_Extensions_defaultStringPieceExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufString>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 84,
  fieldNames: .same(proto: "protobuf_unittest.default_string_piece_extension_lite"),
  defaultValue: "abc"
)

let ProtobufUnittest_Extensions_defaultCordExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufString>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 85,
  fieldNames: .same(proto: "protobuf_unittest.default_cord_extension_lite"),
  defaultValue: "123"
)

///   For oneof test
let ProtobufUnittest_Extensions_oneofUint32ExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufUInt32>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 111,
  fieldNames: .same(proto: "protobuf_unittest.oneof_uint32_extension_lite"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_oneofNestedMessageExtensionLite = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_TestAllTypesLite.NestedMessage>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 112,
  fieldNames: .same(proto: "protobuf_unittest.oneof_nested_message_extension_lite"),
  defaultValue: ProtobufUnittest_TestAllTypesLite.NestedMessage()
)

let ProtobufUnittest_Extensions_oneofStringExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufString>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 113,
  fieldNames: .same(proto: "protobuf_unittest.oneof_string_extension_lite"),
  defaultValue: ""
)

let ProtobufUnittest_Extensions_oneofBytesExtensionLite = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufBytes>, ProtobufUnittest_TestAllExtensionsLite>(
  fieldNumber: 114,
  fieldNames: .same(proto: "protobuf_unittest.oneof_bytes_extension_lite"),
  defaultValue: Data()
)

let ProtobufUnittest_Extensions_packedInt32ExtensionLite = SwiftProtobuf.MessageExtension<PackedExtensionField<SwiftProtobuf.ProtobufInt32>, ProtobufUnittest_TestPackedExtensionsLite>(
  fieldNumber: 90,
  fieldNames: .same(proto: "protobuf_unittest.packed_int32_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_packedInt64ExtensionLite = SwiftProtobuf.MessageExtension<PackedExtensionField<SwiftProtobuf.ProtobufInt64>, ProtobufUnittest_TestPackedExtensionsLite>(
  fieldNumber: 91,
  fieldNames: .same(proto: "protobuf_unittest.packed_int64_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_packedUint32ExtensionLite = SwiftProtobuf.MessageExtension<PackedExtensionField<SwiftProtobuf.ProtobufUInt32>, ProtobufUnittest_TestPackedExtensionsLite>(
  fieldNumber: 92,
  fieldNames: .same(proto: "protobuf_unittest.packed_uint32_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_packedUint64ExtensionLite = SwiftProtobuf.MessageExtension<PackedExtensionField<SwiftProtobuf.ProtobufUInt64>, ProtobufUnittest_TestPackedExtensionsLite>(
  fieldNumber: 93,
  fieldNames: .same(proto: "protobuf_unittest.packed_uint64_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_packedSint32ExtensionLite = SwiftProtobuf.MessageExtension<PackedExtensionField<SwiftProtobuf.ProtobufSInt32>, ProtobufUnittest_TestPackedExtensionsLite>(
  fieldNumber: 94,
  fieldNames: .same(proto: "protobuf_unittest.packed_sint32_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_packedSint64ExtensionLite = SwiftProtobuf.MessageExtension<PackedExtensionField<SwiftProtobuf.ProtobufSInt64>, ProtobufUnittest_TestPackedExtensionsLite>(
  fieldNumber: 95,
  fieldNames: .same(proto: "protobuf_unittest.packed_sint64_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_packedFixed32ExtensionLite = SwiftProtobuf.MessageExtension<PackedExtensionField<SwiftProtobuf.ProtobufFixed32>, ProtobufUnittest_TestPackedExtensionsLite>(
  fieldNumber: 96,
  fieldNames: .same(proto: "protobuf_unittest.packed_fixed32_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_packedFixed64ExtensionLite = SwiftProtobuf.MessageExtension<PackedExtensionField<SwiftProtobuf.ProtobufFixed64>, ProtobufUnittest_TestPackedExtensionsLite>(
  fieldNumber: 97,
  fieldNames: .same(proto: "protobuf_unittest.packed_fixed64_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_packedSfixed32ExtensionLite = SwiftProtobuf.MessageExtension<PackedExtensionField<SwiftProtobuf.ProtobufSFixed32>, ProtobufUnittest_TestPackedExtensionsLite>(
  fieldNumber: 98,
  fieldNames: .same(proto: "protobuf_unittest.packed_sfixed32_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_packedSfixed64ExtensionLite = SwiftProtobuf.MessageExtension<PackedExtensionField<SwiftProtobuf.ProtobufSFixed64>, ProtobufUnittest_TestPackedExtensionsLite>(
  fieldNumber: 99,
  fieldNames: .same(proto: "protobuf_unittest.packed_sfixed64_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_packedFloatExtensionLite = SwiftProtobuf.MessageExtension<PackedExtensionField<SwiftProtobuf.ProtobufFloat>, ProtobufUnittest_TestPackedExtensionsLite>(
  fieldNumber: 100,
  fieldNames: .same(proto: "protobuf_unittest.packed_float_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_packedDoubleExtensionLite = SwiftProtobuf.MessageExtension<PackedExtensionField<SwiftProtobuf.ProtobufDouble>, ProtobufUnittest_TestPackedExtensionsLite>(
  fieldNumber: 101,
  fieldNames: .same(proto: "protobuf_unittest.packed_double_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_packedBoolExtensionLite = SwiftProtobuf.MessageExtension<PackedExtensionField<SwiftProtobuf.ProtobufBool>, ProtobufUnittest_TestPackedExtensionsLite>(
  fieldNumber: 102,
  fieldNames: .same(proto: "protobuf_unittest.packed_bool_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_packedEnumExtensionLite = SwiftProtobuf.MessageExtension<PackedEnumExtensionField<ProtobufUnittest_ForeignEnumLite>, ProtobufUnittest_TestPackedExtensionsLite>(
  fieldNumber: 103,
  fieldNames: .same(proto: "protobuf_unittest.packed_enum_extension_lite"),
  defaultValue: []
)

let ProtobufUnittest_Extensions_testAllTypesLite = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_TestAllTypesLite>, ProtobufUnittest_TestHugeFieldNumbersLite>(
  fieldNumber: 536860000,
  fieldNames: .same(proto: "protobuf_unittest.test_all_types_lite"),
  defaultValue: ProtobufUnittest_TestAllTypesLite()
)

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_TestNestedExtensionLite_nestedExtension: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_TestNestedExtensionLite.Extensions.nestedExtension) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_TestNestedExtensionLite.Extensions.nestedExtension, value: newValue)}
  }
  var hasProtobufUnittest_TestNestedExtensionLite_nestedExtension: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_TestNestedExtensionLite.Extensions.nestedExtension)
  }
  mutating func clearProtobufUnittest_TestNestedExtensionLite_nestedExtension() {
    clearExtensionValue(ext: ProtobufUnittest_TestNestedExtensionLite.Extensions.nestedExtension)
  }
}

extension ProtobufUnittest_TestParsingMergeLite {
  var ProtobufUnittest_TestParsingMergeLite_optionalExt: ProtobufUnittest_TestAllTypesLite {
    get {return getExtensionValue(ext: ProtobufUnittest_TestParsingMergeLite.Extensions.optionalExt) ?? ProtobufUnittest_TestAllTypesLite()}
    set {setExtensionValue(ext: ProtobufUnittest_TestParsingMergeLite.Extensions.optionalExt, value: newValue)}
  }
  var hasProtobufUnittest_TestParsingMergeLite_optionalExt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_TestParsingMergeLite.Extensions.optionalExt)
  }
  mutating func clearProtobufUnittest_TestParsingMergeLite_optionalExt() {
    clearExtensionValue(ext: ProtobufUnittest_TestParsingMergeLite.Extensions.optionalExt)
  }
}

extension ProtobufUnittest_TestParsingMergeLite {
  var ProtobufUnittest_TestParsingMergeLite_repeatedExt: [ProtobufUnittest_TestAllTypesLite] {
    get {return getExtensionValue(ext: ProtobufUnittest_TestParsingMergeLite.Extensions.repeatedExt)}
    set {setExtensionValue(ext: ProtobufUnittest_TestParsingMergeLite.Extensions.repeatedExt, value: newValue)}
  }
  var hasProtobufUnittest_TestParsingMergeLite_repeatedExt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_TestParsingMergeLite.Extensions.repeatedExt)
  }
  mutating func clearProtobufUnittest_TestParsingMergeLite_repeatedExt() {
    clearExtensionValue(ext: ProtobufUnittest_TestParsingMergeLite.Extensions.repeatedExt)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  ///   Singular
  var ProtobufUnittest_optionalInt32ExtensionLite: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalInt32ExtensionLite) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalInt32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalInt32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalInt32ExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalInt32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalInt32ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalInt64ExtensionLite: Int64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalInt64ExtensionLite) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalInt64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalInt64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalInt64ExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalInt64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalInt64ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalUint32ExtensionLite: UInt32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalUint32ExtensionLite) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalUint32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalUint32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalUint32ExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalUint32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalUint32ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalUint64ExtensionLite: UInt64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalUint64ExtensionLite) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalUint64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalUint64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalUint64ExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalUint64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalUint64ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalSint32ExtensionLite: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalSint32ExtensionLite) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalSint32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalSint32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalSint32ExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalSint32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalSint32ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalSint64ExtensionLite: Int64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalSint64ExtensionLite) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalSint64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalSint64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalSint64ExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalSint64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalSint64ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalFixed32ExtensionLite: UInt32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalFixed32ExtensionLite) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalFixed32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalFixed32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalFixed32ExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalFixed32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalFixed32ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalFixed64ExtensionLite: UInt64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalFixed64ExtensionLite) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalFixed64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalFixed64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalFixed64ExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalFixed64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalFixed64ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalSfixed32ExtensionLite: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalSfixed32ExtensionLite) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalSfixed32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalSfixed32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalSfixed32ExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalSfixed32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalSfixed32ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalSfixed64ExtensionLite: Int64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalSfixed64ExtensionLite) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalSfixed64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalSfixed64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalSfixed64ExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalSfixed64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalSfixed64ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalFloatExtensionLite: Float {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalFloatExtensionLite) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalFloatExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalFloatExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalFloatExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalFloatExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalFloatExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalDoubleExtensionLite: Double {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalDoubleExtensionLite) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalDoubleExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalDoubleExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalDoubleExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalDoubleExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalDoubleExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalBoolExtensionLite: Bool {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalBoolExtensionLite) ?? false}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalBoolExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalBoolExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalBoolExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalBoolExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalBoolExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalStringExtensionLite: String {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalStringExtensionLite) ?? ""}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalStringExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalStringExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalStringExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalStringExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalStringExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalBytesExtensionLite: Data {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalBytesExtensionLite) ?? Data()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalBytesExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalBytesExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalBytesExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalBytesExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalBytesExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalGroupExtensionLite: ProtobufUnittest_OptionalGroup_extension_lite {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalGroupExtensionLite) ?? ProtobufUnittest_OptionalGroup_extension_lite()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalGroupExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalGroupExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalGroupExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalGroupExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalGroupExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalNestedMessageExtensionLite: ProtobufUnittest_TestAllTypesLite.NestedMessage {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalNestedMessageExtensionLite) ?? ProtobufUnittest_TestAllTypesLite.NestedMessage()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalNestedMessageExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalNestedMessageExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalNestedMessageExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalNestedMessageExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalNestedMessageExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalForeignMessageExtensionLite: ProtobufUnittest_ForeignMessageLite {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalForeignMessageExtensionLite) ?? ProtobufUnittest_ForeignMessageLite()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalForeignMessageExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalForeignMessageExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalForeignMessageExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalForeignMessageExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalForeignMessageExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalImportMessageExtensionLite: ProtobufUnittestImport_ImportMessageLite {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalImportMessageExtensionLite) ?? ProtobufUnittestImport_ImportMessageLite()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalImportMessageExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalImportMessageExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalImportMessageExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalImportMessageExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalImportMessageExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalNestedEnumExtensionLite: ProtobufUnittest_TestAllTypesLite.NestedEnum {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalNestedEnumExtensionLite) ?? ProtobufUnittest_TestAllTypesLite.NestedEnum.foo}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalNestedEnumExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalNestedEnumExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalNestedEnumExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalNestedEnumExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalNestedEnumExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalForeignEnumExtensionLite: ProtobufUnittest_ForeignEnumLite {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalForeignEnumExtensionLite) ?? ProtobufUnittest_ForeignEnumLite.foreignLiteFoo}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalForeignEnumExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalForeignEnumExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalForeignEnumExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalForeignEnumExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalForeignEnumExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalImportEnumExtensionLite: ProtobufUnittestImport_ImportEnumLite {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalImportEnumExtensionLite) ?? ProtobufUnittestImport_ImportEnumLite.importLiteFoo}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalImportEnumExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalImportEnumExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalImportEnumExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalImportEnumExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalImportEnumExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalStringPieceExtensionLite: String {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalStringPieceExtensionLite) ?? ""}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalStringPieceExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalStringPieceExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalStringPieceExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalStringPieceExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalStringPieceExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalCordExtensionLite: String {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalCordExtensionLite) ?? ""}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalCordExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalCordExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalCordExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalCordExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalCordExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalPublicImportMessageExtensionLite: ProtobufUnittestImport_PublicImportMessageLite {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalPublicImportMessageExtensionLite) ?? ProtobufUnittestImport_PublicImportMessageLite()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalPublicImportMessageExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalPublicImportMessageExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalPublicImportMessageExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalPublicImportMessageExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalPublicImportMessageExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_optionalLazyMessageExtensionLite: ProtobufUnittest_TestAllTypesLite.NestedMessage {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_optionalLazyMessageExtensionLite) ?? ProtobufUnittest_TestAllTypesLite.NestedMessage()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_optionalLazyMessageExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_optionalLazyMessageExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_optionalLazyMessageExtensionLite)
  }
  mutating func clearProtobufUnittest_optionalLazyMessageExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_optionalLazyMessageExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  ///   Repeated
  var ProtobufUnittest_repeatedInt32ExtensionLite: [Int32] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedInt32ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedInt32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedInt32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedInt32ExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedInt32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedInt32ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedInt64ExtensionLite: [Int64] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedInt64ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedInt64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedInt64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedInt64ExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedInt64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedInt64ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedUint32ExtensionLite: [UInt32] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedUint32ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedUint32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedUint32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedUint32ExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedUint32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedUint32ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedUint64ExtensionLite: [UInt64] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedUint64ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedUint64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedUint64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedUint64ExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedUint64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedUint64ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedSint32ExtensionLite: [Int32] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedSint32ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedSint32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedSint32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedSint32ExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedSint32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedSint32ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedSint64ExtensionLite: [Int64] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedSint64ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedSint64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedSint64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedSint64ExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedSint64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedSint64ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedFixed32ExtensionLite: [UInt32] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedFixed32ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedFixed32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedFixed32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedFixed32ExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedFixed32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedFixed32ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedFixed64ExtensionLite: [UInt64] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedFixed64ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedFixed64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedFixed64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedFixed64ExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedFixed64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedFixed64ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedSfixed32ExtensionLite: [Int32] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedSfixed32ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedSfixed32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedSfixed32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedSfixed32ExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedSfixed32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedSfixed32ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedSfixed64ExtensionLite: [Int64] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedSfixed64ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedSfixed64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedSfixed64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedSfixed64ExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedSfixed64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedSfixed64ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedFloatExtensionLite: [Float] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedFloatExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedFloatExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedFloatExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedFloatExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedFloatExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedFloatExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedDoubleExtensionLite: [Double] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedDoubleExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedDoubleExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedDoubleExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedDoubleExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedDoubleExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedDoubleExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedBoolExtensionLite: [Bool] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedBoolExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedBoolExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedBoolExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedBoolExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedBoolExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedBoolExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedStringExtensionLite: [String] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedStringExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedStringExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedStringExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedStringExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedStringExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedStringExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedBytesExtensionLite: [Data] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedBytesExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedBytesExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedBytesExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedBytesExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedBytesExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedBytesExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedGroupExtensionLite: [ProtobufUnittest_RepeatedGroup_extension_lite] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedGroupExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedGroupExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedGroupExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedGroupExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedGroupExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedGroupExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedNestedMessageExtensionLite: [ProtobufUnittest_TestAllTypesLite.NestedMessage] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedNestedMessageExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedNestedMessageExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedNestedMessageExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedNestedMessageExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedNestedMessageExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedNestedMessageExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedForeignMessageExtensionLite: [ProtobufUnittest_ForeignMessageLite] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedForeignMessageExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedForeignMessageExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedForeignMessageExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedForeignMessageExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedForeignMessageExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedForeignMessageExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedImportMessageExtensionLite: [ProtobufUnittestImport_ImportMessageLite] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedImportMessageExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedImportMessageExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedImportMessageExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedImportMessageExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedImportMessageExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedImportMessageExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedNestedEnumExtensionLite: [ProtobufUnittest_TestAllTypesLite.NestedEnum] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedNestedEnumExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedNestedEnumExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedNestedEnumExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedNestedEnumExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedNestedEnumExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedNestedEnumExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedForeignEnumExtensionLite: [ProtobufUnittest_ForeignEnumLite] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedForeignEnumExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedForeignEnumExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedForeignEnumExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedForeignEnumExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedForeignEnumExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedForeignEnumExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedImportEnumExtensionLite: [ProtobufUnittestImport_ImportEnumLite] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedImportEnumExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedImportEnumExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedImportEnumExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedImportEnumExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedImportEnumExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedImportEnumExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedStringPieceExtensionLite: [String] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedStringPieceExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedStringPieceExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedStringPieceExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedStringPieceExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedStringPieceExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedStringPieceExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedCordExtensionLite: [String] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedCordExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedCordExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedCordExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedCordExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedCordExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedCordExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_repeatedLazyMessageExtensionLite: [ProtobufUnittest_TestAllTypesLite.NestedMessage] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_repeatedLazyMessageExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_repeatedLazyMessageExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_repeatedLazyMessageExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_repeatedLazyMessageExtensionLite)
  }
  mutating func clearProtobufUnittest_repeatedLazyMessageExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_repeatedLazyMessageExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  ///   Singular with defaults
  var ProtobufUnittest_defaultInt32ExtensionLite: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultInt32ExtensionLite) ?? 41}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultInt32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultInt32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultInt32ExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultInt32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultInt32ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultInt64ExtensionLite: Int64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultInt64ExtensionLite) ?? 42}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultInt64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultInt64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultInt64ExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultInt64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultInt64ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultUint32ExtensionLite: UInt32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultUint32ExtensionLite) ?? 43}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultUint32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultUint32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultUint32ExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultUint32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultUint32ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultUint64ExtensionLite: UInt64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultUint64ExtensionLite) ?? 44}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultUint64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultUint64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultUint64ExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultUint64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultUint64ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultSint32ExtensionLite: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultSint32ExtensionLite) ?? -45}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultSint32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultSint32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultSint32ExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultSint32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultSint32ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultSint64ExtensionLite: Int64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultSint64ExtensionLite) ?? 46}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultSint64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultSint64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultSint64ExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultSint64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultSint64ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultFixed32ExtensionLite: UInt32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultFixed32ExtensionLite) ?? 47}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultFixed32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultFixed32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultFixed32ExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultFixed32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultFixed32ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultFixed64ExtensionLite: UInt64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultFixed64ExtensionLite) ?? 48}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultFixed64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultFixed64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultFixed64ExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultFixed64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultFixed64ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultSfixed32ExtensionLite: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultSfixed32ExtensionLite) ?? 49}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultSfixed32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultSfixed32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultSfixed32ExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultSfixed32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultSfixed32ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultSfixed64ExtensionLite: Int64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultSfixed64ExtensionLite) ?? -50}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultSfixed64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultSfixed64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultSfixed64ExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultSfixed64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultSfixed64ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultFloatExtensionLite: Float {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultFloatExtensionLite) ?? 51.5}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultFloatExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultFloatExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultFloatExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultFloatExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultFloatExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultDoubleExtensionLite: Double {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultDoubleExtensionLite) ?? 52000}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultDoubleExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultDoubleExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultDoubleExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultDoubleExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultDoubleExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultBoolExtensionLite: Bool {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultBoolExtensionLite) ?? true}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultBoolExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultBoolExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultBoolExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultBoolExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultBoolExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultStringExtensionLite: String {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultStringExtensionLite) ?? "hello"}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultStringExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultStringExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultStringExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultStringExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultStringExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultBytesExtensionLite: Data {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultBytesExtensionLite) ?? Data(bytes: [119, 111, 114, 108, 100])}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultBytesExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultBytesExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultBytesExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultBytesExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultBytesExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultNestedEnumExtensionLite: ProtobufUnittest_TestAllTypesLite.NestedEnum {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultNestedEnumExtensionLite) ?? ProtobufUnittest_TestAllTypesLite.NestedEnum.bar}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultNestedEnumExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultNestedEnumExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultNestedEnumExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultNestedEnumExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultNestedEnumExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultForeignEnumExtensionLite: ProtobufUnittest_ForeignEnumLite {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultForeignEnumExtensionLite) ?? ProtobufUnittest_ForeignEnumLite.foreignLiteBar}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultForeignEnumExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultForeignEnumExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultForeignEnumExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultForeignEnumExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultForeignEnumExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultImportEnumExtensionLite: ProtobufUnittestImport_ImportEnumLite {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultImportEnumExtensionLite) ?? ProtobufUnittestImport_ImportEnumLite.importLiteBar}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultImportEnumExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultImportEnumExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultImportEnumExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultImportEnumExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultImportEnumExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultStringPieceExtensionLite: String {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultStringPieceExtensionLite) ?? "abc"}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultStringPieceExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultStringPieceExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultStringPieceExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultStringPieceExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultStringPieceExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_defaultCordExtensionLite: String {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_defaultCordExtensionLite) ?? "123"}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_defaultCordExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_defaultCordExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_defaultCordExtensionLite)
  }
  mutating func clearProtobufUnittest_defaultCordExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_defaultCordExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  ///   For oneof test
  var ProtobufUnittest_oneofUint32ExtensionLite: UInt32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_oneofUint32ExtensionLite) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_oneofUint32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_oneofUint32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_oneofUint32ExtensionLite)
  }
  mutating func clearProtobufUnittest_oneofUint32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_oneofUint32ExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_oneofNestedMessageExtensionLite: ProtobufUnittest_TestAllTypesLite.NestedMessage {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_oneofNestedMessageExtensionLite) ?? ProtobufUnittest_TestAllTypesLite.NestedMessage()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_oneofNestedMessageExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_oneofNestedMessageExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_oneofNestedMessageExtensionLite)
  }
  mutating func clearProtobufUnittest_oneofNestedMessageExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_oneofNestedMessageExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_oneofStringExtensionLite: String {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_oneofStringExtensionLite) ?? ""}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_oneofStringExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_oneofStringExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_oneofStringExtensionLite)
  }
  mutating func clearProtobufUnittest_oneofStringExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_oneofStringExtensionLite)
  }
}

extension ProtobufUnittest_TestAllExtensionsLite {
  var ProtobufUnittest_oneofBytesExtensionLite: Data {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_oneofBytesExtensionLite) ?? Data()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_oneofBytesExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_oneofBytesExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_oneofBytesExtensionLite)
  }
  mutating func clearProtobufUnittest_oneofBytesExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_oneofBytesExtensionLite)
  }
}

extension ProtobufUnittest_TestPackedExtensionsLite {
  var ProtobufUnittest_packedInt32ExtensionLite: [Int32] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_packedInt32ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_packedInt32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_packedInt32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_packedInt32ExtensionLite)
  }
  mutating func clearProtobufUnittest_packedInt32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_packedInt32ExtensionLite)
  }
}

extension ProtobufUnittest_TestPackedExtensionsLite {
  var ProtobufUnittest_packedInt64ExtensionLite: [Int64] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_packedInt64ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_packedInt64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_packedInt64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_packedInt64ExtensionLite)
  }
  mutating func clearProtobufUnittest_packedInt64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_packedInt64ExtensionLite)
  }
}

extension ProtobufUnittest_TestPackedExtensionsLite {
  var ProtobufUnittest_packedUint32ExtensionLite: [UInt32] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_packedUint32ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_packedUint32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_packedUint32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_packedUint32ExtensionLite)
  }
  mutating func clearProtobufUnittest_packedUint32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_packedUint32ExtensionLite)
  }
}

extension ProtobufUnittest_TestPackedExtensionsLite {
  var ProtobufUnittest_packedUint64ExtensionLite: [UInt64] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_packedUint64ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_packedUint64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_packedUint64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_packedUint64ExtensionLite)
  }
  mutating func clearProtobufUnittest_packedUint64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_packedUint64ExtensionLite)
  }
}

extension ProtobufUnittest_TestPackedExtensionsLite {
  var ProtobufUnittest_packedSint32ExtensionLite: [Int32] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_packedSint32ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_packedSint32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_packedSint32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_packedSint32ExtensionLite)
  }
  mutating func clearProtobufUnittest_packedSint32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_packedSint32ExtensionLite)
  }
}

extension ProtobufUnittest_TestPackedExtensionsLite {
  var ProtobufUnittest_packedSint64ExtensionLite: [Int64] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_packedSint64ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_packedSint64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_packedSint64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_packedSint64ExtensionLite)
  }
  mutating func clearProtobufUnittest_packedSint64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_packedSint64ExtensionLite)
  }
}

extension ProtobufUnittest_TestPackedExtensionsLite {
  var ProtobufUnittest_packedFixed32ExtensionLite: [UInt32] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_packedFixed32ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_packedFixed32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_packedFixed32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_packedFixed32ExtensionLite)
  }
  mutating func clearProtobufUnittest_packedFixed32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_packedFixed32ExtensionLite)
  }
}

extension ProtobufUnittest_TestPackedExtensionsLite {
  var ProtobufUnittest_packedFixed64ExtensionLite: [UInt64] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_packedFixed64ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_packedFixed64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_packedFixed64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_packedFixed64ExtensionLite)
  }
  mutating func clearProtobufUnittest_packedFixed64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_packedFixed64ExtensionLite)
  }
}

extension ProtobufUnittest_TestPackedExtensionsLite {
  var ProtobufUnittest_packedSfixed32ExtensionLite: [Int32] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_packedSfixed32ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_packedSfixed32ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_packedSfixed32ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_packedSfixed32ExtensionLite)
  }
  mutating func clearProtobufUnittest_packedSfixed32ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_packedSfixed32ExtensionLite)
  }
}

extension ProtobufUnittest_TestPackedExtensionsLite {
  var ProtobufUnittest_packedSfixed64ExtensionLite: [Int64] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_packedSfixed64ExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_packedSfixed64ExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_packedSfixed64ExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_packedSfixed64ExtensionLite)
  }
  mutating func clearProtobufUnittest_packedSfixed64ExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_packedSfixed64ExtensionLite)
  }
}

extension ProtobufUnittest_TestPackedExtensionsLite {
  var ProtobufUnittest_packedFloatExtensionLite: [Float] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_packedFloatExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_packedFloatExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_packedFloatExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_packedFloatExtensionLite)
  }
  mutating func clearProtobufUnittest_packedFloatExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_packedFloatExtensionLite)
  }
}

extension ProtobufUnittest_TestPackedExtensionsLite {
  var ProtobufUnittest_packedDoubleExtensionLite: [Double] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_packedDoubleExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_packedDoubleExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_packedDoubleExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_packedDoubleExtensionLite)
  }
  mutating func clearProtobufUnittest_packedDoubleExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_packedDoubleExtensionLite)
  }
}

extension ProtobufUnittest_TestPackedExtensionsLite {
  var ProtobufUnittest_packedBoolExtensionLite: [Bool] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_packedBoolExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_packedBoolExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_packedBoolExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_packedBoolExtensionLite)
  }
  mutating func clearProtobufUnittest_packedBoolExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_packedBoolExtensionLite)
  }
}

extension ProtobufUnittest_TestPackedExtensionsLite {
  var ProtobufUnittest_packedEnumExtensionLite: [ProtobufUnittest_ForeignEnumLite] {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_packedEnumExtensionLite)}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_packedEnumExtensionLite, value: newValue)}
  }
  var hasProtobufUnittest_packedEnumExtensionLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_packedEnumExtensionLite)
  }
  mutating func clearProtobufUnittest_packedEnumExtensionLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_packedEnumExtensionLite)
  }
}

extension ProtobufUnittest_TestHugeFieldNumbersLite {
  var ProtobufUnittest_testAllTypesLite: ProtobufUnittest_TestAllTypesLite {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_testAllTypesLite) ?? ProtobufUnittest_TestAllTypesLite()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_testAllTypesLite, value: newValue)}
  }
  var hasProtobufUnittest_testAllTypesLite: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_testAllTypesLite)
  }
  mutating func clearProtobufUnittest_testAllTypesLite() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_testAllTypesLite)
  }
}

let ProtobufUnittest_UnittestLite_Extensions: SwiftProtobuf.ExtensionSet = [
  ProtobufUnittest_Extensions_optionalInt32ExtensionLite,
  ProtobufUnittest_Extensions_optionalInt64ExtensionLite,
  ProtobufUnittest_Extensions_optionalUint32ExtensionLite,
  ProtobufUnittest_Extensions_optionalUint64ExtensionLite,
  ProtobufUnittest_Extensions_optionalSint32ExtensionLite,
  ProtobufUnittest_Extensions_optionalSint64ExtensionLite,
  ProtobufUnittest_Extensions_optionalFixed32ExtensionLite,
  ProtobufUnittest_Extensions_optionalFixed64ExtensionLite,
  ProtobufUnittest_Extensions_optionalSfixed32ExtensionLite,
  ProtobufUnittest_Extensions_optionalSfixed64ExtensionLite,
  ProtobufUnittest_Extensions_optionalFloatExtensionLite,
  ProtobufUnittest_Extensions_optionalDoubleExtensionLite,
  ProtobufUnittest_Extensions_optionalBoolExtensionLite,
  ProtobufUnittest_Extensions_optionalStringExtensionLite,
  ProtobufUnittest_Extensions_optionalBytesExtensionLite,
  ProtobufUnittest_Extensions_optionalGroupExtensionLite,
  ProtobufUnittest_Extensions_optionalNestedMessageExtensionLite,
  ProtobufUnittest_Extensions_optionalForeignMessageExtensionLite,
  ProtobufUnittest_Extensions_optionalImportMessageExtensionLite,
  ProtobufUnittest_Extensions_optionalNestedEnumExtensionLite,
  ProtobufUnittest_Extensions_optionalForeignEnumExtensionLite,
  ProtobufUnittest_Extensions_optionalImportEnumExtensionLite,
  ProtobufUnittest_Extensions_optionalStringPieceExtensionLite,
  ProtobufUnittest_Extensions_optionalCordExtensionLite,
  ProtobufUnittest_Extensions_optionalPublicImportMessageExtensionLite,
  ProtobufUnittest_Extensions_optionalLazyMessageExtensionLite,
  ProtobufUnittest_Extensions_repeatedInt32ExtensionLite,
  ProtobufUnittest_Extensions_repeatedInt64ExtensionLite,
  ProtobufUnittest_Extensions_repeatedUint32ExtensionLite,
  ProtobufUnittest_Extensions_repeatedUint64ExtensionLite,
  ProtobufUnittest_Extensions_repeatedSint32ExtensionLite,
  ProtobufUnittest_Extensions_repeatedSint64ExtensionLite,
  ProtobufUnittest_Extensions_repeatedFixed32ExtensionLite,
  ProtobufUnittest_Extensions_repeatedFixed64ExtensionLite,
  ProtobufUnittest_Extensions_repeatedSfixed32ExtensionLite,
  ProtobufUnittest_Extensions_repeatedSfixed64ExtensionLite,
  ProtobufUnittest_Extensions_repeatedFloatExtensionLite,
  ProtobufUnittest_Extensions_repeatedDoubleExtensionLite,
  ProtobufUnittest_Extensions_repeatedBoolExtensionLite,
  ProtobufUnittest_Extensions_repeatedStringExtensionLite,
  ProtobufUnittest_Extensions_repeatedBytesExtensionLite,
  ProtobufUnittest_Extensions_repeatedGroupExtensionLite,
  ProtobufUnittest_Extensions_repeatedNestedMessageExtensionLite,
  ProtobufUnittest_Extensions_repeatedForeignMessageExtensionLite,
  ProtobufUnittest_Extensions_repeatedImportMessageExtensionLite,
  ProtobufUnittest_Extensions_repeatedNestedEnumExtensionLite,
  ProtobufUnittest_Extensions_repeatedForeignEnumExtensionLite,
  ProtobufUnittest_Extensions_repeatedImportEnumExtensionLite,
  ProtobufUnittest_Extensions_repeatedStringPieceExtensionLite,
  ProtobufUnittest_Extensions_repeatedCordExtensionLite,
  ProtobufUnittest_Extensions_repeatedLazyMessageExtensionLite,
  ProtobufUnittest_Extensions_defaultInt32ExtensionLite,
  ProtobufUnittest_Extensions_defaultInt64ExtensionLite,
  ProtobufUnittest_Extensions_defaultUint32ExtensionLite,
  ProtobufUnittest_Extensions_defaultUint64ExtensionLite,
  ProtobufUnittest_Extensions_defaultSint32ExtensionLite,
  ProtobufUnittest_Extensions_defaultSint64ExtensionLite,
  ProtobufUnittest_Extensions_defaultFixed32ExtensionLite,
  ProtobufUnittest_Extensions_defaultFixed64ExtensionLite,
  ProtobufUnittest_Extensions_defaultSfixed32ExtensionLite,
  ProtobufUnittest_Extensions_defaultSfixed64ExtensionLite,
  ProtobufUnittest_Extensions_defaultFloatExtensionLite,
  ProtobufUnittest_Extensions_defaultDoubleExtensionLite,
  ProtobufUnittest_Extensions_defaultBoolExtensionLite,
  ProtobufUnittest_Extensions_defaultStringExtensionLite,
  ProtobufUnittest_Extensions_defaultBytesExtensionLite,
  ProtobufUnittest_Extensions_defaultNestedEnumExtensionLite,
  ProtobufUnittest_Extensions_defaultForeignEnumExtensionLite,
  ProtobufUnittest_Extensions_defaultImportEnumExtensionLite,
  ProtobufUnittest_Extensions_defaultStringPieceExtensionLite,
  ProtobufUnittest_Extensions_defaultCordExtensionLite,
  ProtobufUnittest_Extensions_oneofUint32ExtensionLite,
  ProtobufUnittest_Extensions_oneofNestedMessageExtensionLite,
  ProtobufUnittest_Extensions_oneofStringExtensionLite,
  ProtobufUnittest_Extensions_oneofBytesExtensionLite,
  ProtobufUnittest_Extensions_packedInt32ExtensionLite,
  ProtobufUnittest_Extensions_packedInt64ExtensionLite,
  ProtobufUnittest_Extensions_packedUint32ExtensionLite,
  ProtobufUnittest_Extensions_packedUint64ExtensionLite,
  ProtobufUnittest_Extensions_packedSint32ExtensionLite,
  ProtobufUnittest_Extensions_packedSint64ExtensionLite,
  ProtobufUnittest_Extensions_packedFixed32ExtensionLite,
  ProtobufUnittest_Extensions_packedFixed64ExtensionLite,
  ProtobufUnittest_Extensions_packedSfixed32ExtensionLite,
  ProtobufUnittest_Extensions_packedSfixed64ExtensionLite,
  ProtobufUnittest_Extensions_packedFloatExtensionLite,
  ProtobufUnittest_Extensions_packedDoubleExtensionLite,
  ProtobufUnittest_Extensions_packedBoolExtensionLite,
  ProtobufUnittest_Extensions_packedEnumExtensionLite,
  ProtobufUnittest_Extensions_testAllTypesLite,
  ProtobufUnittest_TestNestedExtensionLite.Extensions.nestedExtension,
  ProtobufUnittest_TestParsingMergeLite.Extensions.optionalExt,
  ProtobufUnittest_TestParsingMergeLite.Extensions.repeatedExt
]
