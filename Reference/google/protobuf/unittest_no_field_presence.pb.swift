/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: google/protobuf/unittest_no_field_presence.proto
 *
 */

//  Protocol Buffers - Google's data interchange format
//  Copyright 2008 Google Inc.  All rights reserved.
//  https://developers.google.com/protocol-buffers/
// 
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//      * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//      * Redistributions in binary form must reproduce the above
//  copyright notice, this list of conditions and the following disclaimer
//  in the documentation and/or other materials provided with the
//  distribution.
//      * Neither the name of Google Inc. nor the names of its
//  contributors may be used to endorse or promote products derived from
//  this software without specific prior written permission.
// 
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
//  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
//  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
//  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
//  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
//  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
//  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//  A proto file used to test a message type with no explicit field presence.

import Foundation
import SwiftProtobuf


public enum Proto2NofieldpresenceUnittest_ForeignEnum: ProtobufEnum {
  public typealias RawValue = Int
  case foreignFoo // = 0
  case foreignBar // = 1
  case foreignBaz // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .foreignFoo
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .foreignFoo
    case 1: self = .foreignBar
    case 2: self = .foreignBaz
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public init?(name: String) {
    switch name {
    case "foreignFoo": self = .foreignFoo
    case "foreignBar": self = .foreignBar
    case "foreignBaz": self = .foreignBaz
    default: return nil
    }
  }

  public init?(jsonName: String) {
    switch jsonName {
    case "FOREIGN_FOO": self = .foreignFoo
    case "FOREIGN_BAR": self = .foreignBar
    case "FOREIGN_BAZ": self = .foreignBaz
    default: return nil
    }
  }

  public init?(protoName: String) {
    switch protoName {
    case "FOREIGN_FOO": self = .foreignFoo
    case "FOREIGN_BAR": self = .foreignBar
    case "FOREIGN_BAZ": self = .foreignBaz
    default: return nil
    }
  }

  public var rawValue: Int {
    get {
      switch self {
      case .foreignFoo: return 0
      case .foreignBar: return 1
      case .foreignBaz: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }
  }

  public var json: String {
    get {
      switch self {
      case .foreignFoo: return "\"FOREIGN_FOO\""
      case .foreignBar: return "\"FOREIGN_BAR\""
      case .foreignBaz: return "\"FOREIGN_BAZ\""
      case .UNRECOGNIZED(let i): return String(i)
      }
    }
  }

  public var hashValue: Int { return rawValue }

  public var debugDescription: String {
    get {
      switch self {
      case .foreignFoo: return ".foreignFoo"
      case .foreignBar: return ".foreignBar"
      case .foreignBaz: return ".foreignBaz"
      case .UNRECOGNIZED(let v): return ".UNRECOGNIZED(\(v))"
      }
    }
  }

}

///   This proto includes every type of field in both singular and repeated
///   forms.
public struct Proto2NofieldpresenceUnittest_TestAllTypes: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Proto2NofieldpresenceUnittest_TestAllTypes"}
  public var protoMessageName: String {return "TestAllTypes"}
  public var protoPackageName: String {return "proto2_nofieldpresence_unittest"}
  public var jsonFieldNames: [String: Int] {return [
    "optionalInt32": 1,
    "optionalInt64": 2,
    "optionalUint32": 3,
    "optionalUint64": 4,
    "optionalSint32": 5,
    "optionalSint64": 6,
    "optionalFixed32": 7,
    "optionalFixed64": 8,
    "optionalSfixed32": 9,
    "optionalSfixed64": 10,
    "optionalFloat": 11,
    "optionalDouble": 12,
    "optionalBool": 13,
    "optionalString": 14,
    "optionalBytes": 15,
    "optionalNestedMessage": 18,
    "optionalForeignMessage": 19,
    "optionalProto2Message": 20,
    "optionalNestedEnum": 21,
    "optionalForeignEnum": 22,
    "optionalStringPiece": 24,
    "optionalCord": 25,
    "optionalLazyMessage": 30,
    "repeatedInt32": 31,
    "repeatedInt64": 32,
    "repeatedUint32": 33,
    "repeatedUint64": 34,
    "repeatedSint32": 35,
    "repeatedSint64": 36,
    "repeatedFixed32": 37,
    "repeatedFixed64": 38,
    "repeatedSfixed32": 39,
    "repeatedSfixed64": 40,
    "repeatedFloat": 41,
    "repeatedDouble": 42,
    "repeatedBool": 43,
    "repeatedString": 44,
    "repeatedBytes": 45,
    "repeatedNestedMessage": 48,
    "repeatedForeignMessage": 49,
    "repeatedProto2Message": 50,
    "repeatedNestedEnum": 51,
    "repeatedForeignEnum": 52,
    "repeatedStringPiece": 54,
    "repeatedCord": 55,
    "repeatedLazyMessage": 57,
    "oneofUint32": 111,
    "oneofNestedMessage": 112,
    "oneofString": 113,
    "oneofEnum": 114,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "optional_int32": 1,
    "optional_int64": 2,
    "optional_uint32": 3,
    "optional_uint64": 4,
    "optional_sint32": 5,
    "optional_sint64": 6,
    "optional_fixed32": 7,
    "optional_fixed64": 8,
    "optional_sfixed32": 9,
    "optional_sfixed64": 10,
    "optional_float": 11,
    "optional_double": 12,
    "optional_bool": 13,
    "optional_string": 14,
    "optional_bytes": 15,
    "optional_nested_message": 18,
    "optional_foreign_message": 19,
    "optional_proto2_message": 20,
    "optional_nested_enum": 21,
    "optional_foreign_enum": 22,
    "optional_string_piece": 24,
    "optional_cord": 25,
    "optional_lazy_message": 30,
    "repeated_int32": 31,
    "repeated_int64": 32,
    "repeated_uint32": 33,
    "repeated_uint64": 34,
    "repeated_sint32": 35,
    "repeated_sint64": 36,
    "repeated_fixed32": 37,
    "repeated_fixed64": 38,
    "repeated_sfixed32": 39,
    "repeated_sfixed64": 40,
    "repeated_float": 41,
    "repeated_double": 42,
    "repeated_bool": 43,
    "repeated_string": 44,
    "repeated_bytes": 45,
    "repeated_nested_message": 48,
    "repeated_foreign_message": 49,
    "repeated_proto2_message": 50,
    "repeated_nested_enum": 51,
    "repeated_foreign_enum": 52,
    "repeated_string_piece": 54,
    "repeated_cord": 55,
    "repeated_lazy_message": 57,
    "oneof_uint32": 111,
    "oneof_nested_message": 112,
    "oneof_string": 113,
    "oneof_enum": 114,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Proto2NofieldpresenceUnittest_TestAllTypes
    var _optionalInt32: Int32 = 0
    var _optionalInt64: Int64 = 0
    var _optionalUint32: UInt32 = 0
    var _optionalUint64: UInt64 = 0
    var _optionalSint32: Int32 = 0
    var _optionalSint64: Int64 = 0
    var _optionalFixed32: UInt32 = 0
    var _optionalFixed64: UInt64 = 0
    var _optionalSfixed32: Int32 = 0
    var _optionalSfixed64: Int64 = 0
    var _optionalFloat: Float = 0
    var _optionalDouble: Double = 0
    var _optionalBool: Bool = false
    var _optionalString: String = ""
    var _optionalBytes: Data = Data()
    var _optionalNestedMessage: Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage? = nil
    var _optionalForeignMessage: Proto2NofieldpresenceUnittest_ForeignMessage? = nil
    var _optionalProto2Message: ProtobufUnittest_TestAllTypes? = nil
    var _optionalNestedEnum: Proto2NofieldpresenceUnittest_TestAllTypes.NestedEnum = Proto2NofieldpresenceUnittest_TestAllTypes.NestedEnum.foo
    var _optionalForeignEnum: Proto2NofieldpresenceUnittest_ForeignEnum = Proto2NofieldpresenceUnittest_ForeignEnum.foreignFoo
    var _optionalStringPiece: String = ""
    var _optionalCord: String = ""
    var _optionalLazyMessage: Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage? = nil
    var _repeatedInt32: [Int32] = []
    var _repeatedInt64: [Int64] = []
    var _repeatedUint32: [UInt32] = []
    var _repeatedUint64: [UInt64] = []
    var _repeatedSint32: [Int32] = []
    var _repeatedSint64: [Int64] = []
    var _repeatedFixed32: [UInt32] = []
    var _repeatedFixed64: [UInt64] = []
    var _repeatedSfixed32: [Int32] = []
    var _repeatedSfixed64: [Int64] = []
    var _repeatedFloat: [Float] = []
    var _repeatedDouble: [Double] = []
    var _repeatedBool: [Bool] = []
    var _repeatedString: [String] = []
    var _repeatedBytes: [Data] = []
    var _repeatedNestedMessage: [Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage] = []
    var _repeatedForeignMessage: [Proto2NofieldpresenceUnittest_ForeignMessage] = []
    var _repeatedProto2Message: [ProtobufUnittest_TestAllTypes] = []
    var _repeatedNestedEnum: [Proto2NofieldpresenceUnittest_TestAllTypes.NestedEnum] = []
    var _repeatedForeignEnum: [Proto2NofieldpresenceUnittest_ForeignEnum] = []
    var _repeatedStringPiece: [String] = []
    var _repeatedCord: [String] = []
    var _repeatedLazyMessage: [Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage] = []
    var _oneofField = Proto2NofieldpresenceUnittest_TestAllTypes.OneOf_OneofField()

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufInt32.self, value: &_optionalInt32)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_optionalInt64)
      case 3: handled = try setter.decodeSingularField(fieldType: ProtobufUInt32.self, value: &_optionalUint32)
      case 4: handled = try setter.decodeSingularField(fieldType: ProtobufUInt64.self, value: &_optionalUint64)
      case 5: handled = try setter.decodeSingularField(fieldType: ProtobufSInt32.self, value: &_optionalSint32)
      case 6: handled = try setter.decodeSingularField(fieldType: ProtobufSInt64.self, value: &_optionalSint64)
      case 7: handled = try setter.decodeSingularField(fieldType: ProtobufFixed32.self, value: &_optionalFixed32)
      case 8: handled = try setter.decodeSingularField(fieldType: ProtobufFixed64.self, value: &_optionalFixed64)
      case 9: handled = try setter.decodeSingularField(fieldType: ProtobufSFixed32.self, value: &_optionalSfixed32)
      case 10: handled = try setter.decodeSingularField(fieldType: ProtobufSFixed64.self, value: &_optionalSfixed64)
      case 11: handled = try setter.decodeSingularField(fieldType: ProtobufFloat.self, value: &_optionalFloat)
      case 12: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_optionalDouble)
      case 13: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_optionalBool)
      case 14: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_optionalString)
      case 15: handled = try setter.decodeSingularField(fieldType: ProtobufBytes.self, value: &_optionalBytes)
      case 18: handled = try setter.decodeSingularMessageField(fieldType: Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage.self, value: &_optionalNestedMessage)
      case 19: handled = try setter.decodeSingularMessageField(fieldType: Proto2NofieldpresenceUnittest_ForeignMessage.self, value: &_optionalForeignMessage)
      case 20: handled = try setter.decodeSingularMessageField(fieldType: ProtobufUnittest_TestAllTypes.self, value: &_optionalProto2Message)
      case 21: handled = try setter.decodeSingularField(fieldType: Proto2NofieldpresenceUnittest_TestAllTypes.NestedEnum.self, value: &_optionalNestedEnum)
      case 22: handled = try setter.decodeSingularField(fieldType: Proto2NofieldpresenceUnittest_ForeignEnum.self, value: &_optionalForeignEnum)
      case 24: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_optionalStringPiece)
      case 25: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_optionalCord)
      case 30: handled = try setter.decodeSingularMessageField(fieldType: Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage.self, value: &_optionalLazyMessage)
      case 31: handled = try setter.decodePackedField(fieldType: ProtobufInt32.self, value: &_repeatedInt32)
      case 32: handled = try setter.decodePackedField(fieldType: ProtobufInt64.self, value: &_repeatedInt64)
      case 33: handled = try setter.decodePackedField(fieldType: ProtobufUInt32.self, value: &_repeatedUint32)
      case 34: handled = try setter.decodePackedField(fieldType: ProtobufUInt64.self, value: &_repeatedUint64)
      case 35: handled = try setter.decodePackedField(fieldType: ProtobufSInt32.self, value: &_repeatedSint32)
      case 36: handled = try setter.decodePackedField(fieldType: ProtobufSInt64.self, value: &_repeatedSint64)
      case 37: handled = try setter.decodePackedField(fieldType: ProtobufFixed32.self, value: &_repeatedFixed32)
      case 38: handled = try setter.decodePackedField(fieldType: ProtobufFixed64.self, value: &_repeatedFixed64)
      case 39: handled = try setter.decodePackedField(fieldType: ProtobufSFixed32.self, value: &_repeatedSfixed32)
      case 40: handled = try setter.decodePackedField(fieldType: ProtobufSFixed64.self, value: &_repeatedSfixed64)
      case 41: handled = try setter.decodePackedField(fieldType: ProtobufFloat.self, value: &_repeatedFloat)
      case 42: handled = try setter.decodePackedField(fieldType: ProtobufDouble.self, value: &_repeatedDouble)
      case 43: handled = try setter.decodePackedField(fieldType: ProtobufBool.self, value: &_repeatedBool)
      case 44: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &_repeatedString)
      case 45: handled = try setter.decodeRepeatedField(fieldType: ProtobufBytes.self, value: &_repeatedBytes)
      case 48: handled = try setter.decodeRepeatedMessageField(fieldType: Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage.self, value: &_repeatedNestedMessage)
      case 49: handled = try setter.decodeRepeatedMessageField(fieldType: Proto2NofieldpresenceUnittest_ForeignMessage.self, value: &_repeatedForeignMessage)
      case 50: handled = try setter.decodeRepeatedMessageField(fieldType: ProtobufUnittest_TestAllTypes.self, value: &_repeatedProto2Message)
      case 51: handled = try setter.decodePackedField(fieldType: Proto2NofieldpresenceUnittest_TestAllTypes.NestedEnum.self, value: &_repeatedNestedEnum)
      case 52: handled = try setter.decodePackedField(fieldType: Proto2NofieldpresenceUnittest_ForeignEnum.self, value: &_repeatedForeignEnum)
      case 54: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &_repeatedStringPiece)
      case 55: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &_repeatedCord)
      case 57: handled = try setter.decodeRepeatedMessageField(fieldType: Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage.self, value: &_repeatedLazyMessage)
      case 111, 112, 113, 114:
        handled = try _oneofField.decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _optionalInt32 != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: _optionalInt32, protoFieldNumber: 1, protoFieldName: "optional_int32", jsonFieldName: "optionalInt32", swiftFieldName: "optionalInt32")
      }
      if _optionalInt64 != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _optionalInt64, protoFieldNumber: 2, protoFieldName: "optional_int64", jsonFieldName: "optionalInt64", swiftFieldName: "optionalInt64")
      }
      if _optionalUint32 != 0 {
        try visitor.visitSingularField(fieldType: ProtobufUInt32.self, value: _optionalUint32, protoFieldNumber: 3, protoFieldName: "optional_uint32", jsonFieldName: "optionalUint32", swiftFieldName: "optionalUint32")
      }
      if _optionalUint64 != 0 {
        try visitor.visitSingularField(fieldType: ProtobufUInt64.self, value: _optionalUint64, protoFieldNumber: 4, protoFieldName: "optional_uint64", jsonFieldName: "optionalUint64", swiftFieldName: "optionalUint64")
      }
      if _optionalSint32 != 0 {
        try visitor.visitSingularField(fieldType: ProtobufSInt32.self, value: _optionalSint32, protoFieldNumber: 5, protoFieldName: "optional_sint32", jsonFieldName: "optionalSint32", swiftFieldName: "optionalSint32")
      }
      if _optionalSint64 != 0 {
        try visitor.visitSingularField(fieldType: ProtobufSInt64.self, value: _optionalSint64, protoFieldNumber: 6, protoFieldName: "optional_sint64", jsonFieldName: "optionalSint64", swiftFieldName: "optionalSint64")
      }
      if _optionalFixed32 != 0 {
        try visitor.visitSingularField(fieldType: ProtobufFixed32.self, value: _optionalFixed32, protoFieldNumber: 7, protoFieldName: "optional_fixed32", jsonFieldName: "optionalFixed32", swiftFieldName: "optionalFixed32")
      }
      if _optionalFixed64 != 0 {
        try visitor.visitSingularField(fieldType: ProtobufFixed64.self, value: _optionalFixed64, protoFieldNumber: 8, protoFieldName: "optional_fixed64", jsonFieldName: "optionalFixed64", swiftFieldName: "optionalFixed64")
      }
      if _optionalSfixed32 != 0 {
        try visitor.visitSingularField(fieldType: ProtobufSFixed32.self, value: _optionalSfixed32, protoFieldNumber: 9, protoFieldName: "optional_sfixed32", jsonFieldName: "optionalSfixed32", swiftFieldName: "optionalSfixed32")
      }
      if _optionalSfixed64 != 0 {
        try visitor.visitSingularField(fieldType: ProtobufSFixed64.self, value: _optionalSfixed64, protoFieldNumber: 10, protoFieldName: "optional_sfixed64", jsonFieldName: "optionalSfixed64", swiftFieldName: "optionalSfixed64")
      }
      if _optionalFloat != 0 {
        try visitor.visitSingularField(fieldType: ProtobufFloat.self, value: _optionalFloat, protoFieldNumber: 11, protoFieldName: "optional_float", jsonFieldName: "optionalFloat", swiftFieldName: "optionalFloat")
      }
      if _optionalDouble != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _optionalDouble, protoFieldNumber: 12, protoFieldName: "optional_double", jsonFieldName: "optionalDouble", swiftFieldName: "optionalDouble")
      }
      if _optionalBool != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _optionalBool, protoFieldNumber: 13, protoFieldName: "optional_bool", jsonFieldName: "optionalBool", swiftFieldName: "optionalBool")
      }
      if _optionalString != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _optionalString, protoFieldNumber: 14, protoFieldName: "optional_string", jsonFieldName: "optionalString", swiftFieldName: "optionalString")
      }
      if _optionalBytes != Data() {
        try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: _optionalBytes, protoFieldNumber: 15, protoFieldName: "optional_bytes", jsonFieldName: "optionalBytes", swiftFieldName: "optionalBytes")
      }
      if let v = _optionalNestedMessage {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 18, protoFieldName: "optional_nested_message", jsonFieldName: "optionalNestedMessage", swiftFieldName: "optionalNestedMessage")
      }
      if let v = _optionalForeignMessage {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 19, protoFieldName: "optional_foreign_message", jsonFieldName: "optionalForeignMessage", swiftFieldName: "optionalForeignMessage")
      }
      if let v = _optionalProto2Message {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 20, protoFieldName: "optional_proto2_message", jsonFieldName: "optionalProto2Message", swiftFieldName: "optionalProto2Message")
      }
      if _optionalNestedEnum != Proto2NofieldpresenceUnittest_TestAllTypes.NestedEnum.foo {
        try visitor.visitSingularField(fieldType: Proto2NofieldpresenceUnittest_TestAllTypes.NestedEnum.self, value: _optionalNestedEnum, protoFieldNumber: 21, protoFieldName: "optional_nested_enum", jsonFieldName: "optionalNestedEnum", swiftFieldName: "optionalNestedEnum")
      }
      if _optionalForeignEnum != Proto2NofieldpresenceUnittest_ForeignEnum.foreignFoo {
        try visitor.visitSingularField(fieldType: Proto2NofieldpresenceUnittest_ForeignEnum.self, value: _optionalForeignEnum, protoFieldNumber: 22, protoFieldName: "optional_foreign_enum", jsonFieldName: "optionalForeignEnum", swiftFieldName: "optionalForeignEnum")
      }
      if _optionalStringPiece != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _optionalStringPiece, protoFieldNumber: 24, protoFieldName: "optional_string_piece", jsonFieldName: "optionalStringPiece", swiftFieldName: "optionalStringPiece")
      }
      if _optionalCord != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _optionalCord, protoFieldNumber: 25, protoFieldName: "optional_cord", jsonFieldName: "optionalCord", swiftFieldName: "optionalCord")
      }
      if let v = _optionalLazyMessage {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 30, protoFieldName: "optional_lazy_message", jsonFieldName: "optionalLazyMessage", swiftFieldName: "optionalLazyMessage")
      }
      if !_repeatedInt32.isEmpty {
        try visitor.visitPackedField(fieldType: ProtobufInt32.self, value: _repeatedInt32, protoFieldNumber: 31, protoFieldName: "repeated_int32", jsonFieldName: "repeatedInt32", swiftFieldName: "repeatedInt32")
      }
      if !_repeatedInt64.isEmpty {
        try visitor.visitPackedField(fieldType: ProtobufInt64.self, value: _repeatedInt64, protoFieldNumber: 32, protoFieldName: "repeated_int64", jsonFieldName: "repeatedInt64", swiftFieldName: "repeatedInt64")
      }
      if !_repeatedUint32.isEmpty {
        try visitor.visitPackedField(fieldType: ProtobufUInt32.self, value: _repeatedUint32, protoFieldNumber: 33, protoFieldName: "repeated_uint32", jsonFieldName: "repeatedUint32", swiftFieldName: "repeatedUint32")
      }
      if !_repeatedUint64.isEmpty {
        try visitor.visitPackedField(fieldType: ProtobufUInt64.self, value: _repeatedUint64, protoFieldNumber: 34, protoFieldName: "repeated_uint64", jsonFieldName: "repeatedUint64", swiftFieldName: "repeatedUint64")
      }
      if !_repeatedSint32.isEmpty {
        try visitor.visitPackedField(fieldType: ProtobufSInt32.self, value: _repeatedSint32, protoFieldNumber: 35, protoFieldName: "repeated_sint32", jsonFieldName: "repeatedSint32", swiftFieldName: "repeatedSint32")
      }
      if !_repeatedSint64.isEmpty {
        try visitor.visitPackedField(fieldType: ProtobufSInt64.self, value: _repeatedSint64, protoFieldNumber: 36, protoFieldName: "repeated_sint64", jsonFieldName: "repeatedSint64", swiftFieldName: "repeatedSint64")
      }
      if !_repeatedFixed32.isEmpty {
        try visitor.visitPackedField(fieldType: ProtobufFixed32.self, value: _repeatedFixed32, protoFieldNumber: 37, protoFieldName: "repeated_fixed32", jsonFieldName: "repeatedFixed32", swiftFieldName: "repeatedFixed32")
      }
      if !_repeatedFixed64.isEmpty {
        try visitor.visitPackedField(fieldType: ProtobufFixed64.self, value: _repeatedFixed64, protoFieldNumber: 38, protoFieldName: "repeated_fixed64", jsonFieldName: "repeatedFixed64", swiftFieldName: "repeatedFixed64")
      }
      if !_repeatedSfixed32.isEmpty {
        try visitor.visitPackedField(fieldType: ProtobufSFixed32.self, value: _repeatedSfixed32, protoFieldNumber: 39, protoFieldName: "repeated_sfixed32", jsonFieldName: "repeatedSfixed32", swiftFieldName: "repeatedSfixed32")
      }
      if !_repeatedSfixed64.isEmpty {
        try visitor.visitPackedField(fieldType: ProtobufSFixed64.self, value: _repeatedSfixed64, protoFieldNumber: 40, protoFieldName: "repeated_sfixed64", jsonFieldName: "repeatedSfixed64", swiftFieldName: "repeatedSfixed64")
      }
      if !_repeatedFloat.isEmpty {
        try visitor.visitPackedField(fieldType: ProtobufFloat.self, value: _repeatedFloat, protoFieldNumber: 41, protoFieldName: "repeated_float", jsonFieldName: "repeatedFloat", swiftFieldName: "repeatedFloat")
      }
      if !_repeatedDouble.isEmpty {
        try visitor.visitPackedField(fieldType: ProtobufDouble.self, value: _repeatedDouble, protoFieldNumber: 42, protoFieldName: "repeated_double", jsonFieldName: "repeatedDouble", swiftFieldName: "repeatedDouble")
      }
      if !_repeatedBool.isEmpty {
        try visitor.visitPackedField(fieldType: ProtobufBool.self, value: _repeatedBool, protoFieldNumber: 43, protoFieldName: "repeated_bool", jsonFieldName: "repeatedBool", swiftFieldName: "repeatedBool")
      }
      if !_repeatedString.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: _repeatedString, protoFieldNumber: 44, protoFieldName: "repeated_string", jsonFieldName: "repeatedString", swiftFieldName: "repeatedString")
      }
      if !_repeatedBytes.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufBytes.self, value: _repeatedBytes, protoFieldNumber: 45, protoFieldName: "repeated_bytes", jsonFieldName: "repeatedBytes", swiftFieldName: "repeatedBytes")
      }
      if !_repeatedNestedMessage.isEmpty {
        try visitor.visitRepeatedMessageField(value: _repeatedNestedMessage, protoFieldNumber: 48, protoFieldName: "repeated_nested_message", jsonFieldName: "repeatedNestedMessage", swiftFieldName: "repeatedNestedMessage")
      }
      if !_repeatedForeignMessage.isEmpty {
        try visitor.visitRepeatedMessageField(value: _repeatedForeignMessage, protoFieldNumber: 49, protoFieldName: "repeated_foreign_message", jsonFieldName: "repeatedForeignMessage", swiftFieldName: "repeatedForeignMessage")
      }
      if !_repeatedProto2Message.isEmpty {
        try visitor.visitRepeatedMessageField(value: _repeatedProto2Message, protoFieldNumber: 50, protoFieldName: "repeated_proto2_message", jsonFieldName: "repeatedProto2Message", swiftFieldName: "repeatedProto2Message")
      }
      if !_repeatedNestedEnum.isEmpty {
        try visitor.visitPackedField(fieldType: Proto2NofieldpresenceUnittest_TestAllTypes.NestedEnum.self, value: _repeatedNestedEnum, protoFieldNumber: 51, protoFieldName: "repeated_nested_enum", jsonFieldName: "repeatedNestedEnum", swiftFieldName: "repeatedNestedEnum")
      }
      if !_repeatedForeignEnum.isEmpty {
        try visitor.visitPackedField(fieldType: Proto2NofieldpresenceUnittest_ForeignEnum.self, value: _repeatedForeignEnum, protoFieldNumber: 52, protoFieldName: "repeated_foreign_enum", jsonFieldName: "repeatedForeignEnum", swiftFieldName: "repeatedForeignEnum")
      }
      if !_repeatedStringPiece.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: _repeatedStringPiece, protoFieldNumber: 54, protoFieldName: "repeated_string_piece", jsonFieldName: "repeatedStringPiece", swiftFieldName: "repeatedStringPiece")
      }
      if !_repeatedCord.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: _repeatedCord, protoFieldNumber: 55, protoFieldName: "repeated_cord", jsonFieldName: "repeatedCord", swiftFieldName: "repeatedCord")
      }
      if !_repeatedLazyMessage.isEmpty {
        try visitor.visitRepeatedMessageField(value: _repeatedLazyMessage, protoFieldNumber: 57, protoFieldName: "repeated_lazy_message", jsonFieldName: "repeatedLazyMessage", swiftFieldName: "repeatedLazyMessage")
      }
      try _oneofField.traverse(visitor: &visitor, start: 111, end: 115)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _optionalInt32 != other._optionalInt32 {return false}
      if _optionalInt64 != other._optionalInt64 {return false}
      if _optionalUint32 != other._optionalUint32 {return false}
      if _optionalUint64 != other._optionalUint64 {return false}
      if _optionalSint32 != other._optionalSint32 {return false}
      if _optionalSint64 != other._optionalSint64 {return false}
      if _optionalFixed32 != other._optionalFixed32 {return false}
      if _optionalFixed64 != other._optionalFixed64 {return false}
      if _optionalSfixed32 != other._optionalSfixed32 {return false}
      if _optionalSfixed64 != other._optionalSfixed64 {return false}
      if _optionalFloat != other._optionalFloat {return false}
      if _optionalDouble != other._optionalDouble {return false}
      if _optionalBool != other._optionalBool {return false}
      if _optionalString != other._optionalString {return false}
      if _optionalBytes != other._optionalBytes {return false}
      if _optionalNestedMessage != other._optionalNestedMessage {return false}
      if _optionalForeignMessage != other._optionalForeignMessage {return false}
      if _optionalProto2Message != other._optionalProto2Message {return false}
      if _optionalNestedEnum != other._optionalNestedEnum {return false}
      if _optionalForeignEnum != other._optionalForeignEnum {return false}
      if _optionalStringPiece != other._optionalStringPiece {return false}
      if _optionalCord != other._optionalCord {return false}
      if _optionalLazyMessage != other._optionalLazyMessage {return false}
      if _repeatedInt32 != other._repeatedInt32 {return false}
      if _repeatedInt64 != other._repeatedInt64 {return false}
      if _repeatedUint32 != other._repeatedUint32 {return false}
      if _repeatedUint64 != other._repeatedUint64 {return false}
      if _repeatedSint32 != other._repeatedSint32 {return false}
      if _repeatedSint64 != other._repeatedSint64 {return false}
      if _repeatedFixed32 != other._repeatedFixed32 {return false}
      if _repeatedFixed64 != other._repeatedFixed64 {return false}
      if _repeatedSfixed32 != other._repeatedSfixed32 {return false}
      if _repeatedSfixed64 != other._repeatedSfixed64 {return false}
      if _repeatedFloat != other._repeatedFloat {return false}
      if _repeatedDouble != other._repeatedDouble {return false}
      if _repeatedBool != other._repeatedBool {return false}
      if _repeatedString != other._repeatedString {return false}
      if _repeatedBytes != other._repeatedBytes {return false}
      if _repeatedNestedMessage != other._repeatedNestedMessage {return false}
      if _repeatedForeignMessage != other._repeatedForeignMessage {return false}
      if _repeatedProto2Message != other._repeatedProto2Message {return false}
      if _repeatedNestedEnum != other._repeatedNestedEnum {return false}
      if _repeatedForeignEnum != other._repeatedForeignEnum {return false}
      if _repeatedStringPiece != other._repeatedStringPiece {return false}
      if _repeatedCord != other._repeatedCord {return false}
      if _repeatedLazyMessage != other._repeatedLazyMessage {return false}
      if _oneofField != other._oneofField {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._optionalInt32 = _optionalInt32
      clone._optionalInt64 = _optionalInt64
      clone._optionalUint32 = _optionalUint32
      clone._optionalUint64 = _optionalUint64
      clone._optionalSint32 = _optionalSint32
      clone._optionalSint64 = _optionalSint64
      clone._optionalFixed32 = _optionalFixed32
      clone._optionalFixed64 = _optionalFixed64
      clone._optionalSfixed32 = _optionalSfixed32
      clone._optionalSfixed64 = _optionalSfixed64
      clone._optionalFloat = _optionalFloat
      clone._optionalDouble = _optionalDouble
      clone._optionalBool = _optionalBool
      clone._optionalString = _optionalString
      clone._optionalBytes = _optionalBytes
      clone._optionalNestedMessage = _optionalNestedMessage
      clone._optionalForeignMessage = _optionalForeignMessage
      clone._optionalProto2Message = _optionalProto2Message
      clone._optionalNestedEnum = _optionalNestedEnum
      clone._optionalForeignEnum = _optionalForeignEnum
      clone._optionalStringPiece = _optionalStringPiece
      clone._optionalCord = _optionalCord
      clone._optionalLazyMessage = _optionalLazyMessage
      clone._repeatedInt32 = _repeatedInt32
      clone._repeatedInt64 = _repeatedInt64
      clone._repeatedUint32 = _repeatedUint32
      clone._repeatedUint64 = _repeatedUint64
      clone._repeatedSint32 = _repeatedSint32
      clone._repeatedSint64 = _repeatedSint64
      clone._repeatedFixed32 = _repeatedFixed32
      clone._repeatedFixed64 = _repeatedFixed64
      clone._repeatedSfixed32 = _repeatedSfixed32
      clone._repeatedSfixed64 = _repeatedSfixed64
      clone._repeatedFloat = _repeatedFloat
      clone._repeatedDouble = _repeatedDouble
      clone._repeatedBool = _repeatedBool
      clone._repeatedString = _repeatedString
      clone._repeatedBytes = _repeatedBytes
      clone._repeatedNestedMessage = _repeatedNestedMessage
      clone._repeatedForeignMessage = _repeatedForeignMessage
      clone._repeatedProto2Message = _repeatedProto2Message
      clone._repeatedNestedEnum = _repeatedNestedEnum
      clone._repeatedForeignEnum = _repeatedForeignEnum
      clone._repeatedStringPiece = _repeatedStringPiece
      clone._repeatedCord = _repeatedCord
      clone._repeatedLazyMessage = _repeatedLazyMessage
      clone._oneofField = _oneofField
      return clone
    }
  }

  private var _storage = _StorageClass()

  public enum OneOf_OneofField: ExpressibleByNilLiteral, ProtobufOneofEnum {
    case oneofUint32(UInt32)
    case oneofNestedMessage(Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage)
    case oneofString(String)
    case oneofEnum(Proto2NofieldpresenceUnittest_TestAllTypes.NestedEnum)
    case None

    public init(nilLiteral: ()) {
      self = .None
    }

    public init() {
      self = .None
    }

    public mutating func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      if self != .None && setter.rejectConflictingOneof {
        throw ProtobufDecodingError.duplicatedOneOf
      }
      let handled: Bool
      switch protoFieldNumber {
      case 111:
        var value = UInt32()
        handled = try setter.decodeSingularField(fieldType: ProtobufUInt32.self, value: &value)
        self = .oneofUint32(value)
      case 112:
        var value: Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage?
        handled = try setter.decodeSingularMessageField(fieldType: Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage.self, value: &value)
        if let value = value, handled {
          self = .oneofNestedMessage(value)
        }
      case 113:
        var value = String()
        handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &value)
        self = .oneofString(value)
      case 114:
        var value = Proto2NofieldpresenceUnittest_TestAllTypes.NestedEnum()
        handled = try setter.decodeSingularField(fieldType: Proto2NofieldpresenceUnittest_TestAllTypes.NestedEnum.self, value: &value)
        self = .oneofEnum(value)
      default:
        handled = false
        self = .None
      }
      return handled
    }

    public func traverse(visitor: inout ProtobufVisitor, start: Int, end: Int) throws {
      switch self {
      case .oneofUint32(let v):
        if start <= 111 && 111 < end {
          try visitor.visitSingularField(fieldType: ProtobufUInt32.self, value: v, protoFieldNumber: 111, protoFieldName: "oneof_uint32", jsonFieldName: "oneofUint32", swiftFieldName: "oneofUint32")
        }
      case .oneofNestedMessage(let v):
        if start <= 112 && 112 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 112, protoFieldName: "oneof_nested_message", jsonFieldName: "oneofNestedMessage", swiftFieldName: "oneofNestedMessage")
        }
      case .oneofString(let v):
        if start <= 113 && 113 < end {
          try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 113, protoFieldName: "oneof_string", jsonFieldName: "oneofString", swiftFieldName: "oneofString")
        }
      case .oneofEnum(let v):
        if start <= 114 && 114 < end {
          try visitor.visitSingularField(fieldType: Proto2NofieldpresenceUnittest_TestAllTypes.NestedEnum.self, value: v, protoFieldNumber: 114, protoFieldName: "oneof_enum", jsonFieldName: "oneofEnum", swiftFieldName: "oneofEnum")
        }
      case .None:
        break
      }
    }
  }

  public enum NestedEnum: ProtobufEnum {
    public typealias RawValue = Int
    case foo // = 0
    case bar // = 1
    case baz // = 2
    case UNRECOGNIZED(Int)

    public init() {
      self = .foo
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .foo
      case 1: self = .bar
      case 2: self = .baz
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public init?(name: String) {
      switch name {
      case "foo": self = .foo
      case "bar": self = .bar
      case "baz": self = .baz
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "FOO": self = .foo
      case "BAR": self = .bar
      case "BAZ": self = .baz
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "FOO": self = .foo
      case "BAR": self = .bar
      case "BAZ": self = .baz
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .foo: return 0
        case .bar: return 1
        case .baz: return 2
        case .UNRECOGNIZED(let i): return i
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .foo: return "\"FOO\""
        case .bar: return "\"BAR\""
        case .baz: return "\"BAZ\""
        case .UNRECOGNIZED(let i): return String(i)
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .foo: return ".foo"
        case .bar: return ".bar"
        case .baz: return ".baz"
        case .UNRECOGNIZED(let v): return ".UNRECOGNIZED(\(v))"
        }
      }
    }

  }

  public struct NestedMessage: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage"}
    public var protoMessageName: String {return "NestedMessage"}
    public var protoPackageName: String {return "proto2_nofieldpresence_unittest"}
    public var jsonFieldNames: [String: Int] {return [
      "bb": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "bb": 1,
    ]}

    public var bb: Int32 = 0

    public init() {}

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufInt32.self, value: &bb)
      default:
        handled = false
      }
      return handled
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      if bb != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: bb, protoFieldNumber: 1, protoFieldName: "bb", jsonFieldName: "bb", swiftFieldName: "bb")
      }
    }

    public func _protoc_generated_isEqualTo(other: Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage) -> Bool {
      if bb != other.bb {return false}
      return true
    }
  }

  ///   Singular
  ///   TODO: remove 'optional' labels as soon as CL 69188077 is LGTM'd to make
  ///   'optional' optional.
  public var optionalInt32: Int32 {
    get {return _storage._optionalInt32}
    set {_uniqueStorage()._optionalInt32 = newValue}
  }

  public var optionalInt64: Int64 {
    get {return _storage._optionalInt64}
    set {_uniqueStorage()._optionalInt64 = newValue}
  }

  public var optionalUint32: UInt32 {
    get {return _storage._optionalUint32}
    set {_uniqueStorage()._optionalUint32 = newValue}
  }

  public var optionalUint64: UInt64 {
    get {return _storage._optionalUint64}
    set {_uniqueStorage()._optionalUint64 = newValue}
  }

  public var optionalSint32: Int32 {
    get {return _storage._optionalSint32}
    set {_uniqueStorage()._optionalSint32 = newValue}
  }

  public var optionalSint64: Int64 {
    get {return _storage._optionalSint64}
    set {_uniqueStorage()._optionalSint64 = newValue}
  }

  public var optionalFixed32: UInt32 {
    get {return _storage._optionalFixed32}
    set {_uniqueStorage()._optionalFixed32 = newValue}
  }

  public var optionalFixed64: UInt64 {
    get {return _storage._optionalFixed64}
    set {_uniqueStorage()._optionalFixed64 = newValue}
  }

  public var optionalSfixed32: Int32 {
    get {return _storage._optionalSfixed32}
    set {_uniqueStorage()._optionalSfixed32 = newValue}
  }

  public var optionalSfixed64: Int64 {
    get {return _storage._optionalSfixed64}
    set {_uniqueStorage()._optionalSfixed64 = newValue}
  }

  public var optionalFloat: Float {
    get {return _storage._optionalFloat}
    set {_uniqueStorage()._optionalFloat = newValue}
  }

  public var optionalDouble: Double {
    get {return _storage._optionalDouble}
    set {_uniqueStorage()._optionalDouble = newValue}
  }

  public var optionalBool: Bool {
    get {return _storage._optionalBool}
    set {_uniqueStorage()._optionalBool = newValue}
  }

  public var optionalString: String {
    get {return _storage._optionalString}
    set {_uniqueStorage()._optionalString = newValue}
  }

  public var optionalBytes: Data {
    get {return _storage._optionalBytes}
    set {_uniqueStorage()._optionalBytes = newValue}
  }

  public var optionalNestedMessage: Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage {
    get {return _storage._optionalNestedMessage ?? Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage()}
    set {_uniqueStorage()._optionalNestedMessage = newValue}
  }
  public var hasOptionalNestedMessage: Bool {
    return _storage._optionalNestedMessage != nil
  }
  public mutating func clearOptionalNestedMessage() {
    return _storage._optionalNestedMessage = nil
  }

  public var optionalForeignMessage: Proto2NofieldpresenceUnittest_ForeignMessage {
    get {return _storage._optionalForeignMessage ?? Proto2NofieldpresenceUnittest_ForeignMessage()}
    set {_uniqueStorage()._optionalForeignMessage = newValue}
  }
  public var hasOptionalForeignMessage: Bool {
    return _storage._optionalForeignMessage != nil
  }
  public mutating func clearOptionalForeignMessage() {
    return _storage._optionalForeignMessage = nil
  }

  public var optionalProto2Message: ProtobufUnittest_TestAllTypes {
    get {return _storage._optionalProto2Message ?? ProtobufUnittest_TestAllTypes()}
    set {_uniqueStorage()._optionalProto2Message = newValue}
  }
  public var hasOptionalProto2Message: Bool {
    return _storage._optionalProto2Message != nil
  }
  public mutating func clearOptionalProto2Message() {
    return _storage._optionalProto2Message = nil
  }

  public var optionalNestedEnum: Proto2NofieldpresenceUnittest_TestAllTypes.NestedEnum {
    get {return _storage._optionalNestedEnum}
    set {_uniqueStorage()._optionalNestedEnum = newValue}
  }

  ///   N.B.: proto2-enum-type fields not allowed, because their default values
  ///   might not be zero.
  ///  optional protobuf_unittest.ForeignEnum          optional_proto2_enum     = 23;
  public var optionalForeignEnum: Proto2NofieldpresenceUnittest_ForeignEnum {
    get {return _storage._optionalForeignEnum}
    set {_uniqueStorage()._optionalForeignEnum = newValue}
  }

  public var optionalStringPiece: String {
    get {return _storage._optionalStringPiece}
    set {_uniqueStorage()._optionalStringPiece = newValue}
  }

  public var optionalCord: String {
    get {return _storage._optionalCord}
    set {_uniqueStorage()._optionalCord = newValue}
  }

  public var optionalLazyMessage: Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage {
    get {return _storage._optionalLazyMessage ?? Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage()}
    set {_uniqueStorage()._optionalLazyMessage = newValue}
  }
  public var hasOptionalLazyMessage: Bool {
    return _storage._optionalLazyMessage != nil
  }
  public mutating func clearOptionalLazyMessage() {
    return _storage._optionalLazyMessage = nil
  }

  ///   Repeated
  public var repeatedInt32: [Int32] {
    get {return _storage._repeatedInt32}
    set {_uniqueStorage()._repeatedInt32 = newValue}
  }

  public var repeatedInt64: [Int64] {
    get {return _storage._repeatedInt64}
    set {_uniqueStorage()._repeatedInt64 = newValue}
  }

  public var repeatedUint32: [UInt32] {
    get {return _storage._repeatedUint32}
    set {_uniqueStorage()._repeatedUint32 = newValue}
  }

  public var repeatedUint64: [UInt64] {
    get {return _storage._repeatedUint64}
    set {_uniqueStorage()._repeatedUint64 = newValue}
  }

  public var repeatedSint32: [Int32] {
    get {return _storage._repeatedSint32}
    set {_uniqueStorage()._repeatedSint32 = newValue}
  }

  public var repeatedSint64: [Int64] {
    get {return _storage._repeatedSint64}
    set {_uniqueStorage()._repeatedSint64 = newValue}
  }

  public var repeatedFixed32: [UInt32] {
    get {return _storage._repeatedFixed32}
    set {_uniqueStorage()._repeatedFixed32 = newValue}
  }

  public var repeatedFixed64: [UInt64] {
    get {return _storage._repeatedFixed64}
    set {_uniqueStorage()._repeatedFixed64 = newValue}
  }

  public var repeatedSfixed32: [Int32] {
    get {return _storage._repeatedSfixed32}
    set {_uniqueStorage()._repeatedSfixed32 = newValue}
  }

  public var repeatedSfixed64: [Int64] {
    get {return _storage._repeatedSfixed64}
    set {_uniqueStorage()._repeatedSfixed64 = newValue}
  }

  public var repeatedFloat: [Float] {
    get {return _storage._repeatedFloat}
    set {_uniqueStorage()._repeatedFloat = newValue}
  }

  public var repeatedDouble: [Double] {
    get {return _storage._repeatedDouble}
    set {_uniqueStorage()._repeatedDouble = newValue}
  }

  public var repeatedBool: [Bool] {
    get {return _storage._repeatedBool}
    set {_uniqueStorage()._repeatedBool = newValue}
  }

  public var repeatedString: [String] {
    get {return _storage._repeatedString}
    set {_uniqueStorage()._repeatedString = newValue}
  }

  public var repeatedBytes: [Data] {
    get {return _storage._repeatedBytes}
    set {_uniqueStorage()._repeatedBytes = newValue}
  }

  public var repeatedNestedMessage: [Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage] {
    get {return _storage._repeatedNestedMessage}
    set {_uniqueStorage()._repeatedNestedMessage = newValue}
  }

  public var repeatedForeignMessage: [Proto2NofieldpresenceUnittest_ForeignMessage] {
    get {return _storage._repeatedForeignMessage}
    set {_uniqueStorage()._repeatedForeignMessage = newValue}
  }

  public var repeatedProto2Message: [ProtobufUnittest_TestAllTypes] {
    get {return _storage._repeatedProto2Message}
    set {_uniqueStorage()._repeatedProto2Message = newValue}
  }

  public var repeatedNestedEnum: [Proto2NofieldpresenceUnittest_TestAllTypes.NestedEnum] {
    get {return _storage._repeatedNestedEnum}
    set {_uniqueStorage()._repeatedNestedEnum = newValue}
  }

  public var repeatedForeignEnum: [Proto2NofieldpresenceUnittest_ForeignEnum] {
    get {return _storage._repeatedForeignEnum}
    set {_uniqueStorage()._repeatedForeignEnum = newValue}
  }

  public var repeatedStringPiece: [String] {
    get {return _storage._repeatedStringPiece}
    set {_uniqueStorage()._repeatedStringPiece = newValue}
  }

  public var repeatedCord: [String] {
    get {return _storage._repeatedCord}
    set {_uniqueStorage()._repeatedCord = newValue}
  }

  public var repeatedLazyMessage: [Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage] {
    get {return _storage._repeatedLazyMessage}
    set {_uniqueStorage()._repeatedLazyMessage = newValue}
  }

  public var oneofUint32: UInt32 {
    get {
      if case .oneofUint32(let v) = _storage._oneofField {
        return v
      }
      return 0
    }
    set {
      _uniqueStorage()._oneofField = .oneofUint32(newValue)
    }
  }

  public var oneofNestedMessage: Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage {
    get {
      if case .oneofNestedMessage(let v) = _storage._oneofField {
        return v
      }
      return Proto2NofieldpresenceUnittest_TestAllTypes.NestedMessage()
    }
    set {
      _uniqueStorage()._oneofField = .oneofNestedMessage(newValue)
    }
  }

  public var oneofString: String {
    get {
      if case .oneofString(let v) = _storage._oneofField {
        return v
      }
      return ""
    }
    set {
      _uniqueStorage()._oneofField = .oneofString(newValue)
    }
  }

  public var oneofEnum: Proto2NofieldpresenceUnittest_TestAllTypes.NestedEnum {
    get {
      if case .oneofEnum(let v) = _storage._oneofField {
        return v
      }
      return Proto2NofieldpresenceUnittest_TestAllTypes.NestedEnum.foo
    }
    set {
      _uniqueStorage()._oneofField = .oneofEnum(newValue)
    }
  }

  public var oneofField: OneOf_OneofField {
    get {return _storage._oneofField}
    set {
      _uniqueStorage()._oneofField = newValue
    }
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Proto2NofieldpresenceUnittest_TestAllTypes) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Proto2NofieldpresenceUnittest_TestProto2Required: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Proto2NofieldpresenceUnittest_TestProto2Required"}
  public var protoMessageName: String {return "TestProto2Required"}
  public var protoPackageName: String {return "proto2_nofieldpresence_unittest"}
  public var jsonFieldNames: [String: Int] {return [
    "proto2": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "proto2": 1,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Proto2NofieldpresenceUnittest_TestProto2Required
    var _proto2: ProtobufUnittest_TestRequired? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularMessageField(fieldType: ProtobufUnittest_TestRequired.self, value: &_proto2)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if let v = _proto2 {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 1, protoFieldName: "proto2", jsonFieldName: "proto2", swiftFieldName: "proto2")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _proto2 != other._proto2 {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._proto2 = _proto2
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var proto2: ProtobufUnittest_TestRequired {
    get {return _storage._proto2 ?? ProtobufUnittest_TestRequired()}
    set {_uniqueStorage()._proto2 = newValue}
  }
  public var hasProto2: Bool {
    return _storage._proto2 != nil
  }
  public mutating func clearProto2() {
    return _storage._proto2 = nil
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Proto2NofieldpresenceUnittest_TestProto2Required) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Define these after TestAllTypes to make sure the compiler can handle
///   that.
public struct Proto2NofieldpresenceUnittest_ForeignMessage: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Proto2NofieldpresenceUnittest_ForeignMessage"}
  public var protoMessageName: String {return "ForeignMessage"}
  public var protoPackageName: String {return "proto2_nofieldpresence_unittest"}
  public var jsonFieldNames: [String: Int] {return [
    "c": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "c": 1,
  ]}

  public var c: Int32 = 0

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeSingularField(fieldType: ProtobufInt32.self, value: &c)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if c != 0 {
      try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: c, protoFieldNumber: 1, protoFieldName: "c", jsonFieldName: "c", swiftFieldName: "c")
    }
  }

  public func _protoc_generated_isEqualTo(other: Proto2NofieldpresenceUnittest_ForeignMessage) -> Bool {
    if c != other.c {return false}
    return true
  }
}

public func ==(lhs: Proto2NofieldpresenceUnittest_TestAllTypes.OneOf_OneofField, rhs: Proto2NofieldpresenceUnittest_TestAllTypes.OneOf_OneofField) -> Bool {
  switch (lhs, rhs) {
  case (.oneofUint32(let l), .oneofUint32(let r)): return l == r
  case (.oneofNestedMessage(let l), .oneofNestedMessage(let r)): return l == r
  case (.oneofString(let l), .oneofString(let r)): return l == r
  case (.oneofEnum(let l), .oneofEnum(let r)): return l == r
  case (.None, .None): return true
  default: return false
  }
}
