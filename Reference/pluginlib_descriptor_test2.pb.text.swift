// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: pluginlib_descriptor_test2.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _3: SwiftProtobuf.ProtobufAPIVersion_3 {}
  typealias Version = _3
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension SwiftDescriptorTest_Proto3MessageForPresence: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "str_field"),
    2: .standard(proto: "int32_field"),
    3: .standard(proto: "enum_field"),
    4: .standard(proto: "message_field"),
    11: .standard(proto: "opt_str_field"),
    12: .standard(proto: "opt_int32_field"),
    13: .standard(proto: "opt_enum_field"),
    14: .standard(proto: "opt_message_field"),
    21: .standard(proto: "repeat_str_field"),
    22: .standard(proto: "repeat_int32_field"),
    23: .standard(proto: "repeat_enum_field"),
    24: .standard(proto: "repeat_message_field"),
    31: .standard(proto: "oneof_str_field"),
    32: .standard(proto: "oneof_int32_field"),
    33: .standard(proto: "oneof_enum_field"),
    34: .standard(proto: "oneof_message_field"),
  ]
}

extension SwiftDescriptorTest_Proto3MessageForPresence.SubEnum: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "SUB_VALUE_0"),
    1: .same(proto: "SUB_VALUE_1"),
    2: .same(proto: "SUB_VALUE_2"),
  ]
}

extension SwiftDescriptorTest_OtherMessage: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "field"),
  ]
}
