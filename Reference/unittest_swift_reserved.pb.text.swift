// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: unittest_swift_reserved.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _3: SwiftProtobuf.ProtobufAPIVersion_3 {}
  typealias Version = _3
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension ProtobufUnittest_SwiftReservedTest: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    10: .standard(proto: "proto_message_name"),
    11: .standard(proto: "proto_package_name"),
    12: .standard(proto: "any_type_prefix"),
    13: .standard(proto: "any_type_url"),
    20: .standard(proto: "is_initialized"),
    21: .standard(proto: "hash_value"),
    22: .standard(proto: "debug_description"),
    30: .standard(proto: "required_int"),
  ]
}

extension ProtobufUnittest_SwiftReservedTest.Enum: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "DOUBLE"),
    2: .same(proto: "JSON"),
    3: .same(proto: "CLASS"),
    4: .same(proto: "_"),
    5: .same(proto: "SELF"),
    6: .same(proto: "TYPE"),
  ]
}

extension ProtobufUnittest_SwiftReservedTest.ProtocolEnum: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "a"),
  ]
}

extension ProtobufUnittest_SwiftReservedTest.classMessage: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()
}

extension ProtobufUnittest_SwiftReservedTest.TypeMessage: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()
}

extension ProtobufUnittest_SwiftReservedTest.isEqual: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()
}

extension ProtobufUnittest_SwiftReservedTestExt: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()
}
