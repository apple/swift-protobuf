/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: unittest_swift_naming.proto
 *
 */

// Protos/unittest_swift_reserved.proto - test proto
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2016 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See http://swift.org/LICENSE.txt for license information
// See http://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
// -----------------------------------------------------------------------------
///
/// Test Swift reserved words used as enum or message names
///
// -----------------------------------------------------------------------------

/// proto2 syntax is used so the has*/clear* names also get generated.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _1: SwiftProtobuf.ProtobufAPIVersion_1 {}
  typealias Version = _1
}

struct SwiftUnittest_Names_FieldNamingInitials: SwiftProtobuf.Message {
  static let protoMessageName: String = _protobuf_package + ".FieldNamingInitials"

  var unknownFields = SwiftProtobuf.UnknownStorage()

  struct Lowers: SwiftProtobuf.Message {
    static let protoMessageName: String = SwiftUnittest_Names_FieldNamingInitials.protoMessageName + ".Lowers"

    var http: Int32 {
      get {return _http ?? 0}
      set {_http = newValue}
    }
    /// Returns true if `http` has been explicitly set.
    var hasHTTP: Bool {return self._http != nil}
    /// Clears the value of `http`. Subsequent reads from it will return its default value.
    mutating func clearHTTP() {self._http = nil}

    var httpRequest: Int32 {
      get {return _httpRequest ?? 0}
      set {_httpRequest = newValue}
    }
    /// Returns true if `httpRequest` has been explicitly set.
    var hasHTTPRequest: Bool {return self._httpRequest != nil}
    /// Clears the value of `httpRequest`. Subsequent reads from it will return its default value.
    mutating func clearHTTPRequest() {self._httpRequest = nil}

    var theHTTPRequest: Int32 {
      get {return _theHTTPRequest ?? 0}
      set {_theHTTPRequest = newValue}
    }
    /// Returns true if `theHTTPRequest` has been explicitly set.
    var hasTheHTTPRequest: Bool {return self._theHTTPRequest != nil}
    /// Clears the value of `theHTTPRequest`. Subsequent reads from it will return its default value.
    mutating func clearTheHTTPRequest() {self._theHTTPRequest = nil}

    var theHTTP: Int32 {
      get {return _theHTTP ?? 0}
      set {_theHTTP = newValue}
    }
    /// Returns true if `theHTTP` has been explicitly set.
    var hasTheHTTP: Bool {return self._theHTTP != nil}
    /// Clears the value of `theHTTP`. Subsequent reads from it will return its default value.
    mutating func clearTheHTTP() {self._theHTTP = nil}

    var https: Int32 {
      get {return _https ?? 0}
      set {_https = newValue}
    }
    /// Returns true if `https` has been explicitly set.
    var hasHTTPS: Bool {return self._https != nil}
    /// Clears the value of `https`. Subsequent reads from it will return its default value.
    mutating func clearHTTPS() {self._https = nil}

    var httpsRequest: Int32 {
      get {return _httpsRequest ?? 0}
      set {_httpsRequest = newValue}
    }
    /// Returns true if `httpsRequest` has been explicitly set.
    var hasHTTPSRequest: Bool {return self._httpsRequest != nil}
    /// Clears the value of `httpsRequest`. Subsequent reads from it will return its default value.
    mutating func clearHTTPSRequest() {self._httpsRequest = nil}

    var theHTTPSRequest: Int32 {
      get {return _theHTTPSRequest ?? 0}
      set {_theHTTPSRequest = newValue}
    }
    /// Returns true if `theHTTPSRequest` has been explicitly set.
    var hasTheHTTPSRequest: Bool {return self._theHTTPSRequest != nil}
    /// Clears the value of `theHTTPSRequest`. Subsequent reads from it will return its default value.
    mutating func clearTheHTTPSRequest() {self._theHTTPSRequest = nil}

    var theHTTPS: Int32 {
      get {return _theHTTPS ?? 0}
      set {_theHTTPS = newValue}
    }
    /// Returns true if `theHTTPS` has been explicitly set.
    var hasTheHTTPS: Bool {return self._theHTTPS != nil}
    /// Clears the value of `theHTTPS`. Subsequent reads from it will return its default value.
    mutating func clearTheHTTPS() {self._theHTTPS = nil}

    var url: Int32 {
      get {return _url ?? 0}
      set {_url = newValue}
    }
    /// Returns true if `url` has been explicitly set.
    var hasURL: Bool {return self._url != nil}
    /// Clears the value of `url`. Subsequent reads from it will return its default value.
    mutating func clearURL() {self._url = nil}

    var urlValue: Int32 {
      get {return _urlValue ?? 0}
      set {_urlValue = newValue}
    }
    /// Returns true if `urlValue` has been explicitly set.
    var hasURLValue: Bool {return self._urlValue != nil}
    /// Clears the value of `urlValue`. Subsequent reads from it will return its default value.
    mutating func clearURLValue() {self._urlValue = nil}

    var theURLValue: Int32 {
      get {return _theURLValue ?? 0}
      set {_theURLValue = newValue}
    }
    /// Returns true if `theURLValue` has been explicitly set.
    var hasTheURLValue: Bool {return self._theURLValue != nil}
    /// Clears the value of `theURLValue`. Subsequent reads from it will return its default value.
    mutating func clearTheURLValue() {self._theURLValue = nil}

    var theURL: Int32 {
      get {return _theURL ?? 0}
      set {_theURL = newValue}
    }
    /// Returns true if `theURL` has been explicitly set.
    var hasTheURL: Bool {return self._theURL != nil}
    /// Clears the value of `theURL`. Subsequent reads from it will return its default value.
    mutating func clearTheURL() {self._theURL = nil}

    var aBC: Int32 {
      get {return _aBC ?? 0}
      set {_aBC = newValue}
    }
    /// Returns true if `aBC` has been explicitly set.
    var hasABC: Bool {return self._aBC != nil}
    /// Clears the value of `aBC`. Subsequent reads from it will return its default value.
    mutating func clearABC() {self._aBC = nil}

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularInt32Field(value: &self._http)
        case 2: try decoder.decodeSingularInt32Field(value: &self._httpRequest)
        case 3: try decoder.decodeSingularInt32Field(value: &self._theHTTPRequest)
        case 4: try decoder.decodeSingularInt32Field(value: &self._theHTTP)
        case 11: try decoder.decodeSingularInt32Field(value: &self._https)
        case 12: try decoder.decodeSingularInt32Field(value: &self._httpsRequest)
        case 13: try decoder.decodeSingularInt32Field(value: &self._theHTTPSRequest)
        case 14: try decoder.decodeSingularInt32Field(value: &self._theHTTPS)
        case 21: try decoder.decodeSingularInt32Field(value: &self._url)
        case 22: try decoder.decodeSingularInt32Field(value: &self._urlValue)
        case 23: try decoder.decodeSingularInt32Field(value: &self._theURLValue)
        case 24: try decoder.decodeSingularInt32Field(value: &self._theURL)
        case 31: try decoder.decodeSingularInt32Field(value: &self._aBC)
        default: break
        }
      }
    }

    func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
      if let v = self._http {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 1)
      }
      if let v = self._httpRequest {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 2)
      }
      if let v = self._theHTTPRequest {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 3)
      }
      if let v = self._theHTTP {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 4)
      }
      if let v = self._https {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 11)
      }
      if let v = self._httpsRequest {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 12)
      }
      if let v = self._theHTTPSRequest {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 13)
      }
      if let v = self._theHTTPS {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 14)
      }
      if let v = self._url {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 21)
      }
      if let v = self._urlValue {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 22)
      }
      if let v = self._theURLValue {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 23)
      }
      if let v = self._theURL {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 24)
      }
      if let v = self._aBC {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 31)
      }
      try unknownFields.traverse(visitor: &visitor)
    }

    fileprivate var _http: Int32? = nil
    fileprivate var _httpRequest: Int32? = nil
    fileprivate var _theHTTPRequest: Int32? = nil
    fileprivate var _theHTTP: Int32? = nil
    fileprivate var _https: Int32? = nil
    fileprivate var _httpsRequest: Int32? = nil
    fileprivate var _theHTTPSRequest: Int32? = nil
    fileprivate var _theHTTPS: Int32? = nil
    fileprivate var _url: Int32? = nil
    fileprivate var _urlValue: Int32? = nil
    fileprivate var _theURLValue: Int32? = nil
    fileprivate var _theURL: Int32? = nil
    fileprivate var _aBC: Int32? = nil
  }

  struct Uppers: SwiftProtobuf.Message {
    static let protoMessageName: String = SwiftUnittest_Names_FieldNamingInitials.protoMessageName + ".Uppers"

    var http: Int32 {
      get {return _http ?? 0}
      set {_http = newValue}
    }
    /// Returns true if `http` has been explicitly set.
    var hasHTTP: Bool {return self._http != nil}
    /// Clears the value of `http`. Subsequent reads from it will return its default value.
    mutating func clearHTTP() {self._http = nil}

    var httpRequest: Int32 {
      get {return _httpRequest ?? 0}
      set {_httpRequest = newValue}
    }
    /// Returns true if `httpRequest` has been explicitly set.
    var hasHTTPRequest: Bool {return self._httpRequest != nil}
    /// Clears the value of `httpRequest`. Subsequent reads from it will return its default value.
    mutating func clearHTTPRequest() {self._httpRequest = nil}

    var theHTTPRequest: Int32 {
      get {return _theHTTPRequest ?? 0}
      set {_theHTTPRequest = newValue}
    }
    /// Returns true if `theHTTPRequest` has been explicitly set.
    var hasTheHTTPRequest: Bool {return self._theHTTPRequest != nil}
    /// Clears the value of `theHTTPRequest`. Subsequent reads from it will return its default value.
    mutating func clearTheHTTPRequest() {self._theHTTPRequest = nil}

    var theHTTP: Int32 {
      get {return _theHTTP ?? 0}
      set {_theHTTP = newValue}
    }
    /// Returns true if `theHTTP` has been explicitly set.
    var hasTheHTTP: Bool {return self._theHTTP != nil}
    /// Clears the value of `theHTTP`. Subsequent reads from it will return its default value.
    mutating func clearTheHTTP() {self._theHTTP = nil}

    var https: Int32 {
      get {return _https ?? 0}
      set {_https = newValue}
    }
    /// Returns true if `https` has been explicitly set.
    var hasHTTPS: Bool {return self._https != nil}
    /// Clears the value of `https`. Subsequent reads from it will return its default value.
    mutating func clearHTTPS() {self._https = nil}

    var httpsRequest: Int32 {
      get {return _httpsRequest ?? 0}
      set {_httpsRequest = newValue}
    }
    /// Returns true if `httpsRequest` has been explicitly set.
    var hasHTTPSRequest: Bool {return self._httpsRequest != nil}
    /// Clears the value of `httpsRequest`. Subsequent reads from it will return its default value.
    mutating func clearHTTPSRequest() {self._httpsRequest = nil}

    var theHTTPSRequest: Int32 {
      get {return _theHTTPSRequest ?? 0}
      set {_theHTTPSRequest = newValue}
    }
    /// Returns true if `theHTTPSRequest` has been explicitly set.
    var hasTheHTTPSRequest: Bool {return self._theHTTPSRequest != nil}
    /// Clears the value of `theHTTPSRequest`. Subsequent reads from it will return its default value.
    mutating func clearTheHTTPSRequest() {self._theHTTPSRequest = nil}

    var theHTTPS: Int32 {
      get {return _theHTTPS ?? 0}
      set {_theHTTPS = newValue}
    }
    /// Returns true if `theHTTPS` has been explicitly set.
    var hasTheHTTPS: Bool {return self._theHTTPS != nil}
    /// Clears the value of `theHTTPS`. Subsequent reads from it will return its default value.
    mutating func clearTheHTTPS() {self._theHTTPS = nil}

    var url: Int32 {
      get {return _url ?? 0}
      set {_url = newValue}
    }
    /// Returns true if `url` has been explicitly set.
    var hasURL: Bool {return self._url != nil}
    /// Clears the value of `url`. Subsequent reads from it will return its default value.
    mutating func clearURL() {self._url = nil}

    var urlValue: Int32 {
      get {return _urlValue ?? 0}
      set {_urlValue = newValue}
    }
    /// Returns true if `urlValue` has been explicitly set.
    var hasURLValue: Bool {return self._urlValue != nil}
    /// Clears the value of `urlValue`. Subsequent reads from it will return its default value.
    mutating func clearURLValue() {self._urlValue = nil}

    var theURLValue: Int32 {
      get {return _theURLValue ?? 0}
      set {_theURLValue = newValue}
    }
    /// Returns true if `theURLValue` has been explicitly set.
    var hasTheURLValue: Bool {return self._theURLValue != nil}
    /// Clears the value of `theURLValue`. Subsequent reads from it will return its default value.
    mutating func clearTheURLValue() {self._theURLValue = nil}

    var theURL: Int32 {
      get {return _theURL ?? 0}
      set {_theURL = newValue}
    }
    /// Returns true if `theURL` has been explicitly set.
    var hasTheURL: Bool {return self._theURL != nil}
    /// Clears the value of `theURL`. Subsequent reads from it will return its default value.
    mutating func clearTheURL() {self._theURL = nil}

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularInt32Field(value: &self._http)
        case 2: try decoder.decodeSingularInt32Field(value: &self._httpRequest)
        case 3: try decoder.decodeSingularInt32Field(value: &self._theHTTPRequest)
        case 4: try decoder.decodeSingularInt32Field(value: &self._theHTTP)
        case 11: try decoder.decodeSingularInt32Field(value: &self._https)
        case 12: try decoder.decodeSingularInt32Field(value: &self._httpsRequest)
        case 13: try decoder.decodeSingularInt32Field(value: &self._theHTTPSRequest)
        case 14: try decoder.decodeSingularInt32Field(value: &self._theHTTPS)
        case 21: try decoder.decodeSingularInt32Field(value: &self._url)
        case 22: try decoder.decodeSingularInt32Field(value: &self._urlValue)
        case 23: try decoder.decodeSingularInt32Field(value: &self._theURLValue)
        case 24: try decoder.decodeSingularInt32Field(value: &self._theURL)
        default: break
        }
      }
    }

    func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
      if let v = self._http {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 1)
      }
      if let v = self._httpRequest {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 2)
      }
      if let v = self._theHTTPRequest {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 3)
      }
      if let v = self._theHTTP {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 4)
      }
      if let v = self._https {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 11)
      }
      if let v = self._httpsRequest {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 12)
      }
      if let v = self._theHTTPSRequest {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 13)
      }
      if let v = self._theHTTPS {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 14)
      }
      if let v = self._url {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 21)
      }
      if let v = self._urlValue {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 22)
      }
      if let v = self._theURLValue {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 23)
      }
      if let v = self._theURL {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 24)
      }
      try unknownFields.traverse(visitor: &visitor)
    }

    fileprivate var _http: Int32? = nil
    fileprivate var _httpRequest: Int32? = nil
    fileprivate var _theHTTPRequest: Int32? = nil
    fileprivate var _theHTTP: Int32? = nil
    fileprivate var _https: Int32? = nil
    fileprivate var _httpsRequest: Int32? = nil
    fileprivate var _theHTTPSRequest: Int32? = nil
    fileprivate var _theHTTPS: Int32? = nil
    fileprivate var _url: Int32? = nil
    fileprivate var _urlValue: Int32? = nil
    fileprivate var _theURLValue: Int32? = nil
    fileprivate var _theURL: Int32? = nil
  }

  struct WordCase: SwiftProtobuf.Message {
    static let protoMessageName: String = SwiftUnittest_Names_FieldNamingInitials.protoMessageName + ".WordCase"

    var http: Int32 {
      get {return _http ?? 0}
      set {_http = newValue}
    }
    /// Returns true if `http` has been explicitly set.
    var hasHTTP: Bool {return self._http != nil}
    /// Clears the value of `http`. Subsequent reads from it will return its default value.
    mutating func clearHTTP() {self._http = nil}

    var httpRequest: Int32 {
      get {return _httpRequest ?? 0}
      set {_httpRequest = newValue}
    }
    /// Returns true if `httpRequest` has been explicitly set.
    var hasHTTPRequest: Bool {return self._httpRequest != nil}
    /// Clears the value of `httpRequest`. Subsequent reads from it will return its default value.
    mutating func clearHTTPRequest() {self._httpRequest = nil}

    var theHTTPRequest: Int32 {
      get {return _theHTTPRequest ?? 0}
      set {_theHTTPRequest = newValue}
    }
    /// Returns true if `theHTTPRequest` has been explicitly set.
    var hasTheHTTPRequest: Bool {return self._theHTTPRequest != nil}
    /// Clears the value of `theHTTPRequest`. Subsequent reads from it will return its default value.
    mutating func clearTheHTTPRequest() {self._theHTTPRequest = nil}

    var theHTTP: Int32 {
      get {return _theHTTP ?? 0}
      set {_theHTTP = newValue}
    }
    /// Returns true if `theHTTP` has been explicitly set.
    var hasTheHTTP: Bool {return self._theHTTP != nil}
    /// Clears the value of `theHTTP`. Subsequent reads from it will return its default value.
    mutating func clearTheHTTP() {self._theHTTP = nil}

    var https: Int32 {
      get {return _https ?? 0}
      set {_https = newValue}
    }
    /// Returns true if `https` has been explicitly set.
    var hasHTTPS: Bool {return self._https != nil}
    /// Clears the value of `https`. Subsequent reads from it will return its default value.
    mutating func clearHTTPS() {self._https = nil}

    var httpsRequest: Int32 {
      get {return _httpsRequest ?? 0}
      set {_httpsRequest = newValue}
    }
    /// Returns true if `httpsRequest` has been explicitly set.
    var hasHTTPSRequest: Bool {return self._httpsRequest != nil}
    /// Clears the value of `httpsRequest`. Subsequent reads from it will return its default value.
    mutating func clearHTTPSRequest() {self._httpsRequest = nil}

    var theHTTPSRequest: Int32 {
      get {return _theHTTPSRequest ?? 0}
      set {_theHTTPSRequest = newValue}
    }
    /// Returns true if `theHTTPSRequest` has been explicitly set.
    var hasTheHTTPSRequest: Bool {return self._theHTTPSRequest != nil}
    /// Clears the value of `theHTTPSRequest`. Subsequent reads from it will return its default value.
    mutating func clearTheHTTPSRequest() {self._theHTTPSRequest = nil}

    var theHTTPS: Int32 {
      get {return _theHTTPS ?? 0}
      set {_theHTTPS = newValue}
    }
    /// Returns true if `theHTTPS` has been explicitly set.
    var hasTheHTTPS: Bool {return self._theHTTPS != nil}
    /// Clears the value of `theHTTPS`. Subsequent reads from it will return its default value.
    mutating func clearTheHTTPS() {self._theHTTPS = nil}

    var url: Int32 {
      get {return _url ?? 0}
      set {_url = newValue}
    }
    /// Returns true if `url` has been explicitly set.
    var hasURL: Bool {return self._url != nil}
    /// Clears the value of `url`. Subsequent reads from it will return its default value.
    mutating func clearURL() {self._url = nil}

    var urlValue: Int32 {
      get {return _urlValue ?? 0}
      set {_urlValue = newValue}
    }
    /// Returns true if `urlValue` has been explicitly set.
    var hasURLValue: Bool {return self._urlValue != nil}
    /// Clears the value of `urlValue`. Subsequent reads from it will return its default value.
    mutating func clearURLValue() {self._urlValue = nil}

    var theURLValue: Int32 {
      get {return _theURLValue ?? 0}
      set {_theURLValue = newValue}
    }
    /// Returns true if `theURLValue` has been explicitly set.
    var hasTheURLValue: Bool {return self._theURLValue != nil}
    /// Clears the value of `theURLValue`. Subsequent reads from it will return its default value.
    mutating func clearTheURLValue() {self._theURLValue = nil}

    var theURL: Int32 {
      get {return _theURL ?? 0}
      set {_theURL = newValue}
    }
    /// Returns true if `theURL` has been explicitly set.
    var hasTheURL: Bool {return self._theURL != nil}
    /// Clears the value of `theURL`. Subsequent reads from it will return its default value.
    mutating func clearTheURL() {self._theURL = nil}

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularInt32Field(value: &self._http)
        case 2: try decoder.decodeSingularInt32Field(value: &self._httpRequest)
        case 3: try decoder.decodeSingularInt32Field(value: &self._theHTTPRequest)
        case 4: try decoder.decodeSingularInt32Field(value: &self._theHTTP)
        case 11: try decoder.decodeSingularInt32Field(value: &self._https)
        case 12: try decoder.decodeSingularInt32Field(value: &self._httpsRequest)
        case 13: try decoder.decodeSingularInt32Field(value: &self._theHTTPSRequest)
        case 14: try decoder.decodeSingularInt32Field(value: &self._theHTTPS)
        case 21: try decoder.decodeSingularInt32Field(value: &self._url)
        case 22: try decoder.decodeSingularInt32Field(value: &self._urlValue)
        case 23: try decoder.decodeSingularInt32Field(value: &self._theURLValue)
        case 24: try decoder.decodeSingularInt32Field(value: &self._theURL)
        default: break
        }
      }
    }

    func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
      if let v = self._http {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 1)
      }
      if let v = self._httpRequest {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 2)
      }
      if let v = self._theHTTPRequest {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 3)
      }
      if let v = self._theHTTP {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 4)
      }
      if let v = self._https {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 11)
      }
      if let v = self._httpsRequest {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 12)
      }
      if let v = self._theHTTPSRequest {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 13)
      }
      if let v = self._theHTTPS {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 14)
      }
      if let v = self._url {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 21)
      }
      if let v = self._urlValue {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 22)
      }
      if let v = self._theURLValue {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 23)
      }
      if let v = self._theURL {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 24)
      }
      try unknownFields.traverse(visitor: &visitor)
    }

    fileprivate var _http: Int32? = nil
    fileprivate var _httpRequest: Int32? = nil
    fileprivate var _theHTTPRequest: Int32? = nil
    fileprivate var _theHTTP: Int32? = nil
    fileprivate var _https: Int32? = nil
    fileprivate var _httpsRequest: Int32? = nil
    fileprivate var _theHTTPSRequest: Int32? = nil
    fileprivate var _theHTTPS: Int32? = nil
    fileprivate var _url: Int32? = nil
    fileprivate var _urlValue: Int32? = nil
    fileprivate var _theURLValue: Int32? = nil
    fileprivate var _theURL: Int32? = nil
  }

  init() {}

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }
}

struct SwiftUnittest_Names_ExtensionNamingInitials: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage {
  static let protoMessageName: String = _protobuf_package + ".ExtensionNamingInitials"

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      if (1 <= fieldNumber && fieldNumber < 1001) {
        try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: SwiftUnittest_Names_ExtensionNamingInitials.self, fieldNumber: fieldNumber)
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try visitor.visitExtensionFields(fields: _protobuf_extensionFieldValues, start: 1, end: 1001)
    try unknownFields.traverse(visitor: &visitor)
  }

  var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
}

struct SwiftUnittest_Names_Lowers: SwiftProtobuf.Message {
  static let protoMessageName: String = _protobuf_package + ".Lowers"

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }
}

struct SwiftUnittest_Names_Uppers: SwiftProtobuf.Message {
  static let protoMessageName: String = _protobuf_package + ".Uppers"

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }
}

struct SwiftUnittest_Names_WordCase: SwiftProtobuf.Message {
  static let protoMessageName: String = _protobuf_package + ".WordCase"

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }
}

struct SwiftUnittest_Names_ExtensionNamingInitialsLowers: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage {
  static let protoMessageName: String = _protobuf_package + ".ExtensionNamingInitialsLowers"

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      if (1 <= fieldNumber && fieldNumber < 1001) {
        try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: SwiftUnittest_Names_ExtensionNamingInitialsLowers.self, fieldNumber: fieldNumber)
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try visitor.visitExtensionFields(fields: _protobuf_extensionFieldValues, start: 1, end: 1001)
    try unknownFields.traverse(visitor: &visitor)
  }

  var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
}

struct SwiftUnittest_Names_ExtensionNamingInitialsUppers: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage {
  static let protoMessageName: String = _protobuf_package + ".ExtensionNamingInitialsUppers"

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      if (1 <= fieldNumber && fieldNumber < 1001) {
        try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: SwiftUnittest_Names_ExtensionNamingInitialsUppers.self, fieldNumber: fieldNumber)
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try visitor.visitExtensionFields(fields: _protobuf_extensionFieldValues, start: 1, end: 1001)
    try unknownFields.traverse(visitor: &visitor)
  }

  var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
}

struct SwiftUnittest_Names_ExtensionNamingInitialsWordCase: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage {
  static let protoMessageName: String = _protobuf_package + ".ExtensionNamingInitialsWordCase"

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      if (1 <= fieldNumber && fieldNumber < 1001) {
        try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: SwiftUnittest_Names_ExtensionNamingInitialsWordCase.self, fieldNumber: fieldNumber)
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try visitor.visitExtensionFields(fields: _protobuf_extensionFieldValues, start: 1, end: 1001)
    try unknownFields.traverse(visitor: &visitor)
  }

  var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
}

// MARK: - Extension support defined in unittest_swift_naming.proto.

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var SwiftUnittest_Names_http: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_http) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_http, value: newValue)}
  }
  var hasSwiftUnittest_Names_http: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_http)
  }
  mutating func clearSwiftUnittest_Names_http() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_http)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var SwiftUnittest_Names_httpRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_http_request) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_http_request, value: newValue)}
  }
  var hasSwiftUnittest_Names_httpRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_http_request)
  }
  mutating func clearSwiftUnittest_Names_httpRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_http_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var SwiftUnittest_Names_theHTTPRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_the_http_request) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_the_http_request, value: newValue)}
  }
  var hasSwiftUnittest_Names_theHTTPRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_the_http_request)
  }
  mutating func clearSwiftUnittest_Names_theHTTPRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_the_http_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var SwiftUnittest_Names_theHTTP: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_the_http) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_the_http, value: newValue)}
  }
  var hasSwiftUnittest_Names_theHTTP: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_the_http)
  }
  mutating func clearSwiftUnittest_Names_theHTTP() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_the_http)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var SwiftUnittest_Names_https: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_https) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_https, value: newValue)}
  }
  var hasSwiftUnittest_Names_https: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_https)
  }
  mutating func clearSwiftUnittest_Names_https() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_https)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var SwiftUnittest_Names_httpsRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_https_request) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_https_request, value: newValue)}
  }
  var hasSwiftUnittest_Names_httpsRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_https_request)
  }
  mutating func clearSwiftUnittest_Names_httpsRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_https_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var SwiftUnittest_Names_theHTTPSRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_the_https_request) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_the_https_request, value: newValue)}
  }
  var hasSwiftUnittest_Names_theHTTPSRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_the_https_request)
  }
  mutating func clearSwiftUnittest_Names_theHTTPSRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_the_https_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var SwiftUnittest_Names_theHTTPS: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_the_https) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_the_https, value: newValue)}
  }
  var hasSwiftUnittest_Names_theHTTPS: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_the_https)
  }
  mutating func clearSwiftUnittest_Names_theHTTPS() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_the_https)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var SwiftUnittest_Names_url: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_url) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_url, value: newValue)}
  }
  var hasSwiftUnittest_Names_url: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_url)
  }
  mutating func clearSwiftUnittest_Names_url() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_url)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var SwiftUnittest_Names_urlValue: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_url_value) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_url_value, value: newValue)}
  }
  var hasSwiftUnittest_Names_urlValue: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_url_value)
  }
  mutating func clearSwiftUnittest_Names_urlValue() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_url_value)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var SwiftUnittest_Names_theURLValue: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_the_url_value) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_the_url_value, value: newValue)}
  }
  var hasSwiftUnittest_Names_theURLValue: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_the_url_value)
  }
  mutating func clearSwiftUnittest_Names_theURLValue() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_the_url_value)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var SwiftUnittest_Names_theURL: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_the_url) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_the_url, value: newValue)}
  }
  var hasSwiftUnittest_Names_theURL: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_the_url)
  }
  mutating func clearSwiftUnittest_Names_theURL() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_the_url)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {
  var SwiftUnittest_Names_aBC: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_a_b_c) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_a_b_c, value: newValue)}
  }
  var hasSwiftUnittest_Names_aBC: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_a_b_c)
  }
  mutating func clearSwiftUnittest_Names_aBC() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_a_b_c)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var SwiftUnittest_Names_http: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_HTTP) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_HTTP, value: newValue)}
  }
  var hasSwiftUnittest_Names_http: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_HTTP)
  }
  mutating func clearSwiftUnittest_Names_http() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_HTTP)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var SwiftUnittest_Names_httpRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_HTTP_request) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_HTTP_request, value: newValue)}
  }
  var hasSwiftUnittest_Names_httpRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_HTTP_request)
  }
  mutating func clearSwiftUnittest_Names_httpRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_HTTP_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var SwiftUnittest_Names_theHTTPRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_the_HTTP_request) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_the_HTTP_request, value: newValue)}
  }
  var hasSwiftUnittest_Names_theHTTPRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_the_HTTP_request)
  }
  mutating func clearSwiftUnittest_Names_theHTTPRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_the_HTTP_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var SwiftUnittest_Names_theHTTP: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_the_HTTP) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_the_HTTP, value: newValue)}
  }
  var hasSwiftUnittest_Names_theHTTP: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_the_HTTP)
  }
  mutating func clearSwiftUnittest_Names_theHTTP() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_the_HTTP)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var SwiftUnittest_Names_https: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_HTTPS) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_HTTPS, value: newValue)}
  }
  var hasSwiftUnittest_Names_https: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_HTTPS)
  }
  mutating func clearSwiftUnittest_Names_https() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_HTTPS)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var SwiftUnittest_Names_httpsRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_HTTPS_request) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_HTTPS_request, value: newValue)}
  }
  var hasSwiftUnittest_Names_httpsRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_HTTPS_request)
  }
  mutating func clearSwiftUnittest_Names_httpsRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_HTTPS_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var SwiftUnittest_Names_theHTTPSRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_the_HTTPS_request) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_the_HTTPS_request, value: newValue)}
  }
  var hasSwiftUnittest_Names_theHTTPSRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_the_HTTPS_request)
  }
  mutating func clearSwiftUnittest_Names_theHTTPSRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_the_HTTPS_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var SwiftUnittest_Names_theHTTPS: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_the_HTTPS) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_the_HTTPS, value: newValue)}
  }
  var hasSwiftUnittest_Names_theHTTPS: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_the_HTTPS)
  }
  mutating func clearSwiftUnittest_Names_theHTTPS() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_the_HTTPS)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var SwiftUnittest_Names_url: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_URL) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_URL, value: newValue)}
  }
  var hasSwiftUnittest_Names_url: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_URL)
  }
  mutating func clearSwiftUnittest_Names_url() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_URL)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var SwiftUnittest_Names_urlValue: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_URL_value) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_URL_value, value: newValue)}
  }
  var hasSwiftUnittest_Names_urlValue: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_URL_value)
  }
  mutating func clearSwiftUnittest_Names_urlValue() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_URL_value)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var SwiftUnittest_Names_theURLValue: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_the_URL_value) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_the_URL_value, value: newValue)}
  }
  var hasSwiftUnittest_Names_theURLValue: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_the_URL_value)
  }
  mutating func clearSwiftUnittest_Names_theURLValue() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_the_URL_value)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {
  var SwiftUnittest_Names_theURL: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_the_URL) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_the_URL, value: newValue)}
  }
  var hasSwiftUnittest_Names_theURL: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_the_URL)
  }
  mutating func clearSwiftUnittest_Names_theURL() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_the_URL)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var SwiftUnittest_Names_http: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_Http) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_Http, value: newValue)}
  }
  var hasSwiftUnittest_Names_http: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_Http)
  }
  mutating func clearSwiftUnittest_Names_http() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_Http)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var SwiftUnittest_Names_httpRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_HttpRequest) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_HttpRequest, value: newValue)}
  }
  var hasSwiftUnittest_Names_httpRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_HttpRequest)
  }
  mutating func clearSwiftUnittest_Names_httpRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_HttpRequest)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var SwiftUnittest_Names_theHTTPRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_TheHttpRequest) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_TheHttpRequest, value: newValue)}
  }
  var hasSwiftUnittest_Names_theHTTPRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_TheHttpRequest)
  }
  mutating func clearSwiftUnittest_Names_theHTTPRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_TheHttpRequest)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var SwiftUnittest_Names_theHTTP: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_TheHttp) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_TheHttp, value: newValue)}
  }
  var hasSwiftUnittest_Names_theHTTP: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_TheHttp)
  }
  mutating func clearSwiftUnittest_Names_theHTTP() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_TheHttp)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var SwiftUnittest_Names_https: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_Https) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_Https, value: newValue)}
  }
  var hasSwiftUnittest_Names_https: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_Https)
  }
  mutating func clearSwiftUnittest_Names_https() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_Https)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var SwiftUnittest_Names_httpsRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_HttpsRequest) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_HttpsRequest, value: newValue)}
  }
  var hasSwiftUnittest_Names_httpsRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_HttpsRequest)
  }
  mutating func clearSwiftUnittest_Names_httpsRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_HttpsRequest)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var SwiftUnittest_Names_theHTTPSRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_TheHttpsRequest) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_TheHttpsRequest, value: newValue)}
  }
  var hasSwiftUnittest_Names_theHTTPSRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_TheHttpsRequest)
  }
  mutating func clearSwiftUnittest_Names_theHTTPSRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_TheHttpsRequest)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var SwiftUnittest_Names_theHTTPS: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_TheHttps) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_TheHttps, value: newValue)}
  }
  var hasSwiftUnittest_Names_theHTTPS: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_TheHttps)
  }
  mutating func clearSwiftUnittest_Names_theHTTPS() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_TheHttps)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var SwiftUnittest_Names_url: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_Url) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_Url, value: newValue)}
  }
  var hasSwiftUnittest_Names_url: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_Url)
  }
  mutating func clearSwiftUnittest_Names_url() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_Url)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var SwiftUnittest_Names_urlValue: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_UrlValue) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_UrlValue, value: newValue)}
  }
  var hasSwiftUnittest_Names_urlValue: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_UrlValue)
  }
  mutating func clearSwiftUnittest_Names_urlValue() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_UrlValue)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var SwiftUnittest_Names_theURLValue: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_TheUrlValue) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_TheUrlValue, value: newValue)}
  }
  var hasSwiftUnittest_Names_theURLValue: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_TheUrlValue)
  }
  mutating func clearSwiftUnittest_Names_theURLValue() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_TheUrlValue)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {
  var SwiftUnittest_Names_theURL: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Extensions_TheUrl) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Extensions_TheUrl, value: newValue)}
  }
  var hasSwiftUnittest_Names_theURL: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Extensions_TheUrl)
  }
  mutating func clearSwiftUnittest_Names_theURL() {
    clearExtensionValue(ext: SwiftUnittest_Names_Extensions_TheUrl)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Lowers_http: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.http) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.http, value: newValue)}
  }
  var hasSwiftUnittest_Names_Lowers_http: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.http)
  }
  mutating func clearSwiftUnittest_Names_Lowers_http() {
    clearExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.http)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Lowers_httpRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.http_request) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.http_request, value: newValue)}
  }
  var hasSwiftUnittest_Names_Lowers_httpRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.http_request)
  }
  mutating func clearSwiftUnittest_Names_Lowers_httpRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.http_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Lowers_theHTTPRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_http_request) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_http_request, value: newValue)}
  }
  var hasSwiftUnittest_Names_Lowers_theHTTPRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_http_request)
  }
  mutating func clearSwiftUnittest_Names_Lowers_theHTTPRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_http_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Lowers_theHTTP: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_http) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_http, value: newValue)}
  }
  var hasSwiftUnittest_Names_Lowers_theHTTP: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_http)
  }
  mutating func clearSwiftUnittest_Names_Lowers_theHTTP() {
    clearExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_http)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Lowers_https: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.https) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.https, value: newValue)}
  }
  var hasSwiftUnittest_Names_Lowers_https: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.https)
  }
  mutating func clearSwiftUnittest_Names_Lowers_https() {
    clearExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.https)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Lowers_httpsRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.https_request) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.https_request, value: newValue)}
  }
  var hasSwiftUnittest_Names_Lowers_httpsRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.https_request)
  }
  mutating func clearSwiftUnittest_Names_Lowers_httpsRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.https_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Lowers_theHTTPSRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_https_request) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_https_request, value: newValue)}
  }
  var hasSwiftUnittest_Names_Lowers_theHTTPSRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_https_request)
  }
  mutating func clearSwiftUnittest_Names_Lowers_theHTTPSRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_https_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Lowers_theHTTPS: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_https) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_https, value: newValue)}
  }
  var hasSwiftUnittest_Names_Lowers_theHTTPS: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_https)
  }
  mutating func clearSwiftUnittest_Names_Lowers_theHTTPS() {
    clearExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_https)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Lowers_url: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.url) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.url, value: newValue)}
  }
  var hasSwiftUnittest_Names_Lowers_url: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.url)
  }
  mutating func clearSwiftUnittest_Names_Lowers_url() {
    clearExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.url)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Lowers_urlValue: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.url_value) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.url_value, value: newValue)}
  }
  var hasSwiftUnittest_Names_Lowers_urlValue: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.url_value)
  }
  mutating func clearSwiftUnittest_Names_Lowers_urlValue() {
    clearExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.url_value)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Lowers_theURLValue: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_url_value) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_url_value, value: newValue)}
  }
  var hasSwiftUnittest_Names_Lowers_theURLValue: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_url_value)
  }
  mutating func clearSwiftUnittest_Names_Lowers_theURLValue() {
    clearExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_url_value)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Lowers_theURL: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_url) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_url, value: newValue)}
  }
  var hasSwiftUnittest_Names_Lowers_theURL: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_url)
  }
  mutating func clearSwiftUnittest_Names_Lowers_theURL() {
    clearExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.the_url)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Lowers_aBC: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.a_b_c) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.a_b_c, value: newValue)}
  }
  var hasSwiftUnittest_Names_Lowers_aBC: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.a_b_c)
  }
  mutating func clearSwiftUnittest_Names_Lowers_aBC() {
    clearExtensionValue(ext: SwiftUnittest_Names_Lowers.Extensions.a_b_c)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Uppers_http: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.HTTP) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.HTTP, value: newValue)}
  }
  var hasSwiftUnittest_Names_Uppers_http: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.HTTP)
  }
  mutating func clearSwiftUnittest_Names_Uppers_http() {
    clearExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.HTTP)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Uppers_httpRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.HTTP_request) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.HTTP_request, value: newValue)}
  }
  var hasSwiftUnittest_Names_Uppers_httpRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.HTTP_request)
  }
  mutating func clearSwiftUnittest_Names_Uppers_httpRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.HTTP_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Uppers_theHTTPRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_HTTP_request) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_HTTP_request, value: newValue)}
  }
  var hasSwiftUnittest_Names_Uppers_theHTTPRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_HTTP_request)
  }
  mutating func clearSwiftUnittest_Names_Uppers_theHTTPRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_HTTP_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Uppers_theHTTP: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_HTTP) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_HTTP, value: newValue)}
  }
  var hasSwiftUnittest_Names_Uppers_theHTTP: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_HTTP)
  }
  mutating func clearSwiftUnittest_Names_Uppers_theHTTP() {
    clearExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_HTTP)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Uppers_https: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.HTTPS) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.HTTPS, value: newValue)}
  }
  var hasSwiftUnittest_Names_Uppers_https: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.HTTPS)
  }
  mutating func clearSwiftUnittest_Names_Uppers_https() {
    clearExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.HTTPS)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Uppers_httpsRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.HTTPS_request) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.HTTPS_request, value: newValue)}
  }
  var hasSwiftUnittest_Names_Uppers_httpsRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.HTTPS_request)
  }
  mutating func clearSwiftUnittest_Names_Uppers_httpsRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.HTTPS_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Uppers_theHTTPSRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_HTTPS_request) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_HTTPS_request, value: newValue)}
  }
  var hasSwiftUnittest_Names_Uppers_theHTTPSRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_HTTPS_request)
  }
  mutating func clearSwiftUnittest_Names_Uppers_theHTTPSRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_HTTPS_request)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Uppers_theHTTPS: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_HTTPS) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_HTTPS, value: newValue)}
  }
  var hasSwiftUnittest_Names_Uppers_theHTTPS: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_HTTPS)
  }
  mutating func clearSwiftUnittest_Names_Uppers_theHTTPS() {
    clearExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_HTTPS)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Uppers_url: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.URL) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.URL, value: newValue)}
  }
  var hasSwiftUnittest_Names_Uppers_url: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.URL)
  }
  mutating func clearSwiftUnittest_Names_Uppers_url() {
    clearExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.URL)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Uppers_urlValue: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.URL_value) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.URL_value, value: newValue)}
  }
  var hasSwiftUnittest_Names_Uppers_urlValue: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.URL_value)
  }
  mutating func clearSwiftUnittest_Names_Uppers_urlValue() {
    clearExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.URL_value)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Uppers_theURLValue: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_URL_value) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_URL_value, value: newValue)}
  }
  var hasSwiftUnittest_Names_Uppers_theURLValue: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_URL_value)
  }
  mutating func clearSwiftUnittest_Names_Uppers_theURLValue() {
    clearExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_URL_value)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_Uppers_theURL: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_URL) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_URL, value: newValue)}
  }
  var hasSwiftUnittest_Names_Uppers_theURL: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_URL)
  }
  mutating func clearSwiftUnittest_Names_Uppers_theURL() {
    clearExtensionValue(ext: SwiftUnittest_Names_Uppers.Extensions.the_URL)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_WordCase_http: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.Http) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.Http, value: newValue)}
  }
  var hasSwiftUnittest_Names_WordCase_http: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.Http)
  }
  mutating func clearSwiftUnittest_Names_WordCase_http() {
    clearExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.Http)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_WordCase_httpRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.HttpRequest) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.HttpRequest, value: newValue)}
  }
  var hasSwiftUnittest_Names_WordCase_httpRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.HttpRequest)
  }
  mutating func clearSwiftUnittest_Names_WordCase_httpRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.HttpRequest)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_WordCase_theHTTPRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheHttpRequest) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheHttpRequest, value: newValue)}
  }
  var hasSwiftUnittest_Names_WordCase_theHTTPRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheHttpRequest)
  }
  mutating func clearSwiftUnittest_Names_WordCase_theHTTPRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheHttpRequest)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_WordCase_theHTTP: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheHttp) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheHttp, value: newValue)}
  }
  var hasSwiftUnittest_Names_WordCase_theHTTP: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheHttp)
  }
  mutating func clearSwiftUnittest_Names_WordCase_theHTTP() {
    clearExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheHttp)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_WordCase_https: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.Https) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.Https, value: newValue)}
  }
  var hasSwiftUnittest_Names_WordCase_https: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.Https)
  }
  mutating func clearSwiftUnittest_Names_WordCase_https() {
    clearExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.Https)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_WordCase_httpsRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.HttpsRequest) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.HttpsRequest, value: newValue)}
  }
  var hasSwiftUnittest_Names_WordCase_httpsRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.HttpsRequest)
  }
  mutating func clearSwiftUnittest_Names_WordCase_httpsRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.HttpsRequest)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_WordCase_theHTTPSRequest: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheHttpsRequest) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheHttpsRequest, value: newValue)}
  }
  var hasSwiftUnittest_Names_WordCase_theHTTPSRequest: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheHttpsRequest)
  }
  mutating func clearSwiftUnittest_Names_WordCase_theHTTPSRequest() {
    clearExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheHttpsRequest)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_WordCase_theHTTPS: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheHttps) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheHttps, value: newValue)}
  }
  var hasSwiftUnittest_Names_WordCase_theHTTPS: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheHttps)
  }
  mutating func clearSwiftUnittest_Names_WordCase_theHTTPS() {
    clearExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheHttps)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_WordCase_url: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.Url) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.Url, value: newValue)}
  }
  var hasSwiftUnittest_Names_WordCase_url: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.Url)
  }
  mutating func clearSwiftUnittest_Names_WordCase_url() {
    clearExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.Url)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_WordCase_urlValue: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.UrlValue) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.UrlValue, value: newValue)}
  }
  var hasSwiftUnittest_Names_WordCase_urlValue: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.UrlValue)
  }
  mutating func clearSwiftUnittest_Names_WordCase_urlValue() {
    clearExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.UrlValue)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_WordCase_theURLValue: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheUrlValue) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheUrlValue, value: newValue)}
  }
  var hasSwiftUnittest_Names_WordCase_theURLValue: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheUrlValue)
  }
  mutating func clearSwiftUnittest_Names_WordCase_theURLValue() {
    clearExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheUrlValue)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials {
  var SwiftUnittest_Names_WordCase_theURL: Int32 {
    get {return getExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheUrl) ?? 0}
    set {setExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheUrl, value: newValue)}
  }
  var hasSwiftUnittest_Names_WordCase_theURL: Bool {
    return hasExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheUrl)
  }
  mutating func clearSwiftUnittest_Names_WordCase_theURL() {
    clearExtensionValue(ext: SwiftUnittest_Names_WordCase.Extensions.TheUrl)
  }
}

/// A `SwiftProtobuf.SimpleExtensionMap` that includes all of the extensions defined by
/// this .proto file. It can be used any place an `SwiftProtobuf.ExtensionMap` is needed
/// in parsing, or it can be combined with other `SwiftProtobuf.SimpleExtensionMap`s to create
/// a larger `SwiftProtobuf.SimpleExtensionMap`.
let SwiftUnittest_Names_UnittestSwiftNaming_Extensions: SwiftProtobuf.SimpleExtensionMap = [
  SwiftUnittest_Names_Extensions_http,
  SwiftUnittest_Names_Extensions_http_request,
  SwiftUnittest_Names_Extensions_the_http_request,
  SwiftUnittest_Names_Extensions_the_http,
  SwiftUnittest_Names_Extensions_https,
  SwiftUnittest_Names_Extensions_https_request,
  SwiftUnittest_Names_Extensions_the_https_request,
  SwiftUnittest_Names_Extensions_the_https,
  SwiftUnittest_Names_Extensions_url,
  SwiftUnittest_Names_Extensions_url_value,
  SwiftUnittest_Names_Extensions_the_url_value,
  SwiftUnittest_Names_Extensions_the_url,
  SwiftUnittest_Names_Extensions_a_b_c,
  SwiftUnittest_Names_Extensions_HTTP,
  SwiftUnittest_Names_Extensions_HTTP_request,
  SwiftUnittest_Names_Extensions_the_HTTP_request,
  SwiftUnittest_Names_Extensions_the_HTTP,
  SwiftUnittest_Names_Extensions_HTTPS,
  SwiftUnittest_Names_Extensions_HTTPS_request,
  SwiftUnittest_Names_Extensions_the_HTTPS_request,
  SwiftUnittest_Names_Extensions_the_HTTPS,
  SwiftUnittest_Names_Extensions_URL,
  SwiftUnittest_Names_Extensions_URL_value,
  SwiftUnittest_Names_Extensions_the_URL_value,
  SwiftUnittest_Names_Extensions_the_URL,
  SwiftUnittest_Names_Extensions_Http,
  SwiftUnittest_Names_Extensions_HttpRequest,
  SwiftUnittest_Names_Extensions_TheHttpRequest,
  SwiftUnittest_Names_Extensions_TheHttp,
  SwiftUnittest_Names_Extensions_Https,
  SwiftUnittest_Names_Extensions_HttpsRequest,
  SwiftUnittest_Names_Extensions_TheHttpsRequest,
  SwiftUnittest_Names_Extensions_TheHttps,
  SwiftUnittest_Names_Extensions_Url,
  SwiftUnittest_Names_Extensions_UrlValue,
  SwiftUnittest_Names_Extensions_TheUrlValue,
  SwiftUnittest_Names_Extensions_TheUrl,
  SwiftUnittest_Names_Lowers.Extensions.http,
  SwiftUnittest_Names_Lowers.Extensions.http_request,
  SwiftUnittest_Names_Lowers.Extensions.the_http_request,
  SwiftUnittest_Names_Lowers.Extensions.the_http,
  SwiftUnittest_Names_Lowers.Extensions.https,
  SwiftUnittest_Names_Lowers.Extensions.https_request,
  SwiftUnittest_Names_Lowers.Extensions.the_https_request,
  SwiftUnittest_Names_Lowers.Extensions.the_https,
  SwiftUnittest_Names_Lowers.Extensions.url,
  SwiftUnittest_Names_Lowers.Extensions.url_value,
  SwiftUnittest_Names_Lowers.Extensions.the_url_value,
  SwiftUnittest_Names_Lowers.Extensions.the_url,
  SwiftUnittest_Names_Lowers.Extensions.a_b_c,
  SwiftUnittest_Names_Uppers.Extensions.HTTP,
  SwiftUnittest_Names_Uppers.Extensions.HTTP_request,
  SwiftUnittest_Names_Uppers.Extensions.the_HTTP_request,
  SwiftUnittest_Names_Uppers.Extensions.the_HTTP,
  SwiftUnittest_Names_Uppers.Extensions.HTTPS,
  SwiftUnittest_Names_Uppers.Extensions.HTTPS_request,
  SwiftUnittest_Names_Uppers.Extensions.the_HTTPS_request,
  SwiftUnittest_Names_Uppers.Extensions.the_HTTPS,
  SwiftUnittest_Names_Uppers.Extensions.URL,
  SwiftUnittest_Names_Uppers.Extensions.URL_value,
  SwiftUnittest_Names_Uppers.Extensions.the_URL_value,
  SwiftUnittest_Names_Uppers.Extensions.the_URL,
  SwiftUnittest_Names_WordCase.Extensions.Http,
  SwiftUnittest_Names_WordCase.Extensions.HttpRequest,
  SwiftUnittest_Names_WordCase.Extensions.TheHttpRequest,
  SwiftUnittest_Names_WordCase.Extensions.TheHttp,
  SwiftUnittest_Names_WordCase.Extensions.Https,
  SwiftUnittest_Names_WordCase.Extensions.HttpsRequest,
  SwiftUnittest_Names_WordCase.Extensions.TheHttpsRequest,
  SwiftUnittest_Names_WordCase.Extensions.TheHttps,
  SwiftUnittest_Names_WordCase.Extensions.Url,
  SwiftUnittest_Names_WordCase.Extensions.UrlValue,
  SwiftUnittest_Names_WordCase.Extensions.TheUrlValue,
  SwiftUnittest_Names_WordCase.Extensions.TheUrl
]

let SwiftUnittest_Names_Extensions_http = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 1,
  fieldName: "swift_unittest.names.http",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_http_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 2,
  fieldName: "swift_unittest.names.http_request",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_the_http_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 3,
  fieldName: "swift_unittest.names.the_http_request",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_the_http = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 4,
  fieldName: "swift_unittest.names.the_http",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_https = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 11,
  fieldName: "swift_unittest.names.https",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_https_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 12,
  fieldName: "swift_unittest.names.https_request",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_the_https_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 13,
  fieldName: "swift_unittest.names.the_https_request",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_the_https = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 14,
  fieldName: "swift_unittest.names.the_https",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_url = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 21,
  fieldName: "swift_unittest.names.url",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_url_value = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 22,
  fieldName: "swift_unittest.names.url_value",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_the_url_value = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 23,
  fieldName: "swift_unittest.names.the_url_value",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_the_url = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 24,
  fieldName: "swift_unittest.names.the_url",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_a_b_c = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 31,
  fieldName: "swift_unittest.names.a_b_c",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_HTTP = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 1,
  fieldName: "swift_unittest.names.HTTP",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_HTTP_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 2,
  fieldName: "swift_unittest.names.HTTP_request",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_the_HTTP_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 3,
  fieldName: "swift_unittest.names.the_HTTP_request",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_the_HTTP = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 4,
  fieldName: "swift_unittest.names.the_HTTP",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_HTTPS = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 11,
  fieldName: "swift_unittest.names.HTTPS",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_HTTPS_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 12,
  fieldName: "swift_unittest.names.HTTPS_request",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_the_HTTPS_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 13,
  fieldName: "swift_unittest.names.the_HTTPS_request",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_the_HTTPS = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 14,
  fieldName: "swift_unittest.names.the_HTTPS",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_URL = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 21,
  fieldName: "swift_unittest.names.URL",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_URL_value = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 22,
  fieldName: "swift_unittest.names.URL_value",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_the_URL_value = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 23,
  fieldName: "swift_unittest.names.the_URL_value",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_the_URL = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 24,
  fieldName: "swift_unittest.names.the_URL",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_Http = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 1,
  fieldName: "swift_unittest.names.Http",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_HttpRequest = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 2,
  fieldName: "swift_unittest.names.HttpRequest",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_TheHttpRequest = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 3,
  fieldName: "swift_unittest.names.TheHttpRequest",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_TheHttp = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 4,
  fieldName: "swift_unittest.names.TheHttp",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_Https = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 11,
  fieldName: "swift_unittest.names.Https",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_HttpsRequest = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 12,
  fieldName: "swift_unittest.names.HttpsRequest",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_TheHttpsRequest = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 13,
  fieldName: "swift_unittest.names.TheHttpsRequest",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_TheHttps = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 14,
  fieldName: "swift_unittest.names.TheHttps",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_Url = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 21,
  fieldName: "swift_unittest.names.Url",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_UrlValue = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 22,
  fieldName: "swift_unittest.names.UrlValue",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_TheUrlValue = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 23,
  fieldName: "swift_unittest.names.TheUrlValue",
  defaultValue: 0
)

let SwiftUnittest_Names_Extensions_TheUrl = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 24,
  fieldName: "swift_unittest.names.TheUrl",
  defaultValue: 0
)

extension SwiftUnittest_Names_Lowers {
  enum Extensions {
    static let http = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 1,
      fieldName: "swift_unittest.names.Lowers.http",
      defaultValue: 0
    )

    static let http_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 2,
      fieldName: "swift_unittest.names.Lowers.http_request",
      defaultValue: 0
    )

    static let the_http_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 3,
      fieldName: "swift_unittest.names.Lowers.the_http_request",
      defaultValue: 0
    )

    static let the_http = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 4,
      fieldName: "swift_unittest.names.Lowers.the_http",
      defaultValue: 0
    )

    static let https = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 11,
      fieldName: "swift_unittest.names.Lowers.https",
      defaultValue: 0
    )

    static let https_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 12,
      fieldName: "swift_unittest.names.Lowers.https_request",
      defaultValue: 0
    )

    static let the_https_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 13,
      fieldName: "swift_unittest.names.Lowers.the_https_request",
      defaultValue: 0
    )

    static let the_https = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 14,
      fieldName: "swift_unittest.names.Lowers.the_https",
      defaultValue: 0
    )

    static let url = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 21,
      fieldName: "swift_unittest.names.Lowers.url",
      defaultValue: 0
    )

    static let url_value = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 22,
      fieldName: "swift_unittest.names.Lowers.url_value",
      defaultValue: 0
    )

    static let the_url_value = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 23,
      fieldName: "swift_unittest.names.Lowers.the_url_value",
      defaultValue: 0
    )

    static let the_url = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 24,
      fieldName: "swift_unittest.names.Lowers.the_url",
      defaultValue: 0
    )

    static let a_b_c = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 31,
      fieldName: "swift_unittest.names.Lowers.a_b_c",
      defaultValue: 0
    )
  }
}

extension SwiftUnittest_Names_Uppers {
  enum Extensions {
    static let HTTP = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 101,
      fieldName: "swift_unittest.names.Uppers.HTTP",
      defaultValue: 0
    )

    static let HTTP_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 102,
      fieldName: "swift_unittest.names.Uppers.HTTP_request",
      defaultValue: 0
    )

    static let the_HTTP_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 103,
      fieldName: "swift_unittest.names.Uppers.the_HTTP_request",
      defaultValue: 0
    )

    static let the_HTTP = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 104,
      fieldName: "swift_unittest.names.Uppers.the_HTTP",
      defaultValue: 0
    )

    static let HTTPS = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 111,
      fieldName: "swift_unittest.names.Uppers.HTTPS",
      defaultValue: 0
    )

    static let HTTPS_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 112,
      fieldName: "swift_unittest.names.Uppers.HTTPS_request",
      defaultValue: 0
    )

    static let the_HTTPS_request = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 113,
      fieldName: "swift_unittest.names.Uppers.the_HTTPS_request",
      defaultValue: 0
    )

    static let the_HTTPS = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 114,
      fieldName: "swift_unittest.names.Uppers.the_HTTPS",
      defaultValue: 0
    )

    static let URL = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 121,
      fieldName: "swift_unittest.names.Uppers.URL",
      defaultValue: 0
    )

    static let URL_value = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 122,
      fieldName: "swift_unittest.names.Uppers.URL_value",
      defaultValue: 0
    )

    static let the_URL_value = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 123,
      fieldName: "swift_unittest.names.Uppers.the_URL_value",
      defaultValue: 0
    )

    static let the_URL = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 124,
      fieldName: "swift_unittest.names.Uppers.the_URL",
      defaultValue: 0
    )
  }
}

extension SwiftUnittest_Names_WordCase {
  enum Extensions {
    static let Http = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 201,
      fieldName: "swift_unittest.names.WordCase.Http",
      defaultValue: 0
    )

    static let HttpRequest = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 202,
      fieldName: "swift_unittest.names.WordCase.HttpRequest",
      defaultValue: 0
    )

    static let TheHttpRequest = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 203,
      fieldName: "swift_unittest.names.WordCase.TheHttpRequest",
      defaultValue: 0
    )

    static let TheHttp = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 204,
      fieldName: "swift_unittest.names.WordCase.TheHttp",
      defaultValue: 0
    )

    static let Https = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 211,
      fieldName: "swift_unittest.names.WordCase.Https",
      defaultValue: 0
    )

    static let HttpsRequest = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 212,
      fieldName: "swift_unittest.names.WordCase.HttpsRequest",
      defaultValue: 0
    )

    static let TheHttpsRequest = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 213,
      fieldName: "swift_unittest.names.WordCase.TheHttpsRequest",
      defaultValue: 0
    )

    static let TheHttps = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 214,
      fieldName: "swift_unittest.names.WordCase.TheHttps",
      defaultValue: 0
    )

    static let Url = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 221,
      fieldName: "swift_unittest.names.WordCase.Url",
      defaultValue: 0
    )

    static let UrlValue = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 222,
      fieldName: "swift_unittest.names.WordCase.UrlValue",
      defaultValue: 0
    )

    static let TheUrlValue = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 223,
      fieldName: "swift_unittest.names.WordCase.TheUrlValue",
      defaultValue: 0
    )

    static let TheUrl = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitials>(
      _protobuf_fieldNumber: 224,
      fieldName: "swift_unittest.names.WordCase.TheUrl",
      defaultValue: 0
    )
  }
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "swift_unittest.names"

extension SwiftUnittest_Names_FieldNamingInitials: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  func _protobuf_generated_isEqualTo(other: SwiftUnittest_Names_FieldNamingInitials) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension SwiftUnittest_Names_FieldNamingInitials.Lowers: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "http"),
    2: .standard(proto: "http_request"),
    3: .standard(proto: "the_http_request"),
    4: .standard(proto: "the_http"),
    11: .same(proto: "https"),
    12: .standard(proto: "https_request"),
    13: .standard(proto: "the_https_request"),
    14: .standard(proto: "the_https"),
    21: .same(proto: "url"),
    22: .standard(proto: "url_value"),
    23: .standard(proto: "the_url_value"),
    24: .standard(proto: "the_url"),
    31: .standard(proto: "a_b_c"),
  ]

  func _protobuf_generated_isEqualTo(other: SwiftUnittest_Names_FieldNamingInitials.Lowers) -> Bool {
    if self._http != other._http {return false}
    if self._httpRequest != other._httpRequest {return false}
    if self._theHTTPRequest != other._theHTTPRequest {return false}
    if self._theHTTP != other._theHTTP {return false}
    if self._https != other._https {return false}
    if self._httpsRequest != other._httpsRequest {return false}
    if self._theHTTPSRequest != other._theHTTPSRequest {return false}
    if self._theHTTPS != other._theHTTPS {return false}
    if self._url != other._url {return false}
    if self._urlValue != other._urlValue {return false}
    if self._theURLValue != other._theURLValue {return false}
    if self._theURL != other._theURL {return false}
    if self._aBC != other._aBC {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension SwiftUnittest_Names_FieldNamingInitials.Uppers: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "HTTP"),
    2: .standard(proto: "HTTP_request"),
    3: .standard(proto: "the_HTTP_request"),
    4: .standard(proto: "the_HTTP"),
    11: .same(proto: "HTTPS"),
    12: .standard(proto: "HTTPS_request"),
    13: .standard(proto: "the_HTTPS_request"),
    14: .standard(proto: "the_HTTPS"),
    21: .same(proto: "URL"),
    22: .standard(proto: "URL_value"),
    23: .standard(proto: "the_URL_value"),
    24: .standard(proto: "the_URL"),
  ]

  func _protobuf_generated_isEqualTo(other: SwiftUnittest_Names_FieldNamingInitials.Uppers) -> Bool {
    if self._http != other._http {return false}
    if self._httpRequest != other._httpRequest {return false}
    if self._theHTTPRequest != other._theHTTPRequest {return false}
    if self._theHTTP != other._theHTTP {return false}
    if self._https != other._https {return false}
    if self._httpsRequest != other._httpsRequest {return false}
    if self._theHTTPSRequest != other._theHTTPSRequest {return false}
    if self._theHTTPS != other._theHTTPS {return false}
    if self._url != other._url {return false}
    if self._urlValue != other._urlValue {return false}
    if self._theURLValue != other._theURLValue {return false}
    if self._theURL != other._theURL {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension SwiftUnittest_Names_FieldNamingInitials.WordCase: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "Http"),
    2: .same(proto: "HttpRequest"),
    3: .same(proto: "TheHttpRequest"),
    4: .same(proto: "TheHttp"),
    11: .same(proto: "Https"),
    12: .same(proto: "HttpsRequest"),
    13: .same(proto: "TheHttpsRequest"),
    14: .same(proto: "TheHttps"),
    21: .same(proto: "Url"),
    22: .same(proto: "UrlValue"),
    23: .same(proto: "TheUrlValue"),
    24: .same(proto: "TheUrl"),
  ]

  func _protobuf_generated_isEqualTo(other: SwiftUnittest_Names_FieldNamingInitials.WordCase) -> Bool {
    if self._http != other._http {return false}
    if self._httpRequest != other._httpRequest {return false}
    if self._theHTTPRequest != other._theHTTPRequest {return false}
    if self._theHTTP != other._theHTTP {return false}
    if self._https != other._https {return false}
    if self._httpsRequest != other._httpsRequest {return false}
    if self._theHTTPSRequest != other._theHTTPSRequest {return false}
    if self._theHTTPS != other._theHTTPS {return false}
    if self._url != other._url {return false}
    if self._urlValue != other._urlValue {return false}
    if self._theURLValue != other._theURLValue {return false}
    if self._theURL != other._theURL {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitials: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  func _protobuf_generated_isEqualTo(other: SwiftUnittest_Names_ExtensionNamingInitials) -> Bool {
    if unknownFields != other.unknownFields {return false}
    if _protobuf_extensionFieldValues != other._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension SwiftUnittest_Names_Lowers: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  func _protobuf_generated_isEqualTo(other: SwiftUnittest_Names_Lowers) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension SwiftUnittest_Names_Uppers: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  func _protobuf_generated_isEqualTo(other: SwiftUnittest_Names_Uppers) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension SwiftUnittest_Names_WordCase: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  func _protobuf_generated_isEqualTo(other: SwiftUnittest_Names_WordCase) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  func _protobuf_generated_isEqualTo(other: SwiftUnittest_Names_ExtensionNamingInitialsLowers) -> Bool {
    if unknownFields != other.unknownFields {return false}
    if _protobuf_extensionFieldValues != other._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  func _protobuf_generated_isEqualTo(other: SwiftUnittest_Names_ExtensionNamingInitialsUppers) -> Bool {
    if unknownFields != other.unknownFields {return false}
    if _protobuf_extensionFieldValues != other._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  func _protobuf_generated_isEqualTo(other: SwiftUnittest_Names_ExtensionNamingInitialsWordCase) -> Bool {
    if unknownFields != other.unknownFields {return false}
    if _protobuf_extensionFieldValues != other._protobuf_extensionFieldValues {return false}
    return true
  }
}
