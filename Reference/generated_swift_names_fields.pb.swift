// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: generated_swift_names_fields.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

/// See Makefile for the logic that generates this
/// Protoc errors imply this file is being generated incorrectly
/// Swift compile errors are probably bugs in protoc-gen-swift

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct ProtobufUnittestGenerated_GeneratedSwiftReservedFields {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var adjusted: Int32 {
    get {return _storage._adjusted}
    set {_uniqueStorage()._adjusted = newValue}
  }

  var aggregateValue: Int32 {
    get {return _storage._aggregateValue}
    set {_uniqueStorage()._aggregateValue = newValue}
  }

  var allCases: Int32 {
    get {return _storage._allCases}
    set {_uniqueStorage()._allCases = newValue}
  }

  var allocate: Int32 {
    get {return _storage._allocate}
    set {_uniqueStorage()._allocate = newValue}
  }

  var allowAlias: Int32 {
    get {return _storage._allowAlias}
    set {_uniqueStorage()._allowAlias = newValue}
  }

  var alwaysPrintEnumsAsInts: Int32 {
    get {return _storage._alwaysPrintEnumsAsInts}
    set {_uniqueStorage()._alwaysPrintEnumsAsInts = newValue}
  }

  var annotation: Int32 {
    get {return _storage._annotation}
    set {_uniqueStorage()._annotation = newValue}
  }

  var any: Int32 {
    get {return _storage._any}
    set {_uniqueStorage()._any = newValue}
  }

  var anyExtensionField: Int32 {
    get {return _storage._anyExtensionField}
    set {_uniqueStorage()._anyExtensionField = newValue}
  }

  var anyMessageExtension: Int32 {
    get {return _storage._anyMessageExtension}
    set {_uniqueStorage()._anyMessageExtension = newValue}
  }

  var anyMessageStorage: Int32 {
    get {return _storage._anyMessageStorage}
    set {_uniqueStorage()._anyMessageStorage = newValue}
  }

  var anyUnpackError: Int32 {
    get {return _storage._anyUnpackError}
    set {_uniqueStorage()._anyUnpackError = newValue}
  }

  var api: Int32 {
    get {return _storage._api}
    set {_uniqueStorage()._api = newValue}
  }

  var appended: Int32 {
    get {return _storage._appended}
    set {_uniqueStorage()._appended = newValue}
  }

  var appendUintHex: Int32 {
    get {return _storage._appendUintHex}
    set {_uniqueStorage()._appendUintHex = newValue}
  }

  var appendUnknown: Int32 {
    get {return _storage._appendUnknown}
    set {_uniqueStorage()._appendUnknown = newValue}
  }

  var areAllInitialized: Int32 {
    get {return _storage._areAllInitialized}
    set {_uniqueStorage()._areAllInitialized = newValue}
  }

  var array: Int32 {
    get {return _storage._array}
    set {_uniqueStorage()._array = newValue}
  }

  var arrayLiteral: Int32 {
    get {return _storage._arrayLiteral}
    set {_uniqueStorage()._arrayLiteral = newValue}
  }

  var arraySeparator: Int32 {
    get {return _storage._arraySeparator}
    set {_uniqueStorage()._arraySeparator = newValue}
  }

  var `as`: Int32 {
    get {return _storage._as}
    set {_uniqueStorage()._as = newValue}
  }

  var asciiOpenCurlyBracket: Int32 {
    get {return _storage._asciiOpenCurlyBracket}
    set {_uniqueStorage()._asciiOpenCurlyBracket = newValue}
  }

  var asciiZero: Int32 {
    get {return _storage._asciiZero}
    set {_uniqueStorage()._asciiZero = newValue}
  }

  var available: Int32 {
    get {return _storage._available}
    set {_uniqueStorage()._available = newValue}
  }

  var b: Int32 {
    get {return _storage._b}
    set {_uniqueStorage()._b = newValue}
  }

  var base64Values: Int32 {
    get {return _storage._base64Values}
    set {_uniqueStorage()._base64Values = newValue}
  }

  var baseAddress: Int32 {
    get {return _storage._baseAddress}
    set {_uniqueStorage()._baseAddress = newValue}
  }

  var baseType: Int32 {
    get {return _storage._baseType}
    set {_uniqueStorage()._baseType = newValue}
  }

  var begin: Int32 {
    get {return _storage._begin}
    set {_uniqueStorage()._begin = newValue}
  }

  var binary: Int32 {
    get {return _storage._binary}
    set {_uniqueStorage()._binary = newValue}
  }

  var binaryDecoder: Int32 {
    get {return _storage._binaryDecoder}
    set {_uniqueStorage()._binaryDecoder = newValue}
  }

  var binaryDecodingError: Int32 {
    get {return _storage._binaryDecodingError}
    set {_uniqueStorage()._binaryDecodingError = newValue}
  }

  var binaryDecodingOptions: Int32 {
    get {return _storage._binaryDecodingOptions}
    set {_uniqueStorage()._binaryDecodingOptions = newValue}
  }

  var binaryDelimited: Int32 {
    get {return _storage._binaryDelimited}
    set {_uniqueStorage()._binaryDelimited = newValue}
  }

  var binaryEncoder: Int32 {
    get {return _storage._binaryEncoder}
    set {_uniqueStorage()._binaryEncoder = newValue}
  }

  var binaryEncodingError: Int32 {
    get {return _storage._binaryEncodingError}
    set {_uniqueStorage()._binaryEncodingError = newValue}
  }

  var binaryEncodingMessageSetSizeVisitor: Int32 {
    get {return _storage._binaryEncodingMessageSetSizeVisitor}
    set {_uniqueStorage()._binaryEncodingMessageSetSizeVisitor = newValue}
  }

  var binaryEncodingMessageSetVisitor: Int32 {
    get {return _storage._binaryEncodingMessageSetVisitor}
    set {_uniqueStorage()._binaryEncodingMessageSetVisitor = newValue}
  }

  var binaryEncodingSizeVisitor: Int32 {
    get {return _storage._binaryEncodingSizeVisitor}
    set {_uniqueStorage()._binaryEncodingSizeVisitor = newValue}
  }

  var binaryEncodingVisitor: Int32 {
    get {return _storage._binaryEncodingVisitor}
    set {_uniqueStorage()._binaryEncodingVisitor = newValue}
  }

  var binaryOptions: Int32 {
    get {return _storage._binaryOptions}
    set {_uniqueStorage()._binaryOptions = newValue}
  }

  var body: Int32 {
    get {return _storage._body}
    set {_uniqueStorage()._body = newValue}
  }

  var bodySize: Int32 {
    get {return _storage._bodySize}
    set {_uniqueStorage()._bodySize = newValue}
  }

  var bool: Int32 {
    get {return _storage._bool}
    set {_uniqueStorage()._bool = newValue}
  }

  var booleanLiteral: Int32 {
    get {return _storage._booleanLiteral}
    set {_uniqueStorage()._booleanLiteral = newValue}
  }

  var booleanLiteralType: Int32 {
    get {return _storage._booleanLiteralType}
    set {_uniqueStorage()._booleanLiteralType = newValue}
  }

  var boolValue: Int32 {
    get {return _storage._boolValue}
    set {_uniqueStorage()._boolValue = newValue}
  }

  var bytes: Int32 {
    get {return _storage._bytes}
    set {_uniqueStorage()._bytes = newValue}
  }

  var bytesInGroup: Int32 {
    get {return _storage._bytesInGroup}
    set {_uniqueStorage()._bytesInGroup = newValue}
  }

  var bytesRead: Int32 {
    get {return _storage._bytesRead}
    set {_uniqueStorage()._bytesRead = newValue}
  }

  var bytesValue: Int32 {
    get {return _storage._bytesValue}
    set {_uniqueStorage()._bytesValue = newValue}
  }

  var c: Int32 {
    get {return _storage._c}
    set {_uniqueStorage()._c = newValue}
  }

  var capacity: Int32 {
    get {return _storage._capacity}
    set {_uniqueStorage()._capacity = newValue}
  }

  var capitalizeNext: Int32 {
    get {return _storage._capitalizeNext}
    set {_uniqueStorage()._capitalizeNext = newValue}
  }

  var cardinality: Int32 {
    get {return _storage._cardinality}
    set {_uniqueStorage()._cardinality = newValue}
  }

  var ccEnableArenas: Int32 {
    get {return _storage._ccEnableArenas}
    set {_uniqueStorage()._ccEnableArenas = newValue}
  }

  var ccGenericServices: Int32 {
    get {return _storage._ccGenericServices}
    set {_uniqueStorage()._ccGenericServices = newValue}
  }

  var character: Int32 {
    get {return _storage._character}
    set {_uniqueStorage()._character = newValue}
  }

  var chars: Int32 {
    get {return _storage._chars}
    set {_uniqueStorage()._chars = newValue}
  }

  var `class`: Int32 {
    get {return _storage._class}
    set {_uniqueStorage()._class = newValue}
  }

  var clearAggregateValue_p: Int32 {
    get {return _storage._clearAggregateValue_p}
    set {_uniqueStorage()._clearAggregateValue_p = newValue}
  }

  var clearAllowAlias_p: Int32 {
    get {return _storage._clearAllowAlias_p}
    set {_uniqueStorage()._clearAllowAlias_p = newValue}
  }

  var clearBegin_p: Int32 {
    get {return _storage._clearBegin_p}
    set {_uniqueStorage()._clearBegin_p = newValue}
  }

  var clearCcEnableArenas_p: Int32 {
    get {return _storage._clearCcEnableArenas_p}
    set {_uniqueStorage()._clearCcEnableArenas_p = newValue}
  }

  var clearCcGenericServices_p: Int32 {
    get {return _storage._clearCcGenericServices_p}
    set {_uniqueStorage()._clearCcGenericServices_p = newValue}
  }

  var clearClientStreaming_p: Int32 {
    get {return _storage._clearClientStreaming_p}
    set {_uniqueStorage()._clearClientStreaming_p = newValue}
  }

  var clearCsharpNamespace_p: Int32 {
    get {return _storage._clearCsharpNamespace_p}
    set {_uniqueStorage()._clearCsharpNamespace_p = newValue}
  }

  var clearCtype_p: Int32 {
    get {return _storage._clearCtype_p}
    set {_uniqueStorage()._clearCtype_p = newValue}
  }

  var clearDefaultValue_p: Int32 {
    get {return _storage._clearDefaultValue_p}
    set {_uniqueStorage()._clearDefaultValue_p = newValue}
  }

  var clearDeprecated_p: Int32 {
    get {return _storage._clearDeprecated_p}
    set {_uniqueStorage()._clearDeprecated_p = newValue}
  }

  var clearDoubleValue_p: Int32 {
    get {return _storage._clearDoubleValue_p}
    set {_uniqueStorage()._clearDoubleValue_p = newValue}
  }

  var clearEnd_p: Int32 {
    get {return _storage._clearEnd_p}
    set {_uniqueStorage()._clearEnd_p = newValue}
  }

  var clearExtendee_p: Int32 {
    get {return _storage._clearExtendee_p}
    set {_uniqueStorage()._clearExtendee_p = newValue}
  }

  var clearExtensionValue_p: Int32 {
    get {return _storage._clearExtensionValue_p}
    set {_uniqueStorage()._clearExtensionValue_p = newValue}
  }

  var clearGoPackage_p: Int32 {
    get {return _storage._clearGoPackage_p}
    set {_uniqueStorage()._clearGoPackage_p = newValue}
  }

  var clearIdempotencyLevel_p: Int32 {
    get {return _storage._clearIdempotencyLevel_p}
    set {_uniqueStorage()._clearIdempotencyLevel_p = newValue}
  }

  var clearIdentifierValue_p: Int32 {
    get {return _storage._clearIdentifierValue_p}
    set {_uniqueStorage()._clearIdentifierValue_p = newValue}
  }

  var clearInputType_p: Int32 {
    get {return _storage._clearInputType_p}
    set {_uniqueStorage()._clearInputType_p = newValue}
  }

  var clearIsExtension_p: Int32 {
    get {return _storage._clearIsExtension_p}
    set {_uniqueStorage()._clearIsExtension_p = newValue}
  }

  var clearJavaGenerateEqualsAndHash_p: Int32 {
    get {return _storage._clearJavaGenerateEqualsAndHash_p}
    set {_uniqueStorage()._clearJavaGenerateEqualsAndHash_p = newValue}
  }

  var clearJavaGenericServices_p: Int32 {
    get {return _storage._clearJavaGenericServices_p}
    set {_uniqueStorage()._clearJavaGenericServices_p = newValue}
  }

  var clearJavaMultipleFiles_p: Int32 {
    get {return _storage._clearJavaMultipleFiles_p}
    set {_uniqueStorage()._clearJavaMultipleFiles_p = newValue}
  }

  var clearJavaOuterClassname_p: Int32 {
    get {return _storage._clearJavaOuterClassname_p}
    set {_uniqueStorage()._clearJavaOuterClassname_p = newValue}
  }

  var clearJavaPackage_p: Int32 {
    get {return _storage._clearJavaPackage_p}
    set {_uniqueStorage()._clearJavaPackage_p = newValue}
  }

  var clearJavaStringCheckUtf8_p: Int32 {
    get {return _storage._clearJavaStringCheckUtf8_p}
    set {_uniqueStorage()._clearJavaStringCheckUtf8_p = newValue}
  }

  var clearJsonName_p: Int32 {
    get {return _storage._clearJsonName_p}
    set {_uniqueStorage()._clearJsonName_p = newValue}
  }

  var clearJstype_p: Int32 {
    get {return _storage._clearJstype_p}
    set {_uniqueStorage()._clearJstype_p = newValue}
  }

  var clearLabel_p: Int32 {
    get {return _storage._clearLabel_p}
    set {_uniqueStorage()._clearLabel_p = newValue}
  }

  var clearLazy_p: Int32 {
    get {return _storage._clearLazy_p}
    set {_uniqueStorage()._clearLazy_p = newValue}
  }

  var clearLeadingComments_p: Int32 {
    get {return _storage._clearLeadingComments_p}
    set {_uniqueStorage()._clearLeadingComments_p = newValue}
  }

  var clearMapEntry_p: Int32 {
    get {return _storage._clearMapEntry_p}
    set {_uniqueStorage()._clearMapEntry_p = newValue}
  }

  var clearMessageSetWireFormat_p: Int32 {
    get {return _storage._clearMessageSetWireFormat_p}
    set {_uniqueStorage()._clearMessageSetWireFormat_p = newValue}
  }

  var clearName_p: Int32 {
    get {return _storage._clearName_p}
    set {_uniqueStorage()._clearName_p = newValue}
  }

  var clearNamePart_p: Int32 {
    get {return _storage._clearNamePart_p}
    set {_uniqueStorage()._clearNamePart_p = newValue}
  }

  var clearNegativeIntValue_p: Int32 {
    get {return _storage._clearNegativeIntValue_p}
    set {_uniqueStorage()._clearNegativeIntValue_p = newValue}
  }

  var clearNoStandardDescriptorAccessor_p: Int32 {
    get {return _storage._clearNoStandardDescriptorAccessor_p}
    set {_uniqueStorage()._clearNoStandardDescriptorAccessor_p = newValue}
  }

  var clearNumber_p: Int32 {
    get {return _storage._clearNumber_p}
    set {_uniqueStorage()._clearNumber_p = newValue}
  }

  var clearObjcClassPrefix_p: Int32 {
    get {return _storage._clearObjcClassPrefix_p}
    set {_uniqueStorage()._clearObjcClassPrefix_p = newValue}
  }

  var clearOneofIndex_p: Int32 {
    get {return _storage._clearOneofIndex_p}
    set {_uniqueStorage()._clearOneofIndex_p = newValue}
  }

  var clearOptimizeFor_p: Int32 {
    get {return _storage._clearOptimizeFor_p}
    set {_uniqueStorage()._clearOptimizeFor_p = newValue}
  }

  var clearOptions_p: Int32 {
    get {return _storage._clearOptions_p}
    set {_uniqueStorage()._clearOptions_p = newValue}
  }

  var clearOutputType_p: Int32 {
    get {return _storage._clearOutputType_p}
    set {_uniqueStorage()._clearOutputType_p = newValue}
  }

  var clearPackage_p: Int32 {
    get {return _storage._clearPackage_p}
    set {_uniqueStorage()._clearPackage_p = newValue}
  }

  var clearPacked_p: Int32 {
    get {return _storage._clearPacked_p}
    set {_uniqueStorage()._clearPacked_p = newValue}
  }

  var clearPhpClassPrefix_p: Int32 {
    get {return _storage._clearPhpClassPrefix_p}
    set {_uniqueStorage()._clearPhpClassPrefix_p = newValue}
  }

  var clearPhpGenericServices_p: Int32 {
    get {return _storage._clearPhpGenericServices_p}
    set {_uniqueStorage()._clearPhpGenericServices_p = newValue}
  }

  var clearPhpMetadataNamespace_p: Int32 {
    get {return _storage._clearPhpMetadataNamespace_p}
    set {_uniqueStorage()._clearPhpMetadataNamespace_p = newValue}
  }

  var clearPhpNamespace_p: Int32 {
    get {return _storage._clearPhpNamespace_p}
    set {_uniqueStorage()._clearPhpNamespace_p = newValue}
  }

  var clearPositiveIntValue_p: Int32 {
    get {return _storage._clearPositiveIntValue_p}
    set {_uniqueStorage()._clearPositiveIntValue_p = newValue}
  }

  var clearPyGenericServices_p: Int32 {
    get {return _storage._clearPyGenericServices_p}
    set {_uniqueStorage()._clearPyGenericServices_p = newValue}
  }

  var clearRubyPackage_p: Int32 {
    get {return _storage._clearRubyPackage_p}
    set {_uniqueStorage()._clearRubyPackage_p = newValue}
  }

  var clearServerStreaming_p: Int32 {
    get {return _storage._clearServerStreaming_p}
    set {_uniqueStorage()._clearServerStreaming_p = newValue}
  }

  var clearSourceCodeInfo_p: Int32 {
    get {return _storage._clearSourceCodeInfo_p}
    set {_uniqueStorage()._clearSourceCodeInfo_p = newValue}
  }

  var clearSourceContext_p: Int32 {
    get {return _storage._clearSourceContext_p}
    set {_uniqueStorage()._clearSourceContext_p = newValue}
  }

  var clearSourceFile_p: Int32 {
    get {return _storage._clearSourceFile_p}
    set {_uniqueStorage()._clearSourceFile_p = newValue}
  }

  var clearStart_p: Int32 {
    get {return _storage._clearStart_p}
    set {_uniqueStorage()._clearStart_p = newValue}
  }

  var clearStringValue_p: Int32 {
    get {return _storage._clearStringValue_p}
    set {_uniqueStorage()._clearStringValue_p = newValue}
  }

  var clearSwiftPrefix_p: Int32 {
    get {return _storage._clearSwiftPrefix_p}
    set {_uniqueStorage()._clearSwiftPrefix_p = newValue}
  }

  var clearSyntax_p: Int32 {
    get {return _storage._clearSyntax_p}
    set {_uniqueStorage()._clearSyntax_p = newValue}
  }

  var clearTrailingComments_p: Int32 {
    get {return _storage._clearTrailingComments_p}
    set {_uniqueStorage()._clearTrailingComments_p = newValue}
  }

  var clearType_p: Int32 {
    get {return _storage._clearType_p}
    set {_uniqueStorage()._clearType_p = newValue}
  }

  var clearTypeName_p: Int32 {
    get {return _storage._clearTypeName_p}
    set {_uniqueStorage()._clearTypeName_p = newValue}
  }

  var clearValue_p: Int32 {
    get {return _storage._clearValue_p}
    set {_uniqueStorage()._clearValue_p = newValue}
  }

  var clearWeak_p: Int32 {
    get {return _storage._clearWeak_p}
    set {_uniqueStorage()._clearWeak_p = newValue}
  }

  var clientStreaming: Int32 {
    get {return _storage._clientStreaming}
    set {_uniqueStorage()._clientStreaming = newValue}
  }

  var codeUnits: Int32 {
    get {return _storage._codeUnits}
    set {_uniqueStorage()._codeUnits = newValue}
  }

  var collection: Int32 {
    get {return _storage._collection}
    set {_uniqueStorage()._collection = newValue}
  }

  var com: Int32 {
    get {return _storage._com}
    set {_uniqueStorage()._com = newValue}
  }

  var comma: Int32 {
    get {return _storage._comma}
    set {_uniqueStorage()._comma = newValue}
  }

  var contentsOf: Int32 {
    get {return _storage._contentsOf}
    set {_uniqueStorage()._contentsOf = newValue}
  }

  var contiguousBytes: Int32 {
    get {return _storage._contiguousBytes}
    set {_uniqueStorage()._contiguousBytes = newValue}
  }

  var count: Int32 {
    get {return _storage._count}
    set {_uniqueStorage()._count = newValue}
  }

  var countVarintsInBuffer: Int32 {
    get {return _storage._countVarintsInBuffer}
    set {_uniqueStorage()._countVarintsInBuffer = newValue}
  }

  var csharpNamespace: Int32 {
    get {return _storage._csharpNamespace}
    set {_uniqueStorage()._csharpNamespace = newValue}
  }

  var ctype: Int32 {
    get {return _storage._ctype}
    set {_uniqueStorage()._ctype = newValue}
  }

  var customCodable: Int32 {
    get {return _storage._customCodable}
    set {_uniqueStorage()._customCodable = newValue}
  }

  var customDebugStringConvertible: Int32 {
    get {return _storage._customDebugStringConvertible}
    set {_uniqueStorage()._customDebugStringConvertible = newValue}
  }

  var d: Int32 {
    get {return _storage._d}
    set {_uniqueStorage()._d = newValue}
  }

  var data: Int32 {
    get {return _storage._data}
    set {_uniqueStorage()._data = newValue}
  }

  var dataResult: Int32 {
    get {return _storage._dataResult}
    set {_uniqueStorage()._dataResult = newValue}
  }

  var dataSize: Int32 {
    get {return _storage._dataSize}
    set {_uniqueStorage()._dataSize = newValue}
  }

  var date: Int32 {
    get {return _storage._date}
    set {_uniqueStorage()._date = newValue}
  }

  var daySec: Int32 {
    get {return _storage._daySec}
    set {_uniqueStorage()._daySec = newValue}
  }

  var daysSinceEpoch: Int32 {
    get {return _storage._daysSinceEpoch}
    set {_uniqueStorage()._daysSinceEpoch = newValue}
  }

  var debugDescription_p: Int32 {
    get {return _storage._debugDescription_p}
    set {_uniqueStorage()._debugDescription_p = newValue}
  }

  var decoded: Int32 {
    get {return _storage._decoded}
    set {_uniqueStorage()._decoded = newValue}
  }

  var decodedFromJsonnull: Int32 {
    get {return _storage._decodedFromJsonnull}
    set {_uniqueStorage()._decodedFromJsonnull = newValue}
  }

  var decodeExtensionField: Int32 {
    get {return _storage._decodeExtensionField}
    set {_uniqueStorage()._decodeExtensionField = newValue}
  }

  var decodeExtensionFieldsAsMessageSet: Int32 {
    get {return _storage._decodeExtensionFieldsAsMessageSet}
    set {_uniqueStorage()._decodeExtensionFieldsAsMessageSet = newValue}
  }

  var decodeJson: Int32 {
    get {return _storage._decodeJson}
    set {_uniqueStorage()._decodeJson = newValue}
  }

  var decodeMapField: Int32 {
    get {return _storage._decodeMapField}
    set {_uniqueStorage()._decodeMapField = newValue}
  }

  var decodeMessage: Int32 {
    get {return _storage._decodeMessage}
    set {_uniqueStorage()._decodeMessage = newValue}
  }

  var decoder: Int32 {
    get {return _storage._decoder}
    set {_uniqueStorage()._decoder = newValue}
  }

  var decodeRepeated: Int32 {
    get {return _storage._decodeRepeated}
    set {_uniqueStorage()._decodeRepeated = newValue}
  }

  var decodeRepeatedBoolField: Int32 {
    get {return _storage._decodeRepeatedBoolField}
    set {_uniqueStorage()._decodeRepeatedBoolField = newValue}
  }

  var decodeRepeatedBytesField: Int32 {
    get {return _storage._decodeRepeatedBytesField}
    set {_uniqueStorage()._decodeRepeatedBytesField = newValue}
  }

  var decodeRepeatedDoubleField: Int32 {
    get {return _storage._decodeRepeatedDoubleField}
    set {_uniqueStorage()._decodeRepeatedDoubleField = newValue}
  }

  var decodeRepeatedEnumField: Int32 {
    get {return _storage._decodeRepeatedEnumField}
    set {_uniqueStorage()._decodeRepeatedEnumField = newValue}
  }

  var decodeRepeatedFixed32Field: Int32 {
    get {return _storage._decodeRepeatedFixed32Field}
    set {_uniqueStorage()._decodeRepeatedFixed32Field = newValue}
  }

  var decodeRepeatedFixed64Field: Int32 {
    get {return _storage._decodeRepeatedFixed64Field}
    set {_uniqueStorage()._decodeRepeatedFixed64Field = newValue}
  }

  var decodeRepeatedFloatField: Int32 {
    get {return _storage._decodeRepeatedFloatField}
    set {_uniqueStorage()._decodeRepeatedFloatField = newValue}
  }

  var decodeRepeatedGroupField: Int32 {
    get {return _storage._decodeRepeatedGroupField}
    set {_uniqueStorage()._decodeRepeatedGroupField = newValue}
  }

  var decodeRepeatedInt32Field: Int32 {
    get {return _storage._decodeRepeatedInt32Field}
    set {_uniqueStorage()._decodeRepeatedInt32Field = newValue}
  }

  var decodeRepeatedInt64Field: Int32 {
    get {return _storage._decodeRepeatedInt64Field}
    set {_uniqueStorage()._decodeRepeatedInt64Field = newValue}
  }

  var decodeRepeatedMessageField: Int32 {
    get {return _storage._decodeRepeatedMessageField}
    set {_uniqueStorage()._decodeRepeatedMessageField = newValue}
  }

  var decodeRepeatedSfixed32Field: Int32 {
    get {return _storage._decodeRepeatedSfixed32Field}
    set {_uniqueStorage()._decodeRepeatedSfixed32Field = newValue}
  }

  var decodeRepeatedSfixed64Field: Int32 {
    get {return _storage._decodeRepeatedSfixed64Field}
    set {_uniqueStorage()._decodeRepeatedSfixed64Field = newValue}
  }

  var decodeRepeatedSint32Field: Int32 {
    get {return _storage._decodeRepeatedSint32Field}
    set {_uniqueStorage()._decodeRepeatedSint32Field = newValue}
  }

  var decodeRepeatedSint64Field: Int32 {
    get {return _storage._decodeRepeatedSint64Field}
    set {_uniqueStorage()._decodeRepeatedSint64Field = newValue}
  }

  var decodeRepeatedStringField: Int32 {
    get {return _storage._decodeRepeatedStringField}
    set {_uniqueStorage()._decodeRepeatedStringField = newValue}
  }

  var decodeRepeatedUint32Field: Int32 {
    get {return _storage._decodeRepeatedUint32Field}
    set {_uniqueStorage()._decodeRepeatedUint32Field = newValue}
  }

  var decodeRepeatedUint64Field: Int32 {
    get {return _storage._decodeRepeatedUint64Field}
    set {_uniqueStorage()._decodeRepeatedUint64Field = newValue}
  }

  var decodeSingular: Int32 {
    get {return _storage._decodeSingular}
    set {_uniqueStorage()._decodeSingular = newValue}
  }

  var decodeSingularBoolField: Int32 {
    get {return _storage._decodeSingularBoolField}
    set {_uniqueStorage()._decodeSingularBoolField = newValue}
  }

  var decodeSingularBytesField: Int32 {
    get {return _storage._decodeSingularBytesField}
    set {_uniqueStorage()._decodeSingularBytesField = newValue}
  }

  var decodeSingularDoubleField: Int32 {
    get {return _storage._decodeSingularDoubleField}
    set {_uniqueStorage()._decodeSingularDoubleField = newValue}
  }

  var decodeSingularEnumField: Int32 {
    get {return _storage._decodeSingularEnumField}
    set {_uniqueStorage()._decodeSingularEnumField = newValue}
  }

  var decodeSingularFixed32Field: Int32 {
    get {return _storage._decodeSingularFixed32Field}
    set {_uniqueStorage()._decodeSingularFixed32Field = newValue}
  }

  var decodeSingularFixed64Field: Int32 {
    get {return _storage._decodeSingularFixed64Field}
    set {_uniqueStorage()._decodeSingularFixed64Field = newValue}
  }

  var decodeSingularFloatField: Int32 {
    get {return _storage._decodeSingularFloatField}
    set {_uniqueStorage()._decodeSingularFloatField = newValue}
  }

  var decodeSingularGroupField: Int32 {
    get {return _storage._decodeSingularGroupField}
    set {_uniqueStorage()._decodeSingularGroupField = newValue}
  }

  var decodeSingularInt32Field: Int32 {
    get {return _storage._decodeSingularInt32Field}
    set {_uniqueStorage()._decodeSingularInt32Field = newValue}
  }

  var decodeSingularInt64Field: Int32 {
    get {return _storage._decodeSingularInt64Field}
    set {_uniqueStorage()._decodeSingularInt64Field = newValue}
  }

  var decodeSingularMessageField: Int32 {
    get {return _storage._decodeSingularMessageField}
    set {_uniqueStorage()._decodeSingularMessageField = newValue}
  }

  var decodeSingularSfixed32Field: Int32 {
    get {return _storage._decodeSingularSfixed32Field}
    set {_uniqueStorage()._decodeSingularSfixed32Field = newValue}
  }

  var decodeSingularSfixed64Field: Int32 {
    get {return _storage._decodeSingularSfixed64Field}
    set {_uniqueStorage()._decodeSingularSfixed64Field = newValue}
  }

  var decodeSingularSint32Field: Int32 {
    get {return _storage._decodeSingularSint32Field}
    set {_uniqueStorage()._decodeSingularSint32Field = newValue}
  }

  var decodeSingularSint64Field: Int32 {
    get {return _storage._decodeSingularSint64Field}
    set {_uniqueStorage()._decodeSingularSint64Field = newValue}
  }

  var decodeSingularStringField: Int32 {
    get {return _storage._decodeSingularStringField}
    set {_uniqueStorage()._decodeSingularStringField = newValue}
  }

  var decodeSingularUint32Field: Int32 {
    get {return _storage._decodeSingularUint32Field}
    set {_uniqueStorage()._decodeSingularUint32Field = newValue}
  }

  var decodeSingularUint64Field: Int32 {
    get {return _storage._decodeSingularUint64Field}
    set {_uniqueStorage()._decodeSingularUint64Field = newValue}
  }

  var decodeTextFormat: Int32 {
    get {return _storage._decodeTextFormat}
    set {_uniqueStorage()._decodeTextFormat = newValue}
  }

  var defaultAnyTypeUrlprefix: Int32 {
    get {return _storage._defaultAnyTypeUrlprefix}
    set {_uniqueStorage()._defaultAnyTypeUrlprefix = newValue}
  }

  var defaultValue: Int32 {
    get {return _storage._defaultValue}
    set {_uniqueStorage()._defaultValue = newValue}
  }

  var dependency: Int32 {
    get {return _storage._dependency}
    set {_uniqueStorage()._dependency = newValue}
  }

  var deprecated: Int32 {
    get {return _storage._deprecated}
    set {_uniqueStorage()._deprecated = newValue}
  }

  var description_p: Int32 {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  var descriptorProto: Int32 {
    get {return _storage._descriptorProto}
    set {_uniqueStorage()._descriptorProto = newValue}
  }

  var dictionary: Int32 {
    get {return _storage._dictionary}
    set {_uniqueStorage()._dictionary = newValue}
  }

  var dictionaryLiteral: Int32 {
    get {return _storage._dictionaryLiteral}
    set {_uniqueStorage()._dictionaryLiteral = newValue}
  }

  var digit: Int32 {
    get {return _storage._digit}
    set {_uniqueStorage()._digit = newValue}
  }

  var digit0: Int32 {
    get {return _storage._digit0}
    set {_uniqueStorage()._digit0 = newValue}
  }

  var digit1: Int32 {
    get {return _storage._digit1}
    set {_uniqueStorage()._digit1 = newValue}
  }

  var digitCount: Int32 {
    get {return _storage._digitCount}
    set {_uniqueStorage()._digitCount = newValue}
  }

  var digits: Int32 {
    get {return _storage._digits}
    set {_uniqueStorage()._digits = newValue}
  }

  var digitValue: Int32 {
    get {return _storage._digitValue}
    set {_uniqueStorage()._digitValue = newValue}
  }

  var discardableResult: Int32 {
    get {return _storage._discardableResult}
    set {_uniqueStorage()._discardableResult = newValue}
  }

  var discardUnknownFields: Int32 {
    get {return _storage._discardUnknownFields}
    set {_uniqueStorage()._discardUnknownFields = newValue}
  }

  var distance: Int32 {
    get {return _storage._distance}
    set {_uniqueStorage()._distance = newValue}
  }

  var double: Int32 {
    get {return _storage._double}
    set {_uniqueStorage()._double = newValue}
  }

  var doubleValue: Int32 {
    get {return _storage._doubleValue}
    set {_uniqueStorage()._doubleValue = newValue}
  }

  var duration: Int32 {
    get {return _storage._duration}
    set {_uniqueStorage()._duration = newValue}
  }

  var e: Int32 {
    get {return _storage._e}
    set {_uniqueStorage()._e = newValue}
  }

  var element: Int32 {
    get {return _storage._element}
    set {_uniqueStorage()._element = newValue}
  }

  var elements: Int32 {
    get {return _storage._elements}
    set {_uniqueStorage()._elements = newValue}
  }

  var emitExtensionFieldName: Int32 {
    get {return _storage._emitExtensionFieldName}
    set {_uniqueStorage()._emitExtensionFieldName = newValue}
  }

  var emitFieldName: Int32 {
    get {return _storage._emitFieldName}
    set {_uniqueStorage()._emitFieldName = newValue}
  }

  var emitFieldNumber: Int32 {
    get {return _storage._emitFieldNumber}
    set {_uniqueStorage()._emitFieldNumber = newValue}
  }

  var empty: Int32 {
    get {return _storage._empty}
    set {_uniqueStorage()._empty = newValue}
  }

  var emptyData: Int32 {
    get {return _storage._emptyData}
    set {_uniqueStorage()._emptyData = newValue}
  }

  var encodeAsBytes: Int32 {
    get {return _storage._encodeAsBytes}
    set {_uniqueStorage()._encodeAsBytes = newValue}
  }

  var encoded: Int32 {
    get {return _storage._encoded}
    set {_uniqueStorage()._encoded = newValue}
  }

  var encodedJsonstring: Int32 {
    get {return _storage._encodedJsonstring}
    set {_uniqueStorage()._encodedJsonstring = newValue}
  }

  var encodedSize: Int32 {
    get {return _storage._encodedSize}
    set {_uniqueStorage()._encodedSize = newValue}
  }

  var encodeField: Int32 {
    get {return _storage._encodeField}
    set {_uniqueStorage()._encodeField = newValue}
  }

  var encoder: Int32 {
    get {return _storage._encoder}
    set {_uniqueStorage()._encoder = newValue}
  }

  var end: Int32 {
    get {return _storage._end}
    set {_uniqueStorage()._end = newValue}
  }

  var endArray: Int32 {
    get {return _storage._endArray}
    set {_uniqueStorage()._endArray = newValue}
  }

  var endMessageField: Int32 {
    get {return _storage._endMessageField}
    set {_uniqueStorage()._endMessageField = newValue}
  }

  var endObject: Int32 {
    get {return _storage._endObject}
    set {_uniqueStorage()._endObject = newValue}
  }

  var endRegularField: Int32 {
    get {return _storage._endRegularField}
    set {_uniqueStorage()._endRegularField = newValue}
  }

  var `enum`: Int32 {
    get {return _storage._enum}
    set {_uniqueStorage()._enum = newValue}
  }

  var enumDescriptorProto: Int32 {
    get {return _storage._enumDescriptorProto}
    set {_uniqueStorage()._enumDescriptorProto = newValue}
  }

  var enumOptions: Int32 {
    get {return _storage._enumOptions}
    set {_uniqueStorage()._enumOptions = newValue}
  }

  var enumReservedRange: Int32 {
    get {return _storage._enumReservedRange}
    set {_uniqueStorage()._enumReservedRange = newValue}
  }

  var enumType: Int32 {
    get {return _storage._enumType}
    set {_uniqueStorage()._enumType = newValue}
  }

  var enumvalue: Int32 {
    get {return _storage._enumvalue}
    set {_uniqueStorage()._enumvalue = newValue}
  }

  var enumValueDescriptorProto: Int32 {
    get {return _storage._enumValueDescriptorProto}
    set {_uniqueStorage()._enumValueDescriptorProto = newValue}
  }

  var enumValueOptions: Int32 {
    get {return _storage._enumValueOptions}
    set {_uniqueStorage()._enumValueOptions = newValue}
  }

  var equatable: Int32 {
    get {return _storage._equatable}
    set {_uniqueStorage()._equatable = newValue}
  }

  var error: Int32 {
    get {return _storage._error}
    set {_uniqueStorage()._error = newValue}
  }

  var expressibleByArrayLiteral: Int32 {
    get {return _storage._expressibleByArrayLiteral}
    set {_uniqueStorage()._expressibleByArrayLiteral = newValue}
  }

  var expressibleByDictionaryLiteral: Int32 {
    get {return _storage._expressibleByDictionaryLiteral}
    set {_uniqueStorage()._expressibleByDictionaryLiteral = newValue}
  }

  var ext: Int32 {
    get {return _storage._ext}
    set {_uniqueStorage()._ext = newValue}
  }

  var extDecoder: Int32 {
    get {return _storage._extDecoder}
    set {_uniqueStorage()._extDecoder = newValue}
  }

  var extendedGraphemeClusterLiteral: Int32 {
    get {return _storage._extendedGraphemeClusterLiteral}
    set {_uniqueStorage()._extendedGraphemeClusterLiteral = newValue}
  }

  var extendedGraphemeClusterLiteralType: Int32 {
    get {return _storage._extendedGraphemeClusterLiteralType}
    set {_uniqueStorage()._extendedGraphemeClusterLiteralType = newValue}
  }

  var extendee: Int32 {
    get {return _storage._extendee}
    set {_uniqueStorage()._extendee = newValue}
  }

  var extensibleMessage: Int32 {
    get {return _storage._extensibleMessage}
    set {_uniqueStorage()._extensibleMessage = newValue}
  }

  var `extension`: Int32 {
    get {return _storage._extension}
    set {_uniqueStorage()._extension = newValue}
  }

  var extensionField: Int32 {
    get {return _storage._extensionField}
    set {_uniqueStorage()._extensionField = newValue}
  }

  var extensionFieldNumber: Int32 {
    get {return _storage._extensionFieldNumber}
    set {_uniqueStorage()._extensionFieldNumber = newValue}
  }

  var extensionFieldValueSet: Int32 {
    get {return _storage._extensionFieldValueSet}
    set {_uniqueStorage()._extensionFieldValueSet = newValue}
  }

  var extensionMap: Int32 {
    get {return _storage._extensionMap}
    set {_uniqueStorage()._extensionMap = newValue}
  }

  var extensionRange: Int32 {
    get {return _storage._extensionRange}
    set {_uniqueStorage()._extensionRange = newValue}
  }

  var extensionRangeOptions: Int32 {
    get {return _storage._extensionRangeOptions}
    set {_uniqueStorage()._extensionRangeOptions = newValue}
  }

  var extensions: Int32 {
    get {return _storage._extensions}
    set {_uniqueStorage()._extensions = newValue}
  }

  var extras: Int32 {
    get {return _storage._extras}
    set {_uniqueStorage()._extras = newValue}
  }

  var f: Int32 {
    get {return _storage._f}
    set {_uniqueStorage()._f = newValue}
  }

  var `false`: Int32 {
    get {return _storage._false}
    set {_uniqueStorage()._false = newValue}
  }

  var field: Int32 {
    get {return _storage._field}
    set {_uniqueStorage()._field = newValue}
  }

  var fieldData: Int32 {
    get {return _storage._fieldData}
    set {_uniqueStorage()._fieldData = newValue}
  }

  var fieldDescriptorProto: Int32 {
    get {return _storage._fieldDescriptorProto}
    set {_uniqueStorage()._fieldDescriptorProto = newValue}
  }

  var fieldMask: Int32 {
    get {return _storage._fieldMask}
    set {_uniqueStorage()._fieldMask = newValue}
  }

  var fieldName: Int32 {
    get {return _storage._fieldName}
    set {_uniqueStorage()._fieldName = newValue}
  }

  var fieldNameCount: Int32 {
    get {return _storage._fieldNameCount}
    set {_uniqueStorage()._fieldNameCount = newValue}
  }

  var fieldNum: Int32 {
    get {return _storage._fieldNum}
    set {_uniqueStorage()._fieldNum = newValue}
  }

  var fieldNumber: Int32 {
    get {return _storage._fieldNumber}
    set {_uniqueStorage()._fieldNumber = newValue}
  }

  var fieldNumberForProto: Int32 {
    get {return _storage._fieldNumberForProto}
    set {_uniqueStorage()._fieldNumberForProto = newValue}
  }

  var fieldOptions: Int32 {
    get {return _storage._fieldOptions}
    set {_uniqueStorage()._fieldOptions = newValue}
  }

  var fields: Int32 {
    get {return _storage._fields}
    set {_uniqueStorage()._fields = newValue}
  }

  var fieldSize: Int32 {
    get {return _storage._fieldSize}
    set {_uniqueStorage()._fieldSize = newValue}
  }

  var fieldTag: Int32 {
    get {return _storage._fieldTag}
    set {_uniqueStorage()._fieldTag = newValue}
  }

  var fieldType: Int32 {
    get {return _storage._fieldType}
    set {_uniqueStorage()._fieldType = newValue}
  }

  var fieldValue: Int32 {
    get {return _storage._fieldValue}
    set {_uniqueStorage()._fieldValue = newValue}
  }

  var file: Int32 {
    get {return _storage._file}
    set {_uniqueStorage()._file = newValue}
  }

  var fileDescriptorProto: Int32 {
    get {return _storage._fileDescriptorProto}
    set {_uniqueStorage()._fileDescriptorProto = newValue}
  }

  var fileDescriptorSet: Int32 {
    get {return _storage._fileDescriptorSet}
    set {_uniqueStorage()._fileDescriptorSet = newValue}
  }

  var fileName: Int32 {
    get {return _storage._fileName}
    set {_uniqueStorage()._fileName = newValue}
  }

  var fileOptions: Int32 {
    get {return _storage._fileOptions}
    set {_uniqueStorage()._fileOptions = newValue}
  }

  var filter: Int32 {
    get {return _storage._filter}
    set {_uniqueStorage()._filter = newValue}
  }

  var firstItem: Int32 {
    get {return _storage._firstItem}
    set {_uniqueStorage()._firstItem = newValue}
  }

  var float: Int32 {
    get {return _storage._float}
    set {_uniqueStorage()._float = newValue}
  }

  var floatLiteral: Int32 {
    get {return _storage._floatLiteral}
    set {_uniqueStorage()._floatLiteral = newValue}
  }

  var floatLiteralType: Int32 {
    get {return _storage._floatLiteralType}
    set {_uniqueStorage()._floatLiteralType = newValue}
  }

  var floatValue: Int32 {
    get {return _storage._floatValue}
    set {_uniqueStorage()._floatValue = newValue}
  }

  var forMessageName: Int32 {
    get {return _storage._forMessageName}
    set {_uniqueStorage()._forMessageName = newValue}
  }

  var formUnion: Int32 {
    get {return _storage._formUnion}
    set {_uniqueStorage()._formUnion = newValue}
  }

  var forReadingFrom: Int32 {
    get {return _storage._forReadingFrom}
    set {_uniqueStorage()._forReadingFrom = newValue}
  }

  var forTypeURL: Int32 {
    get {return _storage._forTypeURL}
    set {_uniqueStorage()._forTypeURL = newValue}
  }

  var forwardParser: Int32 {
    get {return _storage._forwardParser}
    set {_uniqueStorage()._forwardParser = newValue}
  }

  var forWritingInto: Int32 {
    get {return _storage._forWritingInto}
    set {_uniqueStorage()._forWritingInto = newValue}
  }

  var from: Int32 {
    get {return _storage._from}
    set {_uniqueStorage()._from = newValue}
  }

  var fromAscii2: Int32 {
    get {return _storage._fromAscii2}
    set {_uniqueStorage()._fromAscii2 = newValue}
  }

  var fromAscii4: Int32 {
    get {return _storage._fromAscii4}
    set {_uniqueStorage()._fromAscii4 = newValue}
  }

  var fromByteOffset: Int32 {
    get {return _storage._fromByteOffset}
    set {_uniqueStorage()._fromByteOffset = newValue}
  }

  var fromHexDigit: Int32 {
    get {return _storage._fromHexDigit}
    set {_uniqueStorage()._fromHexDigit = newValue}
  }

  var `func`: Int32 {
    get {return _storage._func}
    set {_uniqueStorage()._func = newValue}
  }

  var g: Int32 {
    get {return _storage._g}
    set {_uniqueStorage()._g = newValue}
  }

  var generatedCodeInfo: Int32 {
    get {return _storage._generatedCodeInfo}
    set {_uniqueStorage()._generatedCodeInfo = newValue}
  }

  var get: Int32 {
    get {return _storage._get}
    set {_uniqueStorage()._get = newValue}
  }

  var getExtensionValue: Int32 {
    get {return _storage._getExtensionValue}
    set {_uniqueStorage()._getExtensionValue = newValue}
  }

  var googleapis: Int32 {
    get {return _storage._googleapis}
    set {_uniqueStorage()._googleapis = newValue}
  }

  var googleProtobufAny: Int32 {
    get {return _storage._googleProtobufAny}
    set {_uniqueStorage()._googleProtobufAny = newValue}
  }

  var googleProtobufApi: Int32 {
    get {return _storage._googleProtobufApi}
    set {_uniqueStorage()._googleProtobufApi = newValue}
  }

  var googleProtobufBoolValue: Int32 {
    get {return _storage._googleProtobufBoolValue}
    set {_uniqueStorage()._googleProtobufBoolValue = newValue}
  }

  var googleProtobufBytesValue: Int32 {
    get {return _storage._googleProtobufBytesValue}
    set {_uniqueStorage()._googleProtobufBytesValue = newValue}
  }

  var googleProtobufDescriptorProto: Int32 {
    get {return _storage._googleProtobufDescriptorProto}
    set {_uniqueStorage()._googleProtobufDescriptorProto = newValue}
  }

  var googleProtobufDoubleValue: Int32 {
    get {return _storage._googleProtobufDoubleValue}
    set {_uniqueStorage()._googleProtobufDoubleValue = newValue}
  }

  var googleProtobufDuration: Int32 {
    get {return _storage._googleProtobufDuration}
    set {_uniqueStorage()._googleProtobufDuration = newValue}
  }

  var googleProtobufEmpty: Int32 {
    get {return _storage._googleProtobufEmpty}
    set {_uniqueStorage()._googleProtobufEmpty = newValue}
  }

  var googleProtobufEnum: Int32 {
    get {return _storage._googleProtobufEnum}
    set {_uniqueStorage()._googleProtobufEnum = newValue}
  }

  var googleProtobufEnumDescriptorProto: Int32 {
    get {return _storage._googleProtobufEnumDescriptorProto}
    set {_uniqueStorage()._googleProtobufEnumDescriptorProto = newValue}
  }

  var googleProtobufEnumOptions: Int32 {
    get {return _storage._googleProtobufEnumOptions}
    set {_uniqueStorage()._googleProtobufEnumOptions = newValue}
  }

  var googleProtobufEnumValue: Int32 {
    get {return _storage._googleProtobufEnumValue}
    set {_uniqueStorage()._googleProtobufEnumValue = newValue}
  }

  var googleProtobufEnumValueDescriptorProto: Int32 {
    get {return _storage._googleProtobufEnumValueDescriptorProto}
    set {_uniqueStorage()._googleProtobufEnumValueDescriptorProto = newValue}
  }

  var googleProtobufEnumValueOptions: Int32 {
    get {return _storage._googleProtobufEnumValueOptions}
    set {_uniqueStorage()._googleProtobufEnumValueOptions = newValue}
  }

  var googleProtobufExtensionRangeOptions: Int32 {
    get {return _storage._googleProtobufExtensionRangeOptions}
    set {_uniqueStorage()._googleProtobufExtensionRangeOptions = newValue}
  }

  var googleProtobufField: Int32 {
    get {return _storage._googleProtobufField}
    set {_uniqueStorage()._googleProtobufField = newValue}
  }

  var googleProtobufFieldDescriptorProto: Int32 {
    get {return _storage._googleProtobufFieldDescriptorProto}
    set {_uniqueStorage()._googleProtobufFieldDescriptorProto = newValue}
  }

  var googleProtobufFieldMask: Int32 {
    get {return _storage._googleProtobufFieldMask}
    set {_uniqueStorage()._googleProtobufFieldMask = newValue}
  }

  var googleProtobufFieldOptions: Int32 {
    get {return _storage._googleProtobufFieldOptions}
    set {_uniqueStorage()._googleProtobufFieldOptions = newValue}
  }

  var googleProtobufFileDescriptorProto: Int32 {
    get {return _storage._googleProtobufFileDescriptorProto}
    set {_uniqueStorage()._googleProtobufFileDescriptorProto = newValue}
  }

  var googleProtobufFileDescriptorSet: Int32 {
    get {return _storage._googleProtobufFileDescriptorSet}
    set {_uniqueStorage()._googleProtobufFileDescriptorSet = newValue}
  }

  var googleProtobufFileOptions: Int32 {
    get {return _storage._googleProtobufFileOptions}
    set {_uniqueStorage()._googleProtobufFileOptions = newValue}
  }

  var googleProtobufFloatValue: Int32 {
    get {return _storage._googleProtobufFloatValue}
    set {_uniqueStorage()._googleProtobufFloatValue = newValue}
  }

  var googleProtobufGeneratedCodeInfo: Int32 {
    get {return _storage._googleProtobufGeneratedCodeInfo}
    set {_uniqueStorage()._googleProtobufGeneratedCodeInfo = newValue}
  }

  var googleProtobufInt32Value: Int32 {
    get {return _storage._googleProtobufInt32Value}
    set {_uniqueStorage()._googleProtobufInt32Value = newValue}
  }

  var googleProtobufInt64Value: Int32 {
    get {return _storage._googleProtobufInt64Value}
    set {_uniqueStorage()._googleProtobufInt64Value = newValue}
  }

  var googleProtobufListValue: Int32 {
    get {return _storage._googleProtobufListValue}
    set {_uniqueStorage()._googleProtobufListValue = newValue}
  }

  var googleProtobufMessageOptions: Int32 {
    get {return _storage._googleProtobufMessageOptions}
    set {_uniqueStorage()._googleProtobufMessageOptions = newValue}
  }

  var googleProtobufMethod: Int32 {
    get {return _storage._googleProtobufMethod}
    set {_uniqueStorage()._googleProtobufMethod = newValue}
  }

  var googleProtobufMethodDescriptorProto: Int32 {
    get {return _storage._googleProtobufMethodDescriptorProto}
    set {_uniqueStorage()._googleProtobufMethodDescriptorProto = newValue}
  }

  var googleProtobufMethodOptions: Int32 {
    get {return _storage._googleProtobufMethodOptions}
    set {_uniqueStorage()._googleProtobufMethodOptions = newValue}
  }

  var googleProtobufMixin: Int32 {
    get {return _storage._googleProtobufMixin}
    set {_uniqueStorage()._googleProtobufMixin = newValue}
  }

  var googleProtobufNullValue: Int32 {
    get {return _storage._googleProtobufNullValue}
    set {_uniqueStorage()._googleProtobufNullValue = newValue}
  }

  var googleProtobufOneofDescriptorProto: Int32 {
    get {return _storage._googleProtobufOneofDescriptorProto}
    set {_uniqueStorage()._googleProtobufOneofDescriptorProto = newValue}
  }

  var googleProtobufOneofOptions: Int32 {
    get {return _storage._googleProtobufOneofOptions}
    set {_uniqueStorage()._googleProtobufOneofOptions = newValue}
  }

  var googleProtobufOption: Int32 {
    get {return _storage._googleProtobufOption}
    set {_uniqueStorage()._googleProtobufOption = newValue}
  }

  var googleProtobufServiceDescriptorProto: Int32 {
    get {return _storage._googleProtobufServiceDescriptorProto}
    set {_uniqueStorage()._googleProtobufServiceDescriptorProto = newValue}
  }

  var googleProtobufServiceOptions: Int32 {
    get {return _storage._googleProtobufServiceOptions}
    set {_uniqueStorage()._googleProtobufServiceOptions = newValue}
  }

  var googleProtobufSourceCodeInfo: Int32 {
    get {return _storage._googleProtobufSourceCodeInfo}
    set {_uniqueStorage()._googleProtobufSourceCodeInfo = newValue}
  }

  var googleProtobufSourceContext: Int32 {
    get {return _storage._googleProtobufSourceContext}
    set {_uniqueStorage()._googleProtobufSourceContext = newValue}
  }

  var googleProtobufStringValue: Int32 {
    get {return _storage._googleProtobufStringValue}
    set {_uniqueStorage()._googleProtobufStringValue = newValue}
  }

  var googleProtobufStruct: Int32 {
    get {return _storage._googleProtobufStruct}
    set {_uniqueStorage()._googleProtobufStruct = newValue}
  }

  var googleProtobufSyntax: Int32 {
    get {return _storage._googleProtobufSyntax}
    set {_uniqueStorage()._googleProtobufSyntax = newValue}
  }

  var googleProtobufTimestamp: Int32 {
    get {return _storage._googleProtobufTimestamp}
    set {_uniqueStorage()._googleProtobufTimestamp = newValue}
  }

  var googleProtobufType: Int32 {
    get {return _storage._googleProtobufType}
    set {_uniqueStorage()._googleProtobufType = newValue}
  }

  var googleProtobufUint32Value: Int32 {
    get {return _storage._googleProtobufUint32Value}
    set {_uniqueStorage()._googleProtobufUint32Value = newValue}
  }

  var googleProtobufUint64Value: Int32 {
    get {return _storage._googleProtobufUint64Value}
    set {_uniqueStorage()._googleProtobufUint64Value = newValue}
  }

  var googleProtobufUninterpretedOption: Int32 {
    get {return _storage._googleProtobufUninterpretedOption}
    set {_uniqueStorage()._googleProtobufUninterpretedOption = newValue}
  }

  var googleProtobufValue: Int32 {
    get {return _storage._googleProtobufValue}
    set {_uniqueStorage()._googleProtobufValue = newValue}
  }

  var goPackage: Int32 {
    get {return _storage._goPackage}
    set {_uniqueStorage()._goPackage = newValue}
  }

  var group: Int32 {
    get {return _storage._group}
    set {_uniqueStorage()._group = newValue}
  }

  var groupFieldNumberStack: Int32 {
    get {return _storage._groupFieldNumberStack}
    set {_uniqueStorage()._groupFieldNumberStack = newValue}
  }

  var groupSize: Int32 {
    get {return _storage._groupSize}
    set {_uniqueStorage()._groupSize = newValue}
  }

  var h: Int32 {
    get {return _storage._h}
    set {_uniqueStorage()._h = newValue}
  }

  var handleConflictingOneOf: Int32 {
    get {return _storage._handleConflictingOneOf}
    set {_uniqueStorage()._handleConflictingOneOf = newValue}
  }

  var hasAggregateValue_p: Int32 {
    get {return _storage._hasAggregateValue_p}
    set {_uniqueStorage()._hasAggregateValue_p = newValue}
  }

  var hasAllowAlias_p: Int32 {
    get {return _storage._hasAllowAlias_p}
    set {_uniqueStorage()._hasAllowAlias_p = newValue}
  }

  var hasBegin_p: Int32 {
    get {return _storage._hasBegin_p}
    set {_uniqueStorage()._hasBegin_p = newValue}
  }

  var hasCcEnableArenas_p: Int32 {
    get {return _storage._hasCcEnableArenas_p}
    set {_uniqueStorage()._hasCcEnableArenas_p = newValue}
  }

  var hasCcGenericServices_p: Int32 {
    get {return _storage._hasCcGenericServices_p}
    set {_uniqueStorage()._hasCcGenericServices_p = newValue}
  }

  var hasClientStreaming_p: Int32 {
    get {return _storage._hasClientStreaming_p}
    set {_uniqueStorage()._hasClientStreaming_p = newValue}
  }

  var hasCsharpNamespace_p: Int32 {
    get {return _storage._hasCsharpNamespace_p}
    set {_uniqueStorage()._hasCsharpNamespace_p = newValue}
  }

  var hasCtype_p: Int32 {
    get {return _storage._hasCtype_p}
    set {_uniqueStorage()._hasCtype_p = newValue}
  }

  var hasDefaultValue_p: Int32 {
    get {return _storage._hasDefaultValue_p}
    set {_uniqueStorage()._hasDefaultValue_p = newValue}
  }

  var hasDeprecated_p: Int32 {
    get {return _storage._hasDeprecated_p}
    set {_uniqueStorage()._hasDeprecated_p = newValue}
  }

  var hasDoubleValue_p: Int32 {
    get {return _storage._hasDoubleValue_p}
    set {_uniqueStorage()._hasDoubleValue_p = newValue}
  }

  var hasEnd_p: Int32 {
    get {return _storage._hasEnd_p}
    set {_uniqueStorage()._hasEnd_p = newValue}
  }

  var hasExtendee_p: Int32 {
    get {return _storage._hasExtendee_p}
    set {_uniqueStorage()._hasExtendee_p = newValue}
  }

  var hasExtensionValue_p: Int32 {
    get {return _storage._hasExtensionValue_p}
    set {_uniqueStorage()._hasExtensionValue_p = newValue}
  }

  var hasGoPackage_p: Int32 {
    get {return _storage._hasGoPackage_p}
    set {_uniqueStorage()._hasGoPackage_p = newValue}
  }

  var hash: Int32 {
    get {return _storage._hash}
    set {_uniqueStorage()._hash = newValue}
  }

  var hashable: Int32 {
    get {return _storage._hashable}
    set {_uniqueStorage()._hashable = newValue}
  }

  var hasher: Int32 {
    get {return _storage._hasher}
    set {_uniqueStorage()._hasher = newValue}
  }

  var hashValue_p: Int32 {
    get {return _storage._hashValue_p}
    set {_uniqueStorage()._hashValue_p = newValue}
  }

  var hashVisitor: Int32 {
    get {return _storage._hashVisitor}
    set {_uniqueStorage()._hashVisitor = newValue}
  }

  var hasIdempotencyLevel_p: Int32 {
    get {return _storage._hasIdempotencyLevel_p}
    set {_uniqueStorage()._hasIdempotencyLevel_p = newValue}
  }

  var hasIdentifierValue_p: Int32 {
    get {return _storage._hasIdentifierValue_p}
    set {_uniqueStorage()._hasIdentifierValue_p = newValue}
  }

  var hasInputType_p: Int32 {
    get {return _storage._hasInputType_p}
    set {_uniqueStorage()._hasInputType_p = newValue}
  }

  var hasIsExtension_p: Int32 {
    get {return _storage._hasIsExtension_p}
    set {_uniqueStorage()._hasIsExtension_p = newValue}
  }

  var hasJavaGenerateEqualsAndHash_p: Int32 {
    get {return _storage._hasJavaGenerateEqualsAndHash_p}
    set {_uniqueStorage()._hasJavaGenerateEqualsAndHash_p = newValue}
  }

  var hasJavaGenericServices_p: Int32 {
    get {return _storage._hasJavaGenericServices_p}
    set {_uniqueStorage()._hasJavaGenericServices_p = newValue}
  }

  var hasJavaMultipleFiles_p: Int32 {
    get {return _storage._hasJavaMultipleFiles_p}
    set {_uniqueStorage()._hasJavaMultipleFiles_p = newValue}
  }

  var hasJavaOuterClassname_p: Int32 {
    get {return _storage._hasJavaOuterClassname_p}
    set {_uniqueStorage()._hasJavaOuterClassname_p = newValue}
  }

  var hasJavaPackage_p: Int32 {
    get {return _storage._hasJavaPackage_p}
    set {_uniqueStorage()._hasJavaPackage_p = newValue}
  }

  var hasJavaStringCheckUtf8_p: Int32 {
    get {return _storage._hasJavaStringCheckUtf8_p}
    set {_uniqueStorage()._hasJavaStringCheckUtf8_p = newValue}
  }

  var hasJsonName_p: Int32 {
    get {return _storage._hasJsonName_p}
    set {_uniqueStorage()._hasJsonName_p = newValue}
  }

  var hasJstype_p: Int32 {
    get {return _storage._hasJstype_p}
    set {_uniqueStorage()._hasJstype_p = newValue}
  }

  var hasLabel_p: Int32 {
    get {return _storage._hasLabel_p}
    set {_uniqueStorage()._hasLabel_p = newValue}
  }

  var hasLazy_p: Int32 {
    get {return _storage._hasLazy_p}
    set {_uniqueStorage()._hasLazy_p = newValue}
  }

  var hasLeadingComments_p: Int32 {
    get {return _storage._hasLeadingComments_p}
    set {_uniqueStorage()._hasLeadingComments_p = newValue}
  }

  var hasMapEntry_p: Int32 {
    get {return _storage._hasMapEntry_p}
    set {_uniqueStorage()._hasMapEntry_p = newValue}
  }

  var hasMessageSetWireFormat_p: Int32 {
    get {return _storage._hasMessageSetWireFormat_p}
    set {_uniqueStorage()._hasMessageSetWireFormat_p = newValue}
  }

  var hasName_p: Int32 {
    get {return _storage._hasName_p}
    set {_uniqueStorage()._hasName_p = newValue}
  }

  var hasNamePart_p: Int32 {
    get {return _storage._hasNamePart_p}
    set {_uniqueStorage()._hasNamePart_p = newValue}
  }

  var hasNegativeIntValue_p: Int32 {
    get {return _storage._hasNegativeIntValue_p}
    set {_uniqueStorage()._hasNegativeIntValue_p = newValue}
  }

  var hasNoStandardDescriptorAccessor_p: Int32 {
    get {return _storage._hasNoStandardDescriptorAccessor_p}
    set {_uniqueStorage()._hasNoStandardDescriptorAccessor_p = newValue}
  }

  var hasNumber_p: Int32 {
    get {return _storage._hasNumber_p}
    set {_uniqueStorage()._hasNumber_p = newValue}
  }

  var hasObjcClassPrefix_p: Int32 {
    get {return _storage._hasObjcClassPrefix_p}
    set {_uniqueStorage()._hasObjcClassPrefix_p = newValue}
  }

  var hasOneofIndex_p: Int32 {
    get {return _storage._hasOneofIndex_p}
    set {_uniqueStorage()._hasOneofIndex_p = newValue}
  }

  var hasOptimizeFor_p: Int32 {
    get {return _storage._hasOptimizeFor_p}
    set {_uniqueStorage()._hasOptimizeFor_p = newValue}
  }

  var hasOptions_p: Int32 {
    get {return _storage._hasOptions_p}
    set {_uniqueStorage()._hasOptions_p = newValue}
  }

  var hasOutputType_p: Int32 {
    get {return _storage._hasOutputType_p}
    set {_uniqueStorage()._hasOutputType_p = newValue}
  }

  var hasPackage_p: Int32 {
    get {return _storage._hasPackage_p}
    set {_uniqueStorage()._hasPackage_p = newValue}
  }

  var hasPacked_p: Int32 {
    get {return _storage._hasPacked_p}
    set {_uniqueStorage()._hasPacked_p = newValue}
  }

  var hasPhpClassPrefix_p: Int32 {
    get {return _storage._hasPhpClassPrefix_p}
    set {_uniqueStorage()._hasPhpClassPrefix_p = newValue}
  }

  var hasPhpGenericServices_p: Int32 {
    get {return _storage._hasPhpGenericServices_p}
    set {_uniqueStorage()._hasPhpGenericServices_p = newValue}
  }

  var hasPhpMetadataNamespace_p: Int32 {
    get {return _storage._hasPhpMetadataNamespace_p}
    set {_uniqueStorage()._hasPhpMetadataNamespace_p = newValue}
  }

  var hasPhpNamespace_p: Int32 {
    get {return _storage._hasPhpNamespace_p}
    set {_uniqueStorage()._hasPhpNamespace_p = newValue}
  }

  var hasPositiveIntValue_p: Int32 {
    get {return _storage._hasPositiveIntValue_p}
    set {_uniqueStorage()._hasPositiveIntValue_p = newValue}
  }

  var hasPyGenericServices_p: Int32 {
    get {return _storage._hasPyGenericServices_p}
    set {_uniqueStorage()._hasPyGenericServices_p = newValue}
  }

  var hasRubyPackage_p: Int32 {
    get {return _storage._hasRubyPackage_p}
    set {_uniqueStorage()._hasRubyPackage_p = newValue}
  }

  var hasServerStreaming_p: Int32 {
    get {return _storage._hasServerStreaming_p}
    set {_uniqueStorage()._hasServerStreaming_p = newValue}
  }

  var hasSourceCodeInfo_p: Int32 {
    get {return _storage._hasSourceCodeInfo_p}
    set {_uniqueStorage()._hasSourceCodeInfo_p = newValue}
  }

  var hasSourceContext_p: Int32 {
    get {return _storage._hasSourceContext_p}
    set {_uniqueStorage()._hasSourceContext_p = newValue}
  }

  var hasSourceFile_p: Int32 {
    get {return _storage._hasSourceFile_p}
    set {_uniqueStorage()._hasSourceFile_p = newValue}
  }

  var hasStart_p: Int32 {
    get {return _storage._hasStart_p}
    set {_uniqueStorage()._hasStart_p = newValue}
  }

  var hasStringValue_p: Int32 {
    get {return _storage._hasStringValue_p}
    set {_uniqueStorage()._hasStringValue_p = newValue}
  }

  var hasSwiftPrefix_p: Int32 {
    get {return _storage._hasSwiftPrefix_p}
    set {_uniqueStorage()._hasSwiftPrefix_p = newValue}
  }

  var hasSyntax_p: Int32 {
    get {return _storage._hasSyntax_p}
    set {_uniqueStorage()._hasSyntax_p = newValue}
  }

  var hasTrailingComments_p: Int32 {
    get {return _storage._hasTrailingComments_p}
    set {_uniqueStorage()._hasTrailingComments_p = newValue}
  }

  var hasType_p: Int32 {
    get {return _storage._hasType_p}
    set {_uniqueStorage()._hasType_p = newValue}
  }

  var hasTypeName_p: Int32 {
    get {return _storage._hasTypeName_p}
    set {_uniqueStorage()._hasTypeName_p = newValue}
  }

  var hasValue_p: Int32 {
    get {return _storage._hasValue_p}
    set {_uniqueStorage()._hasValue_p = newValue}
  }

  var hasWeak_p: Int32 {
    get {return _storage._hasWeak_p}
    set {_uniqueStorage()._hasWeak_p = newValue}
  }

  var hour: Int32 {
    get {return _storage._hour}
    set {_uniqueStorage()._hour = newValue}
  }

  var i: Int32 {
    get {return _storage._i}
    set {_uniqueStorage()._i = newValue}
  }

  var idempotencyLevel: Int32 {
    get {return _storage._idempotencyLevel}
    set {_uniqueStorage()._idempotencyLevel = newValue}
  }

  var identifierValue: Int32 {
    get {return _storage._identifierValue}
    set {_uniqueStorage()._identifierValue = newValue}
  }

  var `if`: Int32 {
    get {return _storage._if}
    set {_uniqueStorage()._if = newValue}
  }

  var ignoreUnknownFields: Int32 {
    get {return _storage._ignoreUnknownFields}
    set {_uniqueStorage()._ignoreUnknownFields = newValue}
  }

  var index: Int32 {
    get {return _storage._index}
    set {_uniqueStorage()._index = newValue}
  }

  var init_p: Int32 {
    get {return _storage._init_p}
    set {_uniqueStorage()._init_p = newValue}
  }

  var `inout`: Int32 {
    get {return _storage._inout}
    set {_uniqueStorage()._inout = newValue}
  }

  var inputType: Int32 {
    get {return _storage._inputType}
    set {_uniqueStorage()._inputType = newValue}
  }

  var insert: Int32 {
    get {return _storage._insert}
    set {_uniqueStorage()._insert = newValue}
  }

  var int: Int32 {
    get {return _storage._int}
    set {_uniqueStorage()._int = newValue}
  }

  var int32: Int32 {
    get {return _storage._int32}
    set {_uniqueStorage()._int32 = newValue}
  }

  var int32Value: Int32 {
    get {return _storage._int32Value}
    set {_uniqueStorage()._int32Value = newValue}
  }

  var int64: Int32 {
    get {return _storage._int64}
    set {_uniqueStorage()._int64 = newValue}
  }

  var int64Value: Int32 {
    get {return _storage._int64Value}
    set {_uniqueStorage()._int64Value = newValue}
  }

  var int8: Int32 {
    get {return _storage._int8}
    set {_uniqueStorage()._int8 = newValue}
  }

  var integerLiteral: Int32 {
    get {return _storage._integerLiteral}
    set {_uniqueStorage()._integerLiteral = newValue}
  }

  var integerLiteralType: Int32 {
    get {return _storage._integerLiteralType}
    set {_uniqueStorage()._integerLiteralType = newValue}
  }

  var intern: Int32 {
    get {return _storage._intern}
    set {_uniqueStorage()._intern = newValue}
  }

  var `internal`: Int32 {
    get {return _storage._internal}
    set {_uniqueStorage()._internal = newValue}
  }

  var internalState: Int32 {
    get {return _storage._internalState}
    set {_uniqueStorage()._internalState = newValue}
  }

  var into: Int32 {
    get {return _storage._into}
    set {_uniqueStorage()._into = newValue}
  }

  var ints: Int32 {
    get {return _storage._ints}
    set {_uniqueStorage()._ints = newValue}
  }

  var isA: Int32 {
    get {return _storage._isA}
    set {_uniqueStorage()._isA = newValue}
  }

  var isEqual: Int32 {
    get {return _storage._isEqual}
    set {_uniqueStorage()._isEqual = newValue}
  }

  var isEqualTo: Int32 {
    get {return _storage._isEqualTo}
    set {_uniqueStorage()._isEqualTo = newValue}
  }

  var isExtension: Int32 {
    get {return _storage._isExtension}
    set {_uniqueStorage()._isExtension = newValue}
  }

  var isInitialized_p: Int32 {
    get {return _storage._isInitialized_p}
    set {_uniqueStorage()._isInitialized_p = newValue}
  }

  var itemTagsEncodedSize: Int32 {
    get {return _storage._itemTagsEncodedSize}
    set {_uniqueStorage()._itemTagsEncodedSize = newValue}
  }

  var i2166136261: Int32 {
    get {return _storage._i2166136261}
    set {_uniqueStorage()._i2166136261 = newValue}
  }

  var javaGenerateEqualsAndHash: Int32 {
    get {return _storage._javaGenerateEqualsAndHash}
    set {_uniqueStorage()._javaGenerateEqualsAndHash = newValue}
  }

  var javaGenericServices: Int32 {
    get {return _storage._javaGenericServices}
    set {_uniqueStorage()._javaGenericServices = newValue}
  }

  var javaMultipleFiles: Int32 {
    get {return _storage._javaMultipleFiles}
    set {_uniqueStorage()._javaMultipleFiles = newValue}
  }

  var javaOuterClassname: Int32 {
    get {return _storage._javaOuterClassname}
    set {_uniqueStorage()._javaOuterClassname = newValue}
  }

  var javaPackage: Int32 {
    get {return _storage._javaPackage}
    set {_uniqueStorage()._javaPackage = newValue}
  }

  var javaStringCheckUtf8: Int32 {
    get {return _storage._javaStringCheckUtf8}
    set {_uniqueStorage()._javaStringCheckUtf8 = newValue}
  }

  var jsondecoder: Int32 {
    get {return _storage._jsondecoder}
    set {_uniqueStorage()._jsondecoder = newValue}
  }

  var jsondecodingError: Int32 {
    get {return _storage._jsondecodingError}
    set {_uniqueStorage()._jsondecodingError = newValue}
  }

  var jsondecodingOptions: Int32 {
    get {return _storage._jsondecodingOptions}
    set {_uniqueStorage()._jsondecodingOptions = newValue}
  }

  var jsonEncoder: Int32 {
    get {return _storage._jsonEncoder}
    set {_uniqueStorage()._jsonEncoder = newValue}
  }

  var jsonencodingError: Int32 {
    get {return _storage._jsonencodingError}
    set {_uniqueStorage()._jsonencodingError = newValue}
  }

  var jsonencodingOptions: Int32 {
    get {return _storage._jsonencodingOptions}
    set {_uniqueStorage()._jsonencodingOptions = newValue}
  }

  var jsonencodingVisitor: Int32 {
    get {return _storage._jsonencodingVisitor}
    set {_uniqueStorage()._jsonencodingVisitor = newValue}
  }

  var jsonmapEncodingVisitor: Int32 {
    get {return _storage._jsonmapEncodingVisitor}
    set {_uniqueStorage()._jsonmapEncodingVisitor = newValue}
  }

  var jsonName: Int32 {
    get {return _storage._jsonName}
    set {_uniqueStorage()._jsonName = newValue}
  }

  var jsonPath: Int32 {
    get {return _storage._jsonPath}
    set {_uniqueStorage()._jsonPath = newValue}
  }

  var jsonPaths: Int32 {
    get {return _storage._jsonPaths}
    set {_uniqueStorage()._jsonPaths = newValue}
  }

  var jsonscanner: Int32 {
    get {return _storage._jsonscanner}
    set {_uniqueStorage()._jsonscanner = newValue}
  }

  var jsonString: Int32 {
    get {return _storage._jsonString}
    set {_uniqueStorage()._jsonString = newValue}
  }

  var jsonText: Int32 {
    get {return _storage._jsonText}
    set {_uniqueStorage()._jsonText = newValue}
  }

  var jsonUtf8Data: Int32 {
    get {return _storage._jsonUtf8Data}
    set {_uniqueStorage()._jsonUtf8Data = newValue}
  }

  var jstype: Int32 {
    get {return _storage._jstype}
    set {_uniqueStorage()._jstype = newValue}
  }

  var k: Int32 {
    get {return _storage._k}
    set {_uniqueStorage()._k = newValue}
  }

  var key: Int32 {
    get {return _storage._key}
    set {_uniqueStorage()._key = newValue}
  }

  var keyField: Int32 {
    get {return _storage._keyField}
    set {_uniqueStorage()._keyField = newValue}
  }

  var keyType: Int32 {
    get {return _storage._keyType}
    set {_uniqueStorage()._keyType = newValue}
  }

  var kind: Int32 {
    get {return _storage._kind}
    set {_uniqueStorage()._kind = newValue}
  }

  var l: Int32 {
    get {return _storage._l}
    set {_uniqueStorage()._l = newValue}
  }

  var label: Int32 {
    get {return _storage._label}
    set {_uniqueStorage()._label = newValue}
  }

  var lazy: Int32 {
    get {return _storage._lazy}
    set {_uniqueStorage()._lazy = newValue}
  }

  var leadingComments: Int32 {
    get {return _storage._leadingComments}
    set {_uniqueStorage()._leadingComments = newValue}
  }

  var leadingDetachedComments: Int32 {
    get {return _storage._leadingDetachedComments}
    set {_uniqueStorage()._leadingDetachedComments = newValue}
  }

  var length: Int32 {
    get {return _storage._length}
    set {_uniqueStorage()._length = newValue}
  }

  var `let`: Int32 {
    get {return _storage._let}
    set {_uniqueStorage()._let = newValue}
  }

  var lhs: Int32 {
    get {return _storage._lhs}
    set {_uniqueStorage()._lhs = newValue}
  }

  var list: Int32 {
    get {return _storage._list}
    set {_uniqueStorage()._list = newValue}
  }

  var listOfMessages: Int32 {
    get {return _storage._listOfMessages}
    set {_uniqueStorage()._listOfMessages = newValue}
  }

  var listValue: Int32 {
    get {return _storage._listValue}
    set {_uniqueStorage()._listValue = newValue}
  }

  var littleEndian: Int32 {
    get {return _storage._littleEndian}
    set {_uniqueStorage()._littleEndian = newValue}
  }

  var littleEndianBytes: Int32 {
    get {return _storage._littleEndianBytes}
    set {_uniqueStorage()._littleEndianBytes = newValue}
  }

  var load: Int32 {
    get {return _storage._load}
    set {_uniqueStorage()._load = newValue}
  }

  var localHasher: Int32 {
    get {return _storage._localHasher}
    set {_uniqueStorage()._localHasher = newValue}
  }

  var location: Int32 {
    get {return _storage._location}
    set {_uniqueStorage()._location = newValue}
  }

  var m: Int32 {
    get {return _storage._m}
    set {_uniqueStorage()._m = newValue}
  }

  var major: Int32 {
    get {return _storage._major}
    set {_uniqueStorage()._major = newValue}
  }

  var makeIterator: Int32 {
    get {return _storage._makeIterator}
    set {_uniqueStorage()._makeIterator = newValue}
  }

  var mapEntry: Int32 {
    get {return _storage._mapEntry}
    set {_uniqueStorage()._mapEntry = newValue}
  }

  var mapHash: Int32 {
    get {return _storage._mapHash}
    set {_uniqueStorage()._mapHash = newValue}
  }

  var mapKeyType: Int32 {
    get {return _storage._mapKeyType}
    set {_uniqueStorage()._mapKeyType = newValue}
  }

  var mapNameResolver: Int32 {
    get {return _storage._mapNameResolver}
    set {_uniqueStorage()._mapNameResolver = newValue}
  }

  var mapToMessages: Int32 {
    get {return _storage._mapToMessages}
    set {_uniqueStorage()._mapToMessages = newValue}
  }

  var mapValueType: Int32 {
    get {return _storage._mapValueType}
    set {_uniqueStorage()._mapValueType = newValue}
  }

  var mapVisitor: Int32 {
    get {return _storage._mapVisitor}
    set {_uniqueStorage()._mapVisitor = newValue}
  }

  var mdayStart: Int32 {
    get {return _storage._mdayStart}
    set {_uniqueStorage()._mdayStart = newValue}
  }

  var merge: Int32 {
    get {return _storage._merge}
    set {_uniqueStorage()._merge = newValue}
  }

  var message: Int32 {
    get {return _storage._message}
    set {_uniqueStorage()._message = newValue}
  }

  var messageDepthLimit: Int32 {
    get {return _storage._messageDepthLimit}
    set {_uniqueStorage()._messageDepthLimit = newValue}
  }

  var messageExtension: Int32 {
    get {return _storage._messageExtension}
    set {_uniqueStorage()._messageExtension = newValue}
  }

  var messageImplementationBase: Int32 {
    get {return _storage._messageImplementationBase}
    set {_uniqueStorage()._messageImplementationBase = newValue}
  }

  var messageOptions: Int32 {
    get {return _storage._messageOptions}
    set {_uniqueStorage()._messageOptions = newValue}
  }

  var messageSet: Int32 {
    get {return _storage._messageSet}
    set {_uniqueStorage()._messageSet = newValue}
  }

  var messageSetWireFormat: Int32 {
    get {return _storage._messageSetWireFormat}
    set {_uniqueStorage()._messageSetWireFormat = newValue}
  }

  var messageType: Int32 {
    get {return _storage._messageType}
    set {_uniqueStorage()._messageType = newValue}
  }

  var method: Int32 {
    get {return _storage._method}
    set {_uniqueStorage()._method = newValue}
  }

  var methodDescriptorProto: Int32 {
    get {return _storage._methodDescriptorProto}
    set {_uniqueStorage()._methodDescriptorProto = newValue}
  }

  var methodOptions: Int32 {
    get {return _storage._methodOptions}
    set {_uniqueStorage()._methodOptions = newValue}
  }

  var methods: Int32 {
    get {return _storage._methods}
    set {_uniqueStorage()._methods = newValue}
  }

  var minor: Int32 {
    get {return _storage._minor}
    set {_uniqueStorage()._minor = newValue}
  }

  var mixin: Int32 {
    get {return _storage._mixin}
    set {_uniqueStorage()._mixin = newValue}
  }

  var mixins: Int32 {
    get {return _storage._mixins}
    set {_uniqueStorage()._mixins = newValue}
  }

  var month: Int32 {
    get {return _storage._month}
    set {_uniqueStorage()._month = newValue}
  }

  var msgExtension: Int32 {
    get {return _storage._msgExtension}
    set {_uniqueStorage()._msgExtension = newValue}
  }

  var mutating: Int32 {
    get {return _storage._mutating}
    set {_uniqueStorage()._mutating = newValue}
  }

  var n: Int32 {
    get {return _storage._n}
    set {_uniqueStorage()._n = newValue}
  }

  var name: Int32 {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  var nameDescription: Int32 {
    get {return _storage._nameDescription}
    set {_uniqueStorage()._nameDescription = newValue}
  }

  var nameMap: Int32 {
    get {return _storage._nameMap}
    set {_uniqueStorage()._nameMap = newValue}
  }

  var namePart: Int32 {
    get {return _storage._namePart}
    set {_uniqueStorage()._namePart = newValue}
  }

  var nameResolver: Int32 {
    get {return _storage._nameResolver}
    set {_uniqueStorage()._nameResolver = newValue}
  }

  var names: Int32 {
    get {return _storage._names}
    set {_uniqueStorage()._names = newValue}
  }

  var nanos: Int32 {
    get {return _storage._nanos}
    set {_uniqueStorage()._nanos = newValue}
  }

  var nativeBytes: Int32 {
    get {return _storage._nativeBytes}
    set {_uniqueStorage()._nativeBytes = newValue}
  }

  var nativeEndianBytes: Int32 {
    get {return _storage._nativeEndianBytes}
    set {_uniqueStorage()._nativeEndianBytes = newValue}
  }

  var negativeIntValue: Int32 {
    get {return _storage._negativeIntValue}
    set {_uniqueStorage()._negativeIntValue = newValue}
  }

  var nestedType: Int32 {
    get {return _storage._nestedType}
    set {_uniqueStorage()._nestedType = newValue}
  }

  var newL: Int32 {
    get {return _storage._newL}
    set {_uniqueStorage()._newL = newValue}
  }

  var newList: Int32 {
    get {return _storage._newList}
    set {_uniqueStorage()._newList = newValue}
  }

  var newValue: Int32 {
    get {return _storage._newValue}
    set {_uniqueStorage()._newValue = newValue}
  }

  var nextByte: Int32 {
    get {return _storage._nextByte}
    set {_uniqueStorage()._nextByte = newValue}
  }

  var nextFieldNumber: Int32 {
    get {return _storage._nextFieldNumber}
    set {_uniqueStorage()._nextFieldNumber = newValue}
  }

  var `nil`: Int32 {
    get {return _storage._nil}
    set {_uniqueStorage()._nil = newValue}
  }

  var nilLiteral: Int32 {
    get {return _storage._nilLiteral}
    set {_uniqueStorage()._nilLiteral = newValue}
  }

  var noStandardDescriptorAccessor: Int32 {
    get {return _storage._noStandardDescriptorAccessor}
    set {_uniqueStorage()._noStandardDescriptorAccessor = newValue}
  }

  var nullValue: Int32 {
    get {return _storage._nullValue}
    set {_uniqueStorage()._nullValue = newValue}
  }

  var number: Int32 {
    get {return _storage._number}
    set {_uniqueStorage()._number = newValue}
  }

  var numberValue: Int32 {
    get {return _storage._numberValue}
    set {_uniqueStorage()._numberValue = newValue}
  }

  var objcClassPrefix: Int32 {
    get {return _storage._objcClassPrefix}
    set {_uniqueStorage()._objcClassPrefix = newValue}
  }

  var of: Int32 {
    get {return _storage._of}
    set {_uniqueStorage()._of = newValue}
  }

  var oneofDecl: Int32 {
    get {return _storage._oneofDecl}
    set {_uniqueStorage()._oneofDecl = newValue}
  }

  var oneofDescriptorProto: Int32 {
    get {return _storage._oneofDescriptorProto}
    set {_uniqueStorage()._oneofDescriptorProto = newValue}
  }

  var oneofIndex: Int32 {
    get {return _storage._oneofIndex}
    set {_uniqueStorage()._oneofIndex = newValue}
  }

  var oneofOptions: Int32 {
    get {return _storage._oneofOptions}
    set {_uniqueStorage()._oneofOptions = newValue}
  }

  var oneofs: Int32 {
    get {return _storage._oneofs}
    set {_uniqueStorage()._oneofs = newValue}
  }

  var oneOfKind: Int32 {
    get {return _storage._oneOfKind}
    set {_uniqueStorage()._oneOfKind = newValue}
  }

  var optimizeFor: Int32 {
    get {return _storage._optimizeFor}
    set {_uniqueStorage()._optimizeFor = newValue}
  }

  var optimizeMode: Int32 {
    get {return _storage._optimizeMode}
    set {_uniqueStorage()._optimizeMode = newValue}
  }

  var option: Int32 {
    get {return _storage._option}
    set {_uniqueStorage()._option = newValue}
  }

  var optionalEnumExtensionField: Int32 {
    get {return _storage._optionalEnumExtensionField}
    set {_uniqueStorage()._optionalEnumExtensionField = newValue}
  }

  var optionalExtensionField: Int32 {
    get {return _storage._optionalExtensionField}
    set {_uniqueStorage()._optionalExtensionField = newValue}
  }

  var optionalGroupExtensionField: Int32 {
    get {return _storage._optionalGroupExtensionField}
    set {_uniqueStorage()._optionalGroupExtensionField = newValue}
  }

  var optionalMessageExtensionField: Int32 {
    get {return _storage._optionalMessageExtensionField}
    set {_uniqueStorage()._optionalMessageExtensionField = newValue}
  }

  var options: Int32 {
    get {return _storage._options}
    set {_uniqueStorage()._options = newValue}
  }

  var other: Int32 {
    get {return _storage._other}
    set {_uniqueStorage()._other = newValue}
  }

  var others: Int32 {
    get {return _storage._others}
    set {_uniqueStorage()._others = newValue}
  }

  var out: Int32 {
    get {return _storage._out}
    set {_uniqueStorage()._out = newValue}
  }

  var outputType: Int32 {
    get {return _storage._outputType}
    set {_uniqueStorage()._outputType = newValue}
  }

  var p: Int32 {
    get {return _storage._p}
    set {_uniqueStorage()._p = newValue}
  }

  var package: Int32 {
    get {return _storage._package}
    set {_uniqueStorage()._package = newValue}
  }

  var packed: Int32 {
    get {return _storage._packed}
    set {_uniqueStorage()._packed = newValue}
  }

  var packedEnumExtensionField: Int32 {
    get {return _storage._packedEnumExtensionField}
    set {_uniqueStorage()._packedEnumExtensionField = newValue}
  }

  var packedExtensionField: Int32 {
    get {return _storage._packedExtensionField}
    set {_uniqueStorage()._packedExtensionField = newValue}
  }

  var packedSize: Int32 {
    get {return _storage._packedSize}
    set {_uniqueStorage()._packedSize = newValue}
  }

  var padding: Int32 {
    get {return _storage._padding}
    set {_uniqueStorage()._padding = newValue}
  }

  var parent: Int32 {
    get {return _storage._parent}
    set {_uniqueStorage()._parent = newValue}
  }

  var parse: Int32 {
    get {return _storage._parse}
    set {_uniqueStorage()._parse = newValue}
  }

  var partial: Int32 {
    get {return _storage._partial}
    set {_uniqueStorage()._partial = newValue}
  }

  var path: Int32 {
    get {return _storage._path}
    set {_uniqueStorage()._path = newValue}
  }

  var paths: Int32 {
    get {return _storage._paths}
    set {_uniqueStorage()._paths = newValue}
  }

  var payload: Int32 {
    get {return _storage._payload}
    set {_uniqueStorage()._payload = newValue}
  }

  var payloadSize: Int32 {
    get {return _storage._payloadSize}
    set {_uniqueStorage()._payloadSize = newValue}
  }

  var phpClassPrefix: Int32 {
    get {return _storage._phpClassPrefix}
    set {_uniqueStorage()._phpClassPrefix = newValue}
  }

  var phpGenericServices: Int32 {
    get {return _storage._phpGenericServices}
    set {_uniqueStorage()._phpGenericServices = newValue}
  }

  var phpMetadataNamespace: Int32 {
    get {return _storage._phpMetadataNamespace}
    set {_uniqueStorage()._phpMetadataNamespace = newValue}
  }

  var phpNamespace: Int32 {
    get {return _storage._phpNamespace}
    set {_uniqueStorage()._phpNamespace = newValue}
  }

  var pointer: Int32 {
    get {return _storage._pointer}
    set {_uniqueStorage()._pointer = newValue}
  }

  var pos: Int32 {
    get {return _storage._pos}
    set {_uniqueStorage()._pos = newValue}
  }

  var positiveIntValue: Int32 {
    get {return _storage._positiveIntValue}
    set {_uniqueStorage()._positiveIntValue = newValue}
  }

  var prefix: Int32 {
    get {return _storage._prefix}
    set {_uniqueStorage()._prefix = newValue}
  }

  var preserveProtoFieldNames: Int32 {
    get {return _storage._preserveProtoFieldNames}
    set {_uniqueStorage()._preserveProtoFieldNames = newValue}
  }

  var preTraverse: Int32 {
    get {return _storage._preTraverse}
    set {_uniqueStorage()._preTraverse = newValue}
  }

  var printUnknownFields: Int32 {
    get {return _storage._printUnknownFields}
    set {_uniqueStorage()._printUnknownFields = newValue}
  }

  var proto2: Int32 {
    get {return _storage._proto2}
    set {_uniqueStorage()._proto2 = newValue}
  }

  var proto3DefaultValue: Int32 {
    get {return _storage._proto3DefaultValue}
    set {_uniqueStorage()._proto3DefaultValue = newValue}
  }

  var protobufApiversionCheck: Int32 {
    get {return _storage._protobufApiversionCheck}
    set {_uniqueStorage()._protobufApiversionCheck = newValue}
  }

  var protobufApiversion2: Int32 {
    get {return _storage._protobufApiversion2}
    set {_uniqueStorage()._protobufApiversion2 = newValue}
  }

  var protobufBool: Int32 {
    get {return _storage._protobufBool}
    set {_uniqueStorage()._protobufBool = newValue}
  }

  var protobufBytes: Int32 {
    get {return _storage._protobufBytes}
    set {_uniqueStorage()._protobufBytes = newValue}
  }

  var protobufDouble: Int32 {
    get {return _storage._protobufDouble}
    set {_uniqueStorage()._protobufDouble = newValue}
  }

  var protobufEnumMap: Int32 {
    get {return _storage._protobufEnumMap}
    set {_uniqueStorage()._protobufEnumMap = newValue}
  }

  var protobufExtension: Int32 {
    get {return _storage._protobufExtension}
    set {_uniqueStorage()._protobufExtension = newValue}
  }

  var protobufFixed32: Int32 {
    get {return _storage._protobufFixed32}
    set {_uniqueStorage()._protobufFixed32 = newValue}
  }

  var protobufFixed64: Int32 {
    get {return _storage._protobufFixed64}
    set {_uniqueStorage()._protobufFixed64 = newValue}
  }

  var protobufFloat: Int32 {
    get {return _storage._protobufFloat}
    set {_uniqueStorage()._protobufFloat = newValue}
  }

  var protobufInt32: Int32 {
    get {return _storage._protobufInt32}
    set {_uniqueStorage()._protobufInt32 = newValue}
  }

  var protobufInt64: Int32 {
    get {return _storage._protobufInt64}
    set {_uniqueStorage()._protobufInt64 = newValue}
  }

  var protobufMap: Int32 {
    get {return _storage._protobufMap}
    set {_uniqueStorage()._protobufMap = newValue}
  }

  var protobufMessageMap: Int32 {
    get {return _storage._protobufMessageMap}
    set {_uniqueStorage()._protobufMessageMap = newValue}
  }

  var protobufSfixed32: Int32 {
    get {return _storage._protobufSfixed32}
    set {_uniqueStorage()._protobufSfixed32 = newValue}
  }

  var protobufSfixed64: Int32 {
    get {return _storage._protobufSfixed64}
    set {_uniqueStorage()._protobufSfixed64 = newValue}
  }

  var protobufSint32: Int32 {
    get {return _storage._protobufSint32}
    set {_uniqueStorage()._protobufSint32 = newValue}
  }

  var protobufSint64: Int32 {
    get {return _storage._protobufSint64}
    set {_uniqueStorage()._protobufSint64 = newValue}
  }

  var protobufString: Int32 {
    get {return _storage._protobufString}
    set {_uniqueStorage()._protobufString = newValue}
  }

  var protobufUint32: Int32 {
    get {return _storage._protobufUint32}
    set {_uniqueStorage()._protobufUint32 = newValue}
  }

  var protobufUint64: Int32 {
    get {return _storage._protobufUint64}
    set {_uniqueStorage()._protobufUint64 = newValue}
  }

  var protobufExtensionFieldValues: Int32 {
    get {return _storage._protobufExtensionFieldValues}
    set {_uniqueStorage()._protobufExtensionFieldValues = newValue}
  }

  var protobufFieldNumber: Int32 {
    get {return _storage._protobufFieldNumber}
    set {_uniqueStorage()._protobufFieldNumber = newValue}
  }

  var protobufGeneratedIsEqualTo: Int32 {
    get {return _storage._protobufGeneratedIsEqualTo}
    set {_uniqueStorage()._protobufGeneratedIsEqualTo = newValue}
  }

  var protobufNameMap: Int32 {
    get {return _storage._protobufNameMap}
    set {_uniqueStorage()._protobufNameMap = newValue}
  }

  var protobufNewField: Int32 {
    get {return _storage._protobufNewField}
    set {_uniqueStorage()._protobufNewField = newValue}
  }

  var protobufPackage: Int32 {
    get {return _storage._protobufPackage}
    set {_uniqueStorage()._protobufPackage = newValue}
  }

  var `protocol`: Int32 {
    get {return _storage._protocol}
    set {_uniqueStorage()._protocol = newValue}
  }

  var protoFieldName: Int32 {
    get {return _storage._protoFieldName}
    set {_uniqueStorage()._protoFieldName = newValue}
  }

  var protoMessageName: Int32 {
    get {return _storage._protoMessageName}
    set {_uniqueStorage()._protoMessageName = newValue}
  }

  var protoNameProviding: Int32 {
    get {return _storage._protoNameProviding}
    set {_uniqueStorage()._protoNameProviding = newValue}
  }

  var protoPaths: Int32 {
    get {return _storage._protoPaths}
    set {_uniqueStorage()._protoPaths = newValue}
  }

  var `public`: Int32 {
    get {return _storage._public}
    set {_uniqueStorage()._public = newValue}
  }

  var publicDependency: Int32 {
    get {return _storage._publicDependency}
    set {_uniqueStorage()._publicDependency = newValue}
  }

  var putBoolValue: Int32 {
    get {return _storage._putBoolValue}
    set {_uniqueStorage()._putBoolValue = newValue}
  }

  var putBytesValue: Int32 {
    get {return _storage._putBytesValue}
    set {_uniqueStorage()._putBytesValue = newValue}
  }

  var putDoubleValue: Int32 {
    get {return _storage._putDoubleValue}
    set {_uniqueStorage()._putDoubleValue = newValue}
  }

  var putEnumValue: Int32 {
    get {return _storage._putEnumValue}
    set {_uniqueStorage()._putEnumValue = newValue}
  }

  var putFixedUint32: Int32 {
    get {return _storage._putFixedUint32}
    set {_uniqueStorage()._putFixedUint32 = newValue}
  }

  var putFixedUint64: Int32 {
    get {return _storage._putFixedUint64}
    set {_uniqueStorage()._putFixedUint64 = newValue}
  }

  var putFloatValue: Int32 {
    get {return _storage._putFloatValue}
    set {_uniqueStorage()._putFloatValue = newValue}
  }

  var putInt64: Int32 {
    get {return _storage._putInt64}
    set {_uniqueStorage()._putInt64 = newValue}
  }

  var putStringValue: Int32 {
    get {return _storage._putStringValue}
    set {_uniqueStorage()._putStringValue = newValue}
  }

  var putUint64: Int32 {
    get {return _storage._putUint64}
    set {_uniqueStorage()._putUint64 = newValue}
  }

  var putUint64Hex: Int32 {
    get {return _storage._putUint64Hex}
    set {_uniqueStorage()._putUint64Hex = newValue}
  }

  var putVarInt: Int32 {
    get {return _storage._putVarInt}
    set {_uniqueStorage()._putVarInt = newValue}
  }

  var putZigZagVarInt: Int32 {
    get {return _storage._putZigZagVarInt}
    set {_uniqueStorage()._putZigZagVarInt = newValue}
  }

  var pyGenericServices: Int32 {
    get {return _storage._pyGenericServices}
    set {_uniqueStorage()._pyGenericServices = newValue}
  }

  var rawChars: Int32 {
    get {return _storage._rawChars}
    set {_uniqueStorage()._rawChars = newValue}
  }

  var rawRepresentable: Int32 {
    get {return _storage._rawRepresentable}
    set {_uniqueStorage()._rawRepresentable = newValue}
  }

  var rawValue: Int32 {
    get {return _storage._rawValue}
    set {_uniqueStorage()._rawValue = newValue}
  }

  var readBuffer: Int32 {
    get {return _storage._readBuffer}
    set {_uniqueStorage()._readBuffer = newValue}
  }

  var register: Int32 {
    get {return _storage._register}
    set {_uniqueStorage()._register = newValue}
  }

  var repeatedEnumExtensionField: Int32 {
    get {return _storage._repeatedEnumExtensionField}
    set {_uniqueStorage()._repeatedEnumExtensionField = newValue}
  }

  var repeatedExtensionField: Int32 {
    get {return _storage._repeatedExtensionField}
    set {_uniqueStorage()._repeatedExtensionField = newValue}
  }

  var repeatedGroupExtensionField: Int32 {
    get {return _storage._repeatedGroupExtensionField}
    set {_uniqueStorage()._repeatedGroupExtensionField = newValue}
  }

  var repeatedMessageExtensionField: Int32 {
    get {return _storage._repeatedMessageExtensionField}
    set {_uniqueStorage()._repeatedMessageExtensionField = newValue}
  }

  var requestStreaming: Int32 {
    get {return _storage._requestStreaming}
    set {_uniqueStorage()._requestStreaming = newValue}
  }

  var requestTypeURL: Int32 {
    get {return _storage._requestTypeURL}
    set {_uniqueStorage()._requestTypeURL = newValue}
  }

  var requiredSize: Int32 {
    get {return _storage._requiredSize}
    set {_uniqueStorage()._requiredSize = newValue}
  }

  var reservedName: Int32 {
    get {return _storage._reservedName}
    set {_uniqueStorage()._reservedName = newValue}
  }

  var reservedRange: Int32 {
    get {return _storage._reservedRange}
    set {_uniqueStorage()._reservedRange = newValue}
  }

  var responseStreaming: Int32 {
    get {return _storage._responseStreaming}
    set {_uniqueStorage()._responseStreaming = newValue}
  }

  var responseTypeURL: Int32 {
    get {return _storage._responseTypeURL}
    set {_uniqueStorage()._responseTypeURL = newValue}
  }

  var result: Int32 {
    get {return _storage._result}
    set {_uniqueStorage()._result = newValue}
  }

  var `rethrows`: Int32 {
    get {return _storage._rethrows}
    set {_uniqueStorage()._rethrows = newValue}
  }

  var `return`: Int32 {
    get {return _storage._return}
    set {_uniqueStorage()._return = newValue}
  }

  var revision: Int32 {
    get {return _storage._revision}
    set {_uniqueStorage()._revision = newValue}
  }

  var rhs: Int32 {
    get {return _storage._rhs}
    set {_uniqueStorage()._rhs = newValue}
  }

  var root: Int32 {
    get {return _storage._root}
    set {_uniqueStorage()._root = newValue}
  }

  var rubyPackage: Int32 {
    get {return _storage._rubyPackage}
    set {_uniqueStorage()._rubyPackage = newValue}
  }

  var s: Int32 {
    get {return _storage._s}
    set {_uniqueStorage()._s = newValue}
  }

  var sawBackslash: Int32 {
    get {return _storage._sawBackslash}
    set {_uniqueStorage()._sawBackslash = newValue}
  }

  var sawSection4Characters: Int32 {
    get {return _storage._sawSection4Characters}
    set {_uniqueStorage()._sawSection4Characters = newValue}
  }

  var sawSection5Characters: Int32 {
    get {return _storage._sawSection5Characters}
    set {_uniqueStorage()._sawSection5Characters = newValue}
  }

  var scanner: Int32 {
    get {return _storage._scanner}
    set {_uniqueStorage()._scanner = newValue}
  }

  var seconds: Int32 {
    get {return _storage._seconds}
    set {_uniqueStorage()._seconds = newValue}
  }

  var self_p: Int32 {
    get {return _storage._self_p}
    set {_uniqueStorage()._self_p = newValue}
  }

  var separator: Int32 {
    get {return _storage._separator}
    set {_uniqueStorage()._separator = newValue}
  }

  var serialize: Int32 {
    get {return _storage._serialize}
    set {_uniqueStorage()._serialize = newValue}
  }

  var serializedData: Int32 {
    get {return _storage._serializedData}
    set {_uniqueStorage()._serializedData = newValue}
  }

  var serializedSize: Int32 {
    get {return _storage._serializedSize}
    set {_uniqueStorage()._serializedSize = newValue}
  }

  var serverStreaming: Int32 {
    get {return _storage._serverStreaming}
    set {_uniqueStorage()._serverStreaming = newValue}
  }

  var service: Int32 {
    get {return _storage._service}
    set {_uniqueStorage()._service = newValue}
  }

  var serviceDescriptorProto: Int32 {
    get {return _storage._serviceDescriptorProto}
    set {_uniqueStorage()._serviceDescriptorProto = newValue}
  }

  var serviceOptions: Int32 {
    get {return _storage._serviceOptions}
    set {_uniqueStorage()._serviceOptions = newValue}
  }

  var set: Int32 {
    get {return _storage._set}
    set {_uniqueStorage()._set = newValue}
  }

  var setExtensionValue: Int32 {
    get {return _storage._setExtensionValue}
    set {_uniqueStorage()._setExtensionValue = newValue}
  }

  var shift: Int32 {
    get {return _storage._shift}
    set {_uniqueStorage()._shift = newValue}
  }

  var simpleExtensionMap: Int32 {
    get {return _storage._simpleExtensionMap}
    set {_uniqueStorage()._simpleExtensionMap = newValue}
  }

  var sizer: Int32 {
    get {return _storage._sizer}
    set {_uniqueStorage()._sizer = newValue}
  }

  var source: Int32 {
    get {return _storage._source}
    set {_uniqueStorage()._source = newValue}
  }

  var sourceCodeInfo: Int32 {
    get {return _storage._sourceCodeInfo}
    set {_uniqueStorage()._sourceCodeInfo = newValue}
  }

  var sourceContext: Int32 {
    get {return _storage._sourceContext}
    set {_uniqueStorage()._sourceContext = newValue}
  }

  var sourceEncoding: Int32 {
    get {return _storage._sourceEncoding}
    set {_uniqueStorage()._sourceEncoding = newValue}
  }

  var sourceFile: Int32 {
    get {return _storage._sourceFile}
    set {_uniqueStorage()._sourceFile = newValue}
  }

  var span: Int32 {
    get {return _storage._span}
    set {_uniqueStorage()._span = newValue}
  }

  var split: Int32 {
    get {return _storage._split}
    set {_uniqueStorage()._split = newValue}
  }

  var start: Int32 {
    get {return _storage._start}
    set {_uniqueStorage()._start = newValue}
  }

  var startArray: Int32 {
    get {return _storage._startArray}
    set {_uniqueStorage()._startArray = newValue}
  }

  var startField: Int32 {
    get {return _storage._startField}
    set {_uniqueStorage()._startField = newValue}
  }

  var startIndex: Int32 {
    get {return _storage._startIndex}
    set {_uniqueStorage()._startIndex = newValue}
  }

  var startMessageField: Int32 {
    get {return _storage._startMessageField}
    set {_uniqueStorage()._startMessageField = newValue}
  }

  var startObject: Int32 {
    get {return _storage._startObject}
    set {_uniqueStorage()._startObject = newValue}
  }

  var startRegularField: Int32 {
    get {return _storage._startRegularField}
    set {_uniqueStorage()._startRegularField = newValue}
  }

  var state: Int32 {
    get {return _storage._state}
    set {_uniqueStorage()._state = newValue}
  }

  var `static`: Int32 {
    get {return _storage._static}
    set {_uniqueStorage()._static = newValue}
  }

  var staticString: Int32 {
    get {return _storage._staticString}
    set {_uniqueStorage()._staticString = newValue}
  }

  var storage: Int32 {
    get {return _storage._storage}
    set {_uniqueStorage()._storage = newValue}
  }

  var string: Int32 {
    get {return _storage._string}
    set {_uniqueStorage()._string = newValue}
  }

  var stringLiteral: Int32 {
    get {return _storage._stringLiteral}
    set {_uniqueStorage()._stringLiteral = newValue}
  }

  var stringLiteralType: Int32 {
    get {return _storage._stringLiteralType}
    set {_uniqueStorage()._stringLiteralType = newValue}
  }

  var stringResult: Int32 {
    get {return _storage._stringResult}
    set {_uniqueStorage()._stringResult = newValue}
  }

  var stringValue: Int32 {
    get {return _storage._stringValue}
    set {_uniqueStorage()._stringValue = newValue}
  }

  var `struct`: Int32 {
    get {return _storage._struct}
    set {_uniqueStorage()._struct = newValue}
  }

  var structValue: Int32 {
    get {return _storage._structValue}
    set {_uniqueStorage()._structValue = newValue}
  }

  var subDecoder: Int32 {
    get {return _storage._subDecoder}
    set {_uniqueStorage()._subDecoder = newValue}
  }

  var `subscript`: Int32 {
    get {return _storage._subscript}
    set {_uniqueStorage()._subscript = newValue}
  }

  var subVisitor: Int32 {
    get {return _storage._subVisitor}
    set {_uniqueStorage()._subVisitor = newValue}
  }

  var swift: Int32 {
    get {return _storage._swift}
    set {_uniqueStorage()._swift = newValue}
  }

  var swiftPrefix: Int32 {
    get {return _storage._swiftPrefix}
    set {_uniqueStorage()._swiftPrefix = newValue}
  }

  var swiftProtobuf: Int32 {
    get {return _storage._swiftProtobuf}
    set {_uniqueStorage()._swiftProtobuf = newValue}
  }

  var syntax: Int32 {
    get {return _storage._syntax}
    set {_uniqueStorage()._syntax = newValue}
  }

  var t: Int32 {
    get {return _storage._t}
    set {_uniqueStorage()._t = newValue}
  }

  var tag: Int32 {
    get {return _storage._tag}
    set {_uniqueStorage()._tag = newValue}
  }

  var terminator: Int32 {
    get {return _storage._terminator}
    set {_uniqueStorage()._terminator = newValue}
  }

  var testDecoder: Int32 {
    get {return _storage._testDecoder}
    set {_uniqueStorage()._testDecoder = newValue}
  }

  var text: Int32 {
    get {return _storage._text}
    set {_uniqueStorage()._text = newValue}
  }

  var textDecoder: Int32 {
    get {return _storage._textDecoder}
    set {_uniqueStorage()._textDecoder = newValue}
  }

  var textFormatDecoder: Int32 {
    get {return _storage._textFormatDecoder}
    set {_uniqueStorage()._textFormatDecoder = newValue}
  }

  var textFormatDecodingError: Int32 {
    get {return _storage._textFormatDecodingError}
    set {_uniqueStorage()._textFormatDecodingError = newValue}
  }

  var textFormatEncodingOptions: Int32 {
    get {return _storage._textFormatEncodingOptions}
    set {_uniqueStorage()._textFormatEncodingOptions = newValue}
  }

  var textFormatEncodingVisitor: Int32 {
    get {return _storage._textFormatEncodingVisitor}
    set {_uniqueStorage()._textFormatEncodingVisitor = newValue}
  }

  var textFormatString: Int32 {
    get {return _storage._textFormatString}
    set {_uniqueStorage()._textFormatString = newValue}
  }

  var `throws`: Int32 {
    get {return _storage._throws}
    set {_uniqueStorage()._throws = newValue}
  }

  var timeInterval: Int32 {
    get {return _storage._timeInterval}
    set {_uniqueStorage()._timeInterval = newValue}
  }

  var timeIntervalSince1970: Int32 {
    get {return _storage._timeIntervalSince1970}
    set {_uniqueStorage()._timeIntervalSince1970 = newValue}
  }

  var timeIntervalSinceReferenceDate: Int32 {
    get {return _storage._timeIntervalSinceReferenceDate}
    set {_uniqueStorage()._timeIntervalSinceReferenceDate = newValue}
  }

  var timestamp: Int32 {
    get {return _storage._timestamp}
    set {_uniqueStorage()._timestamp = newValue}
  }

  var total: Int32 {
    get {return _storage._total}
    set {_uniqueStorage()._total = newValue}
  }

  var totalSize: Int32 {
    get {return _storage._totalSize}
    set {_uniqueStorage()._totalSize = newValue}
  }

  var trailingComments: Int32 {
    get {return _storage._trailingComments}
    set {_uniqueStorage()._trailingComments = newValue}
  }

  var traverse: Int32 {
    get {return _storage._traverse}
    set {_uniqueStorage()._traverse = newValue}
  }

  var `true`: Int32 {
    get {return _storage._true}
    set {_uniqueStorage()._true = newValue}
  }

  var `try`: Int32 {
    get {return _storage._try}
    set {_uniqueStorage()._try = newValue}
  }

  var type: Int32 {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  var `typealias`: Int32 {
    get {return _storage._typealias}
    set {_uniqueStorage()._typealias = newValue}
  }

  var typeEnum: Int32 {
    get {return _storage._typeEnum}
    set {_uniqueStorage()._typeEnum = newValue}
  }

  var typeName: Int32 {
    get {return _storage._typeName}
    set {_uniqueStorage()._typeName = newValue}
  }

  var typePrefix: Int32 {
    get {return _storage._typePrefix}
    set {_uniqueStorage()._typePrefix = newValue}
  }

  var typeStart: Int32 {
    get {return _storage._typeStart}
    set {_uniqueStorage()._typeStart = newValue}
  }

  var typeUnknown: Int32 {
    get {return _storage._typeUnknown}
    set {_uniqueStorage()._typeUnknown = newValue}
  }

  var typeURL: Int32 {
    get {return _storage._typeURL}
    set {_uniqueStorage()._typeURL = newValue}
  }

  var uint32: Int32 {
    get {return _storage._uint32}
    set {_uniqueStorage()._uint32 = newValue}
  }

  var uint32Value: Int32 {
    get {return _storage._uint32Value}
    set {_uniqueStorage()._uint32Value = newValue}
  }

  var uint64: Int32 {
    get {return _storage._uint64}
    set {_uniqueStorage()._uint64 = newValue}
  }

  var uint64Value: Int32 {
    get {return _storage._uint64Value}
    set {_uniqueStorage()._uint64Value = newValue}
  }

  var uint8: Int32 {
    get {return _storage._uint8}
    set {_uniqueStorage()._uint8 = newValue}
  }

  var unicodeScalarLiteral: Int32 {
    get {return _storage._unicodeScalarLiteral}
    set {_uniqueStorage()._unicodeScalarLiteral = newValue}
  }

  var unicodeScalarLiteralType: Int32 {
    get {return _storage._unicodeScalarLiteralType}
    set {_uniqueStorage()._unicodeScalarLiteralType = newValue}
  }

  var unicodeScalars: Int32 {
    get {return _storage._unicodeScalars}
    set {_uniqueStorage()._unicodeScalars = newValue}
  }

  var unicodeScalarView: Int32 {
    get {return _storage._unicodeScalarView}
    set {_uniqueStorage()._unicodeScalarView = newValue}
  }

  var uninterpretedOption: Int32 {
    get {return _storage._uninterpretedOption}
    set {_uniqueStorage()._uninterpretedOption = newValue}
  }

  var union: Int32 {
    get {return _storage._union}
    set {_uniqueStorage()._union = newValue}
  }

  var uniqueStorage: Int32 {
    get {return _storage._uniqueStorage}
    set {_uniqueStorage()._uniqueStorage = newValue}
  }

  var unknown: Int32 {
    get {return _storage._unknown}
    set {_uniqueStorage()._unknown = newValue}
  }

  var unknownFields_p: Int32 {
    get {return _storage._unknownFields_p}
    set {_uniqueStorage()._unknownFields_p = newValue}
  }

  var unknownStorage: Int32 {
    get {return _storage._unknownStorage}
    set {_uniqueStorage()._unknownStorage = newValue}
  }

  var unpackTo: Int32 {
    get {return _storage._unpackTo}
    set {_uniqueStorage()._unpackTo = newValue}
  }

  var unsafeMutablePointer: Int32 {
    get {return _storage._unsafeMutablePointer}
    set {_uniqueStorage()._unsafeMutablePointer = newValue}
  }

  var unsafeMutableRawBufferPointer: Int32 {
    get {return _storage._unsafeMutableRawBufferPointer}
    set {_uniqueStorage()._unsafeMutableRawBufferPointer = newValue}
  }

  var unsafeMutableRawPointer: Int32 {
    get {return _storage._unsafeMutableRawPointer}
    set {_uniqueStorage()._unsafeMutableRawPointer = newValue}
  }

  var unsafeRawBufferPointer: Int32 {
    get {return _storage._unsafeRawBufferPointer}
    set {_uniqueStorage()._unsafeRawBufferPointer = newValue}
  }

  var unsafeRawPointer: Int32 {
    get {return _storage._unsafeRawPointer}
    set {_uniqueStorage()._unsafeRawPointer = newValue}
  }

  var updatedOptions: Int32 {
    get {return _storage._updatedOptions}
    set {_uniqueStorage()._updatedOptions = newValue}
  }

  var url: Int32 {
    get {return _storage._url}
    set {_uniqueStorage()._url = newValue}
  }

  var utf8: Int32 {
    get {return _storage._utf8}
    set {_uniqueStorage()._utf8 = newValue}
  }

  var utf8ToDouble: Int32 {
    get {return _storage._utf8ToDouble}
    set {_uniqueStorage()._utf8ToDouble = newValue}
  }

  var utf8View: Int32 {
    get {return _storage._utf8View}
    set {_uniqueStorage()._utf8View = newValue}
  }

  var v: Int32 {
    get {return _storage._v}
    set {_uniqueStorage()._v = newValue}
  }

  var value: Int32 {
    get {return _storage._value}
    set {_uniqueStorage()._value = newValue}
  }

  var valueField: Int32 {
    get {return _storage._valueField}
    set {_uniqueStorage()._valueField = newValue}
  }

  var values: Int32 {
    get {return _storage._values}
    set {_uniqueStorage()._values = newValue}
  }

  var valueType: Int32 {
    get {return _storage._valueType}
    set {_uniqueStorage()._valueType = newValue}
  }

  var `var`: Int32 {
    get {return _storage._var}
    set {_uniqueStorage()._var = newValue}
  }

  var version: Int32 {
    get {return _storage._version}
    set {_uniqueStorage()._version = newValue}
  }

  var versionString: Int32 {
    get {return _storage._versionString}
    set {_uniqueStorage()._versionString = newValue}
  }

  var visitExtensionFields: Int32 {
    get {return _storage._visitExtensionFields}
    set {_uniqueStorage()._visitExtensionFields = newValue}
  }

  var visitExtensionFieldsAsMessageSet: Int32 {
    get {return _storage._visitExtensionFieldsAsMessageSet}
    set {_uniqueStorage()._visitExtensionFieldsAsMessageSet = newValue}
  }

  var visitMapField: Int32 {
    get {return _storage._visitMapField}
    set {_uniqueStorage()._visitMapField = newValue}
  }

  var visitor: Int32 {
    get {return _storage._visitor}
    set {_uniqueStorage()._visitor = newValue}
  }

  var visitPacked: Int32 {
    get {return _storage._visitPacked}
    set {_uniqueStorage()._visitPacked = newValue}
  }

  var visitPackedBoolField: Int32 {
    get {return _storage._visitPackedBoolField}
    set {_uniqueStorage()._visitPackedBoolField = newValue}
  }

  var visitPackedDoubleField: Int32 {
    get {return _storage._visitPackedDoubleField}
    set {_uniqueStorage()._visitPackedDoubleField = newValue}
  }

  var visitPackedEnumField: Int32 {
    get {return _storage._visitPackedEnumField}
    set {_uniqueStorage()._visitPackedEnumField = newValue}
  }

  var visitPackedFixed32Field: Int32 {
    get {return _storage._visitPackedFixed32Field}
    set {_uniqueStorage()._visitPackedFixed32Field = newValue}
  }

  var visitPackedFixed64Field: Int32 {
    get {return _storage._visitPackedFixed64Field}
    set {_uniqueStorage()._visitPackedFixed64Field = newValue}
  }

  var visitPackedFloatField: Int32 {
    get {return _storage._visitPackedFloatField}
    set {_uniqueStorage()._visitPackedFloatField = newValue}
  }

  var visitPackedInt32Field: Int32 {
    get {return _storage._visitPackedInt32Field}
    set {_uniqueStorage()._visitPackedInt32Field = newValue}
  }

  var visitPackedInt64Field: Int32 {
    get {return _storage._visitPackedInt64Field}
    set {_uniqueStorage()._visitPackedInt64Field = newValue}
  }

  var visitPackedSfixed32Field: Int32 {
    get {return _storage._visitPackedSfixed32Field}
    set {_uniqueStorage()._visitPackedSfixed32Field = newValue}
  }

  var visitPackedSfixed64Field: Int32 {
    get {return _storage._visitPackedSfixed64Field}
    set {_uniqueStorage()._visitPackedSfixed64Field = newValue}
  }

  var visitPackedSint32Field: Int32 {
    get {return _storage._visitPackedSint32Field}
    set {_uniqueStorage()._visitPackedSint32Field = newValue}
  }

  var visitPackedSint64Field: Int32 {
    get {return _storage._visitPackedSint64Field}
    set {_uniqueStorage()._visitPackedSint64Field = newValue}
  }

  var visitPackedUint32Field: Int32 {
    get {return _storage._visitPackedUint32Field}
    set {_uniqueStorage()._visitPackedUint32Field = newValue}
  }

  var visitPackedUint64Field: Int32 {
    get {return _storage._visitPackedUint64Field}
    set {_uniqueStorage()._visitPackedUint64Field = newValue}
  }

  var visitRepeated: Int32 {
    get {return _storage._visitRepeated}
    set {_uniqueStorage()._visitRepeated = newValue}
  }

  var visitRepeatedBoolField: Int32 {
    get {return _storage._visitRepeatedBoolField}
    set {_uniqueStorage()._visitRepeatedBoolField = newValue}
  }

  var visitRepeatedBytesField: Int32 {
    get {return _storage._visitRepeatedBytesField}
    set {_uniqueStorage()._visitRepeatedBytesField = newValue}
  }

  var visitRepeatedDoubleField: Int32 {
    get {return _storage._visitRepeatedDoubleField}
    set {_uniqueStorage()._visitRepeatedDoubleField = newValue}
  }

  var visitRepeatedEnumField: Int32 {
    get {return _storage._visitRepeatedEnumField}
    set {_uniqueStorage()._visitRepeatedEnumField = newValue}
  }

  var visitRepeatedFixed32Field: Int32 {
    get {return _storage._visitRepeatedFixed32Field}
    set {_uniqueStorage()._visitRepeatedFixed32Field = newValue}
  }

  var visitRepeatedFixed64Field: Int32 {
    get {return _storage._visitRepeatedFixed64Field}
    set {_uniqueStorage()._visitRepeatedFixed64Field = newValue}
  }

  var visitRepeatedFloatField: Int32 {
    get {return _storage._visitRepeatedFloatField}
    set {_uniqueStorage()._visitRepeatedFloatField = newValue}
  }

  var visitRepeatedGroupField: Int32 {
    get {return _storage._visitRepeatedGroupField}
    set {_uniqueStorage()._visitRepeatedGroupField = newValue}
  }

  var visitRepeatedInt32Field: Int32 {
    get {return _storage._visitRepeatedInt32Field}
    set {_uniqueStorage()._visitRepeatedInt32Field = newValue}
  }

  var visitRepeatedInt64Field: Int32 {
    get {return _storage._visitRepeatedInt64Field}
    set {_uniqueStorage()._visitRepeatedInt64Field = newValue}
  }

  var visitRepeatedMessageField: Int32 {
    get {return _storage._visitRepeatedMessageField}
    set {_uniqueStorage()._visitRepeatedMessageField = newValue}
  }

  var visitRepeatedSfixed32Field: Int32 {
    get {return _storage._visitRepeatedSfixed32Field}
    set {_uniqueStorage()._visitRepeatedSfixed32Field = newValue}
  }

  var visitRepeatedSfixed64Field: Int32 {
    get {return _storage._visitRepeatedSfixed64Field}
    set {_uniqueStorage()._visitRepeatedSfixed64Field = newValue}
  }

  var visitRepeatedSint32Field: Int32 {
    get {return _storage._visitRepeatedSint32Field}
    set {_uniqueStorage()._visitRepeatedSint32Field = newValue}
  }

  var visitRepeatedSint64Field: Int32 {
    get {return _storage._visitRepeatedSint64Field}
    set {_uniqueStorage()._visitRepeatedSint64Field = newValue}
  }

  var visitRepeatedStringField: Int32 {
    get {return _storage._visitRepeatedStringField}
    set {_uniqueStorage()._visitRepeatedStringField = newValue}
  }

  var visitRepeatedUint32Field: Int32 {
    get {return _storage._visitRepeatedUint32Field}
    set {_uniqueStorage()._visitRepeatedUint32Field = newValue}
  }

  var visitRepeatedUint64Field: Int32 {
    get {return _storage._visitRepeatedUint64Field}
    set {_uniqueStorage()._visitRepeatedUint64Field = newValue}
  }

  var visitSingular: Int32 {
    get {return _storage._visitSingular}
    set {_uniqueStorage()._visitSingular = newValue}
  }

  var visitSingularBoolField: Int32 {
    get {return _storage._visitSingularBoolField}
    set {_uniqueStorage()._visitSingularBoolField = newValue}
  }

  var visitSingularBytesField: Int32 {
    get {return _storage._visitSingularBytesField}
    set {_uniqueStorage()._visitSingularBytesField = newValue}
  }

  var visitSingularDoubleField: Int32 {
    get {return _storage._visitSingularDoubleField}
    set {_uniqueStorage()._visitSingularDoubleField = newValue}
  }

  var visitSingularEnumField: Int32 {
    get {return _storage._visitSingularEnumField}
    set {_uniqueStorage()._visitSingularEnumField = newValue}
  }

  var visitSingularFixed32Field: Int32 {
    get {return _storage._visitSingularFixed32Field}
    set {_uniqueStorage()._visitSingularFixed32Field = newValue}
  }

  var visitSingularFixed64Field: Int32 {
    get {return _storage._visitSingularFixed64Field}
    set {_uniqueStorage()._visitSingularFixed64Field = newValue}
  }

  var visitSingularFloatField: Int32 {
    get {return _storage._visitSingularFloatField}
    set {_uniqueStorage()._visitSingularFloatField = newValue}
  }

  var visitSingularGroupField: Int32 {
    get {return _storage._visitSingularGroupField}
    set {_uniqueStorage()._visitSingularGroupField = newValue}
  }

  var visitSingularInt32Field: Int32 {
    get {return _storage._visitSingularInt32Field}
    set {_uniqueStorage()._visitSingularInt32Field = newValue}
  }

  var visitSingularInt64Field: Int32 {
    get {return _storage._visitSingularInt64Field}
    set {_uniqueStorage()._visitSingularInt64Field = newValue}
  }

  var visitSingularMessageField: Int32 {
    get {return _storage._visitSingularMessageField}
    set {_uniqueStorage()._visitSingularMessageField = newValue}
  }

  var visitSingularSfixed32Field: Int32 {
    get {return _storage._visitSingularSfixed32Field}
    set {_uniqueStorage()._visitSingularSfixed32Field = newValue}
  }

  var visitSingularSfixed64Field: Int32 {
    get {return _storage._visitSingularSfixed64Field}
    set {_uniqueStorage()._visitSingularSfixed64Field = newValue}
  }

  var visitSingularSint32Field: Int32 {
    get {return _storage._visitSingularSint32Field}
    set {_uniqueStorage()._visitSingularSint32Field = newValue}
  }

  var visitSingularSint64Field: Int32 {
    get {return _storage._visitSingularSint64Field}
    set {_uniqueStorage()._visitSingularSint64Field = newValue}
  }

  var visitSingularStringField: Int32 {
    get {return _storage._visitSingularStringField}
    set {_uniqueStorage()._visitSingularStringField = newValue}
  }

  var visitSingularUint32Field: Int32 {
    get {return _storage._visitSingularUint32Field}
    set {_uniqueStorage()._visitSingularUint32Field = newValue}
  }

  var visitSingularUint64Field: Int32 {
    get {return _storage._visitSingularUint64Field}
    set {_uniqueStorage()._visitSingularUint64Field = newValue}
  }

  var visitUnknown: Int32 {
    get {return _storage._visitUnknown}
    set {_uniqueStorage()._visitUnknown = newValue}
  }

  var wasDecoded: Int32 {
    get {return _storage._wasDecoded}
    set {_uniqueStorage()._wasDecoded = newValue}
  }

  var weak: Int32 {
    get {return _storage._weak}
    set {_uniqueStorage()._weak = newValue}
  }

  var weakDependency: Int32 {
    get {return _storage._weakDependency}
    set {_uniqueStorage()._weakDependency = newValue}
  }

  var `where`: Int32 {
    get {return _storage._where}
    set {_uniqueStorage()._where = newValue}
  }

  var wireFormat: Int32 {
    get {return _storage._wireFormat}
    set {_uniqueStorage()._wireFormat = newValue}
  }

  var with: Int32 {
    get {return _storage._with}
    set {_uniqueStorage()._with = newValue}
  }

  var withUnsafeBytes: Int32 {
    get {return _storage._withUnsafeBytes}
    set {_uniqueStorage()._withUnsafeBytes = newValue}
  }

  var withUnsafeMutableBytes: Int32 {
    get {return _storage._withUnsafeMutableBytes}
    set {_uniqueStorage()._withUnsafeMutableBytes = newValue}
  }

  var work: Int32 {
    get {return _storage._work}
    set {_uniqueStorage()._work = newValue}
  }

  var wrappedType: Int32 {
    get {return _storage._wrappedType}
    set {_uniqueStorage()._wrappedType = newValue}
  }

  var written: Int32 {
    get {return _storage._written}
    set {_uniqueStorage()._written = newValue}
  }

  var yday: Int32 {
    get {return _storage._yday}
    set {_uniqueStorage()._yday = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "protobuf_unittest_generated"

extension ProtobufUnittestGenerated_GeneratedSwiftReservedFields: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".GeneratedSwiftReservedFields"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "adjusted"),
    2: .same(proto: "aggregateValue"),
    3: .same(proto: "allCases"),
    4: .same(proto: "allocate"),
    5: .same(proto: "allowAlias"),
    6: .same(proto: "alwaysPrintEnumsAsInts"),
    7: .same(proto: "annotation"),
    8: .same(proto: "any"),
    9: .same(proto: "AnyExtensionField"),
    10: .same(proto: "AnyMessageExtension"),
    11: .same(proto: "AnyMessageStorage"),
    12: .same(proto: "AnyUnpackError"),
    13: .same(proto: "Api"),
    14: .same(proto: "appended"),
    15: .same(proto: "appendUIntHex"),
    16: .same(proto: "appendUnknown"),
    17: .same(proto: "areAllInitialized"),
    18: .same(proto: "array"),
    19: .same(proto: "arrayLiteral"),
    20: .same(proto: "arraySeparator"),
    21: .same(proto: "as"),
    22: .same(proto: "asciiOpenCurlyBracket"),
    23: .same(proto: "asciiZero"),
    24: .same(proto: "available"),
    25: .same(proto: "b"),
    26: .same(proto: "base64Values"),
    27: .same(proto: "baseAddress"),
    28: .same(proto: "BaseType"),
    29: .same(proto: "begin"),
    30: .same(proto: "binary"),
    31: .same(proto: "BinaryDecoder"),
    32: .same(proto: "BinaryDecodingError"),
    33: .same(proto: "BinaryDecodingOptions"),
    34: .same(proto: "BinaryDelimited"),
    35: .same(proto: "BinaryEncoder"),
    36: .same(proto: "BinaryEncodingError"),
    37: .same(proto: "BinaryEncodingMessageSetSizeVisitor"),
    38: .same(proto: "BinaryEncodingMessageSetVisitor"),
    39: .same(proto: "BinaryEncodingSizeVisitor"),
    40: .same(proto: "BinaryEncodingVisitor"),
    41: .same(proto: "binaryOptions"),
    42: .same(proto: "body"),
    43: .same(proto: "bodySize"),
    44: .same(proto: "Bool"),
    45: .same(proto: "booleanLiteral"),
    46: .same(proto: "BooleanLiteralType"),
    47: .same(proto: "boolValue"),
    48: .same(proto: "bytes"),
    49: .same(proto: "bytesInGroup"),
    50: .same(proto: "bytesRead"),
    51: .same(proto: "BytesValue"),
    52: .same(proto: "c"),
    53: .same(proto: "capacity"),
    54: .same(proto: "capitalizeNext"),
    55: .same(proto: "cardinality"),
    56: .same(proto: "ccEnableArenas"),
    57: .same(proto: "ccGenericServices"),
    58: .same(proto: "Character"),
    59: .same(proto: "chars"),
    60: .same(proto: "class"),
    61: .same(proto: "clearAggregateValue"),
    62: .same(proto: "clearAllowAlias"),
    63: .same(proto: "clearBegin"),
    64: .same(proto: "clearCcEnableArenas"),
    65: .same(proto: "clearCcGenericServices"),
    66: .same(proto: "clearClientStreaming"),
    67: .same(proto: "clearCsharpNamespace"),
    68: .same(proto: "clearCtype"),
    69: .same(proto: "clearDefaultValue"),
    70: .same(proto: "clearDeprecated"),
    71: .same(proto: "clearDoubleValue"),
    72: .same(proto: "clearEnd"),
    73: .same(proto: "clearExtendee"),
    74: .same(proto: "clearExtensionValue"),
    75: .same(proto: "clearGoPackage"),
    76: .same(proto: "clearIdempotencyLevel"),
    77: .same(proto: "clearIdentifierValue"),
    78: .same(proto: "clearInputType"),
    79: .same(proto: "clearIsExtension"),
    80: .same(proto: "clearJavaGenerateEqualsAndHash"),
    81: .same(proto: "clearJavaGenericServices"),
    82: .same(proto: "clearJavaMultipleFiles"),
    83: .same(proto: "clearJavaOuterClassname"),
    84: .same(proto: "clearJavaPackage"),
    85: .same(proto: "clearJavaStringCheckUtf8"),
    86: .same(proto: "clearJsonName"),
    87: .same(proto: "clearJstype"),
    88: .same(proto: "clearLabel"),
    89: .same(proto: "clearLazy"),
    90: .same(proto: "clearLeadingComments"),
    91: .same(proto: "clearMapEntry"),
    92: .same(proto: "clearMessageSetWireFormat"),
    93: .same(proto: "clearName"),
    94: .same(proto: "clearNamePart"),
    95: .same(proto: "clearNegativeIntValue"),
    96: .same(proto: "clearNoStandardDescriptorAccessor"),
    97: .same(proto: "clearNumber"),
    98: .same(proto: "clearObjcClassPrefix"),
    99: .same(proto: "clearOneofIndex"),
    100: .same(proto: "clearOptimizeFor"),
    101: .same(proto: "clearOptions"),
    102: .same(proto: "clearOutputType"),
    103: .same(proto: "clearPackage"),
    104: .same(proto: "clearPacked"),
    105: .same(proto: "clearPhpClassPrefix"),
    106: .same(proto: "clearPhpGenericServices"),
    107: .same(proto: "clearPhpMetadataNamespace"),
    108: .same(proto: "clearPhpNamespace"),
    109: .same(proto: "clearPositiveIntValue"),
    110: .same(proto: "clearPyGenericServices"),
    111: .same(proto: "clearRubyPackage"),
    112: .same(proto: "clearServerStreaming"),
    113: .same(proto: "clearSourceCodeInfo"),
    114: .same(proto: "clearSourceContext"),
    115: .same(proto: "clearSourceFile"),
    116: .same(proto: "clearStart"),
    117: .same(proto: "clearStringValue"),
    118: .same(proto: "clearSwiftPrefix"),
    119: .same(proto: "clearSyntax"),
    120: .same(proto: "clearTrailingComments"),
    121: .same(proto: "clearType"),
    122: .same(proto: "clearTypeName"),
    123: .same(proto: "clearValue"),
    124: .same(proto: "clearWeak"),
    125: .same(proto: "clientStreaming"),
    126: .same(proto: "codeUnits"),
    127: .same(proto: "Collection"),
    128: .same(proto: "com"),
    129: .same(proto: "comma"),
    130: .same(proto: "contentsOf"),
    131: .same(proto: "ContiguousBytes"),
    132: .same(proto: "count"),
    133: .same(proto: "countVarintsInBuffer"),
    134: .same(proto: "csharpNamespace"),
    135: .same(proto: "ctype"),
    136: .same(proto: "customCodable"),
    137: .same(proto: "CustomDebugStringConvertible"),
    138: .same(proto: "d"),
    139: .same(proto: "Data"),
    140: .same(proto: "dataResult"),
    141: .same(proto: "dataSize"),
    142: .same(proto: "date"),
    143: .same(proto: "daySec"),
    144: .same(proto: "daysSinceEpoch"),
    145: .same(proto: "debugDescription"),
    146: .same(proto: "decoded"),
    147: .same(proto: "decodedFromJSONNull"),
    148: .same(proto: "decodeExtensionField"),
    149: .same(proto: "decodeExtensionFieldsAsMessageSet"),
    150: .same(proto: "decodeJSON"),
    151: .same(proto: "decodeMapField"),
    152: .same(proto: "decodeMessage"),
    153: .same(proto: "decoder"),
    154: .same(proto: "decodeRepeated"),
    155: .same(proto: "decodeRepeatedBoolField"),
    156: .same(proto: "decodeRepeatedBytesField"),
    157: .same(proto: "decodeRepeatedDoubleField"),
    158: .same(proto: "decodeRepeatedEnumField"),
    159: .same(proto: "decodeRepeatedFixed32Field"),
    160: .same(proto: "decodeRepeatedFixed64Field"),
    161: .same(proto: "decodeRepeatedFloatField"),
    162: .same(proto: "decodeRepeatedGroupField"),
    163: .same(proto: "decodeRepeatedInt32Field"),
    164: .same(proto: "decodeRepeatedInt64Field"),
    165: .same(proto: "decodeRepeatedMessageField"),
    166: .same(proto: "decodeRepeatedSFixed32Field"),
    167: .same(proto: "decodeRepeatedSFixed64Field"),
    168: .same(proto: "decodeRepeatedSInt32Field"),
    169: .same(proto: "decodeRepeatedSInt64Field"),
    170: .same(proto: "decodeRepeatedStringField"),
    171: .same(proto: "decodeRepeatedUInt32Field"),
    172: .same(proto: "decodeRepeatedUInt64Field"),
    173: .same(proto: "decodeSingular"),
    174: .same(proto: "decodeSingularBoolField"),
    175: .same(proto: "decodeSingularBytesField"),
    176: .same(proto: "decodeSingularDoubleField"),
    177: .same(proto: "decodeSingularEnumField"),
    178: .same(proto: "decodeSingularFixed32Field"),
    179: .same(proto: "decodeSingularFixed64Field"),
    180: .same(proto: "decodeSingularFloatField"),
    181: .same(proto: "decodeSingularGroupField"),
    182: .same(proto: "decodeSingularInt32Field"),
    183: .same(proto: "decodeSingularInt64Field"),
    184: .same(proto: "decodeSingularMessageField"),
    185: .same(proto: "decodeSingularSFixed32Field"),
    186: .same(proto: "decodeSingularSFixed64Field"),
    187: .same(proto: "decodeSingularSInt32Field"),
    188: .same(proto: "decodeSingularSInt64Field"),
    189: .same(proto: "decodeSingularStringField"),
    190: .same(proto: "decodeSingularUInt32Field"),
    191: .same(proto: "decodeSingularUInt64Field"),
    192: .same(proto: "decodeTextFormat"),
    193: .same(proto: "defaultAnyTypeURLPrefix"),
    194: .same(proto: "defaultValue"),
    195: .same(proto: "dependency"),
    196: .same(proto: "deprecated"),
    197: .same(proto: "description"),
    198: .same(proto: "DescriptorProto"),
    199: .same(proto: "Dictionary"),
    200: .same(proto: "dictionaryLiteral"),
    201: .same(proto: "digit"),
    202: .same(proto: "digit0"),
    203: .same(proto: "digit1"),
    204: .same(proto: "digitCount"),
    205: .same(proto: "digits"),
    206: .same(proto: "digitValue"),
    207: .same(proto: "discardableResult"),
    208: .same(proto: "discardUnknownFields"),
    209: .same(proto: "distance"),
    210: .same(proto: "double"),
    211: .same(proto: "doubleValue"),
    212: .same(proto: "Duration"),
    213: .same(proto: "E"),
    214: .same(proto: "Element"),
    215: .same(proto: "elements"),
    216: .same(proto: "emitExtensionFieldName"),
    217: .same(proto: "emitFieldName"),
    218: .same(proto: "emitFieldNumber"),
    219: .same(proto: "Empty"),
    220: .same(proto: "emptyData"),
    221: .same(proto: "encodeAsBytes"),
    222: .same(proto: "encoded"),
    223: .same(proto: "encodedJSONString"),
    224: .same(proto: "encodedSize"),
    225: .same(proto: "encodeField"),
    226: .same(proto: "encoder"),
    227: .same(proto: "end"),
    228: .same(proto: "endArray"),
    229: .same(proto: "endMessageField"),
    230: .same(proto: "endObject"),
    231: .same(proto: "endRegularField"),
    232: .same(proto: "enum"),
    233: .same(proto: "EnumDescriptorProto"),
    234: .same(proto: "EnumOptions"),
    235: .same(proto: "EnumReservedRange"),
    236: .same(proto: "enumType"),
    237: .same(proto: "enumvalue"),
    238: .same(proto: "EnumValueDescriptorProto"),
    239: .same(proto: "EnumValueOptions"),
    240: .same(proto: "Equatable"),
    241: .same(proto: "Error"),
    242: .same(proto: "ExpressibleByArrayLiteral"),
    243: .same(proto: "ExpressibleByDictionaryLiteral"),
    244: .same(proto: "ext"),
    245: .same(proto: "extDecoder"),
    246: .same(proto: "extendedGraphemeClusterLiteral"),
    247: .same(proto: "ExtendedGraphemeClusterLiteralType"),
    248: .same(proto: "extendee"),
    249: .same(proto: "ExtensibleMessage"),
    250: .same(proto: "extension"),
    251: .same(proto: "ExtensionField"),
    252: .same(proto: "extensionFieldNumber"),
    253: .same(proto: "ExtensionFieldValueSet"),
    254: .same(proto: "ExtensionMap"),
    255: .same(proto: "extensionRange"),
    256: .same(proto: "ExtensionRangeOptions"),
    257: .same(proto: "extensions"),
    258: .same(proto: "extras"),
    259: .same(proto: "F"),
    260: .same(proto: "false"),
    261: .same(proto: "field"),
    262: .same(proto: "fieldData"),
    263: .same(proto: "FieldDescriptorProto"),
    264: .same(proto: "FieldMask"),
    265: .same(proto: "fieldName"),
    266: .same(proto: "fieldNameCount"),
    267: .same(proto: "fieldNum"),
    268: .same(proto: "fieldNumber"),
    269: .same(proto: "fieldNumberForProto"),
    270: .same(proto: "FieldOptions"),
    271: .same(proto: "fields"),
    272: .same(proto: "fieldSize"),
    273: .same(proto: "FieldTag"),
    274: .same(proto: "fieldType"),
    275: .same(proto: "fieldValue"),
    276: .same(proto: "file"),
    277: .same(proto: "FileDescriptorProto"),
    278: .same(proto: "FileDescriptorSet"),
    279: .same(proto: "fileName"),
    280: .same(proto: "FileOptions"),
    281: .same(proto: "filter"),
    282: .same(proto: "firstItem"),
    283: .same(proto: "float"),
    284: .same(proto: "floatLiteral"),
    285: .same(proto: "FloatLiteralType"),
    286: .same(proto: "FloatValue"),
    287: .same(proto: "forMessageName"),
    288: .same(proto: "formUnion"),
    289: .same(proto: "forReadingFrom"),
    290: .same(proto: "forTypeURL"),
    291: .same(proto: "ForwardParser"),
    292: .same(proto: "forWritingInto"),
    293: .same(proto: "from"),
    294: .same(proto: "fromAscii2"),
    295: .same(proto: "fromAscii4"),
    296: .same(proto: "fromByteOffset"),
    297: .same(proto: "fromHexDigit"),
    298: .same(proto: "func"),
    299: .same(proto: "G"),
    300: .same(proto: "GeneratedCodeInfo"),
    301: .same(proto: "get"),
    302: .same(proto: "getExtensionValue"),
    303: .same(proto: "googleapis"),
    304: .standard(proto: "Google_Protobuf_Any"),
    305: .standard(proto: "Google_Protobuf_Api"),
    306: .standard(proto: "Google_Protobuf_BoolValue"),
    307: .standard(proto: "Google_Protobuf_BytesValue"),
    308: .standard(proto: "Google_Protobuf_DescriptorProto"),
    309: .standard(proto: "Google_Protobuf_DoubleValue"),
    310: .standard(proto: "Google_Protobuf_Duration"),
    311: .standard(proto: "Google_Protobuf_Empty"),
    312: .standard(proto: "Google_Protobuf_Enum"),
    313: .standard(proto: "Google_Protobuf_EnumDescriptorProto"),
    314: .standard(proto: "Google_Protobuf_EnumOptions"),
    315: .standard(proto: "Google_Protobuf_EnumValue"),
    316: .standard(proto: "Google_Protobuf_EnumValueDescriptorProto"),
    317: .standard(proto: "Google_Protobuf_EnumValueOptions"),
    318: .standard(proto: "Google_Protobuf_ExtensionRangeOptions"),
    319: .standard(proto: "Google_Protobuf_Field"),
    320: .standard(proto: "Google_Protobuf_FieldDescriptorProto"),
    321: .standard(proto: "Google_Protobuf_FieldMask"),
    322: .standard(proto: "Google_Protobuf_FieldOptions"),
    323: .standard(proto: "Google_Protobuf_FileDescriptorProto"),
    324: .standard(proto: "Google_Protobuf_FileDescriptorSet"),
    325: .standard(proto: "Google_Protobuf_FileOptions"),
    326: .standard(proto: "Google_Protobuf_FloatValue"),
    327: .standard(proto: "Google_Protobuf_GeneratedCodeInfo"),
    328: .standard(proto: "Google_Protobuf_Int32Value"),
    329: .standard(proto: "Google_Protobuf_Int64Value"),
    330: .standard(proto: "Google_Protobuf_ListValue"),
    331: .standard(proto: "Google_Protobuf_MessageOptions"),
    332: .standard(proto: "Google_Protobuf_Method"),
    333: .standard(proto: "Google_Protobuf_MethodDescriptorProto"),
    334: .standard(proto: "Google_Protobuf_MethodOptions"),
    335: .standard(proto: "Google_Protobuf_Mixin"),
    336: .standard(proto: "Google_Protobuf_NullValue"),
    337: .standard(proto: "Google_Protobuf_OneofDescriptorProto"),
    338: .standard(proto: "Google_Protobuf_OneofOptions"),
    339: .standard(proto: "Google_Protobuf_Option"),
    340: .standard(proto: "Google_Protobuf_ServiceDescriptorProto"),
    341: .standard(proto: "Google_Protobuf_ServiceOptions"),
    342: .standard(proto: "Google_Protobuf_SourceCodeInfo"),
    343: .standard(proto: "Google_Protobuf_SourceContext"),
    344: .standard(proto: "Google_Protobuf_StringValue"),
    345: .standard(proto: "Google_Protobuf_Struct"),
    346: .standard(proto: "Google_Protobuf_Syntax"),
    347: .standard(proto: "Google_Protobuf_Timestamp"),
    348: .standard(proto: "Google_Protobuf_Type"),
    349: .standard(proto: "Google_Protobuf_UInt32Value"),
    350: .standard(proto: "Google_Protobuf_UInt64Value"),
    351: .standard(proto: "Google_Protobuf_UninterpretedOption"),
    352: .standard(proto: "Google_Protobuf_Value"),
    353: .same(proto: "goPackage"),
    354: .same(proto: "group"),
    355: .same(proto: "groupFieldNumberStack"),
    356: .same(proto: "groupSize"),
    357: .same(proto: "h"),
    358: .same(proto: "handleConflictingOneOf"),
    359: .same(proto: "hasAggregateValue"),
    360: .same(proto: "hasAllowAlias"),
    361: .same(proto: "hasBegin"),
    362: .same(proto: "hasCcEnableArenas"),
    363: .same(proto: "hasCcGenericServices"),
    364: .same(proto: "hasClientStreaming"),
    365: .same(proto: "hasCsharpNamespace"),
    366: .same(proto: "hasCtype"),
    367: .same(proto: "hasDefaultValue"),
    368: .same(proto: "hasDeprecated"),
    369: .same(proto: "hasDoubleValue"),
    370: .same(proto: "hasEnd"),
    371: .same(proto: "hasExtendee"),
    372: .same(proto: "hasExtensionValue"),
    373: .same(proto: "hasGoPackage"),
    374: .same(proto: "hash"),
    375: .same(proto: "Hashable"),
    376: .same(proto: "hasher"),
    377: .same(proto: "hashValue"),
    378: .same(proto: "HashVisitor"),
    379: .same(proto: "hasIdempotencyLevel"),
    380: .same(proto: "hasIdentifierValue"),
    381: .same(proto: "hasInputType"),
    382: .same(proto: "hasIsExtension"),
    383: .same(proto: "hasJavaGenerateEqualsAndHash"),
    384: .same(proto: "hasJavaGenericServices"),
    385: .same(proto: "hasJavaMultipleFiles"),
    386: .same(proto: "hasJavaOuterClassname"),
    387: .same(proto: "hasJavaPackage"),
    388: .same(proto: "hasJavaStringCheckUtf8"),
    389: .same(proto: "hasJsonName"),
    390: .same(proto: "hasJstype"),
    391: .same(proto: "hasLabel"),
    392: .same(proto: "hasLazy"),
    393: .same(proto: "hasLeadingComments"),
    394: .same(proto: "hasMapEntry"),
    395: .same(proto: "hasMessageSetWireFormat"),
    396: .same(proto: "hasName"),
    397: .same(proto: "hasNamePart"),
    398: .same(proto: "hasNegativeIntValue"),
    399: .same(proto: "hasNoStandardDescriptorAccessor"),
    400: .same(proto: "hasNumber"),
    401: .same(proto: "hasObjcClassPrefix"),
    402: .same(proto: "hasOneofIndex"),
    403: .same(proto: "hasOptimizeFor"),
    404: .same(proto: "hasOptions"),
    405: .same(proto: "hasOutputType"),
    406: .same(proto: "hasPackage"),
    407: .same(proto: "hasPacked"),
    408: .same(proto: "hasPhpClassPrefix"),
    409: .same(proto: "hasPhpGenericServices"),
    410: .same(proto: "hasPhpMetadataNamespace"),
    411: .same(proto: "hasPhpNamespace"),
    412: .same(proto: "hasPositiveIntValue"),
    413: .same(proto: "hasPyGenericServices"),
    414: .same(proto: "hasRubyPackage"),
    415: .same(proto: "hasServerStreaming"),
    416: .same(proto: "hasSourceCodeInfo"),
    417: .same(proto: "hasSourceContext"),
    418: .same(proto: "hasSourceFile"),
    419: .same(proto: "hasStart"),
    420: .same(proto: "hasStringValue"),
    421: .same(proto: "hasSwiftPrefix"),
    422: .same(proto: "hasSyntax"),
    423: .same(proto: "hasTrailingComments"),
    424: .same(proto: "hasType"),
    425: .same(proto: "hasTypeName"),
    426: .same(proto: "hasValue"),
    427: .same(proto: "hasWeak"),
    428: .same(proto: "hour"),
    429: .same(proto: "i"),
    430: .same(proto: "idempotencyLevel"),
    431: .same(proto: "identifierValue"),
    432: .same(proto: "if"),
    433: .same(proto: "ignoreUnknownFields"),
    434: .same(proto: "index"),
    435: .same(proto: "init"),
    436: .same(proto: "inout"),
    437: .same(proto: "inputType"),
    438: .same(proto: "insert"),
    439: .same(proto: "Int"),
    440: .same(proto: "Int32"),
    441: .same(proto: "Int32Value"),
    442: .same(proto: "Int64"),
    443: .same(proto: "Int64Value"),
    444: .same(proto: "Int8"),
    445: .same(proto: "integerLiteral"),
    446: .same(proto: "IntegerLiteralType"),
    447: .same(proto: "intern"),
    448: .same(proto: "Internal"),
    449: .same(proto: "InternalState"),
    450: .same(proto: "into"),
    451: .same(proto: "ints"),
    452: .same(proto: "isA"),
    453: .same(proto: "isEqual"),
    454: .same(proto: "isEqualTo"),
    455: .same(proto: "isExtension"),
    456: .same(proto: "isInitialized"),
    457: .same(proto: "itemTagsEncodedSize"),
    458: .standard(proto: "i_2166136261"),
    459: .same(proto: "javaGenerateEqualsAndHash"),
    460: .same(proto: "javaGenericServices"),
    461: .same(proto: "javaMultipleFiles"),
    462: .same(proto: "javaOuterClassname"),
    463: .same(proto: "javaPackage"),
    464: .same(proto: "javaStringCheckUtf8"),
    465: .same(proto: "JSONDecoder"),
    466: .same(proto: "JSONDecodingError"),
    467: .same(proto: "JSONDecodingOptions"),
    468: .same(proto: "jsonEncoder"),
    469: .same(proto: "JSONEncodingError"),
    470: .same(proto: "JSONEncodingOptions"),
    471: .same(proto: "JSONEncodingVisitor"),
    472: .same(proto: "JSONMapEncodingVisitor"),
    473: .same(proto: "jsonName"),
    474: .same(proto: "jsonPath"),
    475: .same(proto: "jsonPaths"),
    476: .same(proto: "JSONScanner"),
    477: .same(proto: "jsonString"),
    478: .same(proto: "jsonText"),
    479: .same(proto: "jsonUTF8Data"),
    480: .same(proto: "jstype"),
    481: .same(proto: "k"),
    482: .same(proto: "Key"),
    483: .same(proto: "keyField"),
    484: .same(proto: "KeyType"),
    485: .same(proto: "kind"),
    486: .same(proto: "l"),
    487: .same(proto: "label"),
    488: .same(proto: "lazy"),
    489: .same(proto: "leadingComments"),
    490: .same(proto: "leadingDetachedComments"),
    491: .same(proto: "length"),
    492: .same(proto: "let"),
    493: .same(proto: "lhs"),
    494: .same(proto: "list"),
    495: .same(proto: "listOfMessages"),
    496: .same(proto: "listValue"),
    497: .same(proto: "littleEndian"),
    498: .same(proto: "littleEndianBytes"),
    499: .same(proto: "load"),
    500: .same(proto: "localHasher"),
    501: .same(proto: "location"),
    502: .same(proto: "M"),
    503: .same(proto: "major"),
    504: .same(proto: "makeIterator"),
    505: .same(proto: "mapEntry"),
    506: .same(proto: "mapHash"),
    507: .same(proto: "MapKeyType"),
    508: .same(proto: "mapNameResolver"),
    509: .same(proto: "mapToMessages"),
    510: .same(proto: "MapValueType"),
    511: .same(proto: "mapVisitor"),
    512: .same(proto: "mdayStart"),
    513: .same(proto: "merge"),
    514: .same(proto: "message"),
    515: .same(proto: "messageDepthLimit"),
    516: .same(proto: "MessageExtension"),
    517: .same(proto: "MessageImplementationBase"),
    518: .same(proto: "MessageOptions"),
    519: .same(proto: "MessageSet"),
    520: .same(proto: "messageSetWireFormat"),
    521: .same(proto: "messageType"),
    522: .same(proto: "Method"),
    523: .same(proto: "MethodDescriptorProto"),
    524: .same(proto: "MethodOptions"),
    525: .same(proto: "methods"),
    526: .same(proto: "minor"),
    527: .same(proto: "Mixin"),
    528: .same(proto: "mixins"),
    529: .same(proto: "month"),
    530: .same(proto: "msgExtension"),
    531: .same(proto: "mutating"),
    532: .same(proto: "n"),
    533: .same(proto: "name"),
    534: .same(proto: "NameDescription"),
    535: .same(proto: "NameMap"),
    536: .same(proto: "NamePart"),
    537: .same(proto: "nameResolver"),
    538: .same(proto: "names"),
    539: .same(proto: "nanos"),
    540: .same(proto: "nativeBytes"),
    541: .same(proto: "nativeEndianBytes"),
    542: .same(proto: "negativeIntValue"),
    543: .same(proto: "nestedType"),
    544: .same(proto: "newL"),
    545: .same(proto: "newList"),
    546: .same(proto: "newValue"),
    547: .same(proto: "nextByte"),
    548: .same(proto: "nextFieldNumber"),
    549: .same(proto: "nil"),
    550: .same(proto: "nilLiteral"),
    551: .same(proto: "noStandardDescriptorAccessor"),
    552: .same(proto: "nullValue"),
    553: .same(proto: "number"),
    554: .same(proto: "numberValue"),
    555: .same(proto: "objcClassPrefix"),
    556: .same(proto: "of"),
    557: .same(proto: "oneofDecl"),
    558: .same(proto: "OneofDescriptorProto"),
    559: .same(proto: "oneofIndex"),
    560: .same(proto: "OneofOptions"),
    561: .same(proto: "oneofs"),
    562: .standard(proto: "OneOf_Kind"),
    563: .same(proto: "optimizeFor"),
    564: .same(proto: "OptimizeMode"),
    565: .same(proto: "Option"),
    566: .same(proto: "OptionalEnumExtensionField"),
    567: .same(proto: "OptionalExtensionField"),
    568: .same(proto: "OptionalGroupExtensionField"),
    569: .same(proto: "OptionalMessageExtensionField"),
    570: .same(proto: "options"),
    571: .same(proto: "other"),
    572: .same(proto: "others"),
    573: .same(proto: "out"),
    574: .same(proto: "outputType"),
    575: .same(proto: "p"),
    576: .same(proto: "package"),
    577: .same(proto: "packed"),
    578: .same(proto: "PackedEnumExtensionField"),
    579: .same(proto: "PackedExtensionField"),
    580: .same(proto: "packedSize"),
    581: .same(proto: "padding"),
    582: .same(proto: "parent"),
    583: .same(proto: "parse"),
    584: .same(proto: "partial"),
    585: .same(proto: "path"),
    586: .same(proto: "paths"),
    587: .same(proto: "payload"),
    588: .same(proto: "payloadSize"),
    589: .same(proto: "phpClassPrefix"),
    590: .same(proto: "phpGenericServices"),
    591: .same(proto: "phpMetadataNamespace"),
    592: .same(proto: "phpNamespace"),
    593: .same(proto: "pointer"),
    594: .same(proto: "pos"),
    595: .same(proto: "positiveIntValue"),
    596: .same(proto: "prefix"),
    597: .same(proto: "preserveProtoFieldNames"),
    598: .same(proto: "preTraverse"),
    599: .same(proto: "printUnknownFields"),
    600: .same(proto: "proto2"),
    601: .same(proto: "proto3DefaultValue"),
    602: .same(proto: "ProtobufAPIVersionCheck"),
    603: .standard(proto: "ProtobufAPIVersion_2"),
    604: .same(proto: "ProtobufBool"),
    605: .same(proto: "ProtobufBytes"),
    606: .same(proto: "ProtobufDouble"),
    607: .same(proto: "ProtobufEnumMap"),
    608: .same(proto: "protobufExtension"),
    609: .same(proto: "ProtobufFixed32"),
    610: .same(proto: "ProtobufFixed64"),
    611: .same(proto: "ProtobufFloat"),
    612: .same(proto: "ProtobufInt32"),
    613: .same(proto: "ProtobufInt64"),
    614: .same(proto: "ProtobufMap"),
    615: .same(proto: "ProtobufMessageMap"),
    616: .same(proto: "ProtobufSFixed32"),
    617: .same(proto: "ProtobufSFixed64"),
    618: .same(proto: "ProtobufSInt32"),
    619: .same(proto: "ProtobufSInt64"),
    620: .same(proto: "ProtobufString"),
    621: .same(proto: "ProtobufUInt32"),
    622: .same(proto: "ProtobufUInt64"),
    623: .standard(proto: "protobuf_extensionFieldValues"),
    624: .standard(proto: "protobuf_fieldNumber"),
    625: .standard(proto: "protobuf_generated_isEqualTo"),
    626: .standard(proto: "protobuf_nameMap"),
    627: .standard(proto: "protobuf_newField"),
    628: .standard(proto: "protobuf_package"),
    629: .same(proto: "protocol"),
    630: .same(proto: "protoFieldName"),
    631: .same(proto: "protoMessageName"),
    632: .same(proto: "ProtoNameProviding"),
    633: .same(proto: "protoPaths"),
    634: .same(proto: "public"),
    635: .same(proto: "publicDependency"),
    636: .same(proto: "putBoolValue"),
    637: .same(proto: "putBytesValue"),
    638: .same(proto: "putDoubleValue"),
    639: .same(proto: "putEnumValue"),
    640: .same(proto: "putFixedUInt32"),
    641: .same(proto: "putFixedUInt64"),
    642: .same(proto: "putFloatValue"),
    643: .same(proto: "putInt64"),
    644: .same(proto: "putStringValue"),
    645: .same(proto: "putUInt64"),
    646: .same(proto: "putUInt64Hex"),
    647: .same(proto: "putVarInt"),
    648: .same(proto: "putZigZagVarInt"),
    649: .same(proto: "pyGenericServices"),
    650: .same(proto: "rawChars"),
    651: .same(proto: "RawRepresentable"),
    652: .same(proto: "RawValue"),
    653: .same(proto: "readBuffer"),
    654: .same(proto: "register"),
    655: .same(proto: "RepeatedEnumExtensionField"),
    656: .same(proto: "RepeatedExtensionField"),
    657: .same(proto: "RepeatedGroupExtensionField"),
    658: .same(proto: "RepeatedMessageExtensionField"),
    659: .same(proto: "requestStreaming"),
    660: .same(proto: "requestTypeURL"),
    661: .same(proto: "requiredSize"),
    662: .same(proto: "reservedName"),
    663: .same(proto: "reservedRange"),
    664: .same(proto: "responseStreaming"),
    665: .same(proto: "responseTypeURL"),
    666: .same(proto: "result"),
    667: .same(proto: "rethrows"),
    668: .same(proto: "return"),
    669: .same(proto: "revision"),
    670: .same(proto: "rhs"),
    671: .same(proto: "root"),
    672: .same(proto: "rubyPackage"),
    673: .same(proto: "s"),
    674: .same(proto: "sawBackslash"),
    675: .same(proto: "sawSection4Characters"),
    676: .same(proto: "sawSection5Characters"),
    677: .same(proto: "scanner"),
    678: .same(proto: "seconds"),
    679: .same(proto: "self"),
    680: .same(proto: "separator"),
    681: .same(proto: "serialize"),
    682: .same(proto: "serializedData"),
    683: .same(proto: "serializedSize"),
    684: .same(proto: "serverStreaming"),
    685: .same(proto: "service"),
    686: .same(proto: "ServiceDescriptorProto"),
    687: .same(proto: "ServiceOptions"),
    688: .same(proto: "set"),
    689: .same(proto: "setExtensionValue"),
    690: .same(proto: "shift"),
    691: .same(proto: "SimpleExtensionMap"),
    692: .same(proto: "sizer"),
    693: .same(proto: "source"),
    694: .same(proto: "sourceCodeInfo"),
    695: .same(proto: "sourceContext"),
    696: .same(proto: "sourceEncoding"),
    697: .same(proto: "sourceFile"),
    698: .same(proto: "span"),
    699: .same(proto: "split"),
    700: .same(proto: "start"),
    701: .same(proto: "startArray"),
    702: .same(proto: "startField"),
    703: .same(proto: "startIndex"),
    704: .same(proto: "startMessageField"),
    705: .same(proto: "startObject"),
    706: .same(proto: "startRegularField"),
    707: .same(proto: "state"),
    708: .same(proto: "static"),
    709: .same(proto: "StaticString"),
    710: .same(proto: "storage"),
    711: .same(proto: "String"),
    712: .same(proto: "stringLiteral"),
    713: .same(proto: "StringLiteralType"),
    714: .same(proto: "stringResult"),
    715: .same(proto: "stringValue"),
    716: .same(proto: "struct"),
    717: .same(proto: "structValue"),
    718: .same(proto: "subDecoder"),
    719: .same(proto: "subscript"),
    720: .same(proto: "subVisitor"),
    721: .same(proto: "Swift"),
    722: .same(proto: "swiftPrefix"),
    723: .same(proto: "SwiftProtobuf"),
    724: .same(proto: "syntax"),
    725: .same(proto: "T"),
    726: .same(proto: "tag"),
    727: .same(proto: "terminator"),
    728: .same(proto: "testDecoder"),
    729: .same(proto: "text"),
    730: .same(proto: "textDecoder"),
    731: .same(proto: "TextFormatDecoder"),
    732: .same(proto: "TextFormatDecodingError"),
    733: .same(proto: "TextFormatEncodingOptions"),
    734: .same(proto: "TextFormatEncodingVisitor"),
    735: .same(proto: "textFormatString"),
    736: .same(proto: "throws"),
    737: .same(proto: "timeInterval"),
    738: .same(proto: "timeIntervalSince1970"),
    739: .same(proto: "timeIntervalSinceReferenceDate"),
    740: .same(proto: "Timestamp"),
    741: .same(proto: "total"),
    742: .same(proto: "totalSize"),
    743: .same(proto: "trailingComments"),
    744: .same(proto: "traverse"),
    745: .same(proto: "true"),
    746: .same(proto: "try"),
    747: .same(proto: "type"),
    748: .same(proto: "typealias"),
    749: .same(proto: "TypeEnum"),
    750: .same(proto: "typeName"),
    751: .same(proto: "typePrefix"),
    752: .same(proto: "typeStart"),
    753: .same(proto: "typeUnknown"),
    754: .same(proto: "typeURL"),
    755: .same(proto: "UInt32"),
    756: .same(proto: "UInt32Value"),
    757: .same(proto: "UInt64"),
    758: .same(proto: "UInt64Value"),
    759: .same(proto: "UInt8"),
    760: .same(proto: "unicodeScalarLiteral"),
    761: .same(proto: "UnicodeScalarLiteralType"),
    762: .same(proto: "unicodeScalars"),
    763: .same(proto: "UnicodeScalarView"),
    764: .same(proto: "uninterpretedOption"),
    765: .same(proto: "union"),
    766: .same(proto: "uniqueStorage"),
    767: .same(proto: "unknown"),
    768: .same(proto: "unknownFields"),
    769: .same(proto: "UnknownStorage"),
    770: .same(proto: "unpackTo"),
    771: .same(proto: "UnsafeMutablePointer"),
    772: .same(proto: "UnsafeMutableRawBufferPointer"),
    773: .same(proto: "UnsafeMutableRawPointer"),
    774: .same(proto: "UnsafeRawBufferPointer"),
    775: .same(proto: "UnsafeRawPointer"),
    776: .same(proto: "updatedOptions"),
    777: .same(proto: "url"),
    778: .same(proto: "utf8"),
    779: .same(proto: "utf8ToDouble"),
    780: .same(proto: "UTF8View"),
    781: .same(proto: "v"),
    782: .same(proto: "value"),
    783: .same(proto: "valueField"),
    784: .same(proto: "values"),
    785: .same(proto: "ValueType"),
    786: .same(proto: "var"),
    787: .same(proto: "Version"),
    788: .same(proto: "versionString"),
    789: .same(proto: "visitExtensionFields"),
    790: .same(proto: "visitExtensionFieldsAsMessageSet"),
    791: .same(proto: "visitMapField"),
    792: .same(proto: "visitor"),
    793: .same(proto: "visitPacked"),
    794: .same(proto: "visitPackedBoolField"),
    795: .same(proto: "visitPackedDoubleField"),
    796: .same(proto: "visitPackedEnumField"),
    797: .same(proto: "visitPackedFixed32Field"),
    798: .same(proto: "visitPackedFixed64Field"),
    799: .same(proto: "visitPackedFloatField"),
    800: .same(proto: "visitPackedInt32Field"),
    801: .same(proto: "visitPackedInt64Field"),
    802: .same(proto: "visitPackedSFixed32Field"),
    803: .same(proto: "visitPackedSFixed64Field"),
    804: .same(proto: "visitPackedSInt32Field"),
    805: .same(proto: "visitPackedSInt64Field"),
    806: .same(proto: "visitPackedUInt32Field"),
    807: .same(proto: "visitPackedUInt64Field"),
    808: .same(proto: "visitRepeated"),
    809: .same(proto: "visitRepeatedBoolField"),
    810: .same(proto: "visitRepeatedBytesField"),
    811: .same(proto: "visitRepeatedDoubleField"),
    812: .same(proto: "visitRepeatedEnumField"),
    813: .same(proto: "visitRepeatedFixed32Field"),
    814: .same(proto: "visitRepeatedFixed64Field"),
    815: .same(proto: "visitRepeatedFloatField"),
    816: .same(proto: "visitRepeatedGroupField"),
    817: .same(proto: "visitRepeatedInt32Field"),
    818: .same(proto: "visitRepeatedInt64Field"),
    819: .same(proto: "visitRepeatedMessageField"),
    820: .same(proto: "visitRepeatedSFixed32Field"),
    821: .same(proto: "visitRepeatedSFixed64Field"),
    822: .same(proto: "visitRepeatedSInt32Field"),
    823: .same(proto: "visitRepeatedSInt64Field"),
    824: .same(proto: "visitRepeatedStringField"),
    825: .same(proto: "visitRepeatedUInt32Field"),
    826: .same(proto: "visitRepeatedUInt64Field"),
    827: .same(proto: "visitSingular"),
    828: .same(proto: "visitSingularBoolField"),
    829: .same(proto: "visitSingularBytesField"),
    830: .same(proto: "visitSingularDoubleField"),
    831: .same(proto: "visitSingularEnumField"),
    832: .same(proto: "visitSingularFixed32Field"),
    833: .same(proto: "visitSingularFixed64Field"),
    834: .same(proto: "visitSingularFloatField"),
    835: .same(proto: "visitSingularGroupField"),
    836: .same(proto: "visitSingularInt32Field"),
    837: .same(proto: "visitSingularInt64Field"),
    838: .same(proto: "visitSingularMessageField"),
    839: .same(proto: "visitSingularSFixed32Field"),
    840: .same(proto: "visitSingularSFixed64Field"),
    841: .same(proto: "visitSingularSInt32Field"),
    842: .same(proto: "visitSingularSInt64Field"),
    843: .same(proto: "visitSingularStringField"),
    844: .same(proto: "visitSingularUInt32Field"),
    845: .same(proto: "visitSingularUInt64Field"),
    846: .same(proto: "visitUnknown"),
    847: .same(proto: "wasDecoded"),
    848: .same(proto: "weak"),
    849: .same(proto: "weakDependency"),
    850: .same(proto: "where"),
    851: .same(proto: "wireFormat"),
    852: .same(proto: "with"),
    853: .same(proto: "withUnsafeBytes"),
    854: .same(proto: "withUnsafeMutableBytes"),
    855: .same(proto: "work"),
    856: .same(proto: "WrappedType"),
    857: .same(proto: "written"),
    858: .same(proto: "yday"),
  ]

  fileprivate class _StorageClass {
    var _adjusted: Int32 = 0
    var _aggregateValue: Int32 = 0
    var _allCases: Int32 = 0
    var _allocate: Int32 = 0
    var _allowAlias: Int32 = 0
    var _alwaysPrintEnumsAsInts: Int32 = 0
    var _annotation: Int32 = 0
    var _any: Int32 = 0
    var _anyExtensionField: Int32 = 0
    var _anyMessageExtension: Int32 = 0
    var _anyMessageStorage: Int32 = 0
    var _anyUnpackError: Int32 = 0
    var _api: Int32 = 0
    var _appended: Int32 = 0
    var _appendUintHex: Int32 = 0
    var _appendUnknown: Int32 = 0
    var _areAllInitialized: Int32 = 0
    var _array: Int32 = 0
    var _arrayLiteral: Int32 = 0
    var _arraySeparator: Int32 = 0
    var _as: Int32 = 0
    var _asciiOpenCurlyBracket: Int32 = 0
    var _asciiZero: Int32 = 0
    var _available: Int32 = 0
    var _b: Int32 = 0
    var _base64Values: Int32 = 0
    var _baseAddress: Int32 = 0
    var _baseType: Int32 = 0
    var _begin: Int32 = 0
    var _binary: Int32 = 0
    var _binaryDecoder: Int32 = 0
    var _binaryDecodingError: Int32 = 0
    var _binaryDecodingOptions: Int32 = 0
    var _binaryDelimited: Int32 = 0
    var _binaryEncoder: Int32 = 0
    var _binaryEncodingError: Int32 = 0
    var _binaryEncodingMessageSetSizeVisitor: Int32 = 0
    var _binaryEncodingMessageSetVisitor: Int32 = 0
    var _binaryEncodingSizeVisitor: Int32 = 0
    var _binaryEncodingVisitor: Int32 = 0
    var _binaryOptions: Int32 = 0
    var _body: Int32 = 0
    var _bodySize: Int32 = 0
    var _bool: Int32 = 0
    var _booleanLiteral: Int32 = 0
    var _booleanLiteralType: Int32 = 0
    var _boolValue: Int32 = 0
    var _bytes: Int32 = 0
    var _bytesInGroup: Int32 = 0
    var _bytesRead: Int32 = 0
    var _bytesValue: Int32 = 0
    var _c: Int32 = 0
    var _capacity: Int32 = 0
    var _capitalizeNext: Int32 = 0
    var _cardinality: Int32 = 0
    var _ccEnableArenas: Int32 = 0
    var _ccGenericServices: Int32 = 0
    var _character: Int32 = 0
    var _chars: Int32 = 0
    var _class: Int32 = 0
    var _clearAggregateValue_p: Int32 = 0
    var _clearAllowAlias_p: Int32 = 0
    var _clearBegin_p: Int32 = 0
    var _clearCcEnableArenas_p: Int32 = 0
    var _clearCcGenericServices_p: Int32 = 0
    var _clearClientStreaming_p: Int32 = 0
    var _clearCsharpNamespace_p: Int32 = 0
    var _clearCtype_p: Int32 = 0
    var _clearDefaultValue_p: Int32 = 0
    var _clearDeprecated_p: Int32 = 0
    var _clearDoubleValue_p: Int32 = 0
    var _clearEnd_p: Int32 = 0
    var _clearExtendee_p: Int32 = 0
    var _clearExtensionValue_p: Int32 = 0
    var _clearGoPackage_p: Int32 = 0
    var _clearIdempotencyLevel_p: Int32 = 0
    var _clearIdentifierValue_p: Int32 = 0
    var _clearInputType_p: Int32 = 0
    var _clearIsExtension_p: Int32 = 0
    var _clearJavaGenerateEqualsAndHash_p: Int32 = 0
    var _clearJavaGenericServices_p: Int32 = 0
    var _clearJavaMultipleFiles_p: Int32 = 0
    var _clearJavaOuterClassname_p: Int32 = 0
    var _clearJavaPackage_p: Int32 = 0
    var _clearJavaStringCheckUtf8_p: Int32 = 0
    var _clearJsonName_p: Int32 = 0
    var _clearJstype_p: Int32 = 0
    var _clearLabel_p: Int32 = 0
    var _clearLazy_p: Int32 = 0
    var _clearLeadingComments_p: Int32 = 0
    var _clearMapEntry_p: Int32 = 0
    var _clearMessageSetWireFormat_p: Int32 = 0
    var _clearName_p: Int32 = 0
    var _clearNamePart_p: Int32 = 0
    var _clearNegativeIntValue_p: Int32 = 0
    var _clearNoStandardDescriptorAccessor_p: Int32 = 0
    var _clearNumber_p: Int32 = 0
    var _clearObjcClassPrefix_p: Int32 = 0
    var _clearOneofIndex_p: Int32 = 0
    var _clearOptimizeFor_p: Int32 = 0
    var _clearOptions_p: Int32 = 0
    var _clearOutputType_p: Int32 = 0
    var _clearPackage_p: Int32 = 0
    var _clearPacked_p: Int32 = 0
    var _clearPhpClassPrefix_p: Int32 = 0
    var _clearPhpGenericServices_p: Int32 = 0
    var _clearPhpMetadataNamespace_p: Int32 = 0
    var _clearPhpNamespace_p: Int32 = 0
    var _clearPositiveIntValue_p: Int32 = 0
    var _clearPyGenericServices_p: Int32 = 0
    var _clearRubyPackage_p: Int32 = 0
    var _clearServerStreaming_p: Int32 = 0
    var _clearSourceCodeInfo_p: Int32 = 0
    var _clearSourceContext_p: Int32 = 0
    var _clearSourceFile_p: Int32 = 0
    var _clearStart_p: Int32 = 0
    var _clearStringValue_p: Int32 = 0
    var _clearSwiftPrefix_p: Int32 = 0
    var _clearSyntax_p: Int32 = 0
    var _clearTrailingComments_p: Int32 = 0
    var _clearType_p: Int32 = 0
    var _clearTypeName_p: Int32 = 0
    var _clearValue_p: Int32 = 0
    var _clearWeak_p: Int32 = 0
    var _clientStreaming: Int32 = 0
    var _codeUnits: Int32 = 0
    var _collection: Int32 = 0
    var _com: Int32 = 0
    var _comma: Int32 = 0
    var _contentsOf: Int32 = 0
    var _contiguousBytes: Int32 = 0
    var _count: Int32 = 0
    var _countVarintsInBuffer: Int32 = 0
    var _csharpNamespace: Int32 = 0
    var _ctype: Int32 = 0
    var _customCodable: Int32 = 0
    var _customDebugStringConvertible: Int32 = 0
    var _d: Int32 = 0
    var _data: Int32 = 0
    var _dataResult: Int32 = 0
    var _dataSize: Int32 = 0
    var _date: Int32 = 0
    var _daySec: Int32 = 0
    var _daysSinceEpoch: Int32 = 0
    var _debugDescription_p: Int32 = 0
    var _decoded: Int32 = 0
    var _decodedFromJsonnull: Int32 = 0
    var _decodeExtensionField: Int32 = 0
    var _decodeExtensionFieldsAsMessageSet: Int32 = 0
    var _decodeJson: Int32 = 0
    var _decodeMapField: Int32 = 0
    var _decodeMessage: Int32 = 0
    var _decoder: Int32 = 0
    var _decodeRepeated: Int32 = 0
    var _decodeRepeatedBoolField: Int32 = 0
    var _decodeRepeatedBytesField: Int32 = 0
    var _decodeRepeatedDoubleField: Int32 = 0
    var _decodeRepeatedEnumField: Int32 = 0
    var _decodeRepeatedFixed32Field: Int32 = 0
    var _decodeRepeatedFixed64Field: Int32 = 0
    var _decodeRepeatedFloatField: Int32 = 0
    var _decodeRepeatedGroupField: Int32 = 0
    var _decodeRepeatedInt32Field: Int32 = 0
    var _decodeRepeatedInt64Field: Int32 = 0
    var _decodeRepeatedMessageField: Int32 = 0
    var _decodeRepeatedSfixed32Field: Int32 = 0
    var _decodeRepeatedSfixed64Field: Int32 = 0
    var _decodeRepeatedSint32Field: Int32 = 0
    var _decodeRepeatedSint64Field: Int32 = 0
    var _decodeRepeatedStringField: Int32 = 0
    var _decodeRepeatedUint32Field: Int32 = 0
    var _decodeRepeatedUint64Field: Int32 = 0
    var _decodeSingular: Int32 = 0
    var _decodeSingularBoolField: Int32 = 0
    var _decodeSingularBytesField: Int32 = 0
    var _decodeSingularDoubleField: Int32 = 0
    var _decodeSingularEnumField: Int32 = 0
    var _decodeSingularFixed32Field: Int32 = 0
    var _decodeSingularFixed64Field: Int32 = 0
    var _decodeSingularFloatField: Int32 = 0
    var _decodeSingularGroupField: Int32 = 0
    var _decodeSingularInt32Field: Int32 = 0
    var _decodeSingularInt64Field: Int32 = 0
    var _decodeSingularMessageField: Int32 = 0
    var _decodeSingularSfixed32Field: Int32 = 0
    var _decodeSingularSfixed64Field: Int32 = 0
    var _decodeSingularSint32Field: Int32 = 0
    var _decodeSingularSint64Field: Int32 = 0
    var _decodeSingularStringField: Int32 = 0
    var _decodeSingularUint32Field: Int32 = 0
    var _decodeSingularUint64Field: Int32 = 0
    var _decodeTextFormat: Int32 = 0
    var _defaultAnyTypeUrlprefix: Int32 = 0
    var _defaultValue: Int32 = 0
    var _dependency: Int32 = 0
    var _deprecated: Int32 = 0
    var _description_p: Int32 = 0
    var _descriptorProto: Int32 = 0
    var _dictionary: Int32 = 0
    var _dictionaryLiteral: Int32 = 0
    var _digit: Int32 = 0
    var _digit0: Int32 = 0
    var _digit1: Int32 = 0
    var _digitCount: Int32 = 0
    var _digits: Int32 = 0
    var _digitValue: Int32 = 0
    var _discardableResult: Int32 = 0
    var _discardUnknownFields: Int32 = 0
    var _distance: Int32 = 0
    var _double: Int32 = 0
    var _doubleValue: Int32 = 0
    var _duration: Int32 = 0
    var _e: Int32 = 0
    var _element: Int32 = 0
    var _elements: Int32 = 0
    var _emitExtensionFieldName: Int32 = 0
    var _emitFieldName: Int32 = 0
    var _emitFieldNumber: Int32 = 0
    var _empty: Int32 = 0
    var _emptyData: Int32 = 0
    var _encodeAsBytes: Int32 = 0
    var _encoded: Int32 = 0
    var _encodedJsonstring: Int32 = 0
    var _encodedSize: Int32 = 0
    var _encodeField: Int32 = 0
    var _encoder: Int32 = 0
    var _end: Int32 = 0
    var _endArray: Int32 = 0
    var _endMessageField: Int32 = 0
    var _endObject: Int32 = 0
    var _endRegularField: Int32 = 0
    var _enum: Int32 = 0
    var _enumDescriptorProto: Int32 = 0
    var _enumOptions: Int32 = 0
    var _enumReservedRange: Int32 = 0
    var _enumType: Int32 = 0
    var _enumvalue: Int32 = 0
    var _enumValueDescriptorProto: Int32 = 0
    var _enumValueOptions: Int32 = 0
    var _equatable: Int32 = 0
    var _error: Int32 = 0
    var _expressibleByArrayLiteral: Int32 = 0
    var _expressibleByDictionaryLiteral: Int32 = 0
    var _ext: Int32 = 0
    var _extDecoder: Int32 = 0
    var _extendedGraphemeClusterLiteral: Int32 = 0
    var _extendedGraphemeClusterLiteralType: Int32 = 0
    var _extendee: Int32 = 0
    var _extensibleMessage: Int32 = 0
    var _extension: Int32 = 0
    var _extensionField: Int32 = 0
    var _extensionFieldNumber: Int32 = 0
    var _extensionFieldValueSet: Int32 = 0
    var _extensionMap: Int32 = 0
    var _extensionRange: Int32 = 0
    var _extensionRangeOptions: Int32 = 0
    var _extensions: Int32 = 0
    var _extras: Int32 = 0
    var _f: Int32 = 0
    var _false: Int32 = 0
    var _field: Int32 = 0
    var _fieldData: Int32 = 0
    var _fieldDescriptorProto: Int32 = 0
    var _fieldMask: Int32 = 0
    var _fieldName: Int32 = 0
    var _fieldNameCount: Int32 = 0
    var _fieldNum: Int32 = 0
    var _fieldNumber: Int32 = 0
    var _fieldNumberForProto: Int32 = 0
    var _fieldOptions: Int32 = 0
    var _fields: Int32 = 0
    var _fieldSize: Int32 = 0
    var _fieldTag: Int32 = 0
    var _fieldType: Int32 = 0
    var _fieldValue: Int32 = 0
    var _file: Int32 = 0
    var _fileDescriptorProto: Int32 = 0
    var _fileDescriptorSet: Int32 = 0
    var _fileName: Int32 = 0
    var _fileOptions: Int32 = 0
    var _filter: Int32 = 0
    var _firstItem: Int32 = 0
    var _float: Int32 = 0
    var _floatLiteral: Int32 = 0
    var _floatLiteralType: Int32 = 0
    var _floatValue: Int32 = 0
    var _forMessageName: Int32 = 0
    var _formUnion: Int32 = 0
    var _forReadingFrom: Int32 = 0
    var _forTypeURL: Int32 = 0
    var _forwardParser: Int32 = 0
    var _forWritingInto: Int32 = 0
    var _from: Int32 = 0
    var _fromAscii2: Int32 = 0
    var _fromAscii4: Int32 = 0
    var _fromByteOffset: Int32 = 0
    var _fromHexDigit: Int32 = 0
    var _func: Int32 = 0
    var _g: Int32 = 0
    var _generatedCodeInfo: Int32 = 0
    var _get: Int32 = 0
    var _getExtensionValue: Int32 = 0
    var _googleapis: Int32 = 0
    var _googleProtobufAny: Int32 = 0
    var _googleProtobufApi: Int32 = 0
    var _googleProtobufBoolValue: Int32 = 0
    var _googleProtobufBytesValue: Int32 = 0
    var _googleProtobufDescriptorProto: Int32 = 0
    var _googleProtobufDoubleValue: Int32 = 0
    var _googleProtobufDuration: Int32 = 0
    var _googleProtobufEmpty: Int32 = 0
    var _googleProtobufEnum: Int32 = 0
    var _googleProtobufEnumDescriptorProto: Int32 = 0
    var _googleProtobufEnumOptions: Int32 = 0
    var _googleProtobufEnumValue: Int32 = 0
    var _googleProtobufEnumValueDescriptorProto: Int32 = 0
    var _googleProtobufEnumValueOptions: Int32 = 0
    var _googleProtobufExtensionRangeOptions: Int32 = 0
    var _googleProtobufField: Int32 = 0
    var _googleProtobufFieldDescriptorProto: Int32 = 0
    var _googleProtobufFieldMask: Int32 = 0
    var _googleProtobufFieldOptions: Int32 = 0
    var _googleProtobufFileDescriptorProto: Int32 = 0
    var _googleProtobufFileDescriptorSet: Int32 = 0
    var _googleProtobufFileOptions: Int32 = 0
    var _googleProtobufFloatValue: Int32 = 0
    var _googleProtobufGeneratedCodeInfo: Int32 = 0
    var _googleProtobufInt32Value: Int32 = 0
    var _googleProtobufInt64Value: Int32 = 0
    var _googleProtobufListValue: Int32 = 0
    var _googleProtobufMessageOptions: Int32 = 0
    var _googleProtobufMethod: Int32 = 0
    var _googleProtobufMethodDescriptorProto: Int32 = 0
    var _googleProtobufMethodOptions: Int32 = 0
    var _googleProtobufMixin: Int32 = 0
    var _googleProtobufNullValue: Int32 = 0
    var _googleProtobufOneofDescriptorProto: Int32 = 0
    var _googleProtobufOneofOptions: Int32 = 0
    var _googleProtobufOption: Int32 = 0
    var _googleProtobufServiceDescriptorProto: Int32 = 0
    var _googleProtobufServiceOptions: Int32 = 0
    var _googleProtobufSourceCodeInfo: Int32 = 0
    var _googleProtobufSourceContext: Int32 = 0
    var _googleProtobufStringValue: Int32 = 0
    var _googleProtobufStruct: Int32 = 0
    var _googleProtobufSyntax: Int32 = 0
    var _googleProtobufTimestamp: Int32 = 0
    var _googleProtobufType: Int32 = 0
    var _googleProtobufUint32Value: Int32 = 0
    var _googleProtobufUint64Value: Int32 = 0
    var _googleProtobufUninterpretedOption: Int32 = 0
    var _googleProtobufValue: Int32 = 0
    var _goPackage: Int32 = 0
    var _group: Int32 = 0
    var _groupFieldNumberStack: Int32 = 0
    var _groupSize: Int32 = 0
    var _h: Int32 = 0
    var _handleConflictingOneOf: Int32 = 0
    var _hasAggregateValue_p: Int32 = 0
    var _hasAllowAlias_p: Int32 = 0
    var _hasBegin_p: Int32 = 0
    var _hasCcEnableArenas_p: Int32 = 0
    var _hasCcGenericServices_p: Int32 = 0
    var _hasClientStreaming_p: Int32 = 0
    var _hasCsharpNamespace_p: Int32 = 0
    var _hasCtype_p: Int32 = 0
    var _hasDefaultValue_p: Int32 = 0
    var _hasDeprecated_p: Int32 = 0
    var _hasDoubleValue_p: Int32 = 0
    var _hasEnd_p: Int32 = 0
    var _hasExtendee_p: Int32 = 0
    var _hasExtensionValue_p: Int32 = 0
    var _hasGoPackage_p: Int32 = 0
    var _hash: Int32 = 0
    var _hashable: Int32 = 0
    var _hasher: Int32 = 0
    var _hashValue_p: Int32 = 0
    var _hashVisitor: Int32 = 0
    var _hasIdempotencyLevel_p: Int32 = 0
    var _hasIdentifierValue_p: Int32 = 0
    var _hasInputType_p: Int32 = 0
    var _hasIsExtension_p: Int32 = 0
    var _hasJavaGenerateEqualsAndHash_p: Int32 = 0
    var _hasJavaGenericServices_p: Int32 = 0
    var _hasJavaMultipleFiles_p: Int32 = 0
    var _hasJavaOuterClassname_p: Int32 = 0
    var _hasJavaPackage_p: Int32 = 0
    var _hasJavaStringCheckUtf8_p: Int32 = 0
    var _hasJsonName_p: Int32 = 0
    var _hasJstype_p: Int32 = 0
    var _hasLabel_p: Int32 = 0
    var _hasLazy_p: Int32 = 0
    var _hasLeadingComments_p: Int32 = 0
    var _hasMapEntry_p: Int32 = 0
    var _hasMessageSetWireFormat_p: Int32 = 0
    var _hasName_p: Int32 = 0
    var _hasNamePart_p: Int32 = 0
    var _hasNegativeIntValue_p: Int32 = 0
    var _hasNoStandardDescriptorAccessor_p: Int32 = 0
    var _hasNumber_p: Int32 = 0
    var _hasObjcClassPrefix_p: Int32 = 0
    var _hasOneofIndex_p: Int32 = 0
    var _hasOptimizeFor_p: Int32 = 0
    var _hasOptions_p: Int32 = 0
    var _hasOutputType_p: Int32 = 0
    var _hasPackage_p: Int32 = 0
    var _hasPacked_p: Int32 = 0
    var _hasPhpClassPrefix_p: Int32 = 0
    var _hasPhpGenericServices_p: Int32 = 0
    var _hasPhpMetadataNamespace_p: Int32 = 0
    var _hasPhpNamespace_p: Int32 = 0
    var _hasPositiveIntValue_p: Int32 = 0
    var _hasPyGenericServices_p: Int32 = 0
    var _hasRubyPackage_p: Int32 = 0
    var _hasServerStreaming_p: Int32 = 0
    var _hasSourceCodeInfo_p: Int32 = 0
    var _hasSourceContext_p: Int32 = 0
    var _hasSourceFile_p: Int32 = 0
    var _hasStart_p: Int32 = 0
    var _hasStringValue_p: Int32 = 0
    var _hasSwiftPrefix_p: Int32 = 0
    var _hasSyntax_p: Int32 = 0
    var _hasTrailingComments_p: Int32 = 0
    var _hasType_p: Int32 = 0
    var _hasTypeName_p: Int32 = 0
    var _hasValue_p: Int32 = 0
    var _hasWeak_p: Int32 = 0
    var _hour: Int32 = 0
    var _i: Int32 = 0
    var _idempotencyLevel: Int32 = 0
    var _identifierValue: Int32 = 0
    var _if: Int32 = 0
    var _ignoreUnknownFields: Int32 = 0
    var _index: Int32 = 0
    var _init_p: Int32 = 0
    var _inout: Int32 = 0
    var _inputType: Int32 = 0
    var _insert: Int32 = 0
    var _int: Int32 = 0
    var _int32: Int32 = 0
    var _int32Value: Int32 = 0
    var _int64: Int32 = 0
    var _int64Value: Int32 = 0
    var _int8: Int32 = 0
    var _integerLiteral: Int32 = 0
    var _integerLiteralType: Int32 = 0
    var _intern: Int32 = 0
    var _internal: Int32 = 0
    var _internalState: Int32 = 0
    var _into: Int32 = 0
    var _ints: Int32 = 0
    var _isA: Int32 = 0
    var _isEqual: Int32 = 0
    var _isEqualTo: Int32 = 0
    var _isExtension: Int32 = 0
    var _isInitialized_p: Int32 = 0
    var _itemTagsEncodedSize: Int32 = 0
    var _i2166136261: Int32 = 0
    var _javaGenerateEqualsAndHash: Int32 = 0
    var _javaGenericServices: Int32 = 0
    var _javaMultipleFiles: Int32 = 0
    var _javaOuterClassname: Int32 = 0
    var _javaPackage: Int32 = 0
    var _javaStringCheckUtf8: Int32 = 0
    var _jsondecoder: Int32 = 0
    var _jsondecodingError: Int32 = 0
    var _jsondecodingOptions: Int32 = 0
    var _jsonEncoder: Int32 = 0
    var _jsonencodingError: Int32 = 0
    var _jsonencodingOptions: Int32 = 0
    var _jsonencodingVisitor: Int32 = 0
    var _jsonmapEncodingVisitor: Int32 = 0
    var _jsonName: Int32 = 0
    var _jsonPath: Int32 = 0
    var _jsonPaths: Int32 = 0
    var _jsonscanner: Int32 = 0
    var _jsonString: Int32 = 0
    var _jsonText: Int32 = 0
    var _jsonUtf8Data: Int32 = 0
    var _jstype: Int32 = 0
    var _k: Int32 = 0
    var _key: Int32 = 0
    var _keyField: Int32 = 0
    var _keyType: Int32 = 0
    var _kind: Int32 = 0
    var _l: Int32 = 0
    var _label: Int32 = 0
    var _lazy: Int32 = 0
    var _leadingComments: Int32 = 0
    var _leadingDetachedComments: Int32 = 0
    var _length: Int32 = 0
    var _let: Int32 = 0
    var _lhs: Int32 = 0
    var _list: Int32 = 0
    var _listOfMessages: Int32 = 0
    var _listValue: Int32 = 0
    var _littleEndian: Int32 = 0
    var _littleEndianBytes: Int32 = 0
    var _load: Int32 = 0
    var _localHasher: Int32 = 0
    var _location: Int32 = 0
    var _m: Int32 = 0
    var _major: Int32 = 0
    var _makeIterator: Int32 = 0
    var _mapEntry: Int32 = 0
    var _mapHash: Int32 = 0
    var _mapKeyType: Int32 = 0
    var _mapNameResolver: Int32 = 0
    var _mapToMessages: Int32 = 0
    var _mapValueType: Int32 = 0
    var _mapVisitor: Int32 = 0
    var _mdayStart: Int32 = 0
    var _merge: Int32 = 0
    var _message: Int32 = 0
    var _messageDepthLimit: Int32 = 0
    var _messageExtension: Int32 = 0
    var _messageImplementationBase: Int32 = 0
    var _messageOptions: Int32 = 0
    var _messageSet: Int32 = 0
    var _messageSetWireFormat: Int32 = 0
    var _messageType: Int32 = 0
    var _method: Int32 = 0
    var _methodDescriptorProto: Int32 = 0
    var _methodOptions: Int32 = 0
    var _methods: Int32 = 0
    var _minor: Int32 = 0
    var _mixin: Int32 = 0
    var _mixins: Int32 = 0
    var _month: Int32 = 0
    var _msgExtension: Int32 = 0
    var _mutating: Int32 = 0
    var _n: Int32 = 0
    var _name: Int32 = 0
    var _nameDescription: Int32 = 0
    var _nameMap: Int32 = 0
    var _namePart: Int32 = 0
    var _nameResolver: Int32 = 0
    var _names: Int32 = 0
    var _nanos: Int32 = 0
    var _nativeBytes: Int32 = 0
    var _nativeEndianBytes: Int32 = 0
    var _negativeIntValue: Int32 = 0
    var _nestedType: Int32 = 0
    var _newL: Int32 = 0
    var _newList: Int32 = 0
    var _newValue: Int32 = 0
    var _nextByte: Int32 = 0
    var _nextFieldNumber: Int32 = 0
    var _nil: Int32 = 0
    var _nilLiteral: Int32 = 0
    var _noStandardDescriptorAccessor: Int32 = 0
    var _nullValue: Int32 = 0
    var _number: Int32 = 0
    var _numberValue: Int32 = 0
    var _objcClassPrefix: Int32 = 0
    var _of: Int32 = 0
    var _oneofDecl: Int32 = 0
    var _oneofDescriptorProto: Int32 = 0
    var _oneofIndex: Int32 = 0
    var _oneofOptions: Int32 = 0
    var _oneofs: Int32 = 0
    var _oneOfKind: Int32 = 0
    var _optimizeFor: Int32 = 0
    var _optimizeMode: Int32 = 0
    var _option: Int32 = 0
    var _optionalEnumExtensionField: Int32 = 0
    var _optionalExtensionField: Int32 = 0
    var _optionalGroupExtensionField: Int32 = 0
    var _optionalMessageExtensionField: Int32 = 0
    var _options: Int32 = 0
    var _other: Int32 = 0
    var _others: Int32 = 0
    var _out: Int32 = 0
    var _outputType: Int32 = 0
    var _p: Int32 = 0
    var _package: Int32 = 0
    var _packed: Int32 = 0
    var _packedEnumExtensionField: Int32 = 0
    var _packedExtensionField: Int32 = 0
    var _packedSize: Int32 = 0
    var _padding: Int32 = 0
    var _parent: Int32 = 0
    var _parse: Int32 = 0
    var _partial: Int32 = 0
    var _path: Int32 = 0
    var _paths: Int32 = 0
    var _payload: Int32 = 0
    var _payloadSize: Int32 = 0
    var _phpClassPrefix: Int32 = 0
    var _phpGenericServices: Int32 = 0
    var _phpMetadataNamespace: Int32 = 0
    var _phpNamespace: Int32 = 0
    var _pointer: Int32 = 0
    var _pos: Int32 = 0
    var _positiveIntValue: Int32 = 0
    var _prefix: Int32 = 0
    var _preserveProtoFieldNames: Int32 = 0
    var _preTraverse: Int32 = 0
    var _printUnknownFields: Int32 = 0
    var _proto2: Int32 = 0
    var _proto3DefaultValue: Int32 = 0
    var _protobufApiversionCheck: Int32 = 0
    var _protobufApiversion2: Int32 = 0
    var _protobufBool: Int32 = 0
    var _protobufBytes: Int32 = 0
    var _protobufDouble: Int32 = 0
    var _protobufEnumMap: Int32 = 0
    var _protobufExtension: Int32 = 0
    var _protobufFixed32: Int32 = 0
    var _protobufFixed64: Int32 = 0
    var _protobufFloat: Int32 = 0
    var _protobufInt32: Int32 = 0
    var _protobufInt64: Int32 = 0
    var _protobufMap: Int32 = 0
    var _protobufMessageMap: Int32 = 0
    var _protobufSfixed32: Int32 = 0
    var _protobufSfixed64: Int32 = 0
    var _protobufSint32: Int32 = 0
    var _protobufSint64: Int32 = 0
    var _protobufString: Int32 = 0
    var _protobufUint32: Int32 = 0
    var _protobufUint64: Int32 = 0
    var _protobufExtensionFieldValues: Int32 = 0
    var _protobufFieldNumber: Int32 = 0
    var _protobufGeneratedIsEqualTo: Int32 = 0
    var _protobufNameMap: Int32 = 0
    var _protobufNewField: Int32 = 0
    var _protobufPackage: Int32 = 0
    var _protocol: Int32 = 0
    var _protoFieldName: Int32 = 0
    var _protoMessageName: Int32 = 0
    var _protoNameProviding: Int32 = 0
    var _protoPaths: Int32 = 0
    var _public: Int32 = 0
    var _publicDependency: Int32 = 0
    var _putBoolValue: Int32 = 0
    var _putBytesValue: Int32 = 0
    var _putDoubleValue: Int32 = 0
    var _putEnumValue: Int32 = 0
    var _putFixedUint32: Int32 = 0
    var _putFixedUint64: Int32 = 0
    var _putFloatValue: Int32 = 0
    var _putInt64: Int32 = 0
    var _putStringValue: Int32 = 0
    var _putUint64: Int32 = 0
    var _putUint64Hex: Int32 = 0
    var _putVarInt: Int32 = 0
    var _putZigZagVarInt: Int32 = 0
    var _pyGenericServices: Int32 = 0
    var _rawChars: Int32 = 0
    var _rawRepresentable: Int32 = 0
    var _rawValue: Int32 = 0
    var _readBuffer: Int32 = 0
    var _register: Int32 = 0
    var _repeatedEnumExtensionField: Int32 = 0
    var _repeatedExtensionField: Int32 = 0
    var _repeatedGroupExtensionField: Int32 = 0
    var _repeatedMessageExtensionField: Int32 = 0
    var _requestStreaming: Int32 = 0
    var _requestTypeURL: Int32 = 0
    var _requiredSize: Int32 = 0
    var _reservedName: Int32 = 0
    var _reservedRange: Int32 = 0
    var _responseStreaming: Int32 = 0
    var _responseTypeURL: Int32 = 0
    var _result: Int32 = 0
    var _rethrows: Int32 = 0
    var _return: Int32 = 0
    var _revision: Int32 = 0
    var _rhs: Int32 = 0
    var _root: Int32 = 0
    var _rubyPackage: Int32 = 0
    var _s: Int32 = 0
    var _sawBackslash: Int32 = 0
    var _sawSection4Characters: Int32 = 0
    var _sawSection5Characters: Int32 = 0
    var _scanner: Int32 = 0
    var _seconds: Int32 = 0
    var _self_p: Int32 = 0
    var _separator: Int32 = 0
    var _serialize: Int32 = 0
    var _serializedData: Int32 = 0
    var _serializedSize: Int32 = 0
    var _serverStreaming: Int32 = 0
    var _service: Int32 = 0
    var _serviceDescriptorProto: Int32 = 0
    var _serviceOptions: Int32 = 0
    var _set: Int32 = 0
    var _setExtensionValue: Int32 = 0
    var _shift: Int32 = 0
    var _simpleExtensionMap: Int32 = 0
    var _sizer: Int32 = 0
    var _source: Int32 = 0
    var _sourceCodeInfo: Int32 = 0
    var _sourceContext: Int32 = 0
    var _sourceEncoding: Int32 = 0
    var _sourceFile: Int32 = 0
    var _span: Int32 = 0
    var _split: Int32 = 0
    var _start: Int32 = 0
    var _startArray: Int32 = 0
    var _startField: Int32 = 0
    var _startIndex: Int32 = 0
    var _startMessageField: Int32 = 0
    var _startObject: Int32 = 0
    var _startRegularField: Int32 = 0
    var _state: Int32 = 0
    var _static: Int32 = 0
    var _staticString: Int32 = 0
    var _storage: Int32 = 0
    var _string: Int32 = 0
    var _stringLiteral: Int32 = 0
    var _stringLiteralType: Int32 = 0
    var _stringResult: Int32 = 0
    var _stringValue: Int32 = 0
    var _struct: Int32 = 0
    var _structValue: Int32 = 0
    var _subDecoder: Int32 = 0
    var _subscript: Int32 = 0
    var _subVisitor: Int32 = 0
    var _swift: Int32 = 0
    var _swiftPrefix: Int32 = 0
    var _swiftProtobuf: Int32 = 0
    var _syntax: Int32 = 0
    var _t: Int32 = 0
    var _tag: Int32 = 0
    var _terminator: Int32 = 0
    var _testDecoder: Int32 = 0
    var _text: Int32 = 0
    var _textDecoder: Int32 = 0
    var _textFormatDecoder: Int32 = 0
    var _textFormatDecodingError: Int32 = 0
    var _textFormatEncodingOptions: Int32 = 0
    var _textFormatEncodingVisitor: Int32 = 0
    var _textFormatString: Int32 = 0
    var _throws: Int32 = 0
    var _timeInterval: Int32 = 0
    var _timeIntervalSince1970: Int32 = 0
    var _timeIntervalSinceReferenceDate: Int32 = 0
    var _timestamp: Int32 = 0
    var _total: Int32 = 0
    var _totalSize: Int32 = 0
    var _trailingComments: Int32 = 0
    var _traverse: Int32 = 0
    var _true: Int32 = 0
    var _try: Int32 = 0
    var _type: Int32 = 0
    var _typealias: Int32 = 0
    var _typeEnum: Int32 = 0
    var _typeName: Int32 = 0
    var _typePrefix: Int32 = 0
    var _typeStart: Int32 = 0
    var _typeUnknown: Int32 = 0
    var _typeURL: Int32 = 0
    var _uint32: Int32 = 0
    var _uint32Value: Int32 = 0
    var _uint64: Int32 = 0
    var _uint64Value: Int32 = 0
    var _uint8: Int32 = 0
    var _unicodeScalarLiteral: Int32 = 0
    var _unicodeScalarLiteralType: Int32 = 0
    var _unicodeScalars: Int32 = 0
    var _unicodeScalarView: Int32 = 0
    var _uninterpretedOption: Int32 = 0
    var _union: Int32 = 0
    var _uniqueStorage: Int32 = 0
    var _unknown: Int32 = 0
    var _unknownFields_p: Int32 = 0
    var _unknownStorage: Int32 = 0
    var _unpackTo: Int32 = 0
    var _unsafeMutablePointer: Int32 = 0
    var _unsafeMutableRawBufferPointer: Int32 = 0
    var _unsafeMutableRawPointer: Int32 = 0
    var _unsafeRawBufferPointer: Int32 = 0
    var _unsafeRawPointer: Int32 = 0
    var _updatedOptions: Int32 = 0
    var _url: Int32 = 0
    var _utf8: Int32 = 0
    var _utf8ToDouble: Int32 = 0
    var _utf8View: Int32 = 0
    var _v: Int32 = 0
    var _value: Int32 = 0
    var _valueField: Int32 = 0
    var _values: Int32 = 0
    var _valueType: Int32 = 0
    var _var: Int32 = 0
    var _version: Int32 = 0
    var _versionString: Int32 = 0
    var _visitExtensionFields: Int32 = 0
    var _visitExtensionFieldsAsMessageSet: Int32 = 0
    var _visitMapField: Int32 = 0
    var _visitor: Int32 = 0
    var _visitPacked: Int32 = 0
    var _visitPackedBoolField: Int32 = 0
    var _visitPackedDoubleField: Int32 = 0
    var _visitPackedEnumField: Int32 = 0
    var _visitPackedFixed32Field: Int32 = 0
    var _visitPackedFixed64Field: Int32 = 0
    var _visitPackedFloatField: Int32 = 0
    var _visitPackedInt32Field: Int32 = 0
    var _visitPackedInt64Field: Int32 = 0
    var _visitPackedSfixed32Field: Int32 = 0
    var _visitPackedSfixed64Field: Int32 = 0
    var _visitPackedSint32Field: Int32 = 0
    var _visitPackedSint64Field: Int32 = 0
    var _visitPackedUint32Field: Int32 = 0
    var _visitPackedUint64Field: Int32 = 0
    var _visitRepeated: Int32 = 0
    var _visitRepeatedBoolField: Int32 = 0
    var _visitRepeatedBytesField: Int32 = 0
    var _visitRepeatedDoubleField: Int32 = 0
    var _visitRepeatedEnumField: Int32 = 0
    var _visitRepeatedFixed32Field: Int32 = 0
    var _visitRepeatedFixed64Field: Int32 = 0
    var _visitRepeatedFloatField: Int32 = 0
    var _visitRepeatedGroupField: Int32 = 0
    var _visitRepeatedInt32Field: Int32 = 0
    var _visitRepeatedInt64Field: Int32 = 0
    var _visitRepeatedMessageField: Int32 = 0
    var _visitRepeatedSfixed32Field: Int32 = 0
    var _visitRepeatedSfixed64Field: Int32 = 0
    var _visitRepeatedSint32Field: Int32 = 0
    var _visitRepeatedSint64Field: Int32 = 0
    var _visitRepeatedStringField: Int32 = 0
    var _visitRepeatedUint32Field: Int32 = 0
    var _visitRepeatedUint64Field: Int32 = 0
    var _visitSingular: Int32 = 0
    var _visitSingularBoolField: Int32 = 0
    var _visitSingularBytesField: Int32 = 0
    var _visitSingularDoubleField: Int32 = 0
    var _visitSingularEnumField: Int32 = 0
    var _visitSingularFixed32Field: Int32 = 0
    var _visitSingularFixed64Field: Int32 = 0
    var _visitSingularFloatField: Int32 = 0
    var _visitSingularGroupField: Int32 = 0
    var _visitSingularInt32Field: Int32 = 0
    var _visitSingularInt64Field: Int32 = 0
    var _visitSingularMessageField: Int32 = 0
    var _visitSingularSfixed32Field: Int32 = 0
    var _visitSingularSfixed64Field: Int32 = 0
    var _visitSingularSint32Field: Int32 = 0
    var _visitSingularSint64Field: Int32 = 0
    var _visitSingularStringField: Int32 = 0
    var _visitSingularUint32Field: Int32 = 0
    var _visitSingularUint64Field: Int32 = 0
    var _visitUnknown: Int32 = 0
    var _wasDecoded: Int32 = 0
    var _weak: Int32 = 0
    var _weakDependency: Int32 = 0
    var _where: Int32 = 0
    var _wireFormat: Int32 = 0
    var _with: Int32 = 0
    var _withUnsafeBytes: Int32 = 0
    var _withUnsafeMutableBytes: Int32 = 0
    var _work: Int32 = 0
    var _wrappedType: Int32 = 0
    var _written: Int32 = 0
    var _yday: Int32 = 0

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _adjusted = source._adjusted
      _aggregateValue = source._aggregateValue
      _allCases = source._allCases
      _allocate = source._allocate
      _allowAlias = source._allowAlias
      _alwaysPrintEnumsAsInts = source._alwaysPrintEnumsAsInts
      _annotation = source._annotation
      _any = source._any
      _anyExtensionField = source._anyExtensionField
      _anyMessageExtension = source._anyMessageExtension
      _anyMessageStorage = source._anyMessageStorage
      _anyUnpackError = source._anyUnpackError
      _api = source._api
      _appended = source._appended
      _appendUintHex = source._appendUintHex
      _appendUnknown = source._appendUnknown
      _areAllInitialized = source._areAllInitialized
      _array = source._array
      _arrayLiteral = source._arrayLiteral
      _arraySeparator = source._arraySeparator
      _as = source._as
      _asciiOpenCurlyBracket = source._asciiOpenCurlyBracket
      _asciiZero = source._asciiZero
      _available = source._available
      _b = source._b
      _base64Values = source._base64Values
      _baseAddress = source._baseAddress
      _baseType = source._baseType
      _begin = source._begin
      _binary = source._binary
      _binaryDecoder = source._binaryDecoder
      _binaryDecodingError = source._binaryDecodingError
      _binaryDecodingOptions = source._binaryDecodingOptions
      _binaryDelimited = source._binaryDelimited
      _binaryEncoder = source._binaryEncoder
      _binaryEncodingError = source._binaryEncodingError
      _binaryEncodingMessageSetSizeVisitor = source._binaryEncodingMessageSetSizeVisitor
      _binaryEncodingMessageSetVisitor = source._binaryEncodingMessageSetVisitor
      _binaryEncodingSizeVisitor = source._binaryEncodingSizeVisitor
      _binaryEncodingVisitor = source._binaryEncodingVisitor
      _binaryOptions = source._binaryOptions
      _body = source._body
      _bodySize = source._bodySize
      _bool = source._bool
      _booleanLiteral = source._booleanLiteral
      _booleanLiteralType = source._booleanLiteralType
      _boolValue = source._boolValue
      _bytes = source._bytes
      _bytesInGroup = source._bytesInGroup
      _bytesRead = source._bytesRead
      _bytesValue = source._bytesValue
      _c = source._c
      _capacity = source._capacity
      _capitalizeNext = source._capitalizeNext
      _cardinality = source._cardinality
      _ccEnableArenas = source._ccEnableArenas
      _ccGenericServices = source._ccGenericServices
      _character = source._character
      _chars = source._chars
      _class = source._class
      _clearAggregateValue_p = source._clearAggregateValue_p
      _clearAllowAlias_p = source._clearAllowAlias_p
      _clearBegin_p = source._clearBegin_p
      _clearCcEnableArenas_p = source._clearCcEnableArenas_p
      _clearCcGenericServices_p = source._clearCcGenericServices_p
      _clearClientStreaming_p = source._clearClientStreaming_p
      _clearCsharpNamespace_p = source._clearCsharpNamespace_p
      _clearCtype_p = source._clearCtype_p
      _clearDefaultValue_p = source._clearDefaultValue_p
      _clearDeprecated_p = source._clearDeprecated_p
      _clearDoubleValue_p = source._clearDoubleValue_p
      _clearEnd_p = source._clearEnd_p
      _clearExtendee_p = source._clearExtendee_p
      _clearExtensionValue_p = source._clearExtensionValue_p
      _clearGoPackage_p = source._clearGoPackage_p
      _clearIdempotencyLevel_p = source._clearIdempotencyLevel_p
      _clearIdentifierValue_p = source._clearIdentifierValue_p
      _clearInputType_p = source._clearInputType_p
      _clearIsExtension_p = source._clearIsExtension_p
      _clearJavaGenerateEqualsAndHash_p = source._clearJavaGenerateEqualsAndHash_p
      _clearJavaGenericServices_p = source._clearJavaGenericServices_p
      _clearJavaMultipleFiles_p = source._clearJavaMultipleFiles_p
      _clearJavaOuterClassname_p = source._clearJavaOuterClassname_p
      _clearJavaPackage_p = source._clearJavaPackage_p
      _clearJavaStringCheckUtf8_p = source._clearJavaStringCheckUtf8_p
      _clearJsonName_p = source._clearJsonName_p
      _clearJstype_p = source._clearJstype_p
      _clearLabel_p = source._clearLabel_p
      _clearLazy_p = source._clearLazy_p
      _clearLeadingComments_p = source._clearLeadingComments_p
      _clearMapEntry_p = source._clearMapEntry_p
      _clearMessageSetWireFormat_p = source._clearMessageSetWireFormat_p
      _clearName_p = source._clearName_p
      _clearNamePart_p = source._clearNamePart_p
      _clearNegativeIntValue_p = source._clearNegativeIntValue_p
      _clearNoStandardDescriptorAccessor_p = source._clearNoStandardDescriptorAccessor_p
      _clearNumber_p = source._clearNumber_p
      _clearObjcClassPrefix_p = source._clearObjcClassPrefix_p
      _clearOneofIndex_p = source._clearOneofIndex_p
      _clearOptimizeFor_p = source._clearOptimizeFor_p
      _clearOptions_p = source._clearOptions_p
      _clearOutputType_p = source._clearOutputType_p
      _clearPackage_p = source._clearPackage_p
      _clearPacked_p = source._clearPacked_p
      _clearPhpClassPrefix_p = source._clearPhpClassPrefix_p
      _clearPhpGenericServices_p = source._clearPhpGenericServices_p
      _clearPhpMetadataNamespace_p = source._clearPhpMetadataNamespace_p
      _clearPhpNamespace_p = source._clearPhpNamespace_p
      _clearPositiveIntValue_p = source._clearPositiveIntValue_p
      _clearPyGenericServices_p = source._clearPyGenericServices_p
      _clearRubyPackage_p = source._clearRubyPackage_p
      _clearServerStreaming_p = source._clearServerStreaming_p
      _clearSourceCodeInfo_p = source._clearSourceCodeInfo_p
      _clearSourceContext_p = source._clearSourceContext_p
      _clearSourceFile_p = source._clearSourceFile_p
      _clearStart_p = source._clearStart_p
      _clearStringValue_p = source._clearStringValue_p
      _clearSwiftPrefix_p = source._clearSwiftPrefix_p
      _clearSyntax_p = source._clearSyntax_p
      _clearTrailingComments_p = source._clearTrailingComments_p
      _clearType_p = source._clearType_p
      _clearTypeName_p = source._clearTypeName_p
      _clearValue_p = source._clearValue_p
      _clearWeak_p = source._clearWeak_p
      _clientStreaming = source._clientStreaming
      _codeUnits = source._codeUnits
      _collection = source._collection
      _com = source._com
      _comma = source._comma
      _contentsOf = source._contentsOf
      _contiguousBytes = source._contiguousBytes
      _count = source._count
      _countVarintsInBuffer = source._countVarintsInBuffer
      _csharpNamespace = source._csharpNamespace
      _ctype = source._ctype
      _customCodable = source._customCodable
      _customDebugStringConvertible = source._customDebugStringConvertible
      _d = source._d
      _data = source._data
      _dataResult = source._dataResult
      _dataSize = source._dataSize
      _date = source._date
      _daySec = source._daySec
      _daysSinceEpoch = source._daysSinceEpoch
      _debugDescription_p = source._debugDescription_p
      _decoded = source._decoded
      _decodedFromJsonnull = source._decodedFromJsonnull
      _decodeExtensionField = source._decodeExtensionField
      _decodeExtensionFieldsAsMessageSet = source._decodeExtensionFieldsAsMessageSet
      _decodeJson = source._decodeJson
      _decodeMapField = source._decodeMapField
      _decodeMessage = source._decodeMessage
      _decoder = source._decoder
      _decodeRepeated = source._decodeRepeated
      _decodeRepeatedBoolField = source._decodeRepeatedBoolField
      _decodeRepeatedBytesField = source._decodeRepeatedBytesField
      _decodeRepeatedDoubleField = source._decodeRepeatedDoubleField
      _decodeRepeatedEnumField = source._decodeRepeatedEnumField
      _decodeRepeatedFixed32Field = source._decodeRepeatedFixed32Field
      _decodeRepeatedFixed64Field = source._decodeRepeatedFixed64Field
      _decodeRepeatedFloatField = source._decodeRepeatedFloatField
      _decodeRepeatedGroupField = source._decodeRepeatedGroupField
      _decodeRepeatedInt32Field = source._decodeRepeatedInt32Field
      _decodeRepeatedInt64Field = source._decodeRepeatedInt64Field
      _decodeRepeatedMessageField = source._decodeRepeatedMessageField
      _decodeRepeatedSfixed32Field = source._decodeRepeatedSfixed32Field
      _decodeRepeatedSfixed64Field = source._decodeRepeatedSfixed64Field
      _decodeRepeatedSint32Field = source._decodeRepeatedSint32Field
      _decodeRepeatedSint64Field = source._decodeRepeatedSint64Field
      _decodeRepeatedStringField = source._decodeRepeatedStringField
      _decodeRepeatedUint32Field = source._decodeRepeatedUint32Field
      _decodeRepeatedUint64Field = source._decodeRepeatedUint64Field
      _decodeSingular = source._decodeSingular
      _decodeSingularBoolField = source._decodeSingularBoolField
      _decodeSingularBytesField = source._decodeSingularBytesField
      _decodeSingularDoubleField = source._decodeSingularDoubleField
      _decodeSingularEnumField = source._decodeSingularEnumField
      _decodeSingularFixed32Field = source._decodeSingularFixed32Field
      _decodeSingularFixed64Field = source._decodeSingularFixed64Field
      _decodeSingularFloatField = source._decodeSingularFloatField
      _decodeSingularGroupField = source._decodeSingularGroupField
      _decodeSingularInt32Field = source._decodeSingularInt32Field
      _decodeSingularInt64Field = source._decodeSingularInt64Field
      _decodeSingularMessageField = source._decodeSingularMessageField
      _decodeSingularSfixed32Field = source._decodeSingularSfixed32Field
      _decodeSingularSfixed64Field = source._decodeSingularSfixed64Field
      _decodeSingularSint32Field = source._decodeSingularSint32Field
      _decodeSingularSint64Field = source._decodeSingularSint64Field
      _decodeSingularStringField = source._decodeSingularStringField
      _decodeSingularUint32Field = source._decodeSingularUint32Field
      _decodeSingularUint64Field = source._decodeSingularUint64Field
      _decodeTextFormat = source._decodeTextFormat
      _defaultAnyTypeUrlprefix = source._defaultAnyTypeUrlprefix
      _defaultValue = source._defaultValue
      _dependency = source._dependency
      _deprecated = source._deprecated
      _description_p = source._description_p
      _descriptorProto = source._descriptorProto
      _dictionary = source._dictionary
      _dictionaryLiteral = source._dictionaryLiteral
      _digit = source._digit
      _digit0 = source._digit0
      _digit1 = source._digit1
      _digitCount = source._digitCount
      _digits = source._digits
      _digitValue = source._digitValue
      _discardableResult = source._discardableResult
      _discardUnknownFields = source._discardUnknownFields
      _distance = source._distance
      _double = source._double
      _doubleValue = source._doubleValue
      _duration = source._duration
      _e = source._e
      _element = source._element
      _elements = source._elements
      _emitExtensionFieldName = source._emitExtensionFieldName
      _emitFieldName = source._emitFieldName
      _emitFieldNumber = source._emitFieldNumber
      _empty = source._empty
      _emptyData = source._emptyData
      _encodeAsBytes = source._encodeAsBytes
      _encoded = source._encoded
      _encodedJsonstring = source._encodedJsonstring
      _encodedSize = source._encodedSize
      _encodeField = source._encodeField
      _encoder = source._encoder
      _end = source._end
      _endArray = source._endArray
      _endMessageField = source._endMessageField
      _endObject = source._endObject
      _endRegularField = source._endRegularField
      _enum = source._enum
      _enumDescriptorProto = source._enumDescriptorProto
      _enumOptions = source._enumOptions
      _enumReservedRange = source._enumReservedRange
      _enumType = source._enumType
      _enumvalue = source._enumvalue
      _enumValueDescriptorProto = source._enumValueDescriptorProto
      _enumValueOptions = source._enumValueOptions
      _equatable = source._equatable
      _error = source._error
      _expressibleByArrayLiteral = source._expressibleByArrayLiteral
      _expressibleByDictionaryLiteral = source._expressibleByDictionaryLiteral
      _ext = source._ext
      _extDecoder = source._extDecoder
      _extendedGraphemeClusterLiteral = source._extendedGraphemeClusterLiteral
      _extendedGraphemeClusterLiteralType = source._extendedGraphemeClusterLiteralType
      _extendee = source._extendee
      _extensibleMessage = source._extensibleMessage
      _extension = source._extension
      _extensionField = source._extensionField
      _extensionFieldNumber = source._extensionFieldNumber
      _extensionFieldValueSet = source._extensionFieldValueSet
      _extensionMap = source._extensionMap
      _extensionRange = source._extensionRange
      _extensionRangeOptions = source._extensionRangeOptions
      _extensions = source._extensions
      _extras = source._extras
      _f = source._f
      _false = source._false
      _field = source._field
      _fieldData = source._fieldData
      _fieldDescriptorProto = source._fieldDescriptorProto
      _fieldMask = source._fieldMask
      _fieldName = source._fieldName
      _fieldNameCount = source._fieldNameCount
      _fieldNum = source._fieldNum
      _fieldNumber = source._fieldNumber
      _fieldNumberForProto = source._fieldNumberForProto
      _fieldOptions = source._fieldOptions
      _fields = source._fields
      _fieldSize = source._fieldSize
      _fieldTag = source._fieldTag
      _fieldType = source._fieldType
      _fieldValue = source._fieldValue
      _file = source._file
      _fileDescriptorProto = source._fileDescriptorProto
      _fileDescriptorSet = source._fileDescriptorSet
      _fileName = source._fileName
      _fileOptions = source._fileOptions
      _filter = source._filter
      _firstItem = source._firstItem
      _float = source._float
      _floatLiteral = source._floatLiteral
      _floatLiteralType = source._floatLiteralType
      _floatValue = source._floatValue
      _forMessageName = source._forMessageName
      _formUnion = source._formUnion
      _forReadingFrom = source._forReadingFrom
      _forTypeURL = source._forTypeURL
      _forwardParser = source._forwardParser
      _forWritingInto = source._forWritingInto
      _from = source._from
      _fromAscii2 = source._fromAscii2
      _fromAscii4 = source._fromAscii4
      _fromByteOffset = source._fromByteOffset
      _fromHexDigit = source._fromHexDigit
      _func = source._func
      _g = source._g
      _generatedCodeInfo = source._generatedCodeInfo
      _get = source._get
      _getExtensionValue = source._getExtensionValue
      _googleapis = source._googleapis
      _googleProtobufAny = source._googleProtobufAny
      _googleProtobufApi = source._googleProtobufApi
      _googleProtobufBoolValue = source._googleProtobufBoolValue
      _googleProtobufBytesValue = source._googleProtobufBytesValue
      _googleProtobufDescriptorProto = source._googleProtobufDescriptorProto
      _googleProtobufDoubleValue = source._googleProtobufDoubleValue
      _googleProtobufDuration = source._googleProtobufDuration
      _googleProtobufEmpty = source._googleProtobufEmpty
      _googleProtobufEnum = source._googleProtobufEnum
      _googleProtobufEnumDescriptorProto = source._googleProtobufEnumDescriptorProto
      _googleProtobufEnumOptions = source._googleProtobufEnumOptions
      _googleProtobufEnumValue = source._googleProtobufEnumValue
      _googleProtobufEnumValueDescriptorProto = source._googleProtobufEnumValueDescriptorProto
      _googleProtobufEnumValueOptions = source._googleProtobufEnumValueOptions
      _googleProtobufExtensionRangeOptions = source._googleProtobufExtensionRangeOptions
      _googleProtobufField = source._googleProtobufField
      _googleProtobufFieldDescriptorProto = source._googleProtobufFieldDescriptorProto
      _googleProtobufFieldMask = source._googleProtobufFieldMask
      _googleProtobufFieldOptions = source._googleProtobufFieldOptions
      _googleProtobufFileDescriptorProto = source._googleProtobufFileDescriptorProto
      _googleProtobufFileDescriptorSet = source._googleProtobufFileDescriptorSet
      _googleProtobufFileOptions = source._googleProtobufFileOptions
      _googleProtobufFloatValue = source._googleProtobufFloatValue
      _googleProtobufGeneratedCodeInfo = source._googleProtobufGeneratedCodeInfo
      _googleProtobufInt32Value = source._googleProtobufInt32Value
      _googleProtobufInt64Value = source._googleProtobufInt64Value
      _googleProtobufListValue = source._googleProtobufListValue
      _googleProtobufMessageOptions = source._googleProtobufMessageOptions
      _googleProtobufMethod = source._googleProtobufMethod
      _googleProtobufMethodDescriptorProto = source._googleProtobufMethodDescriptorProto
      _googleProtobufMethodOptions = source._googleProtobufMethodOptions
      _googleProtobufMixin = source._googleProtobufMixin
      _googleProtobufNullValue = source._googleProtobufNullValue
      _googleProtobufOneofDescriptorProto = source._googleProtobufOneofDescriptorProto
      _googleProtobufOneofOptions = source._googleProtobufOneofOptions
      _googleProtobufOption = source._googleProtobufOption
      _googleProtobufServiceDescriptorProto = source._googleProtobufServiceDescriptorProto
      _googleProtobufServiceOptions = source._googleProtobufServiceOptions
      _googleProtobufSourceCodeInfo = source._googleProtobufSourceCodeInfo
      _googleProtobufSourceContext = source._googleProtobufSourceContext
      _googleProtobufStringValue = source._googleProtobufStringValue
      _googleProtobufStruct = source._googleProtobufStruct
      _googleProtobufSyntax = source._googleProtobufSyntax
      _googleProtobufTimestamp = source._googleProtobufTimestamp
      _googleProtobufType = source._googleProtobufType
      _googleProtobufUint32Value = source._googleProtobufUint32Value
      _googleProtobufUint64Value = source._googleProtobufUint64Value
      _googleProtobufUninterpretedOption = source._googleProtobufUninterpretedOption
      _googleProtobufValue = source._googleProtobufValue
      _goPackage = source._goPackage
      _group = source._group
      _groupFieldNumberStack = source._groupFieldNumberStack
      _groupSize = source._groupSize
      _h = source._h
      _handleConflictingOneOf = source._handleConflictingOneOf
      _hasAggregateValue_p = source._hasAggregateValue_p
      _hasAllowAlias_p = source._hasAllowAlias_p
      _hasBegin_p = source._hasBegin_p
      _hasCcEnableArenas_p = source._hasCcEnableArenas_p
      _hasCcGenericServices_p = source._hasCcGenericServices_p
      _hasClientStreaming_p = source._hasClientStreaming_p
      _hasCsharpNamespace_p = source._hasCsharpNamespace_p
      _hasCtype_p = source._hasCtype_p
      _hasDefaultValue_p = source._hasDefaultValue_p
      _hasDeprecated_p = source._hasDeprecated_p
      _hasDoubleValue_p = source._hasDoubleValue_p
      _hasEnd_p = source._hasEnd_p
      _hasExtendee_p = source._hasExtendee_p
      _hasExtensionValue_p = source._hasExtensionValue_p
      _hasGoPackage_p = source._hasGoPackage_p
      _hash = source._hash
      _hashable = source._hashable
      _hasher = source._hasher
      _hashValue_p = source._hashValue_p
      _hashVisitor = source._hashVisitor
      _hasIdempotencyLevel_p = source._hasIdempotencyLevel_p
      _hasIdentifierValue_p = source._hasIdentifierValue_p
      _hasInputType_p = source._hasInputType_p
      _hasIsExtension_p = source._hasIsExtension_p
      _hasJavaGenerateEqualsAndHash_p = source._hasJavaGenerateEqualsAndHash_p
      _hasJavaGenericServices_p = source._hasJavaGenericServices_p
      _hasJavaMultipleFiles_p = source._hasJavaMultipleFiles_p
      _hasJavaOuterClassname_p = source._hasJavaOuterClassname_p
      _hasJavaPackage_p = source._hasJavaPackage_p
      _hasJavaStringCheckUtf8_p = source._hasJavaStringCheckUtf8_p
      _hasJsonName_p = source._hasJsonName_p
      _hasJstype_p = source._hasJstype_p
      _hasLabel_p = source._hasLabel_p
      _hasLazy_p = source._hasLazy_p
      _hasLeadingComments_p = source._hasLeadingComments_p
      _hasMapEntry_p = source._hasMapEntry_p
      _hasMessageSetWireFormat_p = source._hasMessageSetWireFormat_p
      _hasName_p = source._hasName_p
      _hasNamePart_p = source._hasNamePart_p
      _hasNegativeIntValue_p = source._hasNegativeIntValue_p
      _hasNoStandardDescriptorAccessor_p = source._hasNoStandardDescriptorAccessor_p
      _hasNumber_p = source._hasNumber_p
      _hasObjcClassPrefix_p = source._hasObjcClassPrefix_p
      _hasOneofIndex_p = source._hasOneofIndex_p
      _hasOptimizeFor_p = source._hasOptimizeFor_p
      _hasOptions_p = source._hasOptions_p
      _hasOutputType_p = source._hasOutputType_p
      _hasPackage_p = source._hasPackage_p
      _hasPacked_p = source._hasPacked_p
      _hasPhpClassPrefix_p = source._hasPhpClassPrefix_p
      _hasPhpGenericServices_p = source._hasPhpGenericServices_p
      _hasPhpMetadataNamespace_p = source._hasPhpMetadataNamespace_p
      _hasPhpNamespace_p = source._hasPhpNamespace_p
      _hasPositiveIntValue_p = source._hasPositiveIntValue_p
      _hasPyGenericServices_p = source._hasPyGenericServices_p
      _hasRubyPackage_p = source._hasRubyPackage_p
      _hasServerStreaming_p = source._hasServerStreaming_p
      _hasSourceCodeInfo_p = source._hasSourceCodeInfo_p
      _hasSourceContext_p = source._hasSourceContext_p
      _hasSourceFile_p = source._hasSourceFile_p
      _hasStart_p = source._hasStart_p
      _hasStringValue_p = source._hasStringValue_p
      _hasSwiftPrefix_p = source._hasSwiftPrefix_p
      _hasSyntax_p = source._hasSyntax_p
      _hasTrailingComments_p = source._hasTrailingComments_p
      _hasType_p = source._hasType_p
      _hasTypeName_p = source._hasTypeName_p
      _hasValue_p = source._hasValue_p
      _hasWeak_p = source._hasWeak_p
      _hour = source._hour
      _i = source._i
      _idempotencyLevel = source._idempotencyLevel
      _identifierValue = source._identifierValue
      _if = source._if
      _ignoreUnknownFields = source._ignoreUnknownFields
      _index = source._index
      _init_p = source._init_p
      _inout = source._inout
      _inputType = source._inputType
      _insert = source._insert
      _int = source._int
      _int32 = source._int32
      _int32Value = source._int32Value
      _int64 = source._int64
      _int64Value = source._int64Value
      _int8 = source._int8
      _integerLiteral = source._integerLiteral
      _integerLiteralType = source._integerLiteralType
      _intern = source._intern
      _internal = source._internal
      _internalState = source._internalState
      _into = source._into
      _ints = source._ints
      _isA = source._isA
      _isEqual = source._isEqual
      _isEqualTo = source._isEqualTo
      _isExtension = source._isExtension
      _isInitialized_p = source._isInitialized_p
      _itemTagsEncodedSize = source._itemTagsEncodedSize
      _i2166136261 = source._i2166136261
      _javaGenerateEqualsAndHash = source._javaGenerateEqualsAndHash
      _javaGenericServices = source._javaGenericServices
      _javaMultipleFiles = source._javaMultipleFiles
      _javaOuterClassname = source._javaOuterClassname
      _javaPackage = source._javaPackage
      _javaStringCheckUtf8 = source._javaStringCheckUtf8
      _jsondecoder = source._jsondecoder
      _jsondecodingError = source._jsondecodingError
      _jsondecodingOptions = source._jsondecodingOptions
      _jsonEncoder = source._jsonEncoder
      _jsonencodingError = source._jsonencodingError
      _jsonencodingOptions = source._jsonencodingOptions
      _jsonencodingVisitor = source._jsonencodingVisitor
      _jsonmapEncodingVisitor = source._jsonmapEncodingVisitor
      _jsonName = source._jsonName
      _jsonPath = source._jsonPath
      _jsonPaths = source._jsonPaths
      _jsonscanner = source._jsonscanner
      _jsonString = source._jsonString
      _jsonText = source._jsonText
      _jsonUtf8Data = source._jsonUtf8Data
      _jstype = source._jstype
      _k = source._k
      _key = source._key
      _keyField = source._keyField
      _keyType = source._keyType
      _kind = source._kind
      _l = source._l
      _label = source._label
      _lazy = source._lazy
      _leadingComments = source._leadingComments
      _leadingDetachedComments = source._leadingDetachedComments
      _length = source._length
      _let = source._let
      _lhs = source._lhs
      _list = source._list
      _listOfMessages = source._listOfMessages
      _listValue = source._listValue
      _littleEndian = source._littleEndian
      _littleEndianBytes = source._littleEndianBytes
      _load = source._load
      _localHasher = source._localHasher
      _location = source._location
      _m = source._m
      _major = source._major
      _makeIterator = source._makeIterator
      _mapEntry = source._mapEntry
      _mapHash = source._mapHash
      _mapKeyType = source._mapKeyType
      _mapNameResolver = source._mapNameResolver
      _mapToMessages = source._mapToMessages
      _mapValueType = source._mapValueType
      _mapVisitor = source._mapVisitor
      _mdayStart = source._mdayStart
      _merge = source._merge
      _message = source._message
      _messageDepthLimit = source._messageDepthLimit
      _messageExtension = source._messageExtension
      _messageImplementationBase = source._messageImplementationBase
      _messageOptions = source._messageOptions
      _messageSet = source._messageSet
      _messageSetWireFormat = source._messageSetWireFormat
      _messageType = source._messageType
      _method = source._method
      _methodDescriptorProto = source._methodDescriptorProto
      _methodOptions = source._methodOptions
      _methods = source._methods
      _minor = source._minor
      _mixin = source._mixin
      _mixins = source._mixins
      _month = source._month
      _msgExtension = source._msgExtension
      _mutating = source._mutating
      _n = source._n
      _name = source._name
      _nameDescription = source._nameDescription
      _nameMap = source._nameMap
      _namePart = source._namePart
      _nameResolver = source._nameResolver
      _names = source._names
      _nanos = source._nanos
      _nativeBytes = source._nativeBytes
      _nativeEndianBytes = source._nativeEndianBytes
      _negativeIntValue = source._negativeIntValue
      _nestedType = source._nestedType
      _newL = source._newL
      _newList = source._newList
      _newValue = source._newValue
      _nextByte = source._nextByte
      _nextFieldNumber = source._nextFieldNumber
      _nil = source._nil
      _nilLiteral = source._nilLiteral
      _noStandardDescriptorAccessor = source._noStandardDescriptorAccessor
      _nullValue = source._nullValue
      _number = source._number
      _numberValue = source._numberValue
      _objcClassPrefix = source._objcClassPrefix
      _of = source._of
      _oneofDecl = source._oneofDecl
      _oneofDescriptorProto = source._oneofDescriptorProto
      _oneofIndex = source._oneofIndex
      _oneofOptions = source._oneofOptions
      _oneofs = source._oneofs
      _oneOfKind = source._oneOfKind
      _optimizeFor = source._optimizeFor
      _optimizeMode = source._optimizeMode
      _option = source._option
      _optionalEnumExtensionField = source._optionalEnumExtensionField
      _optionalExtensionField = source._optionalExtensionField
      _optionalGroupExtensionField = source._optionalGroupExtensionField
      _optionalMessageExtensionField = source._optionalMessageExtensionField
      _options = source._options
      _other = source._other
      _others = source._others
      _out = source._out
      _outputType = source._outputType
      _p = source._p
      _package = source._package
      _packed = source._packed
      _packedEnumExtensionField = source._packedEnumExtensionField
      _packedExtensionField = source._packedExtensionField
      _packedSize = source._packedSize
      _padding = source._padding
      _parent = source._parent
      _parse = source._parse
      _partial = source._partial
      _path = source._path
      _paths = source._paths
      _payload = source._payload
      _payloadSize = source._payloadSize
      _phpClassPrefix = source._phpClassPrefix
      _phpGenericServices = source._phpGenericServices
      _phpMetadataNamespace = source._phpMetadataNamespace
      _phpNamespace = source._phpNamespace
      _pointer = source._pointer
      _pos = source._pos
      _positiveIntValue = source._positiveIntValue
      _prefix = source._prefix
      _preserveProtoFieldNames = source._preserveProtoFieldNames
      _preTraverse = source._preTraverse
      _printUnknownFields = source._printUnknownFields
      _proto2 = source._proto2
      _proto3DefaultValue = source._proto3DefaultValue
      _protobufApiversionCheck = source._protobufApiversionCheck
      _protobufApiversion2 = source._protobufApiversion2
      _protobufBool = source._protobufBool
      _protobufBytes = source._protobufBytes
      _protobufDouble = source._protobufDouble
      _protobufEnumMap = source._protobufEnumMap
      _protobufExtension = source._protobufExtension
      _protobufFixed32 = source._protobufFixed32
      _protobufFixed64 = source._protobufFixed64
      _protobufFloat = source._protobufFloat
      _protobufInt32 = source._protobufInt32
      _protobufInt64 = source._protobufInt64
      _protobufMap = source._protobufMap
      _protobufMessageMap = source._protobufMessageMap
      _protobufSfixed32 = source._protobufSfixed32
      _protobufSfixed64 = source._protobufSfixed64
      _protobufSint32 = source._protobufSint32
      _protobufSint64 = source._protobufSint64
      _protobufString = source._protobufString
      _protobufUint32 = source._protobufUint32
      _protobufUint64 = source._protobufUint64
      _protobufExtensionFieldValues = source._protobufExtensionFieldValues
      _protobufFieldNumber = source._protobufFieldNumber
      _protobufGeneratedIsEqualTo = source._protobufGeneratedIsEqualTo
      _protobufNameMap = source._protobufNameMap
      _protobufNewField = source._protobufNewField
      _protobufPackage = source._protobufPackage
      _protocol = source._protocol
      _protoFieldName = source._protoFieldName
      _protoMessageName = source._protoMessageName
      _protoNameProviding = source._protoNameProviding
      _protoPaths = source._protoPaths
      _public = source._public
      _publicDependency = source._publicDependency
      _putBoolValue = source._putBoolValue
      _putBytesValue = source._putBytesValue
      _putDoubleValue = source._putDoubleValue
      _putEnumValue = source._putEnumValue
      _putFixedUint32 = source._putFixedUint32
      _putFixedUint64 = source._putFixedUint64
      _putFloatValue = source._putFloatValue
      _putInt64 = source._putInt64
      _putStringValue = source._putStringValue
      _putUint64 = source._putUint64
      _putUint64Hex = source._putUint64Hex
      _putVarInt = source._putVarInt
      _putZigZagVarInt = source._putZigZagVarInt
      _pyGenericServices = source._pyGenericServices
      _rawChars = source._rawChars
      _rawRepresentable = source._rawRepresentable
      _rawValue = source._rawValue
      _readBuffer = source._readBuffer
      _register = source._register
      _repeatedEnumExtensionField = source._repeatedEnumExtensionField
      _repeatedExtensionField = source._repeatedExtensionField
      _repeatedGroupExtensionField = source._repeatedGroupExtensionField
      _repeatedMessageExtensionField = source._repeatedMessageExtensionField
      _requestStreaming = source._requestStreaming
      _requestTypeURL = source._requestTypeURL
      _requiredSize = source._requiredSize
      _reservedName = source._reservedName
      _reservedRange = source._reservedRange
      _responseStreaming = source._responseStreaming
      _responseTypeURL = source._responseTypeURL
      _result = source._result
      _rethrows = source._rethrows
      _return = source._return
      _revision = source._revision
      _rhs = source._rhs
      _root = source._root
      _rubyPackage = source._rubyPackage
      _s = source._s
      _sawBackslash = source._sawBackslash
      _sawSection4Characters = source._sawSection4Characters
      _sawSection5Characters = source._sawSection5Characters
      _scanner = source._scanner
      _seconds = source._seconds
      _self_p = source._self_p
      _separator = source._separator
      _serialize = source._serialize
      _serializedData = source._serializedData
      _serializedSize = source._serializedSize
      _serverStreaming = source._serverStreaming
      _service = source._service
      _serviceDescriptorProto = source._serviceDescriptorProto
      _serviceOptions = source._serviceOptions
      _set = source._set
      _setExtensionValue = source._setExtensionValue
      _shift = source._shift
      _simpleExtensionMap = source._simpleExtensionMap
      _sizer = source._sizer
      _source = source._source
      _sourceCodeInfo = source._sourceCodeInfo
      _sourceContext = source._sourceContext
      _sourceEncoding = source._sourceEncoding
      _sourceFile = source._sourceFile
      _span = source._span
      _split = source._split
      _start = source._start
      _startArray = source._startArray
      _startField = source._startField
      _startIndex = source._startIndex
      _startMessageField = source._startMessageField
      _startObject = source._startObject
      _startRegularField = source._startRegularField
      _state = source._state
      _static = source._static
      _staticString = source._staticString
      _storage = source._storage
      _string = source._string
      _stringLiteral = source._stringLiteral
      _stringLiteralType = source._stringLiteralType
      _stringResult = source._stringResult
      _stringValue = source._stringValue
      _struct = source._struct
      _structValue = source._structValue
      _subDecoder = source._subDecoder
      _subscript = source._subscript
      _subVisitor = source._subVisitor
      _swift = source._swift
      _swiftPrefix = source._swiftPrefix
      _swiftProtobuf = source._swiftProtobuf
      _syntax = source._syntax
      _t = source._t
      _tag = source._tag
      _terminator = source._terminator
      _testDecoder = source._testDecoder
      _text = source._text
      _textDecoder = source._textDecoder
      _textFormatDecoder = source._textFormatDecoder
      _textFormatDecodingError = source._textFormatDecodingError
      _textFormatEncodingOptions = source._textFormatEncodingOptions
      _textFormatEncodingVisitor = source._textFormatEncodingVisitor
      _textFormatString = source._textFormatString
      _throws = source._throws
      _timeInterval = source._timeInterval
      _timeIntervalSince1970 = source._timeIntervalSince1970
      _timeIntervalSinceReferenceDate = source._timeIntervalSinceReferenceDate
      _timestamp = source._timestamp
      _total = source._total
      _totalSize = source._totalSize
      _trailingComments = source._trailingComments
      _traverse = source._traverse
      _true = source._true
      _try = source._try
      _type = source._type
      _typealias = source._typealias
      _typeEnum = source._typeEnum
      _typeName = source._typeName
      _typePrefix = source._typePrefix
      _typeStart = source._typeStart
      _typeUnknown = source._typeUnknown
      _typeURL = source._typeURL
      _uint32 = source._uint32
      _uint32Value = source._uint32Value
      _uint64 = source._uint64
      _uint64Value = source._uint64Value
      _uint8 = source._uint8
      _unicodeScalarLiteral = source._unicodeScalarLiteral
      _unicodeScalarLiteralType = source._unicodeScalarLiteralType
      _unicodeScalars = source._unicodeScalars
      _unicodeScalarView = source._unicodeScalarView
      _uninterpretedOption = source._uninterpretedOption
      _union = source._union
      _uniqueStorage = source._uniqueStorage
      _unknown = source._unknown
      _unknownFields_p = source._unknownFields_p
      _unknownStorage = source._unknownStorage
      _unpackTo = source._unpackTo
      _unsafeMutablePointer = source._unsafeMutablePointer
      _unsafeMutableRawBufferPointer = source._unsafeMutableRawBufferPointer
      _unsafeMutableRawPointer = source._unsafeMutableRawPointer
      _unsafeRawBufferPointer = source._unsafeRawBufferPointer
      _unsafeRawPointer = source._unsafeRawPointer
      _updatedOptions = source._updatedOptions
      _url = source._url
      _utf8 = source._utf8
      _utf8ToDouble = source._utf8ToDouble
      _utf8View = source._utf8View
      _v = source._v
      _value = source._value
      _valueField = source._valueField
      _values = source._values
      _valueType = source._valueType
      _var = source._var
      _version = source._version
      _versionString = source._versionString
      _visitExtensionFields = source._visitExtensionFields
      _visitExtensionFieldsAsMessageSet = source._visitExtensionFieldsAsMessageSet
      _visitMapField = source._visitMapField
      _visitor = source._visitor
      _visitPacked = source._visitPacked
      _visitPackedBoolField = source._visitPackedBoolField
      _visitPackedDoubleField = source._visitPackedDoubleField
      _visitPackedEnumField = source._visitPackedEnumField
      _visitPackedFixed32Field = source._visitPackedFixed32Field
      _visitPackedFixed64Field = source._visitPackedFixed64Field
      _visitPackedFloatField = source._visitPackedFloatField
      _visitPackedInt32Field = source._visitPackedInt32Field
      _visitPackedInt64Field = source._visitPackedInt64Field
      _visitPackedSfixed32Field = source._visitPackedSfixed32Field
      _visitPackedSfixed64Field = source._visitPackedSfixed64Field
      _visitPackedSint32Field = source._visitPackedSint32Field
      _visitPackedSint64Field = source._visitPackedSint64Field
      _visitPackedUint32Field = source._visitPackedUint32Field
      _visitPackedUint64Field = source._visitPackedUint64Field
      _visitRepeated = source._visitRepeated
      _visitRepeatedBoolField = source._visitRepeatedBoolField
      _visitRepeatedBytesField = source._visitRepeatedBytesField
      _visitRepeatedDoubleField = source._visitRepeatedDoubleField
      _visitRepeatedEnumField = source._visitRepeatedEnumField
      _visitRepeatedFixed32Field = source._visitRepeatedFixed32Field
      _visitRepeatedFixed64Field = source._visitRepeatedFixed64Field
      _visitRepeatedFloatField = source._visitRepeatedFloatField
      _visitRepeatedGroupField = source._visitRepeatedGroupField
      _visitRepeatedInt32Field = source._visitRepeatedInt32Field
      _visitRepeatedInt64Field = source._visitRepeatedInt64Field
      _visitRepeatedMessageField = source._visitRepeatedMessageField
      _visitRepeatedSfixed32Field = source._visitRepeatedSfixed32Field
      _visitRepeatedSfixed64Field = source._visitRepeatedSfixed64Field
      _visitRepeatedSint32Field = source._visitRepeatedSint32Field
      _visitRepeatedSint64Field = source._visitRepeatedSint64Field
      _visitRepeatedStringField = source._visitRepeatedStringField
      _visitRepeatedUint32Field = source._visitRepeatedUint32Field
      _visitRepeatedUint64Field = source._visitRepeatedUint64Field
      _visitSingular = source._visitSingular
      _visitSingularBoolField = source._visitSingularBoolField
      _visitSingularBytesField = source._visitSingularBytesField
      _visitSingularDoubleField = source._visitSingularDoubleField
      _visitSingularEnumField = source._visitSingularEnumField
      _visitSingularFixed32Field = source._visitSingularFixed32Field
      _visitSingularFixed64Field = source._visitSingularFixed64Field
      _visitSingularFloatField = source._visitSingularFloatField
      _visitSingularGroupField = source._visitSingularGroupField
      _visitSingularInt32Field = source._visitSingularInt32Field
      _visitSingularInt64Field = source._visitSingularInt64Field
      _visitSingularMessageField = source._visitSingularMessageField
      _visitSingularSfixed32Field = source._visitSingularSfixed32Field
      _visitSingularSfixed64Field = source._visitSingularSfixed64Field
      _visitSingularSint32Field = source._visitSingularSint32Field
      _visitSingularSint64Field = source._visitSingularSint64Field
      _visitSingularStringField = source._visitSingularStringField
      _visitSingularUint32Field = source._visitSingularUint32Field
      _visitSingularUint64Field = source._visitSingularUint64Field
      _visitUnknown = source._visitUnknown
      _wasDecoded = source._wasDecoded
      _weak = source._weak
      _weakDependency = source._weakDependency
      _where = source._where
      _wireFormat = source._wireFormat
      _with = source._with
      _withUnsafeBytes = source._withUnsafeBytes
      _withUnsafeMutableBytes = source._withUnsafeMutableBytes
      _work = source._work
      _wrappedType = source._wrappedType
      _written = source._written
      _yday = source._yday
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularInt32Field(value: &_storage._adjusted)
        case 2: try decoder.decodeSingularInt32Field(value: &_storage._aggregateValue)
        case 3: try decoder.decodeSingularInt32Field(value: &_storage._allCases)
        case 4: try decoder.decodeSingularInt32Field(value: &_storage._allocate)
        case 5: try decoder.decodeSingularInt32Field(value: &_storage._allowAlias)
        case 6: try decoder.decodeSingularInt32Field(value: &_storage._alwaysPrintEnumsAsInts)
        case 7: try decoder.decodeSingularInt32Field(value: &_storage._annotation)
        case 8: try decoder.decodeSingularInt32Field(value: &_storage._any)
        case 9: try decoder.decodeSingularInt32Field(value: &_storage._anyExtensionField)
        case 10: try decoder.decodeSingularInt32Field(value: &_storage._anyMessageExtension)
        case 11: try decoder.decodeSingularInt32Field(value: &_storage._anyMessageStorage)
        case 12: try decoder.decodeSingularInt32Field(value: &_storage._anyUnpackError)
        case 13: try decoder.decodeSingularInt32Field(value: &_storage._api)
        case 14: try decoder.decodeSingularInt32Field(value: &_storage._appended)
        case 15: try decoder.decodeSingularInt32Field(value: &_storage._appendUintHex)
        case 16: try decoder.decodeSingularInt32Field(value: &_storage._appendUnknown)
        case 17: try decoder.decodeSingularInt32Field(value: &_storage._areAllInitialized)
        case 18: try decoder.decodeSingularInt32Field(value: &_storage._array)
        case 19: try decoder.decodeSingularInt32Field(value: &_storage._arrayLiteral)
        case 20: try decoder.decodeSingularInt32Field(value: &_storage._arraySeparator)
        case 21: try decoder.decodeSingularInt32Field(value: &_storage._as)
        case 22: try decoder.decodeSingularInt32Field(value: &_storage._asciiOpenCurlyBracket)
        case 23: try decoder.decodeSingularInt32Field(value: &_storage._asciiZero)
        case 24: try decoder.decodeSingularInt32Field(value: &_storage._available)
        case 25: try decoder.decodeSingularInt32Field(value: &_storage._b)
        case 26: try decoder.decodeSingularInt32Field(value: &_storage._base64Values)
        case 27: try decoder.decodeSingularInt32Field(value: &_storage._baseAddress)
        case 28: try decoder.decodeSingularInt32Field(value: &_storage._baseType)
        case 29: try decoder.decodeSingularInt32Field(value: &_storage._begin)
        case 30: try decoder.decodeSingularInt32Field(value: &_storage._binary)
        case 31: try decoder.decodeSingularInt32Field(value: &_storage._binaryDecoder)
        case 32: try decoder.decodeSingularInt32Field(value: &_storage._binaryDecodingError)
        case 33: try decoder.decodeSingularInt32Field(value: &_storage._binaryDecodingOptions)
        case 34: try decoder.decodeSingularInt32Field(value: &_storage._binaryDelimited)
        case 35: try decoder.decodeSingularInt32Field(value: &_storage._binaryEncoder)
        case 36: try decoder.decodeSingularInt32Field(value: &_storage._binaryEncodingError)
        case 37: try decoder.decodeSingularInt32Field(value: &_storage._binaryEncodingMessageSetSizeVisitor)
        case 38: try decoder.decodeSingularInt32Field(value: &_storage._binaryEncodingMessageSetVisitor)
        case 39: try decoder.decodeSingularInt32Field(value: &_storage._binaryEncodingSizeVisitor)
        case 40: try decoder.decodeSingularInt32Field(value: &_storage._binaryEncodingVisitor)
        case 41: try decoder.decodeSingularInt32Field(value: &_storage._binaryOptions)
        case 42: try decoder.decodeSingularInt32Field(value: &_storage._body)
        case 43: try decoder.decodeSingularInt32Field(value: &_storage._bodySize)
        case 44: try decoder.decodeSingularInt32Field(value: &_storage._bool)
        case 45: try decoder.decodeSingularInt32Field(value: &_storage._booleanLiteral)
        case 46: try decoder.decodeSingularInt32Field(value: &_storage._booleanLiteralType)
        case 47: try decoder.decodeSingularInt32Field(value: &_storage._boolValue)
        case 48: try decoder.decodeSingularInt32Field(value: &_storage._bytes)
        case 49: try decoder.decodeSingularInt32Field(value: &_storage._bytesInGroup)
        case 50: try decoder.decodeSingularInt32Field(value: &_storage._bytesRead)
        case 51: try decoder.decodeSingularInt32Field(value: &_storage._bytesValue)
        case 52: try decoder.decodeSingularInt32Field(value: &_storage._c)
        case 53: try decoder.decodeSingularInt32Field(value: &_storage._capacity)
        case 54: try decoder.decodeSingularInt32Field(value: &_storage._capitalizeNext)
        case 55: try decoder.decodeSingularInt32Field(value: &_storage._cardinality)
        case 56: try decoder.decodeSingularInt32Field(value: &_storage._ccEnableArenas)
        case 57: try decoder.decodeSingularInt32Field(value: &_storage._ccGenericServices)
        case 58: try decoder.decodeSingularInt32Field(value: &_storage._character)
        case 59: try decoder.decodeSingularInt32Field(value: &_storage._chars)
        case 60: try decoder.decodeSingularInt32Field(value: &_storage._class)
        case 61: try decoder.decodeSingularInt32Field(value: &_storage._clearAggregateValue_p)
        case 62: try decoder.decodeSingularInt32Field(value: &_storage._clearAllowAlias_p)
        case 63: try decoder.decodeSingularInt32Field(value: &_storage._clearBegin_p)
        case 64: try decoder.decodeSingularInt32Field(value: &_storage._clearCcEnableArenas_p)
        case 65: try decoder.decodeSingularInt32Field(value: &_storage._clearCcGenericServices_p)
        case 66: try decoder.decodeSingularInt32Field(value: &_storage._clearClientStreaming_p)
        case 67: try decoder.decodeSingularInt32Field(value: &_storage._clearCsharpNamespace_p)
        case 68: try decoder.decodeSingularInt32Field(value: &_storage._clearCtype_p)
        case 69: try decoder.decodeSingularInt32Field(value: &_storage._clearDefaultValue_p)
        case 70: try decoder.decodeSingularInt32Field(value: &_storage._clearDeprecated_p)
        case 71: try decoder.decodeSingularInt32Field(value: &_storage._clearDoubleValue_p)
        case 72: try decoder.decodeSingularInt32Field(value: &_storage._clearEnd_p)
        case 73: try decoder.decodeSingularInt32Field(value: &_storage._clearExtendee_p)
        case 74: try decoder.decodeSingularInt32Field(value: &_storage._clearExtensionValue_p)
        case 75: try decoder.decodeSingularInt32Field(value: &_storage._clearGoPackage_p)
        case 76: try decoder.decodeSingularInt32Field(value: &_storage._clearIdempotencyLevel_p)
        case 77: try decoder.decodeSingularInt32Field(value: &_storage._clearIdentifierValue_p)
        case 78: try decoder.decodeSingularInt32Field(value: &_storage._clearInputType_p)
        case 79: try decoder.decodeSingularInt32Field(value: &_storage._clearIsExtension_p)
        case 80: try decoder.decodeSingularInt32Field(value: &_storage._clearJavaGenerateEqualsAndHash_p)
        case 81: try decoder.decodeSingularInt32Field(value: &_storage._clearJavaGenericServices_p)
        case 82: try decoder.decodeSingularInt32Field(value: &_storage._clearJavaMultipleFiles_p)
        case 83: try decoder.decodeSingularInt32Field(value: &_storage._clearJavaOuterClassname_p)
        case 84: try decoder.decodeSingularInt32Field(value: &_storage._clearJavaPackage_p)
        case 85: try decoder.decodeSingularInt32Field(value: &_storage._clearJavaStringCheckUtf8_p)
        case 86: try decoder.decodeSingularInt32Field(value: &_storage._clearJsonName_p)
        case 87: try decoder.decodeSingularInt32Field(value: &_storage._clearJstype_p)
        case 88: try decoder.decodeSingularInt32Field(value: &_storage._clearLabel_p)
        case 89: try decoder.decodeSingularInt32Field(value: &_storage._clearLazy_p)
        case 90: try decoder.decodeSingularInt32Field(value: &_storage._clearLeadingComments_p)
        case 91: try decoder.decodeSingularInt32Field(value: &_storage._clearMapEntry_p)
        case 92: try decoder.decodeSingularInt32Field(value: &_storage._clearMessageSetWireFormat_p)
        case 93: try decoder.decodeSingularInt32Field(value: &_storage._clearName_p)
        case 94: try decoder.decodeSingularInt32Field(value: &_storage._clearNamePart_p)
        case 95: try decoder.decodeSingularInt32Field(value: &_storage._clearNegativeIntValue_p)
        case 96: try decoder.decodeSingularInt32Field(value: &_storage._clearNoStandardDescriptorAccessor_p)
        case 97: try decoder.decodeSingularInt32Field(value: &_storage._clearNumber_p)
        case 98: try decoder.decodeSingularInt32Field(value: &_storage._clearObjcClassPrefix_p)
        case 99: try decoder.decodeSingularInt32Field(value: &_storage._clearOneofIndex_p)
        case 100: try decoder.decodeSingularInt32Field(value: &_storage._clearOptimizeFor_p)
        case 101: try decoder.decodeSingularInt32Field(value: &_storage._clearOptions_p)
        case 102: try decoder.decodeSingularInt32Field(value: &_storage._clearOutputType_p)
        case 103: try decoder.decodeSingularInt32Field(value: &_storage._clearPackage_p)
        case 104: try decoder.decodeSingularInt32Field(value: &_storage._clearPacked_p)
        case 105: try decoder.decodeSingularInt32Field(value: &_storage._clearPhpClassPrefix_p)
        case 106: try decoder.decodeSingularInt32Field(value: &_storage._clearPhpGenericServices_p)
        case 107: try decoder.decodeSingularInt32Field(value: &_storage._clearPhpMetadataNamespace_p)
        case 108: try decoder.decodeSingularInt32Field(value: &_storage._clearPhpNamespace_p)
        case 109: try decoder.decodeSingularInt32Field(value: &_storage._clearPositiveIntValue_p)
        case 110: try decoder.decodeSingularInt32Field(value: &_storage._clearPyGenericServices_p)
        case 111: try decoder.decodeSingularInt32Field(value: &_storage._clearRubyPackage_p)
        case 112: try decoder.decodeSingularInt32Field(value: &_storage._clearServerStreaming_p)
        case 113: try decoder.decodeSingularInt32Field(value: &_storage._clearSourceCodeInfo_p)
        case 114: try decoder.decodeSingularInt32Field(value: &_storage._clearSourceContext_p)
        case 115: try decoder.decodeSingularInt32Field(value: &_storage._clearSourceFile_p)
        case 116: try decoder.decodeSingularInt32Field(value: &_storage._clearStart_p)
        case 117: try decoder.decodeSingularInt32Field(value: &_storage._clearStringValue_p)
        case 118: try decoder.decodeSingularInt32Field(value: &_storage._clearSwiftPrefix_p)
        case 119: try decoder.decodeSingularInt32Field(value: &_storage._clearSyntax_p)
        case 120: try decoder.decodeSingularInt32Field(value: &_storage._clearTrailingComments_p)
        case 121: try decoder.decodeSingularInt32Field(value: &_storage._clearType_p)
        case 122: try decoder.decodeSingularInt32Field(value: &_storage._clearTypeName_p)
        case 123: try decoder.decodeSingularInt32Field(value: &_storage._clearValue_p)
        case 124: try decoder.decodeSingularInt32Field(value: &_storage._clearWeak_p)
        case 125: try decoder.decodeSingularInt32Field(value: &_storage._clientStreaming)
        case 126: try decoder.decodeSingularInt32Field(value: &_storage._codeUnits)
        case 127: try decoder.decodeSingularInt32Field(value: &_storage._collection)
        case 128: try decoder.decodeSingularInt32Field(value: &_storage._com)
        case 129: try decoder.decodeSingularInt32Field(value: &_storage._comma)
        case 130: try decoder.decodeSingularInt32Field(value: &_storage._contentsOf)
        case 131: try decoder.decodeSingularInt32Field(value: &_storage._contiguousBytes)
        case 132: try decoder.decodeSingularInt32Field(value: &_storage._count)
        case 133: try decoder.decodeSingularInt32Field(value: &_storage._countVarintsInBuffer)
        case 134: try decoder.decodeSingularInt32Field(value: &_storage._csharpNamespace)
        case 135: try decoder.decodeSingularInt32Field(value: &_storage._ctype)
        case 136: try decoder.decodeSingularInt32Field(value: &_storage._customCodable)
        case 137: try decoder.decodeSingularInt32Field(value: &_storage._customDebugStringConvertible)
        case 138: try decoder.decodeSingularInt32Field(value: &_storage._d)
        case 139: try decoder.decodeSingularInt32Field(value: &_storage._data)
        case 140: try decoder.decodeSingularInt32Field(value: &_storage._dataResult)
        case 141: try decoder.decodeSingularInt32Field(value: &_storage._dataSize)
        case 142: try decoder.decodeSingularInt32Field(value: &_storage._date)
        case 143: try decoder.decodeSingularInt32Field(value: &_storage._daySec)
        case 144: try decoder.decodeSingularInt32Field(value: &_storage._daysSinceEpoch)
        case 145: try decoder.decodeSingularInt32Field(value: &_storage._debugDescription_p)
        case 146: try decoder.decodeSingularInt32Field(value: &_storage._decoded)
        case 147: try decoder.decodeSingularInt32Field(value: &_storage._decodedFromJsonnull)
        case 148: try decoder.decodeSingularInt32Field(value: &_storage._decodeExtensionField)
        case 149: try decoder.decodeSingularInt32Field(value: &_storage._decodeExtensionFieldsAsMessageSet)
        case 150: try decoder.decodeSingularInt32Field(value: &_storage._decodeJson)
        case 151: try decoder.decodeSingularInt32Field(value: &_storage._decodeMapField)
        case 152: try decoder.decodeSingularInt32Field(value: &_storage._decodeMessage)
        case 153: try decoder.decodeSingularInt32Field(value: &_storage._decoder)
        case 154: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeated)
        case 155: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedBoolField)
        case 156: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedBytesField)
        case 157: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedDoubleField)
        case 158: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedEnumField)
        case 159: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedFixed32Field)
        case 160: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedFixed64Field)
        case 161: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedFloatField)
        case 162: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedGroupField)
        case 163: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedInt32Field)
        case 164: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedInt64Field)
        case 165: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedMessageField)
        case 166: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedSfixed32Field)
        case 167: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedSfixed64Field)
        case 168: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedSint32Field)
        case 169: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedSint64Field)
        case 170: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedStringField)
        case 171: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedUint32Field)
        case 172: try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedUint64Field)
        case 173: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingular)
        case 174: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularBoolField)
        case 175: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularBytesField)
        case 176: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularDoubleField)
        case 177: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularEnumField)
        case 178: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularFixed32Field)
        case 179: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularFixed64Field)
        case 180: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularFloatField)
        case 181: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularGroupField)
        case 182: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularInt32Field)
        case 183: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularInt64Field)
        case 184: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularMessageField)
        case 185: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularSfixed32Field)
        case 186: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularSfixed64Field)
        case 187: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularSint32Field)
        case 188: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularSint64Field)
        case 189: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularStringField)
        case 190: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularUint32Field)
        case 191: try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularUint64Field)
        case 192: try decoder.decodeSingularInt32Field(value: &_storage._decodeTextFormat)
        case 193: try decoder.decodeSingularInt32Field(value: &_storage._defaultAnyTypeUrlprefix)
        case 194: try decoder.decodeSingularInt32Field(value: &_storage._defaultValue)
        case 195: try decoder.decodeSingularInt32Field(value: &_storage._dependency)
        case 196: try decoder.decodeSingularInt32Field(value: &_storage._deprecated)
        case 197: try decoder.decodeSingularInt32Field(value: &_storage._description_p)
        case 198: try decoder.decodeSingularInt32Field(value: &_storage._descriptorProto)
        case 199: try decoder.decodeSingularInt32Field(value: &_storage._dictionary)
        case 200: try decoder.decodeSingularInt32Field(value: &_storage._dictionaryLiteral)
        case 201: try decoder.decodeSingularInt32Field(value: &_storage._digit)
        case 202: try decoder.decodeSingularInt32Field(value: &_storage._digit0)
        case 203: try decoder.decodeSingularInt32Field(value: &_storage._digit1)
        case 204: try decoder.decodeSingularInt32Field(value: &_storage._digitCount)
        case 205: try decoder.decodeSingularInt32Field(value: &_storage._digits)
        case 206: try decoder.decodeSingularInt32Field(value: &_storage._digitValue)
        case 207: try decoder.decodeSingularInt32Field(value: &_storage._discardableResult)
        case 208: try decoder.decodeSingularInt32Field(value: &_storage._discardUnknownFields)
        case 209: try decoder.decodeSingularInt32Field(value: &_storage._distance)
        case 210: try decoder.decodeSingularInt32Field(value: &_storage._double)
        case 211: try decoder.decodeSingularInt32Field(value: &_storage._doubleValue)
        case 212: try decoder.decodeSingularInt32Field(value: &_storage._duration)
        case 213: try decoder.decodeSingularInt32Field(value: &_storage._e)
        case 214: try decoder.decodeSingularInt32Field(value: &_storage._element)
        case 215: try decoder.decodeSingularInt32Field(value: &_storage._elements)
        case 216: try decoder.decodeSingularInt32Field(value: &_storage._emitExtensionFieldName)
        case 217: try decoder.decodeSingularInt32Field(value: &_storage._emitFieldName)
        case 218: try decoder.decodeSingularInt32Field(value: &_storage._emitFieldNumber)
        case 219: try decoder.decodeSingularInt32Field(value: &_storage._empty)
        case 220: try decoder.decodeSingularInt32Field(value: &_storage._emptyData)
        case 221: try decoder.decodeSingularInt32Field(value: &_storage._encodeAsBytes)
        case 222: try decoder.decodeSingularInt32Field(value: &_storage._encoded)
        case 223: try decoder.decodeSingularInt32Field(value: &_storage._encodedJsonstring)
        case 224: try decoder.decodeSingularInt32Field(value: &_storage._encodedSize)
        case 225: try decoder.decodeSingularInt32Field(value: &_storage._encodeField)
        case 226: try decoder.decodeSingularInt32Field(value: &_storage._encoder)
        case 227: try decoder.decodeSingularInt32Field(value: &_storage._end)
        case 228: try decoder.decodeSingularInt32Field(value: &_storage._endArray)
        case 229: try decoder.decodeSingularInt32Field(value: &_storage._endMessageField)
        case 230: try decoder.decodeSingularInt32Field(value: &_storage._endObject)
        case 231: try decoder.decodeSingularInt32Field(value: &_storage._endRegularField)
        case 232: try decoder.decodeSingularInt32Field(value: &_storage._enum)
        case 233: try decoder.decodeSingularInt32Field(value: &_storage._enumDescriptorProto)
        case 234: try decoder.decodeSingularInt32Field(value: &_storage._enumOptions)
        case 235: try decoder.decodeSingularInt32Field(value: &_storage._enumReservedRange)
        case 236: try decoder.decodeSingularInt32Field(value: &_storage._enumType)
        case 237: try decoder.decodeSingularInt32Field(value: &_storage._enumvalue)
        case 238: try decoder.decodeSingularInt32Field(value: &_storage._enumValueDescriptorProto)
        case 239: try decoder.decodeSingularInt32Field(value: &_storage._enumValueOptions)
        case 240: try decoder.decodeSingularInt32Field(value: &_storage._equatable)
        case 241: try decoder.decodeSingularInt32Field(value: &_storage._error)
        case 242: try decoder.decodeSingularInt32Field(value: &_storage._expressibleByArrayLiteral)
        case 243: try decoder.decodeSingularInt32Field(value: &_storage._expressibleByDictionaryLiteral)
        case 244: try decoder.decodeSingularInt32Field(value: &_storage._ext)
        case 245: try decoder.decodeSingularInt32Field(value: &_storage._extDecoder)
        case 246: try decoder.decodeSingularInt32Field(value: &_storage._extendedGraphemeClusterLiteral)
        case 247: try decoder.decodeSingularInt32Field(value: &_storage._extendedGraphemeClusterLiteralType)
        case 248: try decoder.decodeSingularInt32Field(value: &_storage._extendee)
        case 249: try decoder.decodeSingularInt32Field(value: &_storage._extensibleMessage)
        case 250: try decoder.decodeSingularInt32Field(value: &_storage._extension)
        case 251: try decoder.decodeSingularInt32Field(value: &_storage._extensionField)
        case 252: try decoder.decodeSingularInt32Field(value: &_storage._extensionFieldNumber)
        case 253: try decoder.decodeSingularInt32Field(value: &_storage._extensionFieldValueSet)
        case 254: try decoder.decodeSingularInt32Field(value: &_storage._extensionMap)
        case 255: try decoder.decodeSingularInt32Field(value: &_storage._extensionRange)
        case 256: try decoder.decodeSingularInt32Field(value: &_storage._extensionRangeOptions)
        case 257: try decoder.decodeSingularInt32Field(value: &_storage._extensions)
        case 258: try decoder.decodeSingularInt32Field(value: &_storage._extras)
        case 259: try decoder.decodeSingularInt32Field(value: &_storage._f)
        case 260: try decoder.decodeSingularInt32Field(value: &_storage._false)
        case 261: try decoder.decodeSingularInt32Field(value: &_storage._field)
        case 262: try decoder.decodeSingularInt32Field(value: &_storage._fieldData)
        case 263: try decoder.decodeSingularInt32Field(value: &_storage._fieldDescriptorProto)
        case 264: try decoder.decodeSingularInt32Field(value: &_storage._fieldMask)
        case 265: try decoder.decodeSingularInt32Field(value: &_storage._fieldName)
        case 266: try decoder.decodeSingularInt32Field(value: &_storage._fieldNameCount)
        case 267: try decoder.decodeSingularInt32Field(value: &_storage._fieldNum)
        case 268: try decoder.decodeSingularInt32Field(value: &_storage._fieldNumber)
        case 269: try decoder.decodeSingularInt32Field(value: &_storage._fieldNumberForProto)
        case 270: try decoder.decodeSingularInt32Field(value: &_storage._fieldOptions)
        case 271: try decoder.decodeSingularInt32Field(value: &_storage._fields)
        case 272: try decoder.decodeSingularInt32Field(value: &_storage._fieldSize)
        case 273: try decoder.decodeSingularInt32Field(value: &_storage._fieldTag)
        case 274: try decoder.decodeSingularInt32Field(value: &_storage._fieldType)
        case 275: try decoder.decodeSingularInt32Field(value: &_storage._fieldValue)
        case 276: try decoder.decodeSingularInt32Field(value: &_storage._file)
        case 277: try decoder.decodeSingularInt32Field(value: &_storage._fileDescriptorProto)
        case 278: try decoder.decodeSingularInt32Field(value: &_storage._fileDescriptorSet)
        case 279: try decoder.decodeSingularInt32Field(value: &_storage._fileName)
        case 280: try decoder.decodeSingularInt32Field(value: &_storage._fileOptions)
        case 281: try decoder.decodeSingularInt32Field(value: &_storage._filter)
        case 282: try decoder.decodeSingularInt32Field(value: &_storage._firstItem)
        case 283: try decoder.decodeSingularInt32Field(value: &_storage._float)
        case 284: try decoder.decodeSingularInt32Field(value: &_storage._floatLiteral)
        case 285: try decoder.decodeSingularInt32Field(value: &_storage._floatLiteralType)
        case 286: try decoder.decodeSingularInt32Field(value: &_storage._floatValue)
        case 287: try decoder.decodeSingularInt32Field(value: &_storage._forMessageName)
        case 288: try decoder.decodeSingularInt32Field(value: &_storage._formUnion)
        case 289: try decoder.decodeSingularInt32Field(value: &_storage._forReadingFrom)
        case 290: try decoder.decodeSingularInt32Field(value: &_storage._forTypeURL)
        case 291: try decoder.decodeSingularInt32Field(value: &_storage._forwardParser)
        case 292: try decoder.decodeSingularInt32Field(value: &_storage._forWritingInto)
        case 293: try decoder.decodeSingularInt32Field(value: &_storage._from)
        case 294: try decoder.decodeSingularInt32Field(value: &_storage._fromAscii2)
        case 295: try decoder.decodeSingularInt32Field(value: &_storage._fromAscii4)
        case 296: try decoder.decodeSingularInt32Field(value: &_storage._fromByteOffset)
        case 297: try decoder.decodeSingularInt32Field(value: &_storage._fromHexDigit)
        case 298: try decoder.decodeSingularInt32Field(value: &_storage._func)
        case 299: try decoder.decodeSingularInt32Field(value: &_storage._g)
        case 300: try decoder.decodeSingularInt32Field(value: &_storage._generatedCodeInfo)
        case 301: try decoder.decodeSingularInt32Field(value: &_storage._get)
        case 302: try decoder.decodeSingularInt32Field(value: &_storage._getExtensionValue)
        case 303: try decoder.decodeSingularInt32Field(value: &_storage._googleapis)
        case 304: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufAny)
        case 305: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufApi)
        case 306: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufBoolValue)
        case 307: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufBytesValue)
        case 308: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufDescriptorProto)
        case 309: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufDoubleValue)
        case 310: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufDuration)
        case 311: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufEmpty)
        case 312: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufEnum)
        case 313: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufEnumDescriptorProto)
        case 314: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufEnumOptions)
        case 315: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufEnumValue)
        case 316: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufEnumValueDescriptorProto)
        case 317: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufEnumValueOptions)
        case 318: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufExtensionRangeOptions)
        case 319: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufField)
        case 320: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufFieldDescriptorProto)
        case 321: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufFieldMask)
        case 322: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufFieldOptions)
        case 323: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufFileDescriptorProto)
        case 324: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufFileDescriptorSet)
        case 325: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufFileOptions)
        case 326: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufFloatValue)
        case 327: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufGeneratedCodeInfo)
        case 328: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufInt32Value)
        case 329: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufInt64Value)
        case 330: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufListValue)
        case 331: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufMessageOptions)
        case 332: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufMethod)
        case 333: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufMethodDescriptorProto)
        case 334: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufMethodOptions)
        case 335: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufMixin)
        case 336: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufNullValue)
        case 337: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufOneofDescriptorProto)
        case 338: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufOneofOptions)
        case 339: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufOption)
        case 340: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufServiceDescriptorProto)
        case 341: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufServiceOptions)
        case 342: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufSourceCodeInfo)
        case 343: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufSourceContext)
        case 344: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufStringValue)
        case 345: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufStruct)
        case 346: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufSyntax)
        case 347: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufTimestamp)
        case 348: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufType)
        case 349: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufUint32Value)
        case 350: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufUint64Value)
        case 351: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufUninterpretedOption)
        case 352: try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufValue)
        case 353: try decoder.decodeSingularInt32Field(value: &_storage._goPackage)
        case 354: try decoder.decodeSingularInt32Field(value: &_storage._group)
        case 355: try decoder.decodeSingularInt32Field(value: &_storage._groupFieldNumberStack)
        case 356: try decoder.decodeSingularInt32Field(value: &_storage._groupSize)
        case 357: try decoder.decodeSingularInt32Field(value: &_storage._h)
        case 358: try decoder.decodeSingularInt32Field(value: &_storage._handleConflictingOneOf)
        case 359: try decoder.decodeSingularInt32Field(value: &_storage._hasAggregateValue_p)
        case 360: try decoder.decodeSingularInt32Field(value: &_storage._hasAllowAlias_p)
        case 361: try decoder.decodeSingularInt32Field(value: &_storage._hasBegin_p)
        case 362: try decoder.decodeSingularInt32Field(value: &_storage._hasCcEnableArenas_p)
        case 363: try decoder.decodeSingularInt32Field(value: &_storage._hasCcGenericServices_p)
        case 364: try decoder.decodeSingularInt32Field(value: &_storage._hasClientStreaming_p)
        case 365: try decoder.decodeSingularInt32Field(value: &_storage._hasCsharpNamespace_p)
        case 366: try decoder.decodeSingularInt32Field(value: &_storage._hasCtype_p)
        case 367: try decoder.decodeSingularInt32Field(value: &_storage._hasDefaultValue_p)
        case 368: try decoder.decodeSingularInt32Field(value: &_storage._hasDeprecated_p)
        case 369: try decoder.decodeSingularInt32Field(value: &_storage._hasDoubleValue_p)
        case 370: try decoder.decodeSingularInt32Field(value: &_storage._hasEnd_p)
        case 371: try decoder.decodeSingularInt32Field(value: &_storage._hasExtendee_p)
        case 372: try decoder.decodeSingularInt32Field(value: &_storage._hasExtensionValue_p)
        case 373: try decoder.decodeSingularInt32Field(value: &_storage._hasGoPackage_p)
        case 374: try decoder.decodeSingularInt32Field(value: &_storage._hash)
        case 375: try decoder.decodeSingularInt32Field(value: &_storage._hashable)
        case 376: try decoder.decodeSingularInt32Field(value: &_storage._hasher)
        case 377: try decoder.decodeSingularInt32Field(value: &_storage._hashValue_p)
        case 378: try decoder.decodeSingularInt32Field(value: &_storage._hashVisitor)
        case 379: try decoder.decodeSingularInt32Field(value: &_storage._hasIdempotencyLevel_p)
        case 380: try decoder.decodeSingularInt32Field(value: &_storage._hasIdentifierValue_p)
        case 381: try decoder.decodeSingularInt32Field(value: &_storage._hasInputType_p)
        case 382: try decoder.decodeSingularInt32Field(value: &_storage._hasIsExtension_p)
        case 383: try decoder.decodeSingularInt32Field(value: &_storage._hasJavaGenerateEqualsAndHash_p)
        case 384: try decoder.decodeSingularInt32Field(value: &_storage._hasJavaGenericServices_p)
        case 385: try decoder.decodeSingularInt32Field(value: &_storage._hasJavaMultipleFiles_p)
        case 386: try decoder.decodeSingularInt32Field(value: &_storage._hasJavaOuterClassname_p)
        case 387: try decoder.decodeSingularInt32Field(value: &_storage._hasJavaPackage_p)
        case 388: try decoder.decodeSingularInt32Field(value: &_storage._hasJavaStringCheckUtf8_p)
        case 389: try decoder.decodeSingularInt32Field(value: &_storage._hasJsonName_p)
        case 390: try decoder.decodeSingularInt32Field(value: &_storage._hasJstype_p)
        case 391: try decoder.decodeSingularInt32Field(value: &_storage._hasLabel_p)
        case 392: try decoder.decodeSingularInt32Field(value: &_storage._hasLazy_p)
        case 393: try decoder.decodeSingularInt32Field(value: &_storage._hasLeadingComments_p)
        case 394: try decoder.decodeSingularInt32Field(value: &_storage._hasMapEntry_p)
        case 395: try decoder.decodeSingularInt32Field(value: &_storage._hasMessageSetWireFormat_p)
        case 396: try decoder.decodeSingularInt32Field(value: &_storage._hasName_p)
        case 397: try decoder.decodeSingularInt32Field(value: &_storage._hasNamePart_p)
        case 398: try decoder.decodeSingularInt32Field(value: &_storage._hasNegativeIntValue_p)
        case 399: try decoder.decodeSingularInt32Field(value: &_storage._hasNoStandardDescriptorAccessor_p)
        case 400: try decoder.decodeSingularInt32Field(value: &_storage._hasNumber_p)
        case 401: try decoder.decodeSingularInt32Field(value: &_storage._hasObjcClassPrefix_p)
        case 402: try decoder.decodeSingularInt32Field(value: &_storage._hasOneofIndex_p)
        case 403: try decoder.decodeSingularInt32Field(value: &_storage._hasOptimizeFor_p)
        case 404: try decoder.decodeSingularInt32Field(value: &_storage._hasOptions_p)
        case 405: try decoder.decodeSingularInt32Field(value: &_storage._hasOutputType_p)
        case 406: try decoder.decodeSingularInt32Field(value: &_storage._hasPackage_p)
        case 407: try decoder.decodeSingularInt32Field(value: &_storage._hasPacked_p)
        case 408: try decoder.decodeSingularInt32Field(value: &_storage._hasPhpClassPrefix_p)
        case 409: try decoder.decodeSingularInt32Field(value: &_storage._hasPhpGenericServices_p)
        case 410: try decoder.decodeSingularInt32Field(value: &_storage._hasPhpMetadataNamespace_p)
        case 411: try decoder.decodeSingularInt32Field(value: &_storage._hasPhpNamespace_p)
        case 412: try decoder.decodeSingularInt32Field(value: &_storage._hasPositiveIntValue_p)
        case 413: try decoder.decodeSingularInt32Field(value: &_storage._hasPyGenericServices_p)
        case 414: try decoder.decodeSingularInt32Field(value: &_storage._hasRubyPackage_p)
        case 415: try decoder.decodeSingularInt32Field(value: &_storage._hasServerStreaming_p)
        case 416: try decoder.decodeSingularInt32Field(value: &_storage._hasSourceCodeInfo_p)
        case 417: try decoder.decodeSingularInt32Field(value: &_storage._hasSourceContext_p)
        case 418: try decoder.decodeSingularInt32Field(value: &_storage._hasSourceFile_p)
        case 419: try decoder.decodeSingularInt32Field(value: &_storage._hasStart_p)
        case 420: try decoder.decodeSingularInt32Field(value: &_storage._hasStringValue_p)
        case 421: try decoder.decodeSingularInt32Field(value: &_storage._hasSwiftPrefix_p)
        case 422: try decoder.decodeSingularInt32Field(value: &_storage._hasSyntax_p)
        case 423: try decoder.decodeSingularInt32Field(value: &_storage._hasTrailingComments_p)
        case 424: try decoder.decodeSingularInt32Field(value: &_storage._hasType_p)
        case 425: try decoder.decodeSingularInt32Field(value: &_storage._hasTypeName_p)
        case 426: try decoder.decodeSingularInt32Field(value: &_storage._hasValue_p)
        case 427: try decoder.decodeSingularInt32Field(value: &_storage._hasWeak_p)
        case 428: try decoder.decodeSingularInt32Field(value: &_storage._hour)
        case 429: try decoder.decodeSingularInt32Field(value: &_storage._i)
        case 430: try decoder.decodeSingularInt32Field(value: &_storage._idempotencyLevel)
        case 431: try decoder.decodeSingularInt32Field(value: &_storage._identifierValue)
        case 432: try decoder.decodeSingularInt32Field(value: &_storage._if)
        case 433: try decoder.decodeSingularInt32Field(value: &_storage._ignoreUnknownFields)
        case 434: try decoder.decodeSingularInt32Field(value: &_storage._index)
        case 435: try decoder.decodeSingularInt32Field(value: &_storage._init_p)
        case 436: try decoder.decodeSingularInt32Field(value: &_storage._inout)
        case 437: try decoder.decodeSingularInt32Field(value: &_storage._inputType)
        case 438: try decoder.decodeSingularInt32Field(value: &_storage._insert)
        case 439: try decoder.decodeSingularInt32Field(value: &_storage._int)
        case 440: try decoder.decodeSingularInt32Field(value: &_storage._int32)
        case 441: try decoder.decodeSingularInt32Field(value: &_storage._int32Value)
        case 442: try decoder.decodeSingularInt32Field(value: &_storage._int64)
        case 443: try decoder.decodeSingularInt32Field(value: &_storage._int64Value)
        case 444: try decoder.decodeSingularInt32Field(value: &_storage._int8)
        case 445: try decoder.decodeSingularInt32Field(value: &_storage._integerLiteral)
        case 446: try decoder.decodeSingularInt32Field(value: &_storage._integerLiteralType)
        case 447: try decoder.decodeSingularInt32Field(value: &_storage._intern)
        case 448: try decoder.decodeSingularInt32Field(value: &_storage._internal)
        case 449: try decoder.decodeSingularInt32Field(value: &_storage._internalState)
        case 450: try decoder.decodeSingularInt32Field(value: &_storage._into)
        case 451: try decoder.decodeSingularInt32Field(value: &_storage._ints)
        case 452: try decoder.decodeSingularInt32Field(value: &_storage._isA)
        case 453: try decoder.decodeSingularInt32Field(value: &_storage._isEqual)
        case 454: try decoder.decodeSingularInt32Field(value: &_storage._isEqualTo)
        case 455: try decoder.decodeSingularInt32Field(value: &_storage._isExtension)
        case 456: try decoder.decodeSingularInt32Field(value: &_storage._isInitialized_p)
        case 457: try decoder.decodeSingularInt32Field(value: &_storage._itemTagsEncodedSize)
        case 458: try decoder.decodeSingularInt32Field(value: &_storage._i2166136261)
        case 459: try decoder.decodeSingularInt32Field(value: &_storage._javaGenerateEqualsAndHash)
        case 460: try decoder.decodeSingularInt32Field(value: &_storage._javaGenericServices)
        case 461: try decoder.decodeSingularInt32Field(value: &_storage._javaMultipleFiles)
        case 462: try decoder.decodeSingularInt32Field(value: &_storage._javaOuterClassname)
        case 463: try decoder.decodeSingularInt32Field(value: &_storage._javaPackage)
        case 464: try decoder.decodeSingularInt32Field(value: &_storage._javaStringCheckUtf8)
        case 465: try decoder.decodeSingularInt32Field(value: &_storage._jsondecoder)
        case 466: try decoder.decodeSingularInt32Field(value: &_storage._jsondecodingError)
        case 467: try decoder.decodeSingularInt32Field(value: &_storage._jsondecodingOptions)
        case 468: try decoder.decodeSingularInt32Field(value: &_storage._jsonEncoder)
        case 469: try decoder.decodeSingularInt32Field(value: &_storage._jsonencodingError)
        case 470: try decoder.decodeSingularInt32Field(value: &_storage._jsonencodingOptions)
        case 471: try decoder.decodeSingularInt32Field(value: &_storage._jsonencodingVisitor)
        case 472: try decoder.decodeSingularInt32Field(value: &_storage._jsonmapEncodingVisitor)
        case 473: try decoder.decodeSingularInt32Field(value: &_storage._jsonName)
        case 474: try decoder.decodeSingularInt32Field(value: &_storage._jsonPath)
        case 475: try decoder.decodeSingularInt32Field(value: &_storage._jsonPaths)
        case 476: try decoder.decodeSingularInt32Field(value: &_storage._jsonscanner)
        case 477: try decoder.decodeSingularInt32Field(value: &_storage._jsonString)
        case 478: try decoder.decodeSingularInt32Field(value: &_storage._jsonText)
        case 479: try decoder.decodeSingularInt32Field(value: &_storage._jsonUtf8Data)
        case 480: try decoder.decodeSingularInt32Field(value: &_storage._jstype)
        case 481: try decoder.decodeSingularInt32Field(value: &_storage._k)
        case 482: try decoder.decodeSingularInt32Field(value: &_storage._key)
        case 483: try decoder.decodeSingularInt32Field(value: &_storage._keyField)
        case 484: try decoder.decodeSingularInt32Field(value: &_storage._keyType)
        case 485: try decoder.decodeSingularInt32Field(value: &_storage._kind)
        case 486: try decoder.decodeSingularInt32Field(value: &_storage._l)
        case 487: try decoder.decodeSingularInt32Field(value: &_storage._label)
        case 488: try decoder.decodeSingularInt32Field(value: &_storage._lazy)
        case 489: try decoder.decodeSingularInt32Field(value: &_storage._leadingComments)
        case 490: try decoder.decodeSingularInt32Field(value: &_storage._leadingDetachedComments)
        case 491: try decoder.decodeSingularInt32Field(value: &_storage._length)
        case 492: try decoder.decodeSingularInt32Field(value: &_storage._let)
        case 493: try decoder.decodeSingularInt32Field(value: &_storage._lhs)
        case 494: try decoder.decodeSingularInt32Field(value: &_storage._list)
        case 495: try decoder.decodeSingularInt32Field(value: &_storage._listOfMessages)
        case 496: try decoder.decodeSingularInt32Field(value: &_storage._listValue)
        case 497: try decoder.decodeSingularInt32Field(value: &_storage._littleEndian)
        case 498: try decoder.decodeSingularInt32Field(value: &_storage._littleEndianBytes)
        case 499: try decoder.decodeSingularInt32Field(value: &_storage._load)
        case 500: try decoder.decodeSingularInt32Field(value: &_storage._localHasher)
        case 501: try decoder.decodeSingularInt32Field(value: &_storage._location)
        case 502: try decoder.decodeSingularInt32Field(value: &_storage._m)
        case 503: try decoder.decodeSingularInt32Field(value: &_storage._major)
        case 504: try decoder.decodeSingularInt32Field(value: &_storage._makeIterator)
        case 505: try decoder.decodeSingularInt32Field(value: &_storage._mapEntry)
        case 506: try decoder.decodeSingularInt32Field(value: &_storage._mapHash)
        case 507: try decoder.decodeSingularInt32Field(value: &_storage._mapKeyType)
        case 508: try decoder.decodeSingularInt32Field(value: &_storage._mapNameResolver)
        case 509: try decoder.decodeSingularInt32Field(value: &_storage._mapToMessages)
        case 510: try decoder.decodeSingularInt32Field(value: &_storage._mapValueType)
        case 511: try decoder.decodeSingularInt32Field(value: &_storage._mapVisitor)
        case 512: try decoder.decodeSingularInt32Field(value: &_storage._mdayStart)
        case 513: try decoder.decodeSingularInt32Field(value: &_storage._merge)
        case 514: try decoder.decodeSingularInt32Field(value: &_storage._message)
        case 515: try decoder.decodeSingularInt32Field(value: &_storage._messageDepthLimit)
        case 516: try decoder.decodeSingularInt32Field(value: &_storage._messageExtension)
        case 517: try decoder.decodeSingularInt32Field(value: &_storage._messageImplementationBase)
        case 518: try decoder.decodeSingularInt32Field(value: &_storage._messageOptions)
        case 519: try decoder.decodeSingularInt32Field(value: &_storage._messageSet)
        case 520: try decoder.decodeSingularInt32Field(value: &_storage._messageSetWireFormat)
        case 521: try decoder.decodeSingularInt32Field(value: &_storage._messageType)
        case 522: try decoder.decodeSingularInt32Field(value: &_storage._method)
        case 523: try decoder.decodeSingularInt32Field(value: &_storage._methodDescriptorProto)
        case 524: try decoder.decodeSingularInt32Field(value: &_storage._methodOptions)
        case 525: try decoder.decodeSingularInt32Field(value: &_storage._methods)
        case 526: try decoder.decodeSingularInt32Field(value: &_storage._minor)
        case 527: try decoder.decodeSingularInt32Field(value: &_storage._mixin)
        case 528: try decoder.decodeSingularInt32Field(value: &_storage._mixins)
        case 529: try decoder.decodeSingularInt32Field(value: &_storage._month)
        case 530: try decoder.decodeSingularInt32Field(value: &_storage._msgExtension)
        case 531: try decoder.decodeSingularInt32Field(value: &_storage._mutating)
        case 532: try decoder.decodeSingularInt32Field(value: &_storage._n)
        case 533: try decoder.decodeSingularInt32Field(value: &_storage._name)
        case 534: try decoder.decodeSingularInt32Field(value: &_storage._nameDescription)
        case 535: try decoder.decodeSingularInt32Field(value: &_storage._nameMap)
        case 536: try decoder.decodeSingularInt32Field(value: &_storage._namePart)
        case 537: try decoder.decodeSingularInt32Field(value: &_storage._nameResolver)
        case 538: try decoder.decodeSingularInt32Field(value: &_storage._names)
        case 539: try decoder.decodeSingularInt32Field(value: &_storage._nanos)
        case 540: try decoder.decodeSingularInt32Field(value: &_storage._nativeBytes)
        case 541: try decoder.decodeSingularInt32Field(value: &_storage._nativeEndianBytes)
        case 542: try decoder.decodeSingularInt32Field(value: &_storage._negativeIntValue)
        case 543: try decoder.decodeSingularInt32Field(value: &_storage._nestedType)
        case 544: try decoder.decodeSingularInt32Field(value: &_storage._newL)
        case 545: try decoder.decodeSingularInt32Field(value: &_storage._newList)
        case 546: try decoder.decodeSingularInt32Field(value: &_storage._newValue)
        case 547: try decoder.decodeSingularInt32Field(value: &_storage._nextByte)
        case 548: try decoder.decodeSingularInt32Field(value: &_storage._nextFieldNumber)
        case 549: try decoder.decodeSingularInt32Field(value: &_storage._nil)
        case 550: try decoder.decodeSingularInt32Field(value: &_storage._nilLiteral)
        case 551: try decoder.decodeSingularInt32Field(value: &_storage._noStandardDescriptorAccessor)
        case 552: try decoder.decodeSingularInt32Field(value: &_storage._nullValue)
        case 553: try decoder.decodeSingularInt32Field(value: &_storage._number)
        case 554: try decoder.decodeSingularInt32Field(value: &_storage._numberValue)
        case 555: try decoder.decodeSingularInt32Field(value: &_storage._objcClassPrefix)
        case 556: try decoder.decodeSingularInt32Field(value: &_storage._of)
        case 557: try decoder.decodeSingularInt32Field(value: &_storage._oneofDecl)
        case 558: try decoder.decodeSingularInt32Field(value: &_storage._oneofDescriptorProto)
        case 559: try decoder.decodeSingularInt32Field(value: &_storage._oneofIndex)
        case 560: try decoder.decodeSingularInt32Field(value: &_storage._oneofOptions)
        case 561: try decoder.decodeSingularInt32Field(value: &_storage._oneofs)
        case 562: try decoder.decodeSingularInt32Field(value: &_storage._oneOfKind)
        case 563: try decoder.decodeSingularInt32Field(value: &_storage._optimizeFor)
        case 564: try decoder.decodeSingularInt32Field(value: &_storage._optimizeMode)
        case 565: try decoder.decodeSingularInt32Field(value: &_storage._option)
        case 566: try decoder.decodeSingularInt32Field(value: &_storage._optionalEnumExtensionField)
        case 567: try decoder.decodeSingularInt32Field(value: &_storage._optionalExtensionField)
        case 568: try decoder.decodeSingularInt32Field(value: &_storage._optionalGroupExtensionField)
        case 569: try decoder.decodeSingularInt32Field(value: &_storage._optionalMessageExtensionField)
        case 570: try decoder.decodeSingularInt32Field(value: &_storage._options)
        case 571: try decoder.decodeSingularInt32Field(value: &_storage._other)
        case 572: try decoder.decodeSingularInt32Field(value: &_storage._others)
        case 573: try decoder.decodeSingularInt32Field(value: &_storage._out)
        case 574: try decoder.decodeSingularInt32Field(value: &_storage._outputType)
        case 575: try decoder.decodeSingularInt32Field(value: &_storage._p)
        case 576: try decoder.decodeSingularInt32Field(value: &_storage._package)
        case 577: try decoder.decodeSingularInt32Field(value: &_storage._packed)
        case 578: try decoder.decodeSingularInt32Field(value: &_storage._packedEnumExtensionField)
        case 579: try decoder.decodeSingularInt32Field(value: &_storage._packedExtensionField)
        case 580: try decoder.decodeSingularInt32Field(value: &_storage._packedSize)
        case 581: try decoder.decodeSingularInt32Field(value: &_storage._padding)
        case 582: try decoder.decodeSingularInt32Field(value: &_storage._parent)
        case 583: try decoder.decodeSingularInt32Field(value: &_storage._parse)
        case 584: try decoder.decodeSingularInt32Field(value: &_storage._partial)
        case 585: try decoder.decodeSingularInt32Field(value: &_storage._path)
        case 586: try decoder.decodeSingularInt32Field(value: &_storage._paths)
        case 587: try decoder.decodeSingularInt32Field(value: &_storage._payload)
        case 588: try decoder.decodeSingularInt32Field(value: &_storage._payloadSize)
        case 589: try decoder.decodeSingularInt32Field(value: &_storage._phpClassPrefix)
        case 590: try decoder.decodeSingularInt32Field(value: &_storage._phpGenericServices)
        case 591: try decoder.decodeSingularInt32Field(value: &_storage._phpMetadataNamespace)
        case 592: try decoder.decodeSingularInt32Field(value: &_storage._phpNamespace)
        case 593: try decoder.decodeSingularInt32Field(value: &_storage._pointer)
        case 594: try decoder.decodeSingularInt32Field(value: &_storage._pos)
        case 595: try decoder.decodeSingularInt32Field(value: &_storage._positiveIntValue)
        case 596: try decoder.decodeSingularInt32Field(value: &_storage._prefix)
        case 597: try decoder.decodeSingularInt32Field(value: &_storage._preserveProtoFieldNames)
        case 598: try decoder.decodeSingularInt32Field(value: &_storage._preTraverse)
        case 599: try decoder.decodeSingularInt32Field(value: &_storage._printUnknownFields)
        case 600: try decoder.decodeSingularInt32Field(value: &_storage._proto2)
        case 601: try decoder.decodeSingularInt32Field(value: &_storage._proto3DefaultValue)
        case 602: try decoder.decodeSingularInt32Field(value: &_storage._protobufApiversionCheck)
        case 603: try decoder.decodeSingularInt32Field(value: &_storage._protobufApiversion2)
        case 604: try decoder.decodeSingularInt32Field(value: &_storage._protobufBool)
        case 605: try decoder.decodeSingularInt32Field(value: &_storage._protobufBytes)
        case 606: try decoder.decodeSingularInt32Field(value: &_storage._protobufDouble)
        case 607: try decoder.decodeSingularInt32Field(value: &_storage._protobufEnumMap)
        case 608: try decoder.decodeSingularInt32Field(value: &_storage._protobufExtension)
        case 609: try decoder.decodeSingularInt32Field(value: &_storage._protobufFixed32)
        case 610: try decoder.decodeSingularInt32Field(value: &_storage._protobufFixed64)
        case 611: try decoder.decodeSingularInt32Field(value: &_storage._protobufFloat)
        case 612: try decoder.decodeSingularInt32Field(value: &_storage._protobufInt32)
        case 613: try decoder.decodeSingularInt32Field(value: &_storage._protobufInt64)
        case 614: try decoder.decodeSingularInt32Field(value: &_storage._protobufMap)
        case 615: try decoder.decodeSingularInt32Field(value: &_storage._protobufMessageMap)
        case 616: try decoder.decodeSingularInt32Field(value: &_storage._protobufSfixed32)
        case 617: try decoder.decodeSingularInt32Field(value: &_storage._protobufSfixed64)
        case 618: try decoder.decodeSingularInt32Field(value: &_storage._protobufSint32)
        case 619: try decoder.decodeSingularInt32Field(value: &_storage._protobufSint64)
        case 620: try decoder.decodeSingularInt32Field(value: &_storage._protobufString)
        case 621: try decoder.decodeSingularInt32Field(value: &_storage._protobufUint32)
        case 622: try decoder.decodeSingularInt32Field(value: &_storage._protobufUint64)
        case 623: try decoder.decodeSingularInt32Field(value: &_storage._protobufExtensionFieldValues)
        case 624: try decoder.decodeSingularInt32Field(value: &_storage._protobufFieldNumber)
        case 625: try decoder.decodeSingularInt32Field(value: &_storage._protobufGeneratedIsEqualTo)
        case 626: try decoder.decodeSingularInt32Field(value: &_storage._protobufNameMap)
        case 627: try decoder.decodeSingularInt32Field(value: &_storage._protobufNewField)
        case 628: try decoder.decodeSingularInt32Field(value: &_storage._protobufPackage)
        case 629: try decoder.decodeSingularInt32Field(value: &_storage._protocol)
        case 630: try decoder.decodeSingularInt32Field(value: &_storage._protoFieldName)
        case 631: try decoder.decodeSingularInt32Field(value: &_storage._protoMessageName)
        case 632: try decoder.decodeSingularInt32Field(value: &_storage._protoNameProviding)
        case 633: try decoder.decodeSingularInt32Field(value: &_storage._protoPaths)
        case 634: try decoder.decodeSingularInt32Field(value: &_storage._public)
        case 635: try decoder.decodeSingularInt32Field(value: &_storage._publicDependency)
        case 636: try decoder.decodeSingularInt32Field(value: &_storage._putBoolValue)
        case 637: try decoder.decodeSingularInt32Field(value: &_storage._putBytesValue)
        case 638: try decoder.decodeSingularInt32Field(value: &_storage._putDoubleValue)
        case 639: try decoder.decodeSingularInt32Field(value: &_storage._putEnumValue)
        case 640: try decoder.decodeSingularInt32Field(value: &_storage._putFixedUint32)
        case 641: try decoder.decodeSingularInt32Field(value: &_storage._putFixedUint64)
        case 642: try decoder.decodeSingularInt32Field(value: &_storage._putFloatValue)
        case 643: try decoder.decodeSingularInt32Field(value: &_storage._putInt64)
        case 644: try decoder.decodeSingularInt32Field(value: &_storage._putStringValue)
        case 645: try decoder.decodeSingularInt32Field(value: &_storage._putUint64)
        case 646: try decoder.decodeSingularInt32Field(value: &_storage._putUint64Hex)
        case 647: try decoder.decodeSingularInt32Field(value: &_storage._putVarInt)
        case 648: try decoder.decodeSingularInt32Field(value: &_storage._putZigZagVarInt)
        case 649: try decoder.decodeSingularInt32Field(value: &_storage._pyGenericServices)
        case 650: try decoder.decodeSingularInt32Field(value: &_storage._rawChars)
        case 651: try decoder.decodeSingularInt32Field(value: &_storage._rawRepresentable)
        case 652: try decoder.decodeSingularInt32Field(value: &_storage._rawValue)
        case 653: try decoder.decodeSingularInt32Field(value: &_storage._readBuffer)
        case 654: try decoder.decodeSingularInt32Field(value: &_storage._register)
        case 655: try decoder.decodeSingularInt32Field(value: &_storage._repeatedEnumExtensionField)
        case 656: try decoder.decodeSingularInt32Field(value: &_storage._repeatedExtensionField)
        case 657: try decoder.decodeSingularInt32Field(value: &_storage._repeatedGroupExtensionField)
        case 658: try decoder.decodeSingularInt32Field(value: &_storage._repeatedMessageExtensionField)
        case 659: try decoder.decodeSingularInt32Field(value: &_storage._requestStreaming)
        case 660: try decoder.decodeSingularInt32Field(value: &_storage._requestTypeURL)
        case 661: try decoder.decodeSingularInt32Field(value: &_storage._requiredSize)
        case 662: try decoder.decodeSingularInt32Field(value: &_storage._reservedName)
        case 663: try decoder.decodeSingularInt32Field(value: &_storage._reservedRange)
        case 664: try decoder.decodeSingularInt32Field(value: &_storage._responseStreaming)
        case 665: try decoder.decodeSingularInt32Field(value: &_storage._responseTypeURL)
        case 666: try decoder.decodeSingularInt32Field(value: &_storage._result)
        case 667: try decoder.decodeSingularInt32Field(value: &_storage._rethrows)
        case 668: try decoder.decodeSingularInt32Field(value: &_storage._return)
        case 669: try decoder.decodeSingularInt32Field(value: &_storage._revision)
        case 670: try decoder.decodeSingularInt32Field(value: &_storage._rhs)
        case 671: try decoder.decodeSingularInt32Field(value: &_storage._root)
        case 672: try decoder.decodeSingularInt32Field(value: &_storage._rubyPackage)
        case 673: try decoder.decodeSingularInt32Field(value: &_storage._s)
        case 674: try decoder.decodeSingularInt32Field(value: &_storage._sawBackslash)
        case 675: try decoder.decodeSingularInt32Field(value: &_storage._sawSection4Characters)
        case 676: try decoder.decodeSingularInt32Field(value: &_storage._sawSection5Characters)
        case 677: try decoder.decodeSingularInt32Field(value: &_storage._scanner)
        case 678: try decoder.decodeSingularInt32Field(value: &_storage._seconds)
        case 679: try decoder.decodeSingularInt32Field(value: &_storage._self_p)
        case 680: try decoder.decodeSingularInt32Field(value: &_storage._separator)
        case 681: try decoder.decodeSingularInt32Field(value: &_storage._serialize)
        case 682: try decoder.decodeSingularInt32Field(value: &_storage._serializedData)
        case 683: try decoder.decodeSingularInt32Field(value: &_storage._serializedSize)
        case 684: try decoder.decodeSingularInt32Field(value: &_storage._serverStreaming)
        case 685: try decoder.decodeSingularInt32Field(value: &_storage._service)
        case 686: try decoder.decodeSingularInt32Field(value: &_storage._serviceDescriptorProto)
        case 687: try decoder.decodeSingularInt32Field(value: &_storage._serviceOptions)
        case 688: try decoder.decodeSingularInt32Field(value: &_storage._set)
        case 689: try decoder.decodeSingularInt32Field(value: &_storage._setExtensionValue)
        case 690: try decoder.decodeSingularInt32Field(value: &_storage._shift)
        case 691: try decoder.decodeSingularInt32Field(value: &_storage._simpleExtensionMap)
        case 692: try decoder.decodeSingularInt32Field(value: &_storage._sizer)
        case 693: try decoder.decodeSingularInt32Field(value: &_storage._source)
        case 694: try decoder.decodeSingularInt32Field(value: &_storage._sourceCodeInfo)
        case 695: try decoder.decodeSingularInt32Field(value: &_storage._sourceContext)
        case 696: try decoder.decodeSingularInt32Field(value: &_storage._sourceEncoding)
        case 697: try decoder.decodeSingularInt32Field(value: &_storage._sourceFile)
        case 698: try decoder.decodeSingularInt32Field(value: &_storage._span)
        case 699: try decoder.decodeSingularInt32Field(value: &_storage._split)
        case 700: try decoder.decodeSingularInt32Field(value: &_storage._start)
        case 701: try decoder.decodeSingularInt32Field(value: &_storage._startArray)
        case 702: try decoder.decodeSingularInt32Field(value: &_storage._startField)
        case 703: try decoder.decodeSingularInt32Field(value: &_storage._startIndex)
        case 704: try decoder.decodeSingularInt32Field(value: &_storage._startMessageField)
        case 705: try decoder.decodeSingularInt32Field(value: &_storage._startObject)
        case 706: try decoder.decodeSingularInt32Field(value: &_storage._startRegularField)
        case 707: try decoder.decodeSingularInt32Field(value: &_storage._state)
        case 708: try decoder.decodeSingularInt32Field(value: &_storage._static)
        case 709: try decoder.decodeSingularInt32Field(value: &_storage._staticString)
        case 710: try decoder.decodeSingularInt32Field(value: &_storage._storage)
        case 711: try decoder.decodeSingularInt32Field(value: &_storage._string)
        case 712: try decoder.decodeSingularInt32Field(value: &_storage._stringLiteral)
        case 713: try decoder.decodeSingularInt32Field(value: &_storage._stringLiteralType)
        case 714: try decoder.decodeSingularInt32Field(value: &_storage._stringResult)
        case 715: try decoder.decodeSingularInt32Field(value: &_storage._stringValue)
        case 716: try decoder.decodeSingularInt32Field(value: &_storage._struct)
        case 717: try decoder.decodeSingularInt32Field(value: &_storage._structValue)
        case 718: try decoder.decodeSingularInt32Field(value: &_storage._subDecoder)
        case 719: try decoder.decodeSingularInt32Field(value: &_storage._subscript)
        case 720: try decoder.decodeSingularInt32Field(value: &_storage._subVisitor)
        case 721: try decoder.decodeSingularInt32Field(value: &_storage._swift)
        case 722: try decoder.decodeSingularInt32Field(value: &_storage._swiftPrefix)
        case 723: try decoder.decodeSingularInt32Field(value: &_storage._swiftProtobuf)
        case 724: try decoder.decodeSingularInt32Field(value: &_storage._syntax)
        case 725: try decoder.decodeSingularInt32Field(value: &_storage._t)
        case 726: try decoder.decodeSingularInt32Field(value: &_storage._tag)
        case 727: try decoder.decodeSingularInt32Field(value: &_storage._terminator)
        case 728: try decoder.decodeSingularInt32Field(value: &_storage._testDecoder)
        case 729: try decoder.decodeSingularInt32Field(value: &_storage._text)
        case 730: try decoder.decodeSingularInt32Field(value: &_storage._textDecoder)
        case 731: try decoder.decodeSingularInt32Field(value: &_storage._textFormatDecoder)
        case 732: try decoder.decodeSingularInt32Field(value: &_storage._textFormatDecodingError)
        case 733: try decoder.decodeSingularInt32Field(value: &_storage._textFormatEncodingOptions)
        case 734: try decoder.decodeSingularInt32Field(value: &_storage._textFormatEncodingVisitor)
        case 735: try decoder.decodeSingularInt32Field(value: &_storage._textFormatString)
        case 736: try decoder.decodeSingularInt32Field(value: &_storage._throws)
        case 737: try decoder.decodeSingularInt32Field(value: &_storage._timeInterval)
        case 738: try decoder.decodeSingularInt32Field(value: &_storage._timeIntervalSince1970)
        case 739: try decoder.decodeSingularInt32Field(value: &_storage._timeIntervalSinceReferenceDate)
        case 740: try decoder.decodeSingularInt32Field(value: &_storage._timestamp)
        case 741: try decoder.decodeSingularInt32Field(value: &_storage._total)
        case 742: try decoder.decodeSingularInt32Field(value: &_storage._totalSize)
        case 743: try decoder.decodeSingularInt32Field(value: &_storage._trailingComments)
        case 744: try decoder.decodeSingularInt32Field(value: &_storage._traverse)
        case 745: try decoder.decodeSingularInt32Field(value: &_storage._true)
        case 746: try decoder.decodeSingularInt32Field(value: &_storage._try)
        case 747: try decoder.decodeSingularInt32Field(value: &_storage._type)
        case 748: try decoder.decodeSingularInt32Field(value: &_storage._typealias)
        case 749: try decoder.decodeSingularInt32Field(value: &_storage._typeEnum)
        case 750: try decoder.decodeSingularInt32Field(value: &_storage._typeName)
        case 751: try decoder.decodeSingularInt32Field(value: &_storage._typePrefix)
        case 752: try decoder.decodeSingularInt32Field(value: &_storage._typeStart)
        case 753: try decoder.decodeSingularInt32Field(value: &_storage._typeUnknown)
        case 754: try decoder.decodeSingularInt32Field(value: &_storage._typeURL)
        case 755: try decoder.decodeSingularInt32Field(value: &_storage._uint32)
        case 756: try decoder.decodeSingularInt32Field(value: &_storage._uint32Value)
        case 757: try decoder.decodeSingularInt32Field(value: &_storage._uint64)
        case 758: try decoder.decodeSingularInt32Field(value: &_storage._uint64Value)
        case 759: try decoder.decodeSingularInt32Field(value: &_storage._uint8)
        case 760: try decoder.decodeSingularInt32Field(value: &_storage._unicodeScalarLiteral)
        case 761: try decoder.decodeSingularInt32Field(value: &_storage._unicodeScalarLiteralType)
        case 762: try decoder.decodeSingularInt32Field(value: &_storage._unicodeScalars)
        case 763: try decoder.decodeSingularInt32Field(value: &_storage._unicodeScalarView)
        case 764: try decoder.decodeSingularInt32Field(value: &_storage._uninterpretedOption)
        case 765: try decoder.decodeSingularInt32Field(value: &_storage._union)
        case 766: try decoder.decodeSingularInt32Field(value: &_storage._uniqueStorage)
        case 767: try decoder.decodeSingularInt32Field(value: &_storage._unknown)
        case 768: try decoder.decodeSingularInt32Field(value: &_storage._unknownFields_p)
        case 769: try decoder.decodeSingularInt32Field(value: &_storage._unknownStorage)
        case 770: try decoder.decodeSingularInt32Field(value: &_storage._unpackTo)
        case 771: try decoder.decodeSingularInt32Field(value: &_storage._unsafeMutablePointer)
        case 772: try decoder.decodeSingularInt32Field(value: &_storage._unsafeMutableRawBufferPointer)
        case 773: try decoder.decodeSingularInt32Field(value: &_storage._unsafeMutableRawPointer)
        case 774: try decoder.decodeSingularInt32Field(value: &_storage._unsafeRawBufferPointer)
        case 775: try decoder.decodeSingularInt32Field(value: &_storage._unsafeRawPointer)
        case 776: try decoder.decodeSingularInt32Field(value: &_storage._updatedOptions)
        case 777: try decoder.decodeSingularInt32Field(value: &_storage._url)
        case 778: try decoder.decodeSingularInt32Field(value: &_storage._utf8)
        case 779: try decoder.decodeSingularInt32Field(value: &_storage._utf8ToDouble)
        case 780: try decoder.decodeSingularInt32Field(value: &_storage._utf8View)
        case 781: try decoder.decodeSingularInt32Field(value: &_storage._v)
        case 782: try decoder.decodeSingularInt32Field(value: &_storage._value)
        case 783: try decoder.decodeSingularInt32Field(value: &_storage._valueField)
        case 784: try decoder.decodeSingularInt32Field(value: &_storage._values)
        case 785: try decoder.decodeSingularInt32Field(value: &_storage._valueType)
        case 786: try decoder.decodeSingularInt32Field(value: &_storage._var)
        case 787: try decoder.decodeSingularInt32Field(value: &_storage._version)
        case 788: try decoder.decodeSingularInt32Field(value: &_storage._versionString)
        case 789: try decoder.decodeSingularInt32Field(value: &_storage._visitExtensionFields)
        case 790: try decoder.decodeSingularInt32Field(value: &_storage._visitExtensionFieldsAsMessageSet)
        case 791: try decoder.decodeSingularInt32Field(value: &_storage._visitMapField)
        case 792: try decoder.decodeSingularInt32Field(value: &_storage._visitor)
        case 793: try decoder.decodeSingularInt32Field(value: &_storage._visitPacked)
        case 794: try decoder.decodeSingularInt32Field(value: &_storage._visitPackedBoolField)
        case 795: try decoder.decodeSingularInt32Field(value: &_storage._visitPackedDoubleField)
        case 796: try decoder.decodeSingularInt32Field(value: &_storage._visitPackedEnumField)
        case 797: try decoder.decodeSingularInt32Field(value: &_storage._visitPackedFixed32Field)
        case 798: try decoder.decodeSingularInt32Field(value: &_storage._visitPackedFixed64Field)
        case 799: try decoder.decodeSingularInt32Field(value: &_storage._visitPackedFloatField)
        case 800: try decoder.decodeSingularInt32Field(value: &_storage._visitPackedInt32Field)
        case 801: try decoder.decodeSingularInt32Field(value: &_storage._visitPackedInt64Field)
        case 802: try decoder.decodeSingularInt32Field(value: &_storage._visitPackedSfixed32Field)
        case 803: try decoder.decodeSingularInt32Field(value: &_storage._visitPackedSfixed64Field)
        case 804: try decoder.decodeSingularInt32Field(value: &_storage._visitPackedSint32Field)
        case 805: try decoder.decodeSingularInt32Field(value: &_storage._visitPackedSint64Field)
        case 806: try decoder.decodeSingularInt32Field(value: &_storage._visitPackedUint32Field)
        case 807: try decoder.decodeSingularInt32Field(value: &_storage._visitPackedUint64Field)
        case 808: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeated)
        case 809: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedBoolField)
        case 810: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedBytesField)
        case 811: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedDoubleField)
        case 812: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedEnumField)
        case 813: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedFixed32Field)
        case 814: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedFixed64Field)
        case 815: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedFloatField)
        case 816: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedGroupField)
        case 817: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedInt32Field)
        case 818: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedInt64Field)
        case 819: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedMessageField)
        case 820: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedSfixed32Field)
        case 821: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedSfixed64Field)
        case 822: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedSint32Field)
        case 823: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedSint64Field)
        case 824: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedStringField)
        case 825: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedUint32Field)
        case 826: try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedUint64Field)
        case 827: try decoder.decodeSingularInt32Field(value: &_storage._visitSingular)
        case 828: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularBoolField)
        case 829: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularBytesField)
        case 830: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularDoubleField)
        case 831: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularEnumField)
        case 832: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularFixed32Field)
        case 833: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularFixed64Field)
        case 834: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularFloatField)
        case 835: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularGroupField)
        case 836: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularInt32Field)
        case 837: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularInt64Field)
        case 838: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularMessageField)
        case 839: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularSfixed32Field)
        case 840: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularSfixed64Field)
        case 841: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularSint32Field)
        case 842: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularSint64Field)
        case 843: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularStringField)
        case 844: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularUint32Field)
        case 845: try decoder.decodeSingularInt32Field(value: &_storage._visitSingularUint64Field)
        case 846: try decoder.decodeSingularInt32Field(value: &_storage._visitUnknown)
        case 847: try decoder.decodeSingularInt32Field(value: &_storage._wasDecoded)
        case 848: try decoder.decodeSingularInt32Field(value: &_storage._weak)
        case 849: try decoder.decodeSingularInt32Field(value: &_storage._weakDependency)
        case 850: try decoder.decodeSingularInt32Field(value: &_storage._where)
        case 851: try decoder.decodeSingularInt32Field(value: &_storage._wireFormat)
        case 852: try decoder.decodeSingularInt32Field(value: &_storage._with)
        case 853: try decoder.decodeSingularInt32Field(value: &_storage._withUnsafeBytes)
        case 854: try decoder.decodeSingularInt32Field(value: &_storage._withUnsafeMutableBytes)
        case 855: try decoder.decodeSingularInt32Field(value: &_storage._work)
        case 856: try decoder.decodeSingularInt32Field(value: &_storage._wrappedType)
        case 857: try decoder.decodeSingularInt32Field(value: &_storage._written)
        case 858: try decoder.decodeSingularInt32Field(value: &_storage._yday)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._adjusted != 0 {
        try visitor.visitSingularInt32Field(value: _storage._adjusted, fieldNumber: 1)
      }
      if _storage._aggregateValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._aggregateValue, fieldNumber: 2)
      }
      if _storage._allCases != 0 {
        try visitor.visitSingularInt32Field(value: _storage._allCases, fieldNumber: 3)
      }
      if _storage._allocate != 0 {
        try visitor.visitSingularInt32Field(value: _storage._allocate, fieldNumber: 4)
      }
      if _storage._allowAlias != 0 {
        try visitor.visitSingularInt32Field(value: _storage._allowAlias, fieldNumber: 5)
      }
      if _storage._alwaysPrintEnumsAsInts != 0 {
        try visitor.visitSingularInt32Field(value: _storage._alwaysPrintEnumsAsInts, fieldNumber: 6)
      }
      if _storage._annotation != 0 {
        try visitor.visitSingularInt32Field(value: _storage._annotation, fieldNumber: 7)
      }
      if _storage._any != 0 {
        try visitor.visitSingularInt32Field(value: _storage._any, fieldNumber: 8)
      }
      if _storage._anyExtensionField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._anyExtensionField, fieldNumber: 9)
      }
      if _storage._anyMessageExtension != 0 {
        try visitor.visitSingularInt32Field(value: _storage._anyMessageExtension, fieldNumber: 10)
      }
      if _storage._anyMessageStorage != 0 {
        try visitor.visitSingularInt32Field(value: _storage._anyMessageStorage, fieldNumber: 11)
      }
      if _storage._anyUnpackError != 0 {
        try visitor.visitSingularInt32Field(value: _storage._anyUnpackError, fieldNumber: 12)
      }
      if _storage._api != 0 {
        try visitor.visitSingularInt32Field(value: _storage._api, fieldNumber: 13)
      }
      if _storage._appended != 0 {
        try visitor.visitSingularInt32Field(value: _storage._appended, fieldNumber: 14)
      }
      if _storage._appendUintHex != 0 {
        try visitor.visitSingularInt32Field(value: _storage._appendUintHex, fieldNumber: 15)
      }
      if _storage._appendUnknown != 0 {
        try visitor.visitSingularInt32Field(value: _storage._appendUnknown, fieldNumber: 16)
      }
      if _storage._areAllInitialized != 0 {
        try visitor.visitSingularInt32Field(value: _storage._areAllInitialized, fieldNumber: 17)
      }
      if _storage._array != 0 {
        try visitor.visitSingularInt32Field(value: _storage._array, fieldNumber: 18)
      }
      if _storage._arrayLiteral != 0 {
        try visitor.visitSingularInt32Field(value: _storage._arrayLiteral, fieldNumber: 19)
      }
      if _storage._arraySeparator != 0 {
        try visitor.visitSingularInt32Field(value: _storage._arraySeparator, fieldNumber: 20)
      }
      if _storage._as != 0 {
        try visitor.visitSingularInt32Field(value: _storage._as, fieldNumber: 21)
      }
      if _storage._asciiOpenCurlyBracket != 0 {
        try visitor.visitSingularInt32Field(value: _storage._asciiOpenCurlyBracket, fieldNumber: 22)
      }
      if _storage._asciiZero != 0 {
        try visitor.visitSingularInt32Field(value: _storage._asciiZero, fieldNumber: 23)
      }
      if _storage._available != 0 {
        try visitor.visitSingularInt32Field(value: _storage._available, fieldNumber: 24)
      }
      if _storage._b != 0 {
        try visitor.visitSingularInt32Field(value: _storage._b, fieldNumber: 25)
      }
      if _storage._base64Values != 0 {
        try visitor.visitSingularInt32Field(value: _storage._base64Values, fieldNumber: 26)
      }
      if _storage._baseAddress != 0 {
        try visitor.visitSingularInt32Field(value: _storage._baseAddress, fieldNumber: 27)
      }
      if _storage._baseType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._baseType, fieldNumber: 28)
      }
      if _storage._begin != 0 {
        try visitor.visitSingularInt32Field(value: _storage._begin, fieldNumber: 29)
      }
      if _storage._binary != 0 {
        try visitor.visitSingularInt32Field(value: _storage._binary, fieldNumber: 30)
      }
      if _storage._binaryDecoder != 0 {
        try visitor.visitSingularInt32Field(value: _storage._binaryDecoder, fieldNumber: 31)
      }
      if _storage._binaryDecodingError != 0 {
        try visitor.visitSingularInt32Field(value: _storage._binaryDecodingError, fieldNumber: 32)
      }
      if _storage._binaryDecodingOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._binaryDecodingOptions, fieldNumber: 33)
      }
      if _storage._binaryDelimited != 0 {
        try visitor.visitSingularInt32Field(value: _storage._binaryDelimited, fieldNumber: 34)
      }
      if _storage._binaryEncoder != 0 {
        try visitor.visitSingularInt32Field(value: _storage._binaryEncoder, fieldNumber: 35)
      }
      if _storage._binaryEncodingError != 0 {
        try visitor.visitSingularInt32Field(value: _storage._binaryEncodingError, fieldNumber: 36)
      }
      if _storage._binaryEncodingMessageSetSizeVisitor != 0 {
        try visitor.visitSingularInt32Field(value: _storage._binaryEncodingMessageSetSizeVisitor, fieldNumber: 37)
      }
      if _storage._binaryEncodingMessageSetVisitor != 0 {
        try visitor.visitSingularInt32Field(value: _storage._binaryEncodingMessageSetVisitor, fieldNumber: 38)
      }
      if _storage._binaryEncodingSizeVisitor != 0 {
        try visitor.visitSingularInt32Field(value: _storage._binaryEncodingSizeVisitor, fieldNumber: 39)
      }
      if _storage._binaryEncodingVisitor != 0 {
        try visitor.visitSingularInt32Field(value: _storage._binaryEncodingVisitor, fieldNumber: 40)
      }
      if _storage._binaryOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._binaryOptions, fieldNumber: 41)
      }
      if _storage._body != 0 {
        try visitor.visitSingularInt32Field(value: _storage._body, fieldNumber: 42)
      }
      if _storage._bodySize != 0 {
        try visitor.visitSingularInt32Field(value: _storage._bodySize, fieldNumber: 43)
      }
      if _storage._bool != 0 {
        try visitor.visitSingularInt32Field(value: _storage._bool, fieldNumber: 44)
      }
      if _storage._booleanLiteral != 0 {
        try visitor.visitSingularInt32Field(value: _storage._booleanLiteral, fieldNumber: 45)
      }
      if _storage._booleanLiteralType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._booleanLiteralType, fieldNumber: 46)
      }
      if _storage._boolValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._boolValue, fieldNumber: 47)
      }
      if _storage._bytes != 0 {
        try visitor.visitSingularInt32Field(value: _storage._bytes, fieldNumber: 48)
      }
      if _storage._bytesInGroup != 0 {
        try visitor.visitSingularInt32Field(value: _storage._bytesInGroup, fieldNumber: 49)
      }
      if _storage._bytesRead != 0 {
        try visitor.visitSingularInt32Field(value: _storage._bytesRead, fieldNumber: 50)
      }
      if _storage._bytesValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._bytesValue, fieldNumber: 51)
      }
      if _storage._c != 0 {
        try visitor.visitSingularInt32Field(value: _storage._c, fieldNumber: 52)
      }
      if _storage._capacity != 0 {
        try visitor.visitSingularInt32Field(value: _storage._capacity, fieldNumber: 53)
      }
      if _storage._capitalizeNext != 0 {
        try visitor.visitSingularInt32Field(value: _storage._capitalizeNext, fieldNumber: 54)
      }
      if _storage._cardinality != 0 {
        try visitor.visitSingularInt32Field(value: _storage._cardinality, fieldNumber: 55)
      }
      if _storage._ccEnableArenas != 0 {
        try visitor.visitSingularInt32Field(value: _storage._ccEnableArenas, fieldNumber: 56)
      }
      if _storage._ccGenericServices != 0 {
        try visitor.visitSingularInt32Field(value: _storage._ccGenericServices, fieldNumber: 57)
      }
      if _storage._character != 0 {
        try visitor.visitSingularInt32Field(value: _storage._character, fieldNumber: 58)
      }
      if _storage._chars != 0 {
        try visitor.visitSingularInt32Field(value: _storage._chars, fieldNumber: 59)
      }
      if _storage._class != 0 {
        try visitor.visitSingularInt32Field(value: _storage._class, fieldNumber: 60)
      }
      if _storage._clearAggregateValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearAggregateValue_p, fieldNumber: 61)
      }
      if _storage._clearAllowAlias_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearAllowAlias_p, fieldNumber: 62)
      }
      if _storage._clearBegin_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearBegin_p, fieldNumber: 63)
      }
      if _storage._clearCcEnableArenas_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearCcEnableArenas_p, fieldNumber: 64)
      }
      if _storage._clearCcGenericServices_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearCcGenericServices_p, fieldNumber: 65)
      }
      if _storage._clearClientStreaming_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearClientStreaming_p, fieldNumber: 66)
      }
      if _storage._clearCsharpNamespace_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearCsharpNamespace_p, fieldNumber: 67)
      }
      if _storage._clearCtype_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearCtype_p, fieldNumber: 68)
      }
      if _storage._clearDefaultValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearDefaultValue_p, fieldNumber: 69)
      }
      if _storage._clearDeprecated_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearDeprecated_p, fieldNumber: 70)
      }
      if _storage._clearDoubleValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearDoubleValue_p, fieldNumber: 71)
      }
      if _storage._clearEnd_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearEnd_p, fieldNumber: 72)
      }
      if _storage._clearExtendee_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearExtendee_p, fieldNumber: 73)
      }
      if _storage._clearExtensionValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearExtensionValue_p, fieldNumber: 74)
      }
      if _storage._clearGoPackage_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearGoPackage_p, fieldNumber: 75)
      }
      if _storage._clearIdempotencyLevel_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearIdempotencyLevel_p, fieldNumber: 76)
      }
      if _storage._clearIdentifierValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearIdentifierValue_p, fieldNumber: 77)
      }
      if _storage._clearInputType_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearInputType_p, fieldNumber: 78)
      }
      if _storage._clearIsExtension_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearIsExtension_p, fieldNumber: 79)
      }
      if _storage._clearJavaGenerateEqualsAndHash_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearJavaGenerateEqualsAndHash_p, fieldNumber: 80)
      }
      if _storage._clearJavaGenericServices_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearJavaGenericServices_p, fieldNumber: 81)
      }
      if _storage._clearJavaMultipleFiles_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearJavaMultipleFiles_p, fieldNumber: 82)
      }
      if _storage._clearJavaOuterClassname_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearJavaOuterClassname_p, fieldNumber: 83)
      }
      if _storage._clearJavaPackage_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearJavaPackage_p, fieldNumber: 84)
      }
      if _storage._clearJavaStringCheckUtf8_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearJavaStringCheckUtf8_p, fieldNumber: 85)
      }
      if _storage._clearJsonName_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearJsonName_p, fieldNumber: 86)
      }
      if _storage._clearJstype_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearJstype_p, fieldNumber: 87)
      }
      if _storage._clearLabel_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearLabel_p, fieldNumber: 88)
      }
      if _storage._clearLazy_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearLazy_p, fieldNumber: 89)
      }
      if _storage._clearLeadingComments_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearLeadingComments_p, fieldNumber: 90)
      }
      if _storage._clearMapEntry_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearMapEntry_p, fieldNumber: 91)
      }
      if _storage._clearMessageSetWireFormat_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearMessageSetWireFormat_p, fieldNumber: 92)
      }
      if _storage._clearName_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearName_p, fieldNumber: 93)
      }
      if _storage._clearNamePart_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearNamePart_p, fieldNumber: 94)
      }
      if _storage._clearNegativeIntValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearNegativeIntValue_p, fieldNumber: 95)
      }
      if _storage._clearNoStandardDescriptorAccessor_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearNoStandardDescriptorAccessor_p, fieldNumber: 96)
      }
      if _storage._clearNumber_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearNumber_p, fieldNumber: 97)
      }
      if _storage._clearObjcClassPrefix_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearObjcClassPrefix_p, fieldNumber: 98)
      }
      if _storage._clearOneofIndex_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearOneofIndex_p, fieldNumber: 99)
      }
      if _storage._clearOptimizeFor_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearOptimizeFor_p, fieldNumber: 100)
      }
      if _storage._clearOptions_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearOptions_p, fieldNumber: 101)
      }
      if _storage._clearOutputType_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearOutputType_p, fieldNumber: 102)
      }
      if _storage._clearPackage_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearPackage_p, fieldNumber: 103)
      }
      if _storage._clearPacked_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearPacked_p, fieldNumber: 104)
      }
      if _storage._clearPhpClassPrefix_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearPhpClassPrefix_p, fieldNumber: 105)
      }
      if _storage._clearPhpGenericServices_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearPhpGenericServices_p, fieldNumber: 106)
      }
      if _storage._clearPhpMetadataNamespace_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearPhpMetadataNamespace_p, fieldNumber: 107)
      }
      if _storage._clearPhpNamespace_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearPhpNamespace_p, fieldNumber: 108)
      }
      if _storage._clearPositiveIntValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearPositiveIntValue_p, fieldNumber: 109)
      }
      if _storage._clearPyGenericServices_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearPyGenericServices_p, fieldNumber: 110)
      }
      if _storage._clearRubyPackage_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearRubyPackage_p, fieldNumber: 111)
      }
      if _storage._clearServerStreaming_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearServerStreaming_p, fieldNumber: 112)
      }
      if _storage._clearSourceCodeInfo_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearSourceCodeInfo_p, fieldNumber: 113)
      }
      if _storage._clearSourceContext_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearSourceContext_p, fieldNumber: 114)
      }
      if _storage._clearSourceFile_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearSourceFile_p, fieldNumber: 115)
      }
      if _storage._clearStart_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearStart_p, fieldNumber: 116)
      }
      if _storage._clearStringValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearStringValue_p, fieldNumber: 117)
      }
      if _storage._clearSwiftPrefix_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearSwiftPrefix_p, fieldNumber: 118)
      }
      if _storage._clearSyntax_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearSyntax_p, fieldNumber: 119)
      }
      if _storage._clearTrailingComments_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearTrailingComments_p, fieldNumber: 120)
      }
      if _storage._clearType_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearType_p, fieldNumber: 121)
      }
      if _storage._clearTypeName_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearTypeName_p, fieldNumber: 122)
      }
      if _storage._clearValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearValue_p, fieldNumber: 123)
      }
      if _storage._clearWeak_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clearWeak_p, fieldNumber: 124)
      }
      if _storage._clientStreaming != 0 {
        try visitor.visitSingularInt32Field(value: _storage._clientStreaming, fieldNumber: 125)
      }
      if _storage._codeUnits != 0 {
        try visitor.visitSingularInt32Field(value: _storage._codeUnits, fieldNumber: 126)
      }
      if _storage._collection != 0 {
        try visitor.visitSingularInt32Field(value: _storage._collection, fieldNumber: 127)
      }
      if _storage._com != 0 {
        try visitor.visitSingularInt32Field(value: _storage._com, fieldNumber: 128)
      }
      if _storage._comma != 0 {
        try visitor.visitSingularInt32Field(value: _storage._comma, fieldNumber: 129)
      }
      if _storage._contentsOf != 0 {
        try visitor.visitSingularInt32Field(value: _storage._contentsOf, fieldNumber: 130)
      }
      if _storage._contiguousBytes != 0 {
        try visitor.visitSingularInt32Field(value: _storage._contiguousBytes, fieldNumber: 131)
      }
      if _storage._count != 0 {
        try visitor.visitSingularInt32Field(value: _storage._count, fieldNumber: 132)
      }
      if _storage._countVarintsInBuffer != 0 {
        try visitor.visitSingularInt32Field(value: _storage._countVarintsInBuffer, fieldNumber: 133)
      }
      if _storage._csharpNamespace != 0 {
        try visitor.visitSingularInt32Field(value: _storage._csharpNamespace, fieldNumber: 134)
      }
      if _storage._ctype != 0 {
        try visitor.visitSingularInt32Field(value: _storage._ctype, fieldNumber: 135)
      }
      if _storage._customCodable != 0 {
        try visitor.visitSingularInt32Field(value: _storage._customCodable, fieldNumber: 136)
      }
      if _storage._customDebugStringConvertible != 0 {
        try visitor.visitSingularInt32Field(value: _storage._customDebugStringConvertible, fieldNumber: 137)
      }
      if _storage._d != 0 {
        try visitor.visitSingularInt32Field(value: _storage._d, fieldNumber: 138)
      }
      if _storage._data != 0 {
        try visitor.visitSingularInt32Field(value: _storage._data, fieldNumber: 139)
      }
      if _storage._dataResult != 0 {
        try visitor.visitSingularInt32Field(value: _storage._dataResult, fieldNumber: 140)
      }
      if _storage._dataSize != 0 {
        try visitor.visitSingularInt32Field(value: _storage._dataSize, fieldNumber: 141)
      }
      if _storage._date != 0 {
        try visitor.visitSingularInt32Field(value: _storage._date, fieldNumber: 142)
      }
      if _storage._daySec != 0 {
        try visitor.visitSingularInt32Field(value: _storage._daySec, fieldNumber: 143)
      }
      if _storage._daysSinceEpoch != 0 {
        try visitor.visitSingularInt32Field(value: _storage._daysSinceEpoch, fieldNumber: 144)
      }
      if _storage._debugDescription_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._debugDescription_p, fieldNumber: 145)
      }
      if _storage._decoded != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decoded, fieldNumber: 146)
      }
      if _storage._decodedFromJsonnull != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodedFromJsonnull, fieldNumber: 147)
      }
      if _storage._decodeExtensionField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeExtensionField, fieldNumber: 148)
      }
      if _storage._decodeExtensionFieldsAsMessageSet != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeExtensionFieldsAsMessageSet, fieldNumber: 149)
      }
      if _storage._decodeJson != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeJson, fieldNumber: 150)
      }
      if _storage._decodeMapField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeMapField, fieldNumber: 151)
      }
      if _storage._decodeMessage != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeMessage, fieldNumber: 152)
      }
      if _storage._decoder != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decoder, fieldNumber: 153)
      }
      if _storage._decodeRepeated != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeated, fieldNumber: 154)
      }
      if _storage._decodeRepeatedBoolField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedBoolField, fieldNumber: 155)
      }
      if _storage._decodeRepeatedBytesField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedBytesField, fieldNumber: 156)
      }
      if _storage._decodeRepeatedDoubleField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedDoubleField, fieldNumber: 157)
      }
      if _storage._decodeRepeatedEnumField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedEnumField, fieldNumber: 158)
      }
      if _storage._decodeRepeatedFixed32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedFixed32Field, fieldNumber: 159)
      }
      if _storage._decodeRepeatedFixed64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedFixed64Field, fieldNumber: 160)
      }
      if _storage._decodeRepeatedFloatField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedFloatField, fieldNumber: 161)
      }
      if _storage._decodeRepeatedGroupField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedGroupField, fieldNumber: 162)
      }
      if _storage._decodeRepeatedInt32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedInt32Field, fieldNumber: 163)
      }
      if _storage._decodeRepeatedInt64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedInt64Field, fieldNumber: 164)
      }
      if _storage._decodeRepeatedMessageField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedMessageField, fieldNumber: 165)
      }
      if _storage._decodeRepeatedSfixed32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedSfixed32Field, fieldNumber: 166)
      }
      if _storage._decodeRepeatedSfixed64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedSfixed64Field, fieldNumber: 167)
      }
      if _storage._decodeRepeatedSint32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedSint32Field, fieldNumber: 168)
      }
      if _storage._decodeRepeatedSint64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedSint64Field, fieldNumber: 169)
      }
      if _storage._decodeRepeatedStringField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedStringField, fieldNumber: 170)
      }
      if _storage._decodeRepeatedUint32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedUint32Field, fieldNumber: 171)
      }
      if _storage._decodeRepeatedUint64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeRepeatedUint64Field, fieldNumber: 172)
      }
      if _storage._decodeSingular != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingular, fieldNumber: 173)
      }
      if _storage._decodeSingularBoolField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularBoolField, fieldNumber: 174)
      }
      if _storage._decodeSingularBytesField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularBytesField, fieldNumber: 175)
      }
      if _storage._decodeSingularDoubleField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularDoubleField, fieldNumber: 176)
      }
      if _storage._decodeSingularEnumField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularEnumField, fieldNumber: 177)
      }
      if _storage._decodeSingularFixed32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularFixed32Field, fieldNumber: 178)
      }
      if _storage._decodeSingularFixed64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularFixed64Field, fieldNumber: 179)
      }
      if _storage._decodeSingularFloatField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularFloatField, fieldNumber: 180)
      }
      if _storage._decodeSingularGroupField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularGroupField, fieldNumber: 181)
      }
      if _storage._decodeSingularInt32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularInt32Field, fieldNumber: 182)
      }
      if _storage._decodeSingularInt64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularInt64Field, fieldNumber: 183)
      }
      if _storage._decodeSingularMessageField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularMessageField, fieldNumber: 184)
      }
      if _storage._decodeSingularSfixed32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularSfixed32Field, fieldNumber: 185)
      }
      if _storage._decodeSingularSfixed64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularSfixed64Field, fieldNumber: 186)
      }
      if _storage._decodeSingularSint32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularSint32Field, fieldNumber: 187)
      }
      if _storage._decodeSingularSint64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularSint64Field, fieldNumber: 188)
      }
      if _storage._decodeSingularStringField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularStringField, fieldNumber: 189)
      }
      if _storage._decodeSingularUint32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularUint32Field, fieldNumber: 190)
      }
      if _storage._decodeSingularUint64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeSingularUint64Field, fieldNumber: 191)
      }
      if _storage._decodeTextFormat != 0 {
        try visitor.visitSingularInt32Field(value: _storage._decodeTextFormat, fieldNumber: 192)
      }
      if _storage._defaultAnyTypeUrlprefix != 0 {
        try visitor.visitSingularInt32Field(value: _storage._defaultAnyTypeUrlprefix, fieldNumber: 193)
      }
      if _storage._defaultValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._defaultValue, fieldNumber: 194)
      }
      if _storage._dependency != 0 {
        try visitor.visitSingularInt32Field(value: _storage._dependency, fieldNumber: 195)
      }
      if _storage._deprecated != 0 {
        try visitor.visitSingularInt32Field(value: _storage._deprecated, fieldNumber: 196)
      }
      if _storage._description_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._description_p, fieldNumber: 197)
      }
      if _storage._descriptorProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._descriptorProto, fieldNumber: 198)
      }
      if _storage._dictionary != 0 {
        try visitor.visitSingularInt32Field(value: _storage._dictionary, fieldNumber: 199)
      }
      if _storage._dictionaryLiteral != 0 {
        try visitor.visitSingularInt32Field(value: _storage._dictionaryLiteral, fieldNumber: 200)
      }
      if _storage._digit != 0 {
        try visitor.visitSingularInt32Field(value: _storage._digit, fieldNumber: 201)
      }
      if _storage._digit0 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._digit0, fieldNumber: 202)
      }
      if _storage._digit1 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._digit1, fieldNumber: 203)
      }
      if _storage._digitCount != 0 {
        try visitor.visitSingularInt32Field(value: _storage._digitCount, fieldNumber: 204)
      }
      if _storage._digits != 0 {
        try visitor.visitSingularInt32Field(value: _storage._digits, fieldNumber: 205)
      }
      if _storage._digitValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._digitValue, fieldNumber: 206)
      }
      if _storage._discardableResult != 0 {
        try visitor.visitSingularInt32Field(value: _storage._discardableResult, fieldNumber: 207)
      }
      if _storage._discardUnknownFields != 0 {
        try visitor.visitSingularInt32Field(value: _storage._discardUnknownFields, fieldNumber: 208)
      }
      if _storage._distance != 0 {
        try visitor.visitSingularInt32Field(value: _storage._distance, fieldNumber: 209)
      }
      if _storage._double != 0 {
        try visitor.visitSingularInt32Field(value: _storage._double, fieldNumber: 210)
      }
      if _storage._doubleValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._doubleValue, fieldNumber: 211)
      }
      if _storage._duration != 0 {
        try visitor.visitSingularInt32Field(value: _storage._duration, fieldNumber: 212)
      }
      if _storage._e != 0 {
        try visitor.visitSingularInt32Field(value: _storage._e, fieldNumber: 213)
      }
      if _storage._element != 0 {
        try visitor.visitSingularInt32Field(value: _storage._element, fieldNumber: 214)
      }
      if _storage._elements != 0 {
        try visitor.visitSingularInt32Field(value: _storage._elements, fieldNumber: 215)
      }
      if _storage._emitExtensionFieldName != 0 {
        try visitor.visitSingularInt32Field(value: _storage._emitExtensionFieldName, fieldNumber: 216)
      }
      if _storage._emitFieldName != 0 {
        try visitor.visitSingularInt32Field(value: _storage._emitFieldName, fieldNumber: 217)
      }
      if _storage._emitFieldNumber != 0 {
        try visitor.visitSingularInt32Field(value: _storage._emitFieldNumber, fieldNumber: 218)
      }
      if _storage._empty != 0 {
        try visitor.visitSingularInt32Field(value: _storage._empty, fieldNumber: 219)
      }
      if _storage._emptyData != 0 {
        try visitor.visitSingularInt32Field(value: _storage._emptyData, fieldNumber: 220)
      }
      if _storage._encodeAsBytes != 0 {
        try visitor.visitSingularInt32Field(value: _storage._encodeAsBytes, fieldNumber: 221)
      }
      if _storage._encoded != 0 {
        try visitor.visitSingularInt32Field(value: _storage._encoded, fieldNumber: 222)
      }
      if _storage._encodedJsonstring != 0 {
        try visitor.visitSingularInt32Field(value: _storage._encodedJsonstring, fieldNumber: 223)
      }
      if _storage._encodedSize != 0 {
        try visitor.visitSingularInt32Field(value: _storage._encodedSize, fieldNumber: 224)
      }
      if _storage._encodeField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._encodeField, fieldNumber: 225)
      }
      if _storage._encoder != 0 {
        try visitor.visitSingularInt32Field(value: _storage._encoder, fieldNumber: 226)
      }
      if _storage._end != 0 {
        try visitor.visitSingularInt32Field(value: _storage._end, fieldNumber: 227)
      }
      if _storage._endArray != 0 {
        try visitor.visitSingularInt32Field(value: _storage._endArray, fieldNumber: 228)
      }
      if _storage._endMessageField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._endMessageField, fieldNumber: 229)
      }
      if _storage._endObject != 0 {
        try visitor.visitSingularInt32Field(value: _storage._endObject, fieldNumber: 230)
      }
      if _storage._endRegularField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._endRegularField, fieldNumber: 231)
      }
      if _storage._enum != 0 {
        try visitor.visitSingularInt32Field(value: _storage._enum, fieldNumber: 232)
      }
      if _storage._enumDescriptorProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._enumDescriptorProto, fieldNumber: 233)
      }
      if _storage._enumOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._enumOptions, fieldNumber: 234)
      }
      if _storage._enumReservedRange != 0 {
        try visitor.visitSingularInt32Field(value: _storage._enumReservedRange, fieldNumber: 235)
      }
      if _storage._enumType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._enumType, fieldNumber: 236)
      }
      if _storage._enumvalue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._enumvalue, fieldNumber: 237)
      }
      if _storage._enumValueDescriptorProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._enumValueDescriptorProto, fieldNumber: 238)
      }
      if _storage._enumValueOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._enumValueOptions, fieldNumber: 239)
      }
      if _storage._equatable != 0 {
        try visitor.visitSingularInt32Field(value: _storage._equatable, fieldNumber: 240)
      }
      if _storage._error != 0 {
        try visitor.visitSingularInt32Field(value: _storage._error, fieldNumber: 241)
      }
      if _storage._expressibleByArrayLiteral != 0 {
        try visitor.visitSingularInt32Field(value: _storage._expressibleByArrayLiteral, fieldNumber: 242)
      }
      if _storage._expressibleByDictionaryLiteral != 0 {
        try visitor.visitSingularInt32Field(value: _storage._expressibleByDictionaryLiteral, fieldNumber: 243)
      }
      if _storage._ext != 0 {
        try visitor.visitSingularInt32Field(value: _storage._ext, fieldNumber: 244)
      }
      if _storage._extDecoder != 0 {
        try visitor.visitSingularInt32Field(value: _storage._extDecoder, fieldNumber: 245)
      }
      if _storage._extendedGraphemeClusterLiteral != 0 {
        try visitor.visitSingularInt32Field(value: _storage._extendedGraphemeClusterLiteral, fieldNumber: 246)
      }
      if _storage._extendedGraphemeClusterLiteralType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._extendedGraphemeClusterLiteralType, fieldNumber: 247)
      }
      if _storage._extendee != 0 {
        try visitor.visitSingularInt32Field(value: _storage._extendee, fieldNumber: 248)
      }
      if _storage._extensibleMessage != 0 {
        try visitor.visitSingularInt32Field(value: _storage._extensibleMessage, fieldNumber: 249)
      }
      if _storage._extension != 0 {
        try visitor.visitSingularInt32Field(value: _storage._extension, fieldNumber: 250)
      }
      if _storage._extensionField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._extensionField, fieldNumber: 251)
      }
      if _storage._extensionFieldNumber != 0 {
        try visitor.visitSingularInt32Field(value: _storage._extensionFieldNumber, fieldNumber: 252)
      }
      if _storage._extensionFieldValueSet != 0 {
        try visitor.visitSingularInt32Field(value: _storage._extensionFieldValueSet, fieldNumber: 253)
      }
      if _storage._extensionMap != 0 {
        try visitor.visitSingularInt32Field(value: _storage._extensionMap, fieldNumber: 254)
      }
      if _storage._extensionRange != 0 {
        try visitor.visitSingularInt32Field(value: _storage._extensionRange, fieldNumber: 255)
      }
      if _storage._extensionRangeOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._extensionRangeOptions, fieldNumber: 256)
      }
      if _storage._extensions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._extensions, fieldNumber: 257)
      }
      if _storage._extras != 0 {
        try visitor.visitSingularInt32Field(value: _storage._extras, fieldNumber: 258)
      }
      if _storage._f != 0 {
        try visitor.visitSingularInt32Field(value: _storage._f, fieldNumber: 259)
      }
      if _storage._false != 0 {
        try visitor.visitSingularInt32Field(value: _storage._false, fieldNumber: 260)
      }
      if _storage._field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._field, fieldNumber: 261)
      }
      if _storage._fieldData != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldData, fieldNumber: 262)
      }
      if _storage._fieldDescriptorProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldDescriptorProto, fieldNumber: 263)
      }
      if _storage._fieldMask != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldMask, fieldNumber: 264)
      }
      if _storage._fieldName != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldName, fieldNumber: 265)
      }
      if _storage._fieldNameCount != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldNameCount, fieldNumber: 266)
      }
      if _storage._fieldNum != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldNum, fieldNumber: 267)
      }
      if _storage._fieldNumber != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldNumber, fieldNumber: 268)
      }
      if _storage._fieldNumberForProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldNumberForProto, fieldNumber: 269)
      }
      if _storage._fieldOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldOptions, fieldNumber: 270)
      }
      if _storage._fields != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fields, fieldNumber: 271)
      }
      if _storage._fieldSize != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldSize, fieldNumber: 272)
      }
      if _storage._fieldTag != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldTag, fieldNumber: 273)
      }
      if _storage._fieldType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldType, fieldNumber: 274)
      }
      if _storage._fieldValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fieldValue, fieldNumber: 275)
      }
      if _storage._file != 0 {
        try visitor.visitSingularInt32Field(value: _storage._file, fieldNumber: 276)
      }
      if _storage._fileDescriptorProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fileDescriptorProto, fieldNumber: 277)
      }
      if _storage._fileDescriptorSet != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fileDescriptorSet, fieldNumber: 278)
      }
      if _storage._fileName != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fileName, fieldNumber: 279)
      }
      if _storage._fileOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fileOptions, fieldNumber: 280)
      }
      if _storage._filter != 0 {
        try visitor.visitSingularInt32Field(value: _storage._filter, fieldNumber: 281)
      }
      if _storage._firstItem != 0 {
        try visitor.visitSingularInt32Field(value: _storage._firstItem, fieldNumber: 282)
      }
      if _storage._float != 0 {
        try visitor.visitSingularInt32Field(value: _storage._float, fieldNumber: 283)
      }
      if _storage._floatLiteral != 0 {
        try visitor.visitSingularInt32Field(value: _storage._floatLiteral, fieldNumber: 284)
      }
      if _storage._floatLiteralType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._floatLiteralType, fieldNumber: 285)
      }
      if _storage._floatValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._floatValue, fieldNumber: 286)
      }
      if _storage._forMessageName != 0 {
        try visitor.visitSingularInt32Field(value: _storage._forMessageName, fieldNumber: 287)
      }
      if _storage._formUnion != 0 {
        try visitor.visitSingularInt32Field(value: _storage._formUnion, fieldNumber: 288)
      }
      if _storage._forReadingFrom != 0 {
        try visitor.visitSingularInt32Field(value: _storage._forReadingFrom, fieldNumber: 289)
      }
      if _storage._forTypeURL != 0 {
        try visitor.visitSingularInt32Field(value: _storage._forTypeURL, fieldNumber: 290)
      }
      if _storage._forwardParser != 0 {
        try visitor.visitSingularInt32Field(value: _storage._forwardParser, fieldNumber: 291)
      }
      if _storage._forWritingInto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._forWritingInto, fieldNumber: 292)
      }
      if _storage._from != 0 {
        try visitor.visitSingularInt32Field(value: _storage._from, fieldNumber: 293)
      }
      if _storage._fromAscii2 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fromAscii2, fieldNumber: 294)
      }
      if _storage._fromAscii4 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fromAscii4, fieldNumber: 295)
      }
      if _storage._fromByteOffset != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fromByteOffset, fieldNumber: 296)
      }
      if _storage._fromHexDigit != 0 {
        try visitor.visitSingularInt32Field(value: _storage._fromHexDigit, fieldNumber: 297)
      }
      if _storage._func != 0 {
        try visitor.visitSingularInt32Field(value: _storage._func, fieldNumber: 298)
      }
      if _storage._g != 0 {
        try visitor.visitSingularInt32Field(value: _storage._g, fieldNumber: 299)
      }
      if _storage._generatedCodeInfo != 0 {
        try visitor.visitSingularInt32Field(value: _storage._generatedCodeInfo, fieldNumber: 300)
      }
      if _storage._get != 0 {
        try visitor.visitSingularInt32Field(value: _storage._get, fieldNumber: 301)
      }
      if _storage._getExtensionValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._getExtensionValue, fieldNumber: 302)
      }
      if _storage._googleapis != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleapis, fieldNumber: 303)
      }
      if _storage._googleProtobufAny != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufAny, fieldNumber: 304)
      }
      if _storage._googleProtobufApi != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufApi, fieldNumber: 305)
      }
      if _storage._googleProtobufBoolValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufBoolValue, fieldNumber: 306)
      }
      if _storage._googleProtobufBytesValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufBytesValue, fieldNumber: 307)
      }
      if _storage._googleProtobufDescriptorProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufDescriptorProto, fieldNumber: 308)
      }
      if _storage._googleProtobufDoubleValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufDoubleValue, fieldNumber: 309)
      }
      if _storage._googleProtobufDuration != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufDuration, fieldNumber: 310)
      }
      if _storage._googleProtobufEmpty != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufEmpty, fieldNumber: 311)
      }
      if _storage._googleProtobufEnum != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufEnum, fieldNumber: 312)
      }
      if _storage._googleProtobufEnumDescriptorProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufEnumDescriptorProto, fieldNumber: 313)
      }
      if _storage._googleProtobufEnumOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufEnumOptions, fieldNumber: 314)
      }
      if _storage._googleProtobufEnumValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufEnumValue, fieldNumber: 315)
      }
      if _storage._googleProtobufEnumValueDescriptorProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufEnumValueDescriptorProto, fieldNumber: 316)
      }
      if _storage._googleProtobufEnumValueOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufEnumValueOptions, fieldNumber: 317)
      }
      if _storage._googleProtobufExtensionRangeOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufExtensionRangeOptions, fieldNumber: 318)
      }
      if _storage._googleProtobufField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufField, fieldNumber: 319)
      }
      if _storage._googleProtobufFieldDescriptorProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufFieldDescriptorProto, fieldNumber: 320)
      }
      if _storage._googleProtobufFieldMask != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufFieldMask, fieldNumber: 321)
      }
      if _storage._googleProtobufFieldOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufFieldOptions, fieldNumber: 322)
      }
      if _storage._googleProtobufFileDescriptorProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufFileDescriptorProto, fieldNumber: 323)
      }
      if _storage._googleProtobufFileDescriptorSet != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufFileDescriptorSet, fieldNumber: 324)
      }
      if _storage._googleProtobufFileOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufFileOptions, fieldNumber: 325)
      }
      if _storage._googleProtobufFloatValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufFloatValue, fieldNumber: 326)
      }
      if _storage._googleProtobufGeneratedCodeInfo != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufGeneratedCodeInfo, fieldNumber: 327)
      }
      if _storage._googleProtobufInt32Value != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufInt32Value, fieldNumber: 328)
      }
      if _storage._googleProtobufInt64Value != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufInt64Value, fieldNumber: 329)
      }
      if _storage._googleProtobufListValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufListValue, fieldNumber: 330)
      }
      if _storage._googleProtobufMessageOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufMessageOptions, fieldNumber: 331)
      }
      if _storage._googleProtobufMethod != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufMethod, fieldNumber: 332)
      }
      if _storage._googleProtobufMethodDescriptorProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufMethodDescriptorProto, fieldNumber: 333)
      }
      if _storage._googleProtobufMethodOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufMethodOptions, fieldNumber: 334)
      }
      if _storage._googleProtobufMixin != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufMixin, fieldNumber: 335)
      }
      if _storage._googleProtobufNullValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufNullValue, fieldNumber: 336)
      }
      if _storage._googleProtobufOneofDescriptorProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufOneofDescriptorProto, fieldNumber: 337)
      }
      if _storage._googleProtobufOneofOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufOneofOptions, fieldNumber: 338)
      }
      if _storage._googleProtobufOption != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufOption, fieldNumber: 339)
      }
      if _storage._googleProtobufServiceDescriptorProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufServiceDescriptorProto, fieldNumber: 340)
      }
      if _storage._googleProtobufServiceOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufServiceOptions, fieldNumber: 341)
      }
      if _storage._googleProtobufSourceCodeInfo != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufSourceCodeInfo, fieldNumber: 342)
      }
      if _storage._googleProtobufSourceContext != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufSourceContext, fieldNumber: 343)
      }
      if _storage._googleProtobufStringValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufStringValue, fieldNumber: 344)
      }
      if _storage._googleProtobufStruct != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufStruct, fieldNumber: 345)
      }
      if _storage._googleProtobufSyntax != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufSyntax, fieldNumber: 346)
      }
      if _storage._googleProtobufTimestamp != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufTimestamp, fieldNumber: 347)
      }
      if _storage._googleProtobufType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufType, fieldNumber: 348)
      }
      if _storage._googleProtobufUint32Value != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufUint32Value, fieldNumber: 349)
      }
      if _storage._googleProtobufUint64Value != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufUint64Value, fieldNumber: 350)
      }
      if _storage._googleProtobufUninterpretedOption != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufUninterpretedOption, fieldNumber: 351)
      }
      if _storage._googleProtobufValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._googleProtobufValue, fieldNumber: 352)
      }
      if _storage._goPackage != 0 {
        try visitor.visitSingularInt32Field(value: _storage._goPackage, fieldNumber: 353)
      }
      if _storage._group != 0 {
        try visitor.visitSingularInt32Field(value: _storage._group, fieldNumber: 354)
      }
      if _storage._groupFieldNumberStack != 0 {
        try visitor.visitSingularInt32Field(value: _storage._groupFieldNumberStack, fieldNumber: 355)
      }
      if _storage._groupSize != 0 {
        try visitor.visitSingularInt32Field(value: _storage._groupSize, fieldNumber: 356)
      }
      if _storage._h != 0 {
        try visitor.visitSingularInt32Field(value: _storage._h, fieldNumber: 357)
      }
      if _storage._handleConflictingOneOf != 0 {
        try visitor.visitSingularInt32Field(value: _storage._handleConflictingOneOf, fieldNumber: 358)
      }
      if _storage._hasAggregateValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasAggregateValue_p, fieldNumber: 359)
      }
      if _storage._hasAllowAlias_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasAllowAlias_p, fieldNumber: 360)
      }
      if _storage._hasBegin_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasBegin_p, fieldNumber: 361)
      }
      if _storage._hasCcEnableArenas_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasCcEnableArenas_p, fieldNumber: 362)
      }
      if _storage._hasCcGenericServices_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasCcGenericServices_p, fieldNumber: 363)
      }
      if _storage._hasClientStreaming_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasClientStreaming_p, fieldNumber: 364)
      }
      if _storage._hasCsharpNamespace_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasCsharpNamespace_p, fieldNumber: 365)
      }
      if _storage._hasCtype_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasCtype_p, fieldNumber: 366)
      }
      if _storage._hasDefaultValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasDefaultValue_p, fieldNumber: 367)
      }
      if _storage._hasDeprecated_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasDeprecated_p, fieldNumber: 368)
      }
      if _storage._hasDoubleValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasDoubleValue_p, fieldNumber: 369)
      }
      if _storage._hasEnd_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasEnd_p, fieldNumber: 370)
      }
      if _storage._hasExtendee_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasExtendee_p, fieldNumber: 371)
      }
      if _storage._hasExtensionValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasExtensionValue_p, fieldNumber: 372)
      }
      if _storage._hasGoPackage_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasGoPackage_p, fieldNumber: 373)
      }
      if _storage._hash != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hash, fieldNumber: 374)
      }
      if _storage._hashable != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hashable, fieldNumber: 375)
      }
      if _storage._hasher != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasher, fieldNumber: 376)
      }
      if _storage._hashValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hashValue_p, fieldNumber: 377)
      }
      if _storage._hashVisitor != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hashVisitor, fieldNumber: 378)
      }
      if _storage._hasIdempotencyLevel_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasIdempotencyLevel_p, fieldNumber: 379)
      }
      if _storage._hasIdentifierValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasIdentifierValue_p, fieldNumber: 380)
      }
      if _storage._hasInputType_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasInputType_p, fieldNumber: 381)
      }
      if _storage._hasIsExtension_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasIsExtension_p, fieldNumber: 382)
      }
      if _storage._hasJavaGenerateEqualsAndHash_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasJavaGenerateEqualsAndHash_p, fieldNumber: 383)
      }
      if _storage._hasJavaGenericServices_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasJavaGenericServices_p, fieldNumber: 384)
      }
      if _storage._hasJavaMultipleFiles_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasJavaMultipleFiles_p, fieldNumber: 385)
      }
      if _storage._hasJavaOuterClassname_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasJavaOuterClassname_p, fieldNumber: 386)
      }
      if _storage._hasJavaPackage_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasJavaPackage_p, fieldNumber: 387)
      }
      if _storage._hasJavaStringCheckUtf8_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasJavaStringCheckUtf8_p, fieldNumber: 388)
      }
      if _storage._hasJsonName_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasJsonName_p, fieldNumber: 389)
      }
      if _storage._hasJstype_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasJstype_p, fieldNumber: 390)
      }
      if _storage._hasLabel_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasLabel_p, fieldNumber: 391)
      }
      if _storage._hasLazy_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasLazy_p, fieldNumber: 392)
      }
      if _storage._hasLeadingComments_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasLeadingComments_p, fieldNumber: 393)
      }
      if _storage._hasMapEntry_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasMapEntry_p, fieldNumber: 394)
      }
      if _storage._hasMessageSetWireFormat_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasMessageSetWireFormat_p, fieldNumber: 395)
      }
      if _storage._hasName_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasName_p, fieldNumber: 396)
      }
      if _storage._hasNamePart_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasNamePart_p, fieldNumber: 397)
      }
      if _storage._hasNegativeIntValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasNegativeIntValue_p, fieldNumber: 398)
      }
      if _storage._hasNoStandardDescriptorAccessor_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasNoStandardDescriptorAccessor_p, fieldNumber: 399)
      }
      if _storage._hasNumber_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasNumber_p, fieldNumber: 400)
      }
      if _storage._hasObjcClassPrefix_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasObjcClassPrefix_p, fieldNumber: 401)
      }
      if _storage._hasOneofIndex_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasOneofIndex_p, fieldNumber: 402)
      }
      if _storage._hasOptimizeFor_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasOptimizeFor_p, fieldNumber: 403)
      }
      if _storage._hasOptions_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasOptions_p, fieldNumber: 404)
      }
      if _storage._hasOutputType_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasOutputType_p, fieldNumber: 405)
      }
      if _storage._hasPackage_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasPackage_p, fieldNumber: 406)
      }
      if _storage._hasPacked_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasPacked_p, fieldNumber: 407)
      }
      if _storage._hasPhpClassPrefix_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasPhpClassPrefix_p, fieldNumber: 408)
      }
      if _storage._hasPhpGenericServices_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasPhpGenericServices_p, fieldNumber: 409)
      }
      if _storage._hasPhpMetadataNamespace_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasPhpMetadataNamespace_p, fieldNumber: 410)
      }
      if _storage._hasPhpNamespace_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasPhpNamespace_p, fieldNumber: 411)
      }
      if _storage._hasPositiveIntValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasPositiveIntValue_p, fieldNumber: 412)
      }
      if _storage._hasPyGenericServices_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasPyGenericServices_p, fieldNumber: 413)
      }
      if _storage._hasRubyPackage_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasRubyPackage_p, fieldNumber: 414)
      }
      if _storage._hasServerStreaming_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasServerStreaming_p, fieldNumber: 415)
      }
      if _storage._hasSourceCodeInfo_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasSourceCodeInfo_p, fieldNumber: 416)
      }
      if _storage._hasSourceContext_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasSourceContext_p, fieldNumber: 417)
      }
      if _storage._hasSourceFile_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasSourceFile_p, fieldNumber: 418)
      }
      if _storage._hasStart_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasStart_p, fieldNumber: 419)
      }
      if _storage._hasStringValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasStringValue_p, fieldNumber: 420)
      }
      if _storage._hasSwiftPrefix_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasSwiftPrefix_p, fieldNumber: 421)
      }
      if _storage._hasSyntax_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasSyntax_p, fieldNumber: 422)
      }
      if _storage._hasTrailingComments_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasTrailingComments_p, fieldNumber: 423)
      }
      if _storage._hasType_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasType_p, fieldNumber: 424)
      }
      if _storage._hasTypeName_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasTypeName_p, fieldNumber: 425)
      }
      if _storage._hasValue_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasValue_p, fieldNumber: 426)
      }
      if _storage._hasWeak_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hasWeak_p, fieldNumber: 427)
      }
      if _storage._hour != 0 {
        try visitor.visitSingularInt32Field(value: _storage._hour, fieldNumber: 428)
      }
      if _storage._i != 0 {
        try visitor.visitSingularInt32Field(value: _storage._i, fieldNumber: 429)
      }
      if _storage._idempotencyLevel != 0 {
        try visitor.visitSingularInt32Field(value: _storage._idempotencyLevel, fieldNumber: 430)
      }
      if _storage._identifierValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._identifierValue, fieldNumber: 431)
      }
      if _storage._if != 0 {
        try visitor.visitSingularInt32Field(value: _storage._if, fieldNumber: 432)
      }
      if _storage._ignoreUnknownFields != 0 {
        try visitor.visitSingularInt32Field(value: _storage._ignoreUnknownFields, fieldNumber: 433)
      }
      if _storage._index != 0 {
        try visitor.visitSingularInt32Field(value: _storage._index, fieldNumber: 434)
      }
      if _storage._init_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._init_p, fieldNumber: 435)
      }
      if _storage._inout != 0 {
        try visitor.visitSingularInt32Field(value: _storage._inout, fieldNumber: 436)
      }
      if _storage._inputType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._inputType, fieldNumber: 437)
      }
      if _storage._insert != 0 {
        try visitor.visitSingularInt32Field(value: _storage._insert, fieldNumber: 438)
      }
      if _storage._int != 0 {
        try visitor.visitSingularInt32Field(value: _storage._int, fieldNumber: 439)
      }
      if _storage._int32 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._int32, fieldNumber: 440)
      }
      if _storage._int32Value != 0 {
        try visitor.visitSingularInt32Field(value: _storage._int32Value, fieldNumber: 441)
      }
      if _storage._int64 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._int64, fieldNumber: 442)
      }
      if _storage._int64Value != 0 {
        try visitor.visitSingularInt32Field(value: _storage._int64Value, fieldNumber: 443)
      }
      if _storage._int8 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._int8, fieldNumber: 444)
      }
      if _storage._integerLiteral != 0 {
        try visitor.visitSingularInt32Field(value: _storage._integerLiteral, fieldNumber: 445)
      }
      if _storage._integerLiteralType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._integerLiteralType, fieldNumber: 446)
      }
      if _storage._intern != 0 {
        try visitor.visitSingularInt32Field(value: _storage._intern, fieldNumber: 447)
      }
      if _storage._internal != 0 {
        try visitor.visitSingularInt32Field(value: _storage._internal, fieldNumber: 448)
      }
      if _storage._internalState != 0 {
        try visitor.visitSingularInt32Field(value: _storage._internalState, fieldNumber: 449)
      }
      if _storage._into != 0 {
        try visitor.visitSingularInt32Field(value: _storage._into, fieldNumber: 450)
      }
      if _storage._ints != 0 {
        try visitor.visitSingularInt32Field(value: _storage._ints, fieldNumber: 451)
      }
      if _storage._isA != 0 {
        try visitor.visitSingularInt32Field(value: _storage._isA, fieldNumber: 452)
      }
      if _storage._isEqual != 0 {
        try visitor.visitSingularInt32Field(value: _storage._isEqual, fieldNumber: 453)
      }
      if _storage._isEqualTo != 0 {
        try visitor.visitSingularInt32Field(value: _storage._isEqualTo, fieldNumber: 454)
      }
      if _storage._isExtension != 0 {
        try visitor.visitSingularInt32Field(value: _storage._isExtension, fieldNumber: 455)
      }
      if _storage._isInitialized_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._isInitialized_p, fieldNumber: 456)
      }
      if _storage._itemTagsEncodedSize != 0 {
        try visitor.visitSingularInt32Field(value: _storage._itemTagsEncodedSize, fieldNumber: 457)
      }
      if _storage._i2166136261 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._i2166136261, fieldNumber: 458)
      }
      if _storage._javaGenerateEqualsAndHash != 0 {
        try visitor.visitSingularInt32Field(value: _storage._javaGenerateEqualsAndHash, fieldNumber: 459)
      }
      if _storage._javaGenericServices != 0 {
        try visitor.visitSingularInt32Field(value: _storage._javaGenericServices, fieldNumber: 460)
      }
      if _storage._javaMultipleFiles != 0 {
        try visitor.visitSingularInt32Field(value: _storage._javaMultipleFiles, fieldNumber: 461)
      }
      if _storage._javaOuterClassname != 0 {
        try visitor.visitSingularInt32Field(value: _storage._javaOuterClassname, fieldNumber: 462)
      }
      if _storage._javaPackage != 0 {
        try visitor.visitSingularInt32Field(value: _storage._javaPackage, fieldNumber: 463)
      }
      if _storage._javaStringCheckUtf8 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._javaStringCheckUtf8, fieldNumber: 464)
      }
      if _storage._jsondecoder != 0 {
        try visitor.visitSingularInt32Field(value: _storage._jsondecoder, fieldNumber: 465)
      }
      if _storage._jsondecodingError != 0 {
        try visitor.visitSingularInt32Field(value: _storage._jsondecodingError, fieldNumber: 466)
      }
      if _storage._jsondecodingOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._jsondecodingOptions, fieldNumber: 467)
      }
      if _storage._jsonEncoder != 0 {
        try visitor.visitSingularInt32Field(value: _storage._jsonEncoder, fieldNumber: 468)
      }
      if _storage._jsonencodingError != 0 {
        try visitor.visitSingularInt32Field(value: _storage._jsonencodingError, fieldNumber: 469)
      }
      if _storage._jsonencodingOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._jsonencodingOptions, fieldNumber: 470)
      }
      if _storage._jsonencodingVisitor != 0 {
        try visitor.visitSingularInt32Field(value: _storage._jsonencodingVisitor, fieldNumber: 471)
      }
      if _storage._jsonmapEncodingVisitor != 0 {
        try visitor.visitSingularInt32Field(value: _storage._jsonmapEncodingVisitor, fieldNumber: 472)
      }
      if _storage._jsonName != 0 {
        try visitor.visitSingularInt32Field(value: _storage._jsonName, fieldNumber: 473)
      }
      if _storage._jsonPath != 0 {
        try visitor.visitSingularInt32Field(value: _storage._jsonPath, fieldNumber: 474)
      }
      if _storage._jsonPaths != 0 {
        try visitor.visitSingularInt32Field(value: _storage._jsonPaths, fieldNumber: 475)
      }
      if _storage._jsonscanner != 0 {
        try visitor.visitSingularInt32Field(value: _storage._jsonscanner, fieldNumber: 476)
      }
      if _storage._jsonString != 0 {
        try visitor.visitSingularInt32Field(value: _storage._jsonString, fieldNumber: 477)
      }
      if _storage._jsonText != 0 {
        try visitor.visitSingularInt32Field(value: _storage._jsonText, fieldNumber: 478)
      }
      if _storage._jsonUtf8Data != 0 {
        try visitor.visitSingularInt32Field(value: _storage._jsonUtf8Data, fieldNumber: 479)
      }
      if _storage._jstype != 0 {
        try visitor.visitSingularInt32Field(value: _storage._jstype, fieldNumber: 480)
      }
      if _storage._k != 0 {
        try visitor.visitSingularInt32Field(value: _storage._k, fieldNumber: 481)
      }
      if _storage._key != 0 {
        try visitor.visitSingularInt32Field(value: _storage._key, fieldNumber: 482)
      }
      if _storage._keyField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._keyField, fieldNumber: 483)
      }
      if _storage._keyType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._keyType, fieldNumber: 484)
      }
      if _storage._kind != 0 {
        try visitor.visitSingularInt32Field(value: _storage._kind, fieldNumber: 485)
      }
      if _storage._l != 0 {
        try visitor.visitSingularInt32Field(value: _storage._l, fieldNumber: 486)
      }
      if _storage._label != 0 {
        try visitor.visitSingularInt32Field(value: _storage._label, fieldNumber: 487)
      }
      if _storage._lazy != 0 {
        try visitor.visitSingularInt32Field(value: _storage._lazy, fieldNumber: 488)
      }
      if _storage._leadingComments != 0 {
        try visitor.visitSingularInt32Field(value: _storage._leadingComments, fieldNumber: 489)
      }
      if _storage._leadingDetachedComments != 0 {
        try visitor.visitSingularInt32Field(value: _storage._leadingDetachedComments, fieldNumber: 490)
      }
      if _storage._length != 0 {
        try visitor.visitSingularInt32Field(value: _storage._length, fieldNumber: 491)
      }
      if _storage._let != 0 {
        try visitor.visitSingularInt32Field(value: _storage._let, fieldNumber: 492)
      }
      if _storage._lhs != 0 {
        try visitor.visitSingularInt32Field(value: _storage._lhs, fieldNumber: 493)
      }
      if _storage._list != 0 {
        try visitor.visitSingularInt32Field(value: _storage._list, fieldNumber: 494)
      }
      if _storage._listOfMessages != 0 {
        try visitor.visitSingularInt32Field(value: _storage._listOfMessages, fieldNumber: 495)
      }
      if _storage._listValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._listValue, fieldNumber: 496)
      }
      if _storage._littleEndian != 0 {
        try visitor.visitSingularInt32Field(value: _storage._littleEndian, fieldNumber: 497)
      }
      if _storage._littleEndianBytes != 0 {
        try visitor.visitSingularInt32Field(value: _storage._littleEndianBytes, fieldNumber: 498)
      }
      if _storage._load != 0 {
        try visitor.visitSingularInt32Field(value: _storage._load, fieldNumber: 499)
      }
      if _storage._localHasher != 0 {
        try visitor.visitSingularInt32Field(value: _storage._localHasher, fieldNumber: 500)
      }
      if _storage._location != 0 {
        try visitor.visitSingularInt32Field(value: _storage._location, fieldNumber: 501)
      }
      if _storage._m != 0 {
        try visitor.visitSingularInt32Field(value: _storage._m, fieldNumber: 502)
      }
      if _storage._major != 0 {
        try visitor.visitSingularInt32Field(value: _storage._major, fieldNumber: 503)
      }
      if _storage._makeIterator != 0 {
        try visitor.visitSingularInt32Field(value: _storage._makeIterator, fieldNumber: 504)
      }
      if _storage._mapEntry != 0 {
        try visitor.visitSingularInt32Field(value: _storage._mapEntry, fieldNumber: 505)
      }
      if _storage._mapHash != 0 {
        try visitor.visitSingularInt32Field(value: _storage._mapHash, fieldNumber: 506)
      }
      if _storage._mapKeyType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._mapKeyType, fieldNumber: 507)
      }
      if _storage._mapNameResolver != 0 {
        try visitor.visitSingularInt32Field(value: _storage._mapNameResolver, fieldNumber: 508)
      }
      if _storage._mapToMessages != 0 {
        try visitor.visitSingularInt32Field(value: _storage._mapToMessages, fieldNumber: 509)
      }
      if _storage._mapValueType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._mapValueType, fieldNumber: 510)
      }
      if _storage._mapVisitor != 0 {
        try visitor.visitSingularInt32Field(value: _storage._mapVisitor, fieldNumber: 511)
      }
      if _storage._mdayStart != 0 {
        try visitor.visitSingularInt32Field(value: _storage._mdayStart, fieldNumber: 512)
      }
      if _storage._merge != 0 {
        try visitor.visitSingularInt32Field(value: _storage._merge, fieldNumber: 513)
      }
      if _storage._message != 0 {
        try visitor.visitSingularInt32Field(value: _storage._message, fieldNumber: 514)
      }
      if _storage._messageDepthLimit != 0 {
        try visitor.visitSingularInt32Field(value: _storage._messageDepthLimit, fieldNumber: 515)
      }
      if _storage._messageExtension != 0 {
        try visitor.visitSingularInt32Field(value: _storage._messageExtension, fieldNumber: 516)
      }
      if _storage._messageImplementationBase != 0 {
        try visitor.visitSingularInt32Field(value: _storage._messageImplementationBase, fieldNumber: 517)
      }
      if _storage._messageOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._messageOptions, fieldNumber: 518)
      }
      if _storage._messageSet != 0 {
        try visitor.visitSingularInt32Field(value: _storage._messageSet, fieldNumber: 519)
      }
      if _storage._messageSetWireFormat != 0 {
        try visitor.visitSingularInt32Field(value: _storage._messageSetWireFormat, fieldNumber: 520)
      }
      if _storage._messageType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._messageType, fieldNumber: 521)
      }
      if _storage._method != 0 {
        try visitor.visitSingularInt32Field(value: _storage._method, fieldNumber: 522)
      }
      if _storage._methodDescriptorProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._methodDescriptorProto, fieldNumber: 523)
      }
      if _storage._methodOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._methodOptions, fieldNumber: 524)
      }
      if _storage._methods != 0 {
        try visitor.visitSingularInt32Field(value: _storage._methods, fieldNumber: 525)
      }
      if _storage._minor != 0 {
        try visitor.visitSingularInt32Field(value: _storage._minor, fieldNumber: 526)
      }
      if _storage._mixin != 0 {
        try visitor.visitSingularInt32Field(value: _storage._mixin, fieldNumber: 527)
      }
      if _storage._mixins != 0 {
        try visitor.visitSingularInt32Field(value: _storage._mixins, fieldNumber: 528)
      }
      if _storage._month != 0 {
        try visitor.visitSingularInt32Field(value: _storage._month, fieldNumber: 529)
      }
      if _storage._msgExtension != 0 {
        try visitor.visitSingularInt32Field(value: _storage._msgExtension, fieldNumber: 530)
      }
      if _storage._mutating != 0 {
        try visitor.visitSingularInt32Field(value: _storage._mutating, fieldNumber: 531)
      }
      if _storage._n != 0 {
        try visitor.visitSingularInt32Field(value: _storage._n, fieldNumber: 532)
      }
      if _storage._name != 0 {
        try visitor.visitSingularInt32Field(value: _storage._name, fieldNumber: 533)
      }
      if _storage._nameDescription != 0 {
        try visitor.visitSingularInt32Field(value: _storage._nameDescription, fieldNumber: 534)
      }
      if _storage._nameMap != 0 {
        try visitor.visitSingularInt32Field(value: _storage._nameMap, fieldNumber: 535)
      }
      if _storage._namePart != 0 {
        try visitor.visitSingularInt32Field(value: _storage._namePart, fieldNumber: 536)
      }
      if _storage._nameResolver != 0 {
        try visitor.visitSingularInt32Field(value: _storage._nameResolver, fieldNumber: 537)
      }
      if _storage._names != 0 {
        try visitor.visitSingularInt32Field(value: _storage._names, fieldNumber: 538)
      }
      if _storage._nanos != 0 {
        try visitor.visitSingularInt32Field(value: _storage._nanos, fieldNumber: 539)
      }
      if _storage._nativeBytes != 0 {
        try visitor.visitSingularInt32Field(value: _storage._nativeBytes, fieldNumber: 540)
      }
      if _storage._nativeEndianBytes != 0 {
        try visitor.visitSingularInt32Field(value: _storage._nativeEndianBytes, fieldNumber: 541)
      }
      if _storage._negativeIntValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._negativeIntValue, fieldNumber: 542)
      }
      if _storage._nestedType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._nestedType, fieldNumber: 543)
      }
      if _storage._newL != 0 {
        try visitor.visitSingularInt32Field(value: _storage._newL, fieldNumber: 544)
      }
      if _storage._newList != 0 {
        try visitor.visitSingularInt32Field(value: _storage._newList, fieldNumber: 545)
      }
      if _storage._newValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._newValue, fieldNumber: 546)
      }
      if _storage._nextByte != 0 {
        try visitor.visitSingularInt32Field(value: _storage._nextByte, fieldNumber: 547)
      }
      if _storage._nextFieldNumber != 0 {
        try visitor.visitSingularInt32Field(value: _storage._nextFieldNumber, fieldNumber: 548)
      }
      if _storage._nil != 0 {
        try visitor.visitSingularInt32Field(value: _storage._nil, fieldNumber: 549)
      }
      if _storage._nilLiteral != 0 {
        try visitor.visitSingularInt32Field(value: _storage._nilLiteral, fieldNumber: 550)
      }
      if _storage._noStandardDescriptorAccessor != 0 {
        try visitor.visitSingularInt32Field(value: _storage._noStandardDescriptorAccessor, fieldNumber: 551)
      }
      if _storage._nullValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._nullValue, fieldNumber: 552)
      }
      if _storage._number != 0 {
        try visitor.visitSingularInt32Field(value: _storage._number, fieldNumber: 553)
      }
      if _storage._numberValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._numberValue, fieldNumber: 554)
      }
      if _storage._objcClassPrefix != 0 {
        try visitor.visitSingularInt32Field(value: _storage._objcClassPrefix, fieldNumber: 555)
      }
      if _storage._of != 0 {
        try visitor.visitSingularInt32Field(value: _storage._of, fieldNumber: 556)
      }
      if _storage._oneofDecl != 0 {
        try visitor.visitSingularInt32Field(value: _storage._oneofDecl, fieldNumber: 557)
      }
      if _storage._oneofDescriptorProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._oneofDescriptorProto, fieldNumber: 558)
      }
      if _storage._oneofIndex != 0 {
        try visitor.visitSingularInt32Field(value: _storage._oneofIndex, fieldNumber: 559)
      }
      if _storage._oneofOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._oneofOptions, fieldNumber: 560)
      }
      if _storage._oneofs != 0 {
        try visitor.visitSingularInt32Field(value: _storage._oneofs, fieldNumber: 561)
      }
      if _storage._oneOfKind != 0 {
        try visitor.visitSingularInt32Field(value: _storage._oneOfKind, fieldNumber: 562)
      }
      if _storage._optimizeFor != 0 {
        try visitor.visitSingularInt32Field(value: _storage._optimizeFor, fieldNumber: 563)
      }
      if _storage._optimizeMode != 0 {
        try visitor.visitSingularInt32Field(value: _storage._optimizeMode, fieldNumber: 564)
      }
      if _storage._option != 0 {
        try visitor.visitSingularInt32Field(value: _storage._option, fieldNumber: 565)
      }
      if _storage._optionalEnumExtensionField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._optionalEnumExtensionField, fieldNumber: 566)
      }
      if _storage._optionalExtensionField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._optionalExtensionField, fieldNumber: 567)
      }
      if _storage._optionalGroupExtensionField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._optionalGroupExtensionField, fieldNumber: 568)
      }
      if _storage._optionalMessageExtensionField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._optionalMessageExtensionField, fieldNumber: 569)
      }
      if _storage._options != 0 {
        try visitor.visitSingularInt32Field(value: _storage._options, fieldNumber: 570)
      }
      if _storage._other != 0 {
        try visitor.visitSingularInt32Field(value: _storage._other, fieldNumber: 571)
      }
      if _storage._others != 0 {
        try visitor.visitSingularInt32Field(value: _storage._others, fieldNumber: 572)
      }
      if _storage._out != 0 {
        try visitor.visitSingularInt32Field(value: _storage._out, fieldNumber: 573)
      }
      if _storage._outputType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._outputType, fieldNumber: 574)
      }
      if _storage._p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._p, fieldNumber: 575)
      }
      if _storage._package != 0 {
        try visitor.visitSingularInt32Field(value: _storage._package, fieldNumber: 576)
      }
      if _storage._packed != 0 {
        try visitor.visitSingularInt32Field(value: _storage._packed, fieldNumber: 577)
      }
      if _storage._packedEnumExtensionField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._packedEnumExtensionField, fieldNumber: 578)
      }
      if _storage._packedExtensionField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._packedExtensionField, fieldNumber: 579)
      }
      if _storage._packedSize != 0 {
        try visitor.visitSingularInt32Field(value: _storage._packedSize, fieldNumber: 580)
      }
      if _storage._padding != 0 {
        try visitor.visitSingularInt32Field(value: _storage._padding, fieldNumber: 581)
      }
      if _storage._parent != 0 {
        try visitor.visitSingularInt32Field(value: _storage._parent, fieldNumber: 582)
      }
      if _storage._parse != 0 {
        try visitor.visitSingularInt32Field(value: _storage._parse, fieldNumber: 583)
      }
      if _storage._partial != 0 {
        try visitor.visitSingularInt32Field(value: _storage._partial, fieldNumber: 584)
      }
      if _storage._path != 0 {
        try visitor.visitSingularInt32Field(value: _storage._path, fieldNumber: 585)
      }
      if _storage._paths != 0 {
        try visitor.visitSingularInt32Field(value: _storage._paths, fieldNumber: 586)
      }
      if _storage._payload != 0 {
        try visitor.visitSingularInt32Field(value: _storage._payload, fieldNumber: 587)
      }
      if _storage._payloadSize != 0 {
        try visitor.visitSingularInt32Field(value: _storage._payloadSize, fieldNumber: 588)
      }
      if _storage._phpClassPrefix != 0 {
        try visitor.visitSingularInt32Field(value: _storage._phpClassPrefix, fieldNumber: 589)
      }
      if _storage._phpGenericServices != 0 {
        try visitor.visitSingularInt32Field(value: _storage._phpGenericServices, fieldNumber: 590)
      }
      if _storage._phpMetadataNamespace != 0 {
        try visitor.visitSingularInt32Field(value: _storage._phpMetadataNamespace, fieldNumber: 591)
      }
      if _storage._phpNamespace != 0 {
        try visitor.visitSingularInt32Field(value: _storage._phpNamespace, fieldNumber: 592)
      }
      if _storage._pointer != 0 {
        try visitor.visitSingularInt32Field(value: _storage._pointer, fieldNumber: 593)
      }
      if _storage._pos != 0 {
        try visitor.visitSingularInt32Field(value: _storage._pos, fieldNumber: 594)
      }
      if _storage._positiveIntValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._positiveIntValue, fieldNumber: 595)
      }
      if _storage._prefix != 0 {
        try visitor.visitSingularInt32Field(value: _storage._prefix, fieldNumber: 596)
      }
      if _storage._preserveProtoFieldNames != 0 {
        try visitor.visitSingularInt32Field(value: _storage._preserveProtoFieldNames, fieldNumber: 597)
      }
      if _storage._preTraverse != 0 {
        try visitor.visitSingularInt32Field(value: _storage._preTraverse, fieldNumber: 598)
      }
      if _storage._printUnknownFields != 0 {
        try visitor.visitSingularInt32Field(value: _storage._printUnknownFields, fieldNumber: 599)
      }
      if _storage._proto2 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._proto2, fieldNumber: 600)
      }
      if _storage._proto3DefaultValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._proto3DefaultValue, fieldNumber: 601)
      }
      if _storage._protobufApiversionCheck != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufApiversionCheck, fieldNumber: 602)
      }
      if _storage._protobufApiversion2 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufApiversion2, fieldNumber: 603)
      }
      if _storage._protobufBool != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufBool, fieldNumber: 604)
      }
      if _storage._protobufBytes != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufBytes, fieldNumber: 605)
      }
      if _storage._protobufDouble != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufDouble, fieldNumber: 606)
      }
      if _storage._protobufEnumMap != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufEnumMap, fieldNumber: 607)
      }
      if _storage._protobufExtension != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufExtension, fieldNumber: 608)
      }
      if _storage._protobufFixed32 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufFixed32, fieldNumber: 609)
      }
      if _storage._protobufFixed64 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufFixed64, fieldNumber: 610)
      }
      if _storage._protobufFloat != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufFloat, fieldNumber: 611)
      }
      if _storage._protobufInt32 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufInt32, fieldNumber: 612)
      }
      if _storage._protobufInt64 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufInt64, fieldNumber: 613)
      }
      if _storage._protobufMap != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufMap, fieldNumber: 614)
      }
      if _storage._protobufMessageMap != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufMessageMap, fieldNumber: 615)
      }
      if _storage._protobufSfixed32 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufSfixed32, fieldNumber: 616)
      }
      if _storage._protobufSfixed64 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufSfixed64, fieldNumber: 617)
      }
      if _storage._protobufSint32 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufSint32, fieldNumber: 618)
      }
      if _storage._protobufSint64 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufSint64, fieldNumber: 619)
      }
      if _storage._protobufString != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufString, fieldNumber: 620)
      }
      if _storage._protobufUint32 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufUint32, fieldNumber: 621)
      }
      if _storage._protobufUint64 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufUint64, fieldNumber: 622)
      }
      if _storage._protobufExtensionFieldValues != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufExtensionFieldValues, fieldNumber: 623)
      }
      if _storage._protobufFieldNumber != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufFieldNumber, fieldNumber: 624)
      }
      if _storage._protobufGeneratedIsEqualTo != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufGeneratedIsEqualTo, fieldNumber: 625)
      }
      if _storage._protobufNameMap != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufNameMap, fieldNumber: 626)
      }
      if _storage._protobufNewField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufNewField, fieldNumber: 627)
      }
      if _storage._protobufPackage != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protobufPackage, fieldNumber: 628)
      }
      if _storage._protocol != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protocol, fieldNumber: 629)
      }
      if _storage._protoFieldName != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protoFieldName, fieldNumber: 630)
      }
      if _storage._protoMessageName != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protoMessageName, fieldNumber: 631)
      }
      if _storage._protoNameProviding != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protoNameProviding, fieldNumber: 632)
      }
      if _storage._protoPaths != 0 {
        try visitor.visitSingularInt32Field(value: _storage._protoPaths, fieldNumber: 633)
      }
      if _storage._public != 0 {
        try visitor.visitSingularInt32Field(value: _storage._public, fieldNumber: 634)
      }
      if _storage._publicDependency != 0 {
        try visitor.visitSingularInt32Field(value: _storage._publicDependency, fieldNumber: 635)
      }
      if _storage._putBoolValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._putBoolValue, fieldNumber: 636)
      }
      if _storage._putBytesValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._putBytesValue, fieldNumber: 637)
      }
      if _storage._putDoubleValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._putDoubleValue, fieldNumber: 638)
      }
      if _storage._putEnumValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._putEnumValue, fieldNumber: 639)
      }
      if _storage._putFixedUint32 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._putFixedUint32, fieldNumber: 640)
      }
      if _storage._putFixedUint64 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._putFixedUint64, fieldNumber: 641)
      }
      if _storage._putFloatValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._putFloatValue, fieldNumber: 642)
      }
      if _storage._putInt64 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._putInt64, fieldNumber: 643)
      }
      if _storage._putStringValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._putStringValue, fieldNumber: 644)
      }
      if _storage._putUint64 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._putUint64, fieldNumber: 645)
      }
      if _storage._putUint64Hex != 0 {
        try visitor.visitSingularInt32Field(value: _storage._putUint64Hex, fieldNumber: 646)
      }
      if _storage._putVarInt != 0 {
        try visitor.visitSingularInt32Field(value: _storage._putVarInt, fieldNumber: 647)
      }
      if _storage._putZigZagVarInt != 0 {
        try visitor.visitSingularInt32Field(value: _storage._putZigZagVarInt, fieldNumber: 648)
      }
      if _storage._pyGenericServices != 0 {
        try visitor.visitSingularInt32Field(value: _storage._pyGenericServices, fieldNumber: 649)
      }
      if _storage._rawChars != 0 {
        try visitor.visitSingularInt32Field(value: _storage._rawChars, fieldNumber: 650)
      }
      if _storage._rawRepresentable != 0 {
        try visitor.visitSingularInt32Field(value: _storage._rawRepresentable, fieldNumber: 651)
      }
      if _storage._rawValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._rawValue, fieldNumber: 652)
      }
      if _storage._readBuffer != 0 {
        try visitor.visitSingularInt32Field(value: _storage._readBuffer, fieldNumber: 653)
      }
      if _storage._register != 0 {
        try visitor.visitSingularInt32Field(value: _storage._register, fieldNumber: 654)
      }
      if _storage._repeatedEnumExtensionField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._repeatedEnumExtensionField, fieldNumber: 655)
      }
      if _storage._repeatedExtensionField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._repeatedExtensionField, fieldNumber: 656)
      }
      if _storage._repeatedGroupExtensionField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._repeatedGroupExtensionField, fieldNumber: 657)
      }
      if _storage._repeatedMessageExtensionField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._repeatedMessageExtensionField, fieldNumber: 658)
      }
      if _storage._requestStreaming != 0 {
        try visitor.visitSingularInt32Field(value: _storage._requestStreaming, fieldNumber: 659)
      }
      if _storage._requestTypeURL != 0 {
        try visitor.visitSingularInt32Field(value: _storage._requestTypeURL, fieldNumber: 660)
      }
      if _storage._requiredSize != 0 {
        try visitor.visitSingularInt32Field(value: _storage._requiredSize, fieldNumber: 661)
      }
      if _storage._reservedName != 0 {
        try visitor.visitSingularInt32Field(value: _storage._reservedName, fieldNumber: 662)
      }
      if _storage._reservedRange != 0 {
        try visitor.visitSingularInt32Field(value: _storage._reservedRange, fieldNumber: 663)
      }
      if _storage._responseStreaming != 0 {
        try visitor.visitSingularInt32Field(value: _storage._responseStreaming, fieldNumber: 664)
      }
      if _storage._responseTypeURL != 0 {
        try visitor.visitSingularInt32Field(value: _storage._responseTypeURL, fieldNumber: 665)
      }
      if _storage._result != 0 {
        try visitor.visitSingularInt32Field(value: _storage._result, fieldNumber: 666)
      }
      if _storage._rethrows != 0 {
        try visitor.visitSingularInt32Field(value: _storage._rethrows, fieldNumber: 667)
      }
      if _storage._return != 0 {
        try visitor.visitSingularInt32Field(value: _storage._return, fieldNumber: 668)
      }
      if _storage._revision != 0 {
        try visitor.visitSingularInt32Field(value: _storage._revision, fieldNumber: 669)
      }
      if _storage._rhs != 0 {
        try visitor.visitSingularInt32Field(value: _storage._rhs, fieldNumber: 670)
      }
      if _storage._root != 0 {
        try visitor.visitSingularInt32Field(value: _storage._root, fieldNumber: 671)
      }
      if _storage._rubyPackage != 0 {
        try visitor.visitSingularInt32Field(value: _storage._rubyPackage, fieldNumber: 672)
      }
      if _storage._s != 0 {
        try visitor.visitSingularInt32Field(value: _storage._s, fieldNumber: 673)
      }
      if _storage._sawBackslash != 0 {
        try visitor.visitSingularInt32Field(value: _storage._sawBackslash, fieldNumber: 674)
      }
      if _storage._sawSection4Characters != 0 {
        try visitor.visitSingularInt32Field(value: _storage._sawSection4Characters, fieldNumber: 675)
      }
      if _storage._sawSection5Characters != 0 {
        try visitor.visitSingularInt32Field(value: _storage._sawSection5Characters, fieldNumber: 676)
      }
      if _storage._scanner != 0 {
        try visitor.visitSingularInt32Field(value: _storage._scanner, fieldNumber: 677)
      }
      if _storage._seconds != 0 {
        try visitor.visitSingularInt32Field(value: _storage._seconds, fieldNumber: 678)
      }
      if _storage._self_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._self_p, fieldNumber: 679)
      }
      if _storage._separator != 0 {
        try visitor.visitSingularInt32Field(value: _storage._separator, fieldNumber: 680)
      }
      if _storage._serialize != 0 {
        try visitor.visitSingularInt32Field(value: _storage._serialize, fieldNumber: 681)
      }
      if _storage._serializedData != 0 {
        try visitor.visitSingularInt32Field(value: _storage._serializedData, fieldNumber: 682)
      }
      if _storage._serializedSize != 0 {
        try visitor.visitSingularInt32Field(value: _storage._serializedSize, fieldNumber: 683)
      }
      if _storage._serverStreaming != 0 {
        try visitor.visitSingularInt32Field(value: _storage._serverStreaming, fieldNumber: 684)
      }
      if _storage._service != 0 {
        try visitor.visitSingularInt32Field(value: _storage._service, fieldNumber: 685)
      }
      if _storage._serviceDescriptorProto != 0 {
        try visitor.visitSingularInt32Field(value: _storage._serviceDescriptorProto, fieldNumber: 686)
      }
      if _storage._serviceOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._serviceOptions, fieldNumber: 687)
      }
      if _storage._set != 0 {
        try visitor.visitSingularInt32Field(value: _storage._set, fieldNumber: 688)
      }
      if _storage._setExtensionValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._setExtensionValue, fieldNumber: 689)
      }
      if _storage._shift != 0 {
        try visitor.visitSingularInt32Field(value: _storage._shift, fieldNumber: 690)
      }
      if _storage._simpleExtensionMap != 0 {
        try visitor.visitSingularInt32Field(value: _storage._simpleExtensionMap, fieldNumber: 691)
      }
      if _storage._sizer != 0 {
        try visitor.visitSingularInt32Field(value: _storage._sizer, fieldNumber: 692)
      }
      if _storage._source != 0 {
        try visitor.visitSingularInt32Field(value: _storage._source, fieldNumber: 693)
      }
      if _storage._sourceCodeInfo != 0 {
        try visitor.visitSingularInt32Field(value: _storage._sourceCodeInfo, fieldNumber: 694)
      }
      if _storage._sourceContext != 0 {
        try visitor.visitSingularInt32Field(value: _storage._sourceContext, fieldNumber: 695)
      }
      if _storage._sourceEncoding != 0 {
        try visitor.visitSingularInt32Field(value: _storage._sourceEncoding, fieldNumber: 696)
      }
      if _storage._sourceFile != 0 {
        try visitor.visitSingularInt32Field(value: _storage._sourceFile, fieldNumber: 697)
      }
      if _storage._span != 0 {
        try visitor.visitSingularInt32Field(value: _storage._span, fieldNumber: 698)
      }
      if _storage._split != 0 {
        try visitor.visitSingularInt32Field(value: _storage._split, fieldNumber: 699)
      }
      if _storage._start != 0 {
        try visitor.visitSingularInt32Field(value: _storage._start, fieldNumber: 700)
      }
      if _storage._startArray != 0 {
        try visitor.visitSingularInt32Field(value: _storage._startArray, fieldNumber: 701)
      }
      if _storage._startField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._startField, fieldNumber: 702)
      }
      if _storage._startIndex != 0 {
        try visitor.visitSingularInt32Field(value: _storage._startIndex, fieldNumber: 703)
      }
      if _storage._startMessageField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._startMessageField, fieldNumber: 704)
      }
      if _storage._startObject != 0 {
        try visitor.visitSingularInt32Field(value: _storage._startObject, fieldNumber: 705)
      }
      if _storage._startRegularField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._startRegularField, fieldNumber: 706)
      }
      if _storage._state != 0 {
        try visitor.visitSingularInt32Field(value: _storage._state, fieldNumber: 707)
      }
      if _storage._static != 0 {
        try visitor.visitSingularInt32Field(value: _storage._static, fieldNumber: 708)
      }
      if _storage._staticString != 0 {
        try visitor.visitSingularInt32Field(value: _storage._staticString, fieldNumber: 709)
      }
      if _storage._storage != 0 {
        try visitor.visitSingularInt32Field(value: _storage._storage, fieldNumber: 710)
      }
      if _storage._string != 0 {
        try visitor.visitSingularInt32Field(value: _storage._string, fieldNumber: 711)
      }
      if _storage._stringLiteral != 0 {
        try visitor.visitSingularInt32Field(value: _storage._stringLiteral, fieldNumber: 712)
      }
      if _storage._stringLiteralType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._stringLiteralType, fieldNumber: 713)
      }
      if _storage._stringResult != 0 {
        try visitor.visitSingularInt32Field(value: _storage._stringResult, fieldNumber: 714)
      }
      if _storage._stringValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._stringValue, fieldNumber: 715)
      }
      if _storage._struct != 0 {
        try visitor.visitSingularInt32Field(value: _storage._struct, fieldNumber: 716)
      }
      if _storage._structValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._structValue, fieldNumber: 717)
      }
      if _storage._subDecoder != 0 {
        try visitor.visitSingularInt32Field(value: _storage._subDecoder, fieldNumber: 718)
      }
      if _storage._subscript != 0 {
        try visitor.visitSingularInt32Field(value: _storage._subscript, fieldNumber: 719)
      }
      if _storage._subVisitor != 0 {
        try visitor.visitSingularInt32Field(value: _storage._subVisitor, fieldNumber: 720)
      }
      if _storage._swift != 0 {
        try visitor.visitSingularInt32Field(value: _storage._swift, fieldNumber: 721)
      }
      if _storage._swiftPrefix != 0 {
        try visitor.visitSingularInt32Field(value: _storage._swiftPrefix, fieldNumber: 722)
      }
      if _storage._swiftProtobuf != 0 {
        try visitor.visitSingularInt32Field(value: _storage._swiftProtobuf, fieldNumber: 723)
      }
      if _storage._syntax != 0 {
        try visitor.visitSingularInt32Field(value: _storage._syntax, fieldNumber: 724)
      }
      if _storage._t != 0 {
        try visitor.visitSingularInt32Field(value: _storage._t, fieldNumber: 725)
      }
      if _storage._tag != 0 {
        try visitor.visitSingularInt32Field(value: _storage._tag, fieldNumber: 726)
      }
      if _storage._terminator != 0 {
        try visitor.visitSingularInt32Field(value: _storage._terminator, fieldNumber: 727)
      }
      if _storage._testDecoder != 0 {
        try visitor.visitSingularInt32Field(value: _storage._testDecoder, fieldNumber: 728)
      }
      if _storage._text != 0 {
        try visitor.visitSingularInt32Field(value: _storage._text, fieldNumber: 729)
      }
      if _storage._textDecoder != 0 {
        try visitor.visitSingularInt32Field(value: _storage._textDecoder, fieldNumber: 730)
      }
      if _storage._textFormatDecoder != 0 {
        try visitor.visitSingularInt32Field(value: _storage._textFormatDecoder, fieldNumber: 731)
      }
      if _storage._textFormatDecodingError != 0 {
        try visitor.visitSingularInt32Field(value: _storage._textFormatDecodingError, fieldNumber: 732)
      }
      if _storage._textFormatEncodingOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._textFormatEncodingOptions, fieldNumber: 733)
      }
      if _storage._textFormatEncodingVisitor != 0 {
        try visitor.visitSingularInt32Field(value: _storage._textFormatEncodingVisitor, fieldNumber: 734)
      }
      if _storage._textFormatString != 0 {
        try visitor.visitSingularInt32Field(value: _storage._textFormatString, fieldNumber: 735)
      }
      if _storage._throws != 0 {
        try visitor.visitSingularInt32Field(value: _storage._throws, fieldNumber: 736)
      }
      if _storage._timeInterval != 0 {
        try visitor.visitSingularInt32Field(value: _storage._timeInterval, fieldNumber: 737)
      }
      if _storage._timeIntervalSince1970 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._timeIntervalSince1970, fieldNumber: 738)
      }
      if _storage._timeIntervalSinceReferenceDate != 0 {
        try visitor.visitSingularInt32Field(value: _storage._timeIntervalSinceReferenceDate, fieldNumber: 739)
      }
      if _storage._timestamp != 0 {
        try visitor.visitSingularInt32Field(value: _storage._timestamp, fieldNumber: 740)
      }
      if _storage._total != 0 {
        try visitor.visitSingularInt32Field(value: _storage._total, fieldNumber: 741)
      }
      if _storage._totalSize != 0 {
        try visitor.visitSingularInt32Field(value: _storage._totalSize, fieldNumber: 742)
      }
      if _storage._trailingComments != 0 {
        try visitor.visitSingularInt32Field(value: _storage._trailingComments, fieldNumber: 743)
      }
      if _storage._traverse != 0 {
        try visitor.visitSingularInt32Field(value: _storage._traverse, fieldNumber: 744)
      }
      if _storage._true != 0 {
        try visitor.visitSingularInt32Field(value: _storage._true, fieldNumber: 745)
      }
      if _storage._try != 0 {
        try visitor.visitSingularInt32Field(value: _storage._try, fieldNumber: 746)
      }
      if _storage._type != 0 {
        try visitor.visitSingularInt32Field(value: _storage._type, fieldNumber: 747)
      }
      if _storage._typealias != 0 {
        try visitor.visitSingularInt32Field(value: _storage._typealias, fieldNumber: 748)
      }
      if _storage._typeEnum != 0 {
        try visitor.visitSingularInt32Field(value: _storage._typeEnum, fieldNumber: 749)
      }
      if _storage._typeName != 0 {
        try visitor.visitSingularInt32Field(value: _storage._typeName, fieldNumber: 750)
      }
      if _storage._typePrefix != 0 {
        try visitor.visitSingularInt32Field(value: _storage._typePrefix, fieldNumber: 751)
      }
      if _storage._typeStart != 0 {
        try visitor.visitSingularInt32Field(value: _storage._typeStart, fieldNumber: 752)
      }
      if _storage._typeUnknown != 0 {
        try visitor.visitSingularInt32Field(value: _storage._typeUnknown, fieldNumber: 753)
      }
      if _storage._typeURL != 0 {
        try visitor.visitSingularInt32Field(value: _storage._typeURL, fieldNumber: 754)
      }
      if _storage._uint32 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._uint32, fieldNumber: 755)
      }
      if _storage._uint32Value != 0 {
        try visitor.visitSingularInt32Field(value: _storage._uint32Value, fieldNumber: 756)
      }
      if _storage._uint64 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._uint64, fieldNumber: 757)
      }
      if _storage._uint64Value != 0 {
        try visitor.visitSingularInt32Field(value: _storage._uint64Value, fieldNumber: 758)
      }
      if _storage._uint8 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._uint8, fieldNumber: 759)
      }
      if _storage._unicodeScalarLiteral != 0 {
        try visitor.visitSingularInt32Field(value: _storage._unicodeScalarLiteral, fieldNumber: 760)
      }
      if _storage._unicodeScalarLiteralType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._unicodeScalarLiteralType, fieldNumber: 761)
      }
      if _storage._unicodeScalars != 0 {
        try visitor.visitSingularInt32Field(value: _storage._unicodeScalars, fieldNumber: 762)
      }
      if _storage._unicodeScalarView != 0 {
        try visitor.visitSingularInt32Field(value: _storage._unicodeScalarView, fieldNumber: 763)
      }
      if _storage._uninterpretedOption != 0 {
        try visitor.visitSingularInt32Field(value: _storage._uninterpretedOption, fieldNumber: 764)
      }
      if _storage._union != 0 {
        try visitor.visitSingularInt32Field(value: _storage._union, fieldNumber: 765)
      }
      if _storage._uniqueStorage != 0 {
        try visitor.visitSingularInt32Field(value: _storage._uniqueStorage, fieldNumber: 766)
      }
      if _storage._unknown != 0 {
        try visitor.visitSingularInt32Field(value: _storage._unknown, fieldNumber: 767)
      }
      if _storage._unknownFields_p != 0 {
        try visitor.visitSingularInt32Field(value: _storage._unknownFields_p, fieldNumber: 768)
      }
      if _storage._unknownStorage != 0 {
        try visitor.visitSingularInt32Field(value: _storage._unknownStorage, fieldNumber: 769)
      }
      if _storage._unpackTo != 0 {
        try visitor.visitSingularInt32Field(value: _storage._unpackTo, fieldNumber: 770)
      }
      if _storage._unsafeMutablePointer != 0 {
        try visitor.visitSingularInt32Field(value: _storage._unsafeMutablePointer, fieldNumber: 771)
      }
      if _storage._unsafeMutableRawBufferPointer != 0 {
        try visitor.visitSingularInt32Field(value: _storage._unsafeMutableRawBufferPointer, fieldNumber: 772)
      }
      if _storage._unsafeMutableRawPointer != 0 {
        try visitor.visitSingularInt32Field(value: _storage._unsafeMutableRawPointer, fieldNumber: 773)
      }
      if _storage._unsafeRawBufferPointer != 0 {
        try visitor.visitSingularInt32Field(value: _storage._unsafeRawBufferPointer, fieldNumber: 774)
      }
      if _storage._unsafeRawPointer != 0 {
        try visitor.visitSingularInt32Field(value: _storage._unsafeRawPointer, fieldNumber: 775)
      }
      if _storage._updatedOptions != 0 {
        try visitor.visitSingularInt32Field(value: _storage._updatedOptions, fieldNumber: 776)
      }
      if _storage._url != 0 {
        try visitor.visitSingularInt32Field(value: _storage._url, fieldNumber: 777)
      }
      if _storage._utf8 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._utf8, fieldNumber: 778)
      }
      if _storage._utf8ToDouble != 0 {
        try visitor.visitSingularInt32Field(value: _storage._utf8ToDouble, fieldNumber: 779)
      }
      if _storage._utf8View != 0 {
        try visitor.visitSingularInt32Field(value: _storage._utf8View, fieldNumber: 780)
      }
      if _storage._v != 0 {
        try visitor.visitSingularInt32Field(value: _storage._v, fieldNumber: 781)
      }
      if _storage._value != 0 {
        try visitor.visitSingularInt32Field(value: _storage._value, fieldNumber: 782)
      }
      if _storage._valueField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._valueField, fieldNumber: 783)
      }
      if _storage._values != 0 {
        try visitor.visitSingularInt32Field(value: _storage._values, fieldNumber: 784)
      }
      if _storage._valueType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._valueType, fieldNumber: 785)
      }
      if _storage._var != 0 {
        try visitor.visitSingularInt32Field(value: _storage._var, fieldNumber: 786)
      }
      if _storage._version != 0 {
        try visitor.visitSingularInt32Field(value: _storage._version, fieldNumber: 787)
      }
      if _storage._versionString != 0 {
        try visitor.visitSingularInt32Field(value: _storage._versionString, fieldNumber: 788)
      }
      if _storage._visitExtensionFields != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitExtensionFields, fieldNumber: 789)
      }
      if _storage._visitExtensionFieldsAsMessageSet != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitExtensionFieldsAsMessageSet, fieldNumber: 790)
      }
      if _storage._visitMapField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitMapField, fieldNumber: 791)
      }
      if _storage._visitor != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitor, fieldNumber: 792)
      }
      if _storage._visitPacked != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitPacked, fieldNumber: 793)
      }
      if _storage._visitPackedBoolField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitPackedBoolField, fieldNumber: 794)
      }
      if _storage._visitPackedDoubleField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitPackedDoubleField, fieldNumber: 795)
      }
      if _storage._visitPackedEnumField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitPackedEnumField, fieldNumber: 796)
      }
      if _storage._visitPackedFixed32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitPackedFixed32Field, fieldNumber: 797)
      }
      if _storage._visitPackedFixed64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitPackedFixed64Field, fieldNumber: 798)
      }
      if _storage._visitPackedFloatField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitPackedFloatField, fieldNumber: 799)
      }
      if _storage._visitPackedInt32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitPackedInt32Field, fieldNumber: 800)
      }
      if _storage._visitPackedInt64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitPackedInt64Field, fieldNumber: 801)
      }
      if _storage._visitPackedSfixed32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitPackedSfixed32Field, fieldNumber: 802)
      }
      if _storage._visitPackedSfixed64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitPackedSfixed64Field, fieldNumber: 803)
      }
      if _storage._visitPackedSint32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitPackedSint32Field, fieldNumber: 804)
      }
      if _storage._visitPackedSint64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitPackedSint64Field, fieldNumber: 805)
      }
      if _storage._visitPackedUint32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitPackedUint32Field, fieldNumber: 806)
      }
      if _storage._visitPackedUint64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitPackedUint64Field, fieldNumber: 807)
      }
      if _storage._visitRepeated != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeated, fieldNumber: 808)
      }
      if _storage._visitRepeatedBoolField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedBoolField, fieldNumber: 809)
      }
      if _storage._visitRepeatedBytesField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedBytesField, fieldNumber: 810)
      }
      if _storage._visitRepeatedDoubleField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedDoubleField, fieldNumber: 811)
      }
      if _storage._visitRepeatedEnumField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedEnumField, fieldNumber: 812)
      }
      if _storage._visitRepeatedFixed32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedFixed32Field, fieldNumber: 813)
      }
      if _storage._visitRepeatedFixed64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedFixed64Field, fieldNumber: 814)
      }
      if _storage._visitRepeatedFloatField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedFloatField, fieldNumber: 815)
      }
      if _storage._visitRepeatedGroupField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedGroupField, fieldNumber: 816)
      }
      if _storage._visitRepeatedInt32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedInt32Field, fieldNumber: 817)
      }
      if _storage._visitRepeatedInt64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedInt64Field, fieldNumber: 818)
      }
      if _storage._visitRepeatedMessageField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedMessageField, fieldNumber: 819)
      }
      if _storage._visitRepeatedSfixed32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedSfixed32Field, fieldNumber: 820)
      }
      if _storage._visitRepeatedSfixed64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedSfixed64Field, fieldNumber: 821)
      }
      if _storage._visitRepeatedSint32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedSint32Field, fieldNumber: 822)
      }
      if _storage._visitRepeatedSint64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedSint64Field, fieldNumber: 823)
      }
      if _storage._visitRepeatedStringField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedStringField, fieldNumber: 824)
      }
      if _storage._visitRepeatedUint32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedUint32Field, fieldNumber: 825)
      }
      if _storage._visitRepeatedUint64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitRepeatedUint64Field, fieldNumber: 826)
      }
      if _storage._visitSingular != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingular, fieldNumber: 827)
      }
      if _storage._visitSingularBoolField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularBoolField, fieldNumber: 828)
      }
      if _storage._visitSingularBytesField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularBytesField, fieldNumber: 829)
      }
      if _storage._visitSingularDoubleField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularDoubleField, fieldNumber: 830)
      }
      if _storage._visitSingularEnumField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularEnumField, fieldNumber: 831)
      }
      if _storage._visitSingularFixed32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularFixed32Field, fieldNumber: 832)
      }
      if _storage._visitSingularFixed64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularFixed64Field, fieldNumber: 833)
      }
      if _storage._visitSingularFloatField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularFloatField, fieldNumber: 834)
      }
      if _storage._visitSingularGroupField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularGroupField, fieldNumber: 835)
      }
      if _storage._visitSingularInt32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularInt32Field, fieldNumber: 836)
      }
      if _storage._visitSingularInt64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularInt64Field, fieldNumber: 837)
      }
      if _storage._visitSingularMessageField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularMessageField, fieldNumber: 838)
      }
      if _storage._visitSingularSfixed32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularSfixed32Field, fieldNumber: 839)
      }
      if _storage._visitSingularSfixed64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularSfixed64Field, fieldNumber: 840)
      }
      if _storage._visitSingularSint32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularSint32Field, fieldNumber: 841)
      }
      if _storage._visitSingularSint64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularSint64Field, fieldNumber: 842)
      }
      if _storage._visitSingularStringField != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularStringField, fieldNumber: 843)
      }
      if _storage._visitSingularUint32Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularUint32Field, fieldNumber: 844)
      }
      if _storage._visitSingularUint64Field != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitSingularUint64Field, fieldNumber: 845)
      }
      if _storage._visitUnknown != 0 {
        try visitor.visitSingularInt32Field(value: _storage._visitUnknown, fieldNumber: 846)
      }
      if _storage._wasDecoded != 0 {
        try visitor.visitSingularInt32Field(value: _storage._wasDecoded, fieldNumber: 847)
      }
      if _storage._weak != 0 {
        try visitor.visitSingularInt32Field(value: _storage._weak, fieldNumber: 848)
      }
      if _storage._weakDependency != 0 {
        try visitor.visitSingularInt32Field(value: _storage._weakDependency, fieldNumber: 849)
      }
      if _storage._where != 0 {
        try visitor.visitSingularInt32Field(value: _storage._where, fieldNumber: 850)
      }
      if _storage._wireFormat != 0 {
        try visitor.visitSingularInt32Field(value: _storage._wireFormat, fieldNumber: 851)
      }
      if _storage._with != 0 {
        try visitor.visitSingularInt32Field(value: _storage._with, fieldNumber: 852)
      }
      if _storage._withUnsafeBytes != 0 {
        try visitor.visitSingularInt32Field(value: _storage._withUnsafeBytes, fieldNumber: 853)
      }
      if _storage._withUnsafeMutableBytes != 0 {
        try visitor.visitSingularInt32Field(value: _storage._withUnsafeMutableBytes, fieldNumber: 854)
      }
      if _storage._work != 0 {
        try visitor.visitSingularInt32Field(value: _storage._work, fieldNumber: 855)
      }
      if _storage._wrappedType != 0 {
        try visitor.visitSingularInt32Field(value: _storage._wrappedType, fieldNumber: 856)
      }
      if _storage._written != 0 {
        try visitor.visitSingularInt32Field(value: _storage._written, fieldNumber: 857)
      }
      if _storage._yday != 0 {
        try visitor.visitSingularInt32Field(value: _storage._yday, fieldNumber: 858)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: ProtobufUnittestGenerated_GeneratedSwiftReservedFields, rhs: ProtobufUnittestGenerated_GeneratedSwiftReservedFields) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._adjusted != rhs_storage._adjusted {return false}
        if _storage._aggregateValue != rhs_storage._aggregateValue {return false}
        if _storage._allCases != rhs_storage._allCases {return false}
        if _storage._allocate != rhs_storage._allocate {return false}
        if _storage._allowAlias != rhs_storage._allowAlias {return false}
        if _storage._alwaysPrintEnumsAsInts != rhs_storage._alwaysPrintEnumsAsInts {return false}
        if _storage._annotation != rhs_storage._annotation {return false}
        if _storage._any != rhs_storage._any {return false}
        if _storage._anyExtensionField != rhs_storage._anyExtensionField {return false}
        if _storage._anyMessageExtension != rhs_storage._anyMessageExtension {return false}
        if _storage._anyMessageStorage != rhs_storage._anyMessageStorage {return false}
        if _storage._anyUnpackError != rhs_storage._anyUnpackError {return false}
        if _storage._api != rhs_storage._api {return false}
        if _storage._appended != rhs_storage._appended {return false}
        if _storage._appendUintHex != rhs_storage._appendUintHex {return false}
        if _storage._appendUnknown != rhs_storage._appendUnknown {return false}
        if _storage._areAllInitialized != rhs_storage._areAllInitialized {return false}
        if _storage._array != rhs_storage._array {return false}
        if _storage._arrayLiteral != rhs_storage._arrayLiteral {return false}
        if _storage._arraySeparator != rhs_storage._arraySeparator {return false}
        if _storage._as != rhs_storage._as {return false}
        if _storage._asciiOpenCurlyBracket != rhs_storage._asciiOpenCurlyBracket {return false}
        if _storage._asciiZero != rhs_storage._asciiZero {return false}
        if _storage._available != rhs_storage._available {return false}
        if _storage._b != rhs_storage._b {return false}
        if _storage._base64Values != rhs_storage._base64Values {return false}
        if _storage._baseAddress != rhs_storage._baseAddress {return false}
        if _storage._baseType != rhs_storage._baseType {return false}
        if _storage._begin != rhs_storage._begin {return false}
        if _storage._binary != rhs_storage._binary {return false}
        if _storage._binaryDecoder != rhs_storage._binaryDecoder {return false}
        if _storage._binaryDecodingError != rhs_storage._binaryDecodingError {return false}
        if _storage._binaryDecodingOptions != rhs_storage._binaryDecodingOptions {return false}
        if _storage._binaryDelimited != rhs_storage._binaryDelimited {return false}
        if _storage._binaryEncoder != rhs_storage._binaryEncoder {return false}
        if _storage._binaryEncodingError != rhs_storage._binaryEncodingError {return false}
        if _storage._binaryEncodingMessageSetSizeVisitor != rhs_storage._binaryEncodingMessageSetSizeVisitor {return false}
        if _storage._binaryEncodingMessageSetVisitor != rhs_storage._binaryEncodingMessageSetVisitor {return false}
        if _storage._binaryEncodingSizeVisitor != rhs_storage._binaryEncodingSizeVisitor {return false}
        if _storage._binaryEncodingVisitor != rhs_storage._binaryEncodingVisitor {return false}
        if _storage._binaryOptions != rhs_storage._binaryOptions {return false}
        if _storage._body != rhs_storage._body {return false}
        if _storage._bodySize != rhs_storage._bodySize {return false}
        if _storage._bool != rhs_storage._bool {return false}
        if _storage._booleanLiteral != rhs_storage._booleanLiteral {return false}
        if _storage._booleanLiteralType != rhs_storage._booleanLiteralType {return false}
        if _storage._boolValue != rhs_storage._boolValue {return false}
        if _storage._bytes != rhs_storage._bytes {return false}
        if _storage._bytesInGroup != rhs_storage._bytesInGroup {return false}
        if _storage._bytesRead != rhs_storage._bytesRead {return false}
        if _storage._bytesValue != rhs_storage._bytesValue {return false}
        if _storage._c != rhs_storage._c {return false}
        if _storage._capacity != rhs_storage._capacity {return false}
        if _storage._capitalizeNext != rhs_storage._capitalizeNext {return false}
        if _storage._cardinality != rhs_storage._cardinality {return false}
        if _storage._ccEnableArenas != rhs_storage._ccEnableArenas {return false}
        if _storage._ccGenericServices != rhs_storage._ccGenericServices {return false}
        if _storage._character != rhs_storage._character {return false}
        if _storage._chars != rhs_storage._chars {return false}
        if _storage._class != rhs_storage._class {return false}
        if _storage._clearAggregateValue_p != rhs_storage._clearAggregateValue_p {return false}
        if _storage._clearAllowAlias_p != rhs_storage._clearAllowAlias_p {return false}
        if _storage._clearBegin_p != rhs_storage._clearBegin_p {return false}
        if _storage._clearCcEnableArenas_p != rhs_storage._clearCcEnableArenas_p {return false}
        if _storage._clearCcGenericServices_p != rhs_storage._clearCcGenericServices_p {return false}
        if _storage._clearClientStreaming_p != rhs_storage._clearClientStreaming_p {return false}
        if _storage._clearCsharpNamespace_p != rhs_storage._clearCsharpNamespace_p {return false}
        if _storage._clearCtype_p != rhs_storage._clearCtype_p {return false}
        if _storage._clearDefaultValue_p != rhs_storage._clearDefaultValue_p {return false}
        if _storage._clearDeprecated_p != rhs_storage._clearDeprecated_p {return false}
        if _storage._clearDoubleValue_p != rhs_storage._clearDoubleValue_p {return false}
        if _storage._clearEnd_p != rhs_storage._clearEnd_p {return false}
        if _storage._clearExtendee_p != rhs_storage._clearExtendee_p {return false}
        if _storage._clearExtensionValue_p != rhs_storage._clearExtensionValue_p {return false}
        if _storage._clearGoPackage_p != rhs_storage._clearGoPackage_p {return false}
        if _storage._clearIdempotencyLevel_p != rhs_storage._clearIdempotencyLevel_p {return false}
        if _storage._clearIdentifierValue_p != rhs_storage._clearIdentifierValue_p {return false}
        if _storage._clearInputType_p != rhs_storage._clearInputType_p {return false}
        if _storage._clearIsExtension_p != rhs_storage._clearIsExtension_p {return false}
        if _storage._clearJavaGenerateEqualsAndHash_p != rhs_storage._clearJavaGenerateEqualsAndHash_p {return false}
        if _storage._clearJavaGenericServices_p != rhs_storage._clearJavaGenericServices_p {return false}
        if _storage._clearJavaMultipleFiles_p != rhs_storage._clearJavaMultipleFiles_p {return false}
        if _storage._clearJavaOuterClassname_p != rhs_storage._clearJavaOuterClassname_p {return false}
        if _storage._clearJavaPackage_p != rhs_storage._clearJavaPackage_p {return false}
        if _storage._clearJavaStringCheckUtf8_p != rhs_storage._clearJavaStringCheckUtf8_p {return false}
        if _storage._clearJsonName_p != rhs_storage._clearJsonName_p {return false}
        if _storage._clearJstype_p != rhs_storage._clearJstype_p {return false}
        if _storage._clearLabel_p != rhs_storage._clearLabel_p {return false}
        if _storage._clearLazy_p != rhs_storage._clearLazy_p {return false}
        if _storage._clearLeadingComments_p != rhs_storage._clearLeadingComments_p {return false}
        if _storage._clearMapEntry_p != rhs_storage._clearMapEntry_p {return false}
        if _storage._clearMessageSetWireFormat_p != rhs_storage._clearMessageSetWireFormat_p {return false}
        if _storage._clearName_p != rhs_storage._clearName_p {return false}
        if _storage._clearNamePart_p != rhs_storage._clearNamePart_p {return false}
        if _storage._clearNegativeIntValue_p != rhs_storage._clearNegativeIntValue_p {return false}
        if _storage._clearNoStandardDescriptorAccessor_p != rhs_storage._clearNoStandardDescriptorAccessor_p {return false}
        if _storage._clearNumber_p != rhs_storage._clearNumber_p {return false}
        if _storage._clearObjcClassPrefix_p != rhs_storage._clearObjcClassPrefix_p {return false}
        if _storage._clearOneofIndex_p != rhs_storage._clearOneofIndex_p {return false}
        if _storage._clearOptimizeFor_p != rhs_storage._clearOptimizeFor_p {return false}
        if _storage._clearOptions_p != rhs_storage._clearOptions_p {return false}
        if _storage._clearOutputType_p != rhs_storage._clearOutputType_p {return false}
        if _storage._clearPackage_p != rhs_storage._clearPackage_p {return false}
        if _storage._clearPacked_p != rhs_storage._clearPacked_p {return false}
        if _storage._clearPhpClassPrefix_p != rhs_storage._clearPhpClassPrefix_p {return false}
        if _storage._clearPhpGenericServices_p != rhs_storage._clearPhpGenericServices_p {return false}
        if _storage._clearPhpMetadataNamespace_p != rhs_storage._clearPhpMetadataNamespace_p {return false}
        if _storage._clearPhpNamespace_p != rhs_storage._clearPhpNamespace_p {return false}
        if _storage._clearPositiveIntValue_p != rhs_storage._clearPositiveIntValue_p {return false}
        if _storage._clearPyGenericServices_p != rhs_storage._clearPyGenericServices_p {return false}
        if _storage._clearRubyPackage_p != rhs_storage._clearRubyPackage_p {return false}
        if _storage._clearServerStreaming_p != rhs_storage._clearServerStreaming_p {return false}
        if _storage._clearSourceCodeInfo_p != rhs_storage._clearSourceCodeInfo_p {return false}
        if _storage._clearSourceContext_p != rhs_storage._clearSourceContext_p {return false}
        if _storage._clearSourceFile_p != rhs_storage._clearSourceFile_p {return false}
        if _storage._clearStart_p != rhs_storage._clearStart_p {return false}
        if _storage._clearStringValue_p != rhs_storage._clearStringValue_p {return false}
        if _storage._clearSwiftPrefix_p != rhs_storage._clearSwiftPrefix_p {return false}
        if _storage._clearSyntax_p != rhs_storage._clearSyntax_p {return false}
        if _storage._clearTrailingComments_p != rhs_storage._clearTrailingComments_p {return false}
        if _storage._clearType_p != rhs_storage._clearType_p {return false}
        if _storage._clearTypeName_p != rhs_storage._clearTypeName_p {return false}
        if _storage._clearValue_p != rhs_storage._clearValue_p {return false}
        if _storage._clearWeak_p != rhs_storage._clearWeak_p {return false}
        if _storage._clientStreaming != rhs_storage._clientStreaming {return false}
        if _storage._codeUnits != rhs_storage._codeUnits {return false}
        if _storage._collection != rhs_storage._collection {return false}
        if _storage._com != rhs_storage._com {return false}
        if _storage._comma != rhs_storage._comma {return false}
        if _storage._contentsOf != rhs_storage._contentsOf {return false}
        if _storage._contiguousBytes != rhs_storage._contiguousBytes {return false}
        if _storage._count != rhs_storage._count {return false}
        if _storage._countVarintsInBuffer != rhs_storage._countVarintsInBuffer {return false}
        if _storage._csharpNamespace != rhs_storage._csharpNamespace {return false}
        if _storage._ctype != rhs_storage._ctype {return false}
        if _storage._customCodable != rhs_storage._customCodable {return false}
        if _storage._customDebugStringConvertible != rhs_storage._customDebugStringConvertible {return false}
        if _storage._d != rhs_storage._d {return false}
        if _storage._data != rhs_storage._data {return false}
        if _storage._dataResult != rhs_storage._dataResult {return false}
        if _storage._dataSize != rhs_storage._dataSize {return false}
        if _storage._date != rhs_storage._date {return false}
        if _storage._daySec != rhs_storage._daySec {return false}
        if _storage._daysSinceEpoch != rhs_storage._daysSinceEpoch {return false}
        if _storage._debugDescription_p != rhs_storage._debugDescription_p {return false}
        if _storage._decoded != rhs_storage._decoded {return false}
        if _storage._decodedFromJsonnull != rhs_storage._decodedFromJsonnull {return false}
        if _storage._decodeExtensionField != rhs_storage._decodeExtensionField {return false}
        if _storage._decodeExtensionFieldsAsMessageSet != rhs_storage._decodeExtensionFieldsAsMessageSet {return false}
        if _storage._decodeJson != rhs_storage._decodeJson {return false}
        if _storage._decodeMapField != rhs_storage._decodeMapField {return false}
        if _storage._decodeMessage != rhs_storage._decodeMessage {return false}
        if _storage._decoder != rhs_storage._decoder {return false}
        if _storage._decodeRepeated != rhs_storage._decodeRepeated {return false}
        if _storage._decodeRepeatedBoolField != rhs_storage._decodeRepeatedBoolField {return false}
        if _storage._decodeRepeatedBytesField != rhs_storage._decodeRepeatedBytesField {return false}
        if _storage._decodeRepeatedDoubleField != rhs_storage._decodeRepeatedDoubleField {return false}
        if _storage._decodeRepeatedEnumField != rhs_storage._decodeRepeatedEnumField {return false}
        if _storage._decodeRepeatedFixed32Field != rhs_storage._decodeRepeatedFixed32Field {return false}
        if _storage._decodeRepeatedFixed64Field != rhs_storage._decodeRepeatedFixed64Field {return false}
        if _storage._decodeRepeatedFloatField != rhs_storage._decodeRepeatedFloatField {return false}
        if _storage._decodeRepeatedGroupField != rhs_storage._decodeRepeatedGroupField {return false}
        if _storage._decodeRepeatedInt32Field != rhs_storage._decodeRepeatedInt32Field {return false}
        if _storage._decodeRepeatedInt64Field != rhs_storage._decodeRepeatedInt64Field {return false}
        if _storage._decodeRepeatedMessageField != rhs_storage._decodeRepeatedMessageField {return false}
        if _storage._decodeRepeatedSfixed32Field != rhs_storage._decodeRepeatedSfixed32Field {return false}
        if _storage._decodeRepeatedSfixed64Field != rhs_storage._decodeRepeatedSfixed64Field {return false}
        if _storage._decodeRepeatedSint32Field != rhs_storage._decodeRepeatedSint32Field {return false}
        if _storage._decodeRepeatedSint64Field != rhs_storage._decodeRepeatedSint64Field {return false}
        if _storage._decodeRepeatedStringField != rhs_storage._decodeRepeatedStringField {return false}
        if _storage._decodeRepeatedUint32Field != rhs_storage._decodeRepeatedUint32Field {return false}
        if _storage._decodeRepeatedUint64Field != rhs_storage._decodeRepeatedUint64Field {return false}
        if _storage._decodeSingular != rhs_storage._decodeSingular {return false}
        if _storage._decodeSingularBoolField != rhs_storage._decodeSingularBoolField {return false}
        if _storage._decodeSingularBytesField != rhs_storage._decodeSingularBytesField {return false}
        if _storage._decodeSingularDoubleField != rhs_storage._decodeSingularDoubleField {return false}
        if _storage._decodeSingularEnumField != rhs_storage._decodeSingularEnumField {return false}
        if _storage._decodeSingularFixed32Field != rhs_storage._decodeSingularFixed32Field {return false}
        if _storage._decodeSingularFixed64Field != rhs_storage._decodeSingularFixed64Field {return false}
        if _storage._decodeSingularFloatField != rhs_storage._decodeSingularFloatField {return false}
        if _storage._decodeSingularGroupField != rhs_storage._decodeSingularGroupField {return false}
        if _storage._decodeSingularInt32Field != rhs_storage._decodeSingularInt32Field {return false}
        if _storage._decodeSingularInt64Field != rhs_storage._decodeSingularInt64Field {return false}
        if _storage._decodeSingularMessageField != rhs_storage._decodeSingularMessageField {return false}
        if _storage._decodeSingularSfixed32Field != rhs_storage._decodeSingularSfixed32Field {return false}
        if _storage._decodeSingularSfixed64Field != rhs_storage._decodeSingularSfixed64Field {return false}
        if _storage._decodeSingularSint32Field != rhs_storage._decodeSingularSint32Field {return false}
        if _storage._decodeSingularSint64Field != rhs_storage._decodeSingularSint64Field {return false}
        if _storage._decodeSingularStringField != rhs_storage._decodeSingularStringField {return false}
        if _storage._decodeSingularUint32Field != rhs_storage._decodeSingularUint32Field {return false}
        if _storage._decodeSingularUint64Field != rhs_storage._decodeSingularUint64Field {return false}
        if _storage._decodeTextFormat != rhs_storage._decodeTextFormat {return false}
        if _storage._defaultAnyTypeUrlprefix != rhs_storage._defaultAnyTypeUrlprefix {return false}
        if _storage._defaultValue != rhs_storage._defaultValue {return false}
        if _storage._dependency != rhs_storage._dependency {return false}
        if _storage._deprecated != rhs_storage._deprecated {return false}
        if _storage._description_p != rhs_storage._description_p {return false}
        if _storage._descriptorProto != rhs_storage._descriptorProto {return false}
        if _storage._dictionary != rhs_storage._dictionary {return false}
        if _storage._dictionaryLiteral != rhs_storage._dictionaryLiteral {return false}
        if _storage._digit != rhs_storage._digit {return false}
        if _storage._digit0 != rhs_storage._digit0 {return false}
        if _storage._digit1 != rhs_storage._digit1 {return false}
        if _storage._digitCount != rhs_storage._digitCount {return false}
        if _storage._digits != rhs_storage._digits {return false}
        if _storage._digitValue != rhs_storage._digitValue {return false}
        if _storage._discardableResult != rhs_storage._discardableResult {return false}
        if _storage._discardUnknownFields != rhs_storage._discardUnknownFields {return false}
        if _storage._distance != rhs_storage._distance {return false}
        if _storage._double != rhs_storage._double {return false}
        if _storage._doubleValue != rhs_storage._doubleValue {return false}
        if _storage._duration != rhs_storage._duration {return false}
        if _storage._e != rhs_storage._e {return false}
        if _storage._element != rhs_storage._element {return false}
        if _storage._elements != rhs_storage._elements {return false}
        if _storage._emitExtensionFieldName != rhs_storage._emitExtensionFieldName {return false}
        if _storage._emitFieldName != rhs_storage._emitFieldName {return false}
        if _storage._emitFieldNumber != rhs_storage._emitFieldNumber {return false}
        if _storage._empty != rhs_storage._empty {return false}
        if _storage._emptyData != rhs_storage._emptyData {return false}
        if _storage._encodeAsBytes != rhs_storage._encodeAsBytes {return false}
        if _storage._encoded != rhs_storage._encoded {return false}
        if _storage._encodedJsonstring != rhs_storage._encodedJsonstring {return false}
        if _storage._encodedSize != rhs_storage._encodedSize {return false}
        if _storage._encodeField != rhs_storage._encodeField {return false}
        if _storage._encoder != rhs_storage._encoder {return false}
        if _storage._end != rhs_storage._end {return false}
        if _storage._endArray != rhs_storage._endArray {return false}
        if _storage._endMessageField != rhs_storage._endMessageField {return false}
        if _storage._endObject != rhs_storage._endObject {return false}
        if _storage._endRegularField != rhs_storage._endRegularField {return false}
        if _storage._enum != rhs_storage._enum {return false}
        if _storage._enumDescriptorProto != rhs_storage._enumDescriptorProto {return false}
        if _storage._enumOptions != rhs_storage._enumOptions {return false}
        if _storage._enumReservedRange != rhs_storage._enumReservedRange {return false}
        if _storage._enumType != rhs_storage._enumType {return false}
        if _storage._enumvalue != rhs_storage._enumvalue {return false}
        if _storage._enumValueDescriptorProto != rhs_storage._enumValueDescriptorProto {return false}
        if _storage._enumValueOptions != rhs_storage._enumValueOptions {return false}
        if _storage._equatable != rhs_storage._equatable {return false}
        if _storage._error != rhs_storage._error {return false}
        if _storage._expressibleByArrayLiteral != rhs_storage._expressibleByArrayLiteral {return false}
        if _storage._expressibleByDictionaryLiteral != rhs_storage._expressibleByDictionaryLiteral {return false}
        if _storage._ext != rhs_storage._ext {return false}
        if _storage._extDecoder != rhs_storage._extDecoder {return false}
        if _storage._extendedGraphemeClusterLiteral != rhs_storage._extendedGraphemeClusterLiteral {return false}
        if _storage._extendedGraphemeClusterLiteralType != rhs_storage._extendedGraphemeClusterLiteralType {return false}
        if _storage._extendee != rhs_storage._extendee {return false}
        if _storage._extensibleMessage != rhs_storage._extensibleMessage {return false}
        if _storage._extension != rhs_storage._extension {return false}
        if _storage._extensionField != rhs_storage._extensionField {return false}
        if _storage._extensionFieldNumber != rhs_storage._extensionFieldNumber {return false}
        if _storage._extensionFieldValueSet != rhs_storage._extensionFieldValueSet {return false}
        if _storage._extensionMap != rhs_storage._extensionMap {return false}
        if _storage._extensionRange != rhs_storage._extensionRange {return false}
        if _storage._extensionRangeOptions != rhs_storage._extensionRangeOptions {return false}
        if _storage._extensions != rhs_storage._extensions {return false}
        if _storage._extras != rhs_storage._extras {return false}
        if _storage._f != rhs_storage._f {return false}
        if _storage._false != rhs_storage._false {return false}
        if _storage._field != rhs_storage._field {return false}
        if _storage._fieldData != rhs_storage._fieldData {return false}
        if _storage._fieldDescriptorProto != rhs_storage._fieldDescriptorProto {return false}
        if _storage._fieldMask != rhs_storage._fieldMask {return false}
        if _storage._fieldName != rhs_storage._fieldName {return false}
        if _storage._fieldNameCount != rhs_storage._fieldNameCount {return false}
        if _storage._fieldNum != rhs_storage._fieldNum {return false}
        if _storage._fieldNumber != rhs_storage._fieldNumber {return false}
        if _storage._fieldNumberForProto != rhs_storage._fieldNumberForProto {return false}
        if _storage._fieldOptions != rhs_storage._fieldOptions {return false}
        if _storage._fields != rhs_storage._fields {return false}
        if _storage._fieldSize != rhs_storage._fieldSize {return false}
        if _storage._fieldTag != rhs_storage._fieldTag {return false}
        if _storage._fieldType != rhs_storage._fieldType {return false}
        if _storage._fieldValue != rhs_storage._fieldValue {return false}
        if _storage._file != rhs_storage._file {return false}
        if _storage._fileDescriptorProto != rhs_storage._fileDescriptorProto {return false}
        if _storage._fileDescriptorSet != rhs_storage._fileDescriptorSet {return false}
        if _storage._fileName != rhs_storage._fileName {return false}
        if _storage._fileOptions != rhs_storage._fileOptions {return false}
        if _storage._filter != rhs_storage._filter {return false}
        if _storage._firstItem != rhs_storage._firstItem {return false}
        if _storage._float != rhs_storage._float {return false}
        if _storage._floatLiteral != rhs_storage._floatLiteral {return false}
        if _storage._floatLiteralType != rhs_storage._floatLiteralType {return false}
        if _storage._floatValue != rhs_storage._floatValue {return false}
        if _storage._forMessageName != rhs_storage._forMessageName {return false}
        if _storage._formUnion != rhs_storage._formUnion {return false}
        if _storage._forReadingFrom != rhs_storage._forReadingFrom {return false}
        if _storage._forTypeURL != rhs_storage._forTypeURL {return false}
        if _storage._forwardParser != rhs_storage._forwardParser {return false}
        if _storage._forWritingInto != rhs_storage._forWritingInto {return false}
        if _storage._from != rhs_storage._from {return false}
        if _storage._fromAscii2 != rhs_storage._fromAscii2 {return false}
        if _storage._fromAscii4 != rhs_storage._fromAscii4 {return false}
        if _storage._fromByteOffset != rhs_storage._fromByteOffset {return false}
        if _storage._fromHexDigit != rhs_storage._fromHexDigit {return false}
        if _storage._func != rhs_storage._func {return false}
        if _storage._g != rhs_storage._g {return false}
        if _storage._generatedCodeInfo != rhs_storage._generatedCodeInfo {return false}
        if _storage._get != rhs_storage._get {return false}
        if _storage._getExtensionValue != rhs_storage._getExtensionValue {return false}
        if _storage._googleapis != rhs_storage._googleapis {return false}
        if _storage._googleProtobufAny != rhs_storage._googleProtobufAny {return false}
        if _storage._googleProtobufApi != rhs_storage._googleProtobufApi {return false}
        if _storage._googleProtobufBoolValue != rhs_storage._googleProtobufBoolValue {return false}
        if _storage._googleProtobufBytesValue != rhs_storage._googleProtobufBytesValue {return false}
        if _storage._googleProtobufDescriptorProto != rhs_storage._googleProtobufDescriptorProto {return false}
        if _storage._googleProtobufDoubleValue != rhs_storage._googleProtobufDoubleValue {return false}
        if _storage._googleProtobufDuration != rhs_storage._googleProtobufDuration {return false}
        if _storage._googleProtobufEmpty != rhs_storage._googleProtobufEmpty {return false}
        if _storage._googleProtobufEnum != rhs_storage._googleProtobufEnum {return false}
        if _storage._googleProtobufEnumDescriptorProto != rhs_storage._googleProtobufEnumDescriptorProto {return false}
        if _storage._googleProtobufEnumOptions != rhs_storage._googleProtobufEnumOptions {return false}
        if _storage._googleProtobufEnumValue != rhs_storage._googleProtobufEnumValue {return false}
        if _storage._googleProtobufEnumValueDescriptorProto != rhs_storage._googleProtobufEnumValueDescriptorProto {return false}
        if _storage._googleProtobufEnumValueOptions != rhs_storage._googleProtobufEnumValueOptions {return false}
        if _storage._googleProtobufExtensionRangeOptions != rhs_storage._googleProtobufExtensionRangeOptions {return false}
        if _storage._googleProtobufField != rhs_storage._googleProtobufField {return false}
        if _storage._googleProtobufFieldDescriptorProto != rhs_storage._googleProtobufFieldDescriptorProto {return false}
        if _storage._googleProtobufFieldMask != rhs_storage._googleProtobufFieldMask {return false}
        if _storage._googleProtobufFieldOptions != rhs_storage._googleProtobufFieldOptions {return false}
        if _storage._googleProtobufFileDescriptorProto != rhs_storage._googleProtobufFileDescriptorProto {return false}
        if _storage._googleProtobufFileDescriptorSet != rhs_storage._googleProtobufFileDescriptorSet {return false}
        if _storage._googleProtobufFileOptions != rhs_storage._googleProtobufFileOptions {return false}
        if _storage._googleProtobufFloatValue != rhs_storage._googleProtobufFloatValue {return false}
        if _storage._googleProtobufGeneratedCodeInfo != rhs_storage._googleProtobufGeneratedCodeInfo {return false}
        if _storage._googleProtobufInt32Value != rhs_storage._googleProtobufInt32Value {return false}
        if _storage._googleProtobufInt64Value != rhs_storage._googleProtobufInt64Value {return false}
        if _storage._googleProtobufListValue != rhs_storage._googleProtobufListValue {return false}
        if _storage._googleProtobufMessageOptions != rhs_storage._googleProtobufMessageOptions {return false}
        if _storage._googleProtobufMethod != rhs_storage._googleProtobufMethod {return false}
        if _storage._googleProtobufMethodDescriptorProto != rhs_storage._googleProtobufMethodDescriptorProto {return false}
        if _storage._googleProtobufMethodOptions != rhs_storage._googleProtobufMethodOptions {return false}
        if _storage._googleProtobufMixin != rhs_storage._googleProtobufMixin {return false}
        if _storage._googleProtobufNullValue != rhs_storage._googleProtobufNullValue {return false}
        if _storage._googleProtobufOneofDescriptorProto != rhs_storage._googleProtobufOneofDescriptorProto {return false}
        if _storage._googleProtobufOneofOptions != rhs_storage._googleProtobufOneofOptions {return false}
        if _storage._googleProtobufOption != rhs_storage._googleProtobufOption {return false}
        if _storage._googleProtobufServiceDescriptorProto != rhs_storage._googleProtobufServiceDescriptorProto {return false}
        if _storage._googleProtobufServiceOptions != rhs_storage._googleProtobufServiceOptions {return false}
        if _storage._googleProtobufSourceCodeInfo != rhs_storage._googleProtobufSourceCodeInfo {return false}
        if _storage._googleProtobufSourceContext != rhs_storage._googleProtobufSourceContext {return false}
        if _storage._googleProtobufStringValue != rhs_storage._googleProtobufStringValue {return false}
        if _storage._googleProtobufStruct != rhs_storage._googleProtobufStruct {return false}
        if _storage._googleProtobufSyntax != rhs_storage._googleProtobufSyntax {return false}
        if _storage._googleProtobufTimestamp != rhs_storage._googleProtobufTimestamp {return false}
        if _storage._googleProtobufType != rhs_storage._googleProtobufType {return false}
        if _storage._googleProtobufUint32Value != rhs_storage._googleProtobufUint32Value {return false}
        if _storage._googleProtobufUint64Value != rhs_storage._googleProtobufUint64Value {return false}
        if _storage._googleProtobufUninterpretedOption != rhs_storage._googleProtobufUninterpretedOption {return false}
        if _storage._googleProtobufValue != rhs_storage._googleProtobufValue {return false}
        if _storage._goPackage != rhs_storage._goPackage {return false}
        if _storage._group != rhs_storage._group {return false}
        if _storage._groupFieldNumberStack != rhs_storage._groupFieldNumberStack {return false}
        if _storage._groupSize != rhs_storage._groupSize {return false}
        if _storage._h != rhs_storage._h {return false}
        if _storage._handleConflictingOneOf != rhs_storage._handleConflictingOneOf {return false}
        if _storage._hasAggregateValue_p != rhs_storage._hasAggregateValue_p {return false}
        if _storage._hasAllowAlias_p != rhs_storage._hasAllowAlias_p {return false}
        if _storage._hasBegin_p != rhs_storage._hasBegin_p {return false}
        if _storage._hasCcEnableArenas_p != rhs_storage._hasCcEnableArenas_p {return false}
        if _storage._hasCcGenericServices_p != rhs_storage._hasCcGenericServices_p {return false}
        if _storage._hasClientStreaming_p != rhs_storage._hasClientStreaming_p {return false}
        if _storage._hasCsharpNamespace_p != rhs_storage._hasCsharpNamespace_p {return false}
        if _storage._hasCtype_p != rhs_storage._hasCtype_p {return false}
        if _storage._hasDefaultValue_p != rhs_storage._hasDefaultValue_p {return false}
        if _storage._hasDeprecated_p != rhs_storage._hasDeprecated_p {return false}
        if _storage._hasDoubleValue_p != rhs_storage._hasDoubleValue_p {return false}
        if _storage._hasEnd_p != rhs_storage._hasEnd_p {return false}
        if _storage._hasExtendee_p != rhs_storage._hasExtendee_p {return false}
        if _storage._hasExtensionValue_p != rhs_storage._hasExtensionValue_p {return false}
        if _storage._hasGoPackage_p != rhs_storage._hasGoPackage_p {return false}
        if _storage._hash != rhs_storage._hash {return false}
        if _storage._hashable != rhs_storage._hashable {return false}
        if _storage._hasher != rhs_storage._hasher {return false}
        if _storage._hashValue_p != rhs_storage._hashValue_p {return false}
        if _storage._hashVisitor != rhs_storage._hashVisitor {return false}
        if _storage._hasIdempotencyLevel_p != rhs_storage._hasIdempotencyLevel_p {return false}
        if _storage._hasIdentifierValue_p != rhs_storage._hasIdentifierValue_p {return false}
        if _storage._hasInputType_p != rhs_storage._hasInputType_p {return false}
        if _storage._hasIsExtension_p != rhs_storage._hasIsExtension_p {return false}
        if _storage._hasJavaGenerateEqualsAndHash_p != rhs_storage._hasJavaGenerateEqualsAndHash_p {return false}
        if _storage._hasJavaGenericServices_p != rhs_storage._hasJavaGenericServices_p {return false}
        if _storage._hasJavaMultipleFiles_p != rhs_storage._hasJavaMultipleFiles_p {return false}
        if _storage._hasJavaOuterClassname_p != rhs_storage._hasJavaOuterClassname_p {return false}
        if _storage._hasJavaPackage_p != rhs_storage._hasJavaPackage_p {return false}
        if _storage._hasJavaStringCheckUtf8_p != rhs_storage._hasJavaStringCheckUtf8_p {return false}
        if _storage._hasJsonName_p != rhs_storage._hasJsonName_p {return false}
        if _storage._hasJstype_p != rhs_storage._hasJstype_p {return false}
        if _storage._hasLabel_p != rhs_storage._hasLabel_p {return false}
        if _storage._hasLazy_p != rhs_storage._hasLazy_p {return false}
        if _storage._hasLeadingComments_p != rhs_storage._hasLeadingComments_p {return false}
        if _storage._hasMapEntry_p != rhs_storage._hasMapEntry_p {return false}
        if _storage._hasMessageSetWireFormat_p != rhs_storage._hasMessageSetWireFormat_p {return false}
        if _storage._hasName_p != rhs_storage._hasName_p {return false}
        if _storage._hasNamePart_p != rhs_storage._hasNamePart_p {return false}
        if _storage._hasNegativeIntValue_p != rhs_storage._hasNegativeIntValue_p {return false}
        if _storage._hasNoStandardDescriptorAccessor_p != rhs_storage._hasNoStandardDescriptorAccessor_p {return false}
        if _storage._hasNumber_p != rhs_storage._hasNumber_p {return false}
        if _storage._hasObjcClassPrefix_p != rhs_storage._hasObjcClassPrefix_p {return false}
        if _storage._hasOneofIndex_p != rhs_storage._hasOneofIndex_p {return false}
        if _storage._hasOptimizeFor_p != rhs_storage._hasOptimizeFor_p {return false}
        if _storage._hasOptions_p != rhs_storage._hasOptions_p {return false}
        if _storage._hasOutputType_p != rhs_storage._hasOutputType_p {return false}
        if _storage._hasPackage_p != rhs_storage._hasPackage_p {return false}
        if _storage._hasPacked_p != rhs_storage._hasPacked_p {return false}
        if _storage._hasPhpClassPrefix_p != rhs_storage._hasPhpClassPrefix_p {return false}
        if _storage._hasPhpGenericServices_p != rhs_storage._hasPhpGenericServices_p {return false}
        if _storage._hasPhpMetadataNamespace_p != rhs_storage._hasPhpMetadataNamespace_p {return false}
        if _storage._hasPhpNamespace_p != rhs_storage._hasPhpNamespace_p {return false}
        if _storage._hasPositiveIntValue_p != rhs_storage._hasPositiveIntValue_p {return false}
        if _storage._hasPyGenericServices_p != rhs_storage._hasPyGenericServices_p {return false}
        if _storage._hasRubyPackage_p != rhs_storage._hasRubyPackage_p {return false}
        if _storage._hasServerStreaming_p != rhs_storage._hasServerStreaming_p {return false}
        if _storage._hasSourceCodeInfo_p != rhs_storage._hasSourceCodeInfo_p {return false}
        if _storage._hasSourceContext_p != rhs_storage._hasSourceContext_p {return false}
        if _storage._hasSourceFile_p != rhs_storage._hasSourceFile_p {return false}
        if _storage._hasStart_p != rhs_storage._hasStart_p {return false}
        if _storage._hasStringValue_p != rhs_storage._hasStringValue_p {return false}
        if _storage._hasSwiftPrefix_p != rhs_storage._hasSwiftPrefix_p {return false}
        if _storage._hasSyntax_p != rhs_storage._hasSyntax_p {return false}
        if _storage._hasTrailingComments_p != rhs_storage._hasTrailingComments_p {return false}
        if _storage._hasType_p != rhs_storage._hasType_p {return false}
        if _storage._hasTypeName_p != rhs_storage._hasTypeName_p {return false}
        if _storage._hasValue_p != rhs_storage._hasValue_p {return false}
        if _storage._hasWeak_p != rhs_storage._hasWeak_p {return false}
        if _storage._hour != rhs_storage._hour {return false}
        if _storage._i != rhs_storage._i {return false}
        if _storage._idempotencyLevel != rhs_storage._idempotencyLevel {return false}
        if _storage._identifierValue != rhs_storage._identifierValue {return false}
        if _storage._if != rhs_storage._if {return false}
        if _storage._ignoreUnknownFields != rhs_storage._ignoreUnknownFields {return false}
        if _storage._index != rhs_storage._index {return false}
        if _storage._init_p != rhs_storage._init_p {return false}
        if _storage._inout != rhs_storage._inout {return false}
        if _storage._inputType != rhs_storage._inputType {return false}
        if _storage._insert != rhs_storage._insert {return false}
        if _storage._int != rhs_storage._int {return false}
        if _storage._int32 != rhs_storage._int32 {return false}
        if _storage._int32Value != rhs_storage._int32Value {return false}
        if _storage._int64 != rhs_storage._int64 {return false}
        if _storage._int64Value != rhs_storage._int64Value {return false}
        if _storage._int8 != rhs_storage._int8 {return false}
        if _storage._integerLiteral != rhs_storage._integerLiteral {return false}
        if _storage._integerLiteralType != rhs_storage._integerLiteralType {return false}
        if _storage._intern != rhs_storage._intern {return false}
        if _storage._internal != rhs_storage._internal {return false}
        if _storage._internalState != rhs_storage._internalState {return false}
        if _storage._into != rhs_storage._into {return false}
        if _storage._ints != rhs_storage._ints {return false}
        if _storage._isA != rhs_storage._isA {return false}
        if _storage._isEqual != rhs_storage._isEqual {return false}
        if _storage._isEqualTo != rhs_storage._isEqualTo {return false}
        if _storage._isExtension != rhs_storage._isExtension {return false}
        if _storage._isInitialized_p != rhs_storage._isInitialized_p {return false}
        if _storage._itemTagsEncodedSize != rhs_storage._itemTagsEncodedSize {return false}
        if _storage._i2166136261 != rhs_storage._i2166136261 {return false}
        if _storage._javaGenerateEqualsAndHash != rhs_storage._javaGenerateEqualsAndHash {return false}
        if _storage._javaGenericServices != rhs_storage._javaGenericServices {return false}
        if _storage._javaMultipleFiles != rhs_storage._javaMultipleFiles {return false}
        if _storage._javaOuterClassname != rhs_storage._javaOuterClassname {return false}
        if _storage._javaPackage != rhs_storage._javaPackage {return false}
        if _storage._javaStringCheckUtf8 != rhs_storage._javaStringCheckUtf8 {return false}
        if _storage._jsondecoder != rhs_storage._jsondecoder {return false}
        if _storage._jsondecodingError != rhs_storage._jsondecodingError {return false}
        if _storage._jsondecodingOptions != rhs_storage._jsondecodingOptions {return false}
        if _storage._jsonEncoder != rhs_storage._jsonEncoder {return false}
        if _storage._jsonencodingError != rhs_storage._jsonencodingError {return false}
        if _storage._jsonencodingOptions != rhs_storage._jsonencodingOptions {return false}
        if _storage._jsonencodingVisitor != rhs_storage._jsonencodingVisitor {return false}
        if _storage._jsonmapEncodingVisitor != rhs_storage._jsonmapEncodingVisitor {return false}
        if _storage._jsonName != rhs_storage._jsonName {return false}
        if _storage._jsonPath != rhs_storage._jsonPath {return false}
        if _storage._jsonPaths != rhs_storage._jsonPaths {return false}
        if _storage._jsonscanner != rhs_storage._jsonscanner {return false}
        if _storage._jsonString != rhs_storage._jsonString {return false}
        if _storage._jsonText != rhs_storage._jsonText {return false}
        if _storage._jsonUtf8Data != rhs_storage._jsonUtf8Data {return false}
        if _storage._jstype != rhs_storage._jstype {return false}
        if _storage._k != rhs_storage._k {return false}
        if _storage._key != rhs_storage._key {return false}
        if _storage._keyField != rhs_storage._keyField {return false}
        if _storage._keyType != rhs_storage._keyType {return false}
        if _storage._kind != rhs_storage._kind {return false}
        if _storage._l != rhs_storage._l {return false}
        if _storage._label != rhs_storage._label {return false}
        if _storage._lazy != rhs_storage._lazy {return false}
        if _storage._leadingComments != rhs_storage._leadingComments {return false}
        if _storage._leadingDetachedComments != rhs_storage._leadingDetachedComments {return false}
        if _storage._length != rhs_storage._length {return false}
        if _storage._let != rhs_storage._let {return false}
        if _storage._lhs != rhs_storage._lhs {return false}
        if _storage._list != rhs_storage._list {return false}
        if _storage._listOfMessages != rhs_storage._listOfMessages {return false}
        if _storage._listValue != rhs_storage._listValue {return false}
        if _storage._littleEndian != rhs_storage._littleEndian {return false}
        if _storage._littleEndianBytes != rhs_storage._littleEndianBytes {return false}
        if _storage._load != rhs_storage._load {return false}
        if _storage._localHasher != rhs_storage._localHasher {return false}
        if _storage._location != rhs_storage._location {return false}
        if _storage._m != rhs_storage._m {return false}
        if _storage._major != rhs_storage._major {return false}
        if _storage._makeIterator != rhs_storage._makeIterator {return false}
        if _storage._mapEntry != rhs_storage._mapEntry {return false}
        if _storage._mapHash != rhs_storage._mapHash {return false}
        if _storage._mapKeyType != rhs_storage._mapKeyType {return false}
        if _storage._mapNameResolver != rhs_storage._mapNameResolver {return false}
        if _storage._mapToMessages != rhs_storage._mapToMessages {return false}
        if _storage._mapValueType != rhs_storage._mapValueType {return false}
        if _storage._mapVisitor != rhs_storage._mapVisitor {return false}
        if _storage._mdayStart != rhs_storage._mdayStart {return false}
        if _storage._merge != rhs_storage._merge {return false}
        if _storage._message != rhs_storage._message {return false}
        if _storage._messageDepthLimit != rhs_storage._messageDepthLimit {return false}
        if _storage._messageExtension != rhs_storage._messageExtension {return false}
        if _storage._messageImplementationBase != rhs_storage._messageImplementationBase {return false}
        if _storage._messageOptions != rhs_storage._messageOptions {return false}
        if _storage._messageSet != rhs_storage._messageSet {return false}
        if _storage._messageSetWireFormat != rhs_storage._messageSetWireFormat {return false}
        if _storage._messageType != rhs_storage._messageType {return false}
        if _storage._method != rhs_storage._method {return false}
        if _storage._methodDescriptorProto != rhs_storage._methodDescriptorProto {return false}
        if _storage._methodOptions != rhs_storage._methodOptions {return false}
        if _storage._methods != rhs_storage._methods {return false}
        if _storage._minor != rhs_storage._minor {return false}
        if _storage._mixin != rhs_storage._mixin {return false}
        if _storage._mixins != rhs_storage._mixins {return false}
        if _storage._month != rhs_storage._month {return false}
        if _storage._msgExtension != rhs_storage._msgExtension {return false}
        if _storage._mutating != rhs_storage._mutating {return false}
        if _storage._n != rhs_storage._n {return false}
        if _storage._name != rhs_storage._name {return false}
        if _storage._nameDescription != rhs_storage._nameDescription {return false}
        if _storage._nameMap != rhs_storage._nameMap {return false}
        if _storage._namePart != rhs_storage._namePart {return false}
        if _storage._nameResolver != rhs_storage._nameResolver {return false}
        if _storage._names != rhs_storage._names {return false}
        if _storage._nanos != rhs_storage._nanos {return false}
        if _storage._nativeBytes != rhs_storage._nativeBytes {return false}
        if _storage._nativeEndianBytes != rhs_storage._nativeEndianBytes {return false}
        if _storage._negativeIntValue != rhs_storage._negativeIntValue {return false}
        if _storage._nestedType != rhs_storage._nestedType {return false}
        if _storage._newL != rhs_storage._newL {return false}
        if _storage._newList != rhs_storage._newList {return false}
        if _storage._newValue != rhs_storage._newValue {return false}
        if _storage._nextByte != rhs_storage._nextByte {return false}
        if _storage._nextFieldNumber != rhs_storage._nextFieldNumber {return false}
        if _storage._nil != rhs_storage._nil {return false}
        if _storage._nilLiteral != rhs_storage._nilLiteral {return false}
        if _storage._noStandardDescriptorAccessor != rhs_storage._noStandardDescriptorAccessor {return false}
        if _storage._nullValue != rhs_storage._nullValue {return false}
        if _storage._number != rhs_storage._number {return false}
        if _storage._numberValue != rhs_storage._numberValue {return false}
        if _storage._objcClassPrefix != rhs_storage._objcClassPrefix {return false}
        if _storage._of != rhs_storage._of {return false}
        if _storage._oneofDecl != rhs_storage._oneofDecl {return false}
        if _storage._oneofDescriptorProto != rhs_storage._oneofDescriptorProto {return false}
        if _storage._oneofIndex != rhs_storage._oneofIndex {return false}
        if _storage._oneofOptions != rhs_storage._oneofOptions {return false}
        if _storage._oneofs != rhs_storage._oneofs {return false}
        if _storage._oneOfKind != rhs_storage._oneOfKind {return false}
        if _storage._optimizeFor != rhs_storage._optimizeFor {return false}
        if _storage._optimizeMode != rhs_storage._optimizeMode {return false}
        if _storage._option != rhs_storage._option {return false}
        if _storage._optionalEnumExtensionField != rhs_storage._optionalEnumExtensionField {return false}
        if _storage._optionalExtensionField != rhs_storage._optionalExtensionField {return false}
        if _storage._optionalGroupExtensionField != rhs_storage._optionalGroupExtensionField {return false}
        if _storage._optionalMessageExtensionField != rhs_storage._optionalMessageExtensionField {return false}
        if _storage._options != rhs_storage._options {return false}
        if _storage._other != rhs_storage._other {return false}
        if _storage._others != rhs_storage._others {return false}
        if _storage._out != rhs_storage._out {return false}
        if _storage._outputType != rhs_storage._outputType {return false}
        if _storage._p != rhs_storage._p {return false}
        if _storage._package != rhs_storage._package {return false}
        if _storage._packed != rhs_storage._packed {return false}
        if _storage._packedEnumExtensionField != rhs_storage._packedEnumExtensionField {return false}
        if _storage._packedExtensionField != rhs_storage._packedExtensionField {return false}
        if _storage._packedSize != rhs_storage._packedSize {return false}
        if _storage._padding != rhs_storage._padding {return false}
        if _storage._parent != rhs_storage._parent {return false}
        if _storage._parse != rhs_storage._parse {return false}
        if _storage._partial != rhs_storage._partial {return false}
        if _storage._path != rhs_storage._path {return false}
        if _storage._paths != rhs_storage._paths {return false}
        if _storage._payload != rhs_storage._payload {return false}
        if _storage._payloadSize != rhs_storage._payloadSize {return false}
        if _storage._phpClassPrefix != rhs_storage._phpClassPrefix {return false}
        if _storage._phpGenericServices != rhs_storage._phpGenericServices {return false}
        if _storage._phpMetadataNamespace != rhs_storage._phpMetadataNamespace {return false}
        if _storage._phpNamespace != rhs_storage._phpNamespace {return false}
        if _storage._pointer != rhs_storage._pointer {return false}
        if _storage._pos != rhs_storage._pos {return false}
        if _storage._positiveIntValue != rhs_storage._positiveIntValue {return false}
        if _storage._prefix != rhs_storage._prefix {return false}
        if _storage._preserveProtoFieldNames != rhs_storage._preserveProtoFieldNames {return false}
        if _storage._preTraverse != rhs_storage._preTraverse {return false}
        if _storage._printUnknownFields != rhs_storage._printUnknownFields {return false}
        if _storage._proto2 != rhs_storage._proto2 {return false}
        if _storage._proto3DefaultValue != rhs_storage._proto3DefaultValue {return false}
        if _storage._protobufApiversionCheck != rhs_storage._protobufApiversionCheck {return false}
        if _storage._protobufApiversion2 != rhs_storage._protobufApiversion2 {return false}
        if _storage._protobufBool != rhs_storage._protobufBool {return false}
        if _storage._protobufBytes != rhs_storage._protobufBytes {return false}
        if _storage._protobufDouble != rhs_storage._protobufDouble {return false}
        if _storage._protobufEnumMap != rhs_storage._protobufEnumMap {return false}
        if _storage._protobufExtension != rhs_storage._protobufExtension {return false}
        if _storage._protobufFixed32 != rhs_storage._protobufFixed32 {return false}
        if _storage._protobufFixed64 != rhs_storage._protobufFixed64 {return false}
        if _storage._protobufFloat != rhs_storage._protobufFloat {return false}
        if _storage._protobufInt32 != rhs_storage._protobufInt32 {return false}
        if _storage._protobufInt64 != rhs_storage._protobufInt64 {return false}
        if _storage._protobufMap != rhs_storage._protobufMap {return false}
        if _storage._protobufMessageMap != rhs_storage._protobufMessageMap {return false}
        if _storage._protobufSfixed32 != rhs_storage._protobufSfixed32 {return false}
        if _storage._protobufSfixed64 != rhs_storage._protobufSfixed64 {return false}
        if _storage._protobufSint32 != rhs_storage._protobufSint32 {return false}
        if _storage._protobufSint64 != rhs_storage._protobufSint64 {return false}
        if _storage._protobufString != rhs_storage._protobufString {return false}
        if _storage._protobufUint32 != rhs_storage._protobufUint32 {return false}
        if _storage._protobufUint64 != rhs_storage._protobufUint64 {return false}
        if _storage._protobufExtensionFieldValues != rhs_storage._protobufExtensionFieldValues {return false}
        if _storage._protobufFieldNumber != rhs_storage._protobufFieldNumber {return false}
        if _storage._protobufGeneratedIsEqualTo != rhs_storage._protobufGeneratedIsEqualTo {return false}
        if _storage._protobufNameMap != rhs_storage._protobufNameMap {return false}
        if _storage._protobufNewField != rhs_storage._protobufNewField {return false}
        if _storage._protobufPackage != rhs_storage._protobufPackage {return false}
        if _storage._protocol != rhs_storage._protocol {return false}
        if _storage._protoFieldName != rhs_storage._protoFieldName {return false}
        if _storage._protoMessageName != rhs_storage._protoMessageName {return false}
        if _storage._protoNameProviding != rhs_storage._protoNameProviding {return false}
        if _storage._protoPaths != rhs_storage._protoPaths {return false}
        if _storage._public != rhs_storage._public {return false}
        if _storage._publicDependency != rhs_storage._publicDependency {return false}
        if _storage._putBoolValue != rhs_storage._putBoolValue {return false}
        if _storage._putBytesValue != rhs_storage._putBytesValue {return false}
        if _storage._putDoubleValue != rhs_storage._putDoubleValue {return false}
        if _storage._putEnumValue != rhs_storage._putEnumValue {return false}
        if _storage._putFixedUint32 != rhs_storage._putFixedUint32 {return false}
        if _storage._putFixedUint64 != rhs_storage._putFixedUint64 {return false}
        if _storage._putFloatValue != rhs_storage._putFloatValue {return false}
        if _storage._putInt64 != rhs_storage._putInt64 {return false}
        if _storage._putStringValue != rhs_storage._putStringValue {return false}
        if _storage._putUint64 != rhs_storage._putUint64 {return false}
        if _storage._putUint64Hex != rhs_storage._putUint64Hex {return false}
        if _storage._putVarInt != rhs_storage._putVarInt {return false}
        if _storage._putZigZagVarInt != rhs_storage._putZigZagVarInt {return false}
        if _storage._pyGenericServices != rhs_storage._pyGenericServices {return false}
        if _storage._rawChars != rhs_storage._rawChars {return false}
        if _storage._rawRepresentable != rhs_storage._rawRepresentable {return false}
        if _storage._rawValue != rhs_storage._rawValue {return false}
        if _storage._readBuffer != rhs_storage._readBuffer {return false}
        if _storage._register != rhs_storage._register {return false}
        if _storage._repeatedEnumExtensionField != rhs_storage._repeatedEnumExtensionField {return false}
        if _storage._repeatedExtensionField != rhs_storage._repeatedExtensionField {return false}
        if _storage._repeatedGroupExtensionField != rhs_storage._repeatedGroupExtensionField {return false}
        if _storage._repeatedMessageExtensionField != rhs_storage._repeatedMessageExtensionField {return false}
        if _storage._requestStreaming != rhs_storage._requestStreaming {return false}
        if _storage._requestTypeURL != rhs_storage._requestTypeURL {return false}
        if _storage._requiredSize != rhs_storage._requiredSize {return false}
        if _storage._reservedName != rhs_storage._reservedName {return false}
        if _storage._reservedRange != rhs_storage._reservedRange {return false}
        if _storage._responseStreaming != rhs_storage._responseStreaming {return false}
        if _storage._responseTypeURL != rhs_storage._responseTypeURL {return false}
        if _storage._result != rhs_storage._result {return false}
        if _storage._rethrows != rhs_storage._rethrows {return false}
        if _storage._return != rhs_storage._return {return false}
        if _storage._revision != rhs_storage._revision {return false}
        if _storage._rhs != rhs_storage._rhs {return false}
        if _storage._root != rhs_storage._root {return false}
        if _storage._rubyPackage != rhs_storage._rubyPackage {return false}
        if _storage._s != rhs_storage._s {return false}
        if _storage._sawBackslash != rhs_storage._sawBackslash {return false}
        if _storage._sawSection4Characters != rhs_storage._sawSection4Characters {return false}
        if _storage._sawSection5Characters != rhs_storage._sawSection5Characters {return false}
        if _storage._scanner != rhs_storage._scanner {return false}
        if _storage._seconds != rhs_storage._seconds {return false}
        if _storage._self_p != rhs_storage._self_p {return false}
        if _storage._separator != rhs_storage._separator {return false}
        if _storage._serialize != rhs_storage._serialize {return false}
        if _storage._serializedData != rhs_storage._serializedData {return false}
        if _storage._serializedSize != rhs_storage._serializedSize {return false}
        if _storage._serverStreaming != rhs_storage._serverStreaming {return false}
        if _storage._service != rhs_storage._service {return false}
        if _storage._serviceDescriptorProto != rhs_storage._serviceDescriptorProto {return false}
        if _storage._serviceOptions != rhs_storage._serviceOptions {return false}
        if _storage._set != rhs_storage._set {return false}
        if _storage._setExtensionValue != rhs_storage._setExtensionValue {return false}
        if _storage._shift != rhs_storage._shift {return false}
        if _storage._simpleExtensionMap != rhs_storage._simpleExtensionMap {return false}
        if _storage._sizer != rhs_storage._sizer {return false}
        if _storage._source != rhs_storage._source {return false}
        if _storage._sourceCodeInfo != rhs_storage._sourceCodeInfo {return false}
        if _storage._sourceContext != rhs_storage._sourceContext {return false}
        if _storage._sourceEncoding != rhs_storage._sourceEncoding {return false}
        if _storage._sourceFile != rhs_storage._sourceFile {return false}
        if _storage._span != rhs_storage._span {return false}
        if _storage._split != rhs_storage._split {return false}
        if _storage._start != rhs_storage._start {return false}
        if _storage._startArray != rhs_storage._startArray {return false}
        if _storage._startField != rhs_storage._startField {return false}
        if _storage._startIndex != rhs_storage._startIndex {return false}
        if _storage._startMessageField != rhs_storage._startMessageField {return false}
        if _storage._startObject != rhs_storage._startObject {return false}
        if _storage._startRegularField != rhs_storage._startRegularField {return false}
        if _storage._state != rhs_storage._state {return false}
        if _storage._static != rhs_storage._static {return false}
        if _storage._staticString != rhs_storage._staticString {return false}
        if _storage._storage != rhs_storage._storage {return false}
        if _storage._string != rhs_storage._string {return false}
        if _storage._stringLiteral != rhs_storage._stringLiteral {return false}
        if _storage._stringLiteralType != rhs_storage._stringLiteralType {return false}
        if _storage._stringResult != rhs_storage._stringResult {return false}
        if _storage._stringValue != rhs_storage._stringValue {return false}
        if _storage._struct != rhs_storage._struct {return false}
        if _storage._structValue != rhs_storage._structValue {return false}
        if _storage._subDecoder != rhs_storage._subDecoder {return false}
        if _storage._subscript != rhs_storage._subscript {return false}
        if _storage._subVisitor != rhs_storage._subVisitor {return false}
        if _storage._swift != rhs_storage._swift {return false}
        if _storage._swiftPrefix != rhs_storage._swiftPrefix {return false}
        if _storage._swiftProtobuf != rhs_storage._swiftProtobuf {return false}
        if _storage._syntax != rhs_storage._syntax {return false}
        if _storage._t != rhs_storage._t {return false}
        if _storage._tag != rhs_storage._tag {return false}
        if _storage._terminator != rhs_storage._terminator {return false}
        if _storage._testDecoder != rhs_storage._testDecoder {return false}
        if _storage._text != rhs_storage._text {return false}
        if _storage._textDecoder != rhs_storage._textDecoder {return false}
        if _storage._textFormatDecoder != rhs_storage._textFormatDecoder {return false}
        if _storage._textFormatDecodingError != rhs_storage._textFormatDecodingError {return false}
        if _storage._textFormatEncodingOptions != rhs_storage._textFormatEncodingOptions {return false}
        if _storage._textFormatEncodingVisitor != rhs_storage._textFormatEncodingVisitor {return false}
        if _storage._textFormatString != rhs_storage._textFormatString {return false}
        if _storage._throws != rhs_storage._throws {return false}
        if _storage._timeInterval != rhs_storage._timeInterval {return false}
        if _storage._timeIntervalSince1970 != rhs_storage._timeIntervalSince1970 {return false}
        if _storage._timeIntervalSinceReferenceDate != rhs_storage._timeIntervalSinceReferenceDate {return false}
        if _storage._timestamp != rhs_storage._timestamp {return false}
        if _storage._total != rhs_storage._total {return false}
        if _storage._totalSize != rhs_storage._totalSize {return false}
        if _storage._trailingComments != rhs_storage._trailingComments {return false}
        if _storage._traverse != rhs_storage._traverse {return false}
        if _storage._true != rhs_storage._true {return false}
        if _storage._try != rhs_storage._try {return false}
        if _storage._type != rhs_storage._type {return false}
        if _storage._typealias != rhs_storage._typealias {return false}
        if _storage._typeEnum != rhs_storage._typeEnum {return false}
        if _storage._typeName != rhs_storage._typeName {return false}
        if _storage._typePrefix != rhs_storage._typePrefix {return false}
        if _storage._typeStart != rhs_storage._typeStart {return false}
        if _storage._typeUnknown != rhs_storage._typeUnknown {return false}
        if _storage._typeURL != rhs_storage._typeURL {return false}
        if _storage._uint32 != rhs_storage._uint32 {return false}
        if _storage._uint32Value != rhs_storage._uint32Value {return false}
        if _storage._uint64 != rhs_storage._uint64 {return false}
        if _storage._uint64Value != rhs_storage._uint64Value {return false}
        if _storage._uint8 != rhs_storage._uint8 {return false}
        if _storage._unicodeScalarLiteral != rhs_storage._unicodeScalarLiteral {return false}
        if _storage._unicodeScalarLiteralType != rhs_storage._unicodeScalarLiteralType {return false}
        if _storage._unicodeScalars != rhs_storage._unicodeScalars {return false}
        if _storage._unicodeScalarView != rhs_storage._unicodeScalarView {return false}
        if _storage._uninterpretedOption != rhs_storage._uninterpretedOption {return false}
        if _storage._union != rhs_storage._union {return false}
        if _storage._uniqueStorage != rhs_storage._uniqueStorage {return false}
        if _storage._unknown != rhs_storage._unknown {return false}
        if _storage._unknownFields_p != rhs_storage._unknownFields_p {return false}
        if _storage._unknownStorage != rhs_storage._unknownStorage {return false}
        if _storage._unpackTo != rhs_storage._unpackTo {return false}
        if _storage._unsafeMutablePointer != rhs_storage._unsafeMutablePointer {return false}
        if _storage._unsafeMutableRawBufferPointer != rhs_storage._unsafeMutableRawBufferPointer {return false}
        if _storage._unsafeMutableRawPointer != rhs_storage._unsafeMutableRawPointer {return false}
        if _storage._unsafeRawBufferPointer != rhs_storage._unsafeRawBufferPointer {return false}
        if _storage._unsafeRawPointer != rhs_storage._unsafeRawPointer {return false}
        if _storage._updatedOptions != rhs_storage._updatedOptions {return false}
        if _storage._url != rhs_storage._url {return false}
        if _storage._utf8 != rhs_storage._utf8 {return false}
        if _storage._utf8ToDouble != rhs_storage._utf8ToDouble {return false}
        if _storage._utf8View != rhs_storage._utf8View {return false}
        if _storage._v != rhs_storage._v {return false}
        if _storage._value != rhs_storage._value {return false}
        if _storage._valueField != rhs_storage._valueField {return false}
        if _storage._values != rhs_storage._values {return false}
        if _storage._valueType != rhs_storage._valueType {return false}
        if _storage._var != rhs_storage._var {return false}
        if _storage._version != rhs_storage._version {return false}
        if _storage._versionString != rhs_storage._versionString {return false}
        if _storage._visitExtensionFields != rhs_storage._visitExtensionFields {return false}
        if _storage._visitExtensionFieldsAsMessageSet != rhs_storage._visitExtensionFieldsAsMessageSet {return false}
        if _storage._visitMapField != rhs_storage._visitMapField {return false}
        if _storage._visitor != rhs_storage._visitor {return false}
        if _storage._visitPacked != rhs_storage._visitPacked {return false}
        if _storage._visitPackedBoolField != rhs_storage._visitPackedBoolField {return false}
        if _storage._visitPackedDoubleField != rhs_storage._visitPackedDoubleField {return false}
        if _storage._visitPackedEnumField != rhs_storage._visitPackedEnumField {return false}
        if _storage._visitPackedFixed32Field != rhs_storage._visitPackedFixed32Field {return false}
        if _storage._visitPackedFixed64Field != rhs_storage._visitPackedFixed64Field {return false}
        if _storage._visitPackedFloatField != rhs_storage._visitPackedFloatField {return false}
        if _storage._visitPackedInt32Field != rhs_storage._visitPackedInt32Field {return false}
        if _storage._visitPackedInt64Field != rhs_storage._visitPackedInt64Field {return false}
        if _storage._visitPackedSfixed32Field != rhs_storage._visitPackedSfixed32Field {return false}
        if _storage._visitPackedSfixed64Field != rhs_storage._visitPackedSfixed64Field {return false}
        if _storage._visitPackedSint32Field != rhs_storage._visitPackedSint32Field {return false}
        if _storage._visitPackedSint64Field != rhs_storage._visitPackedSint64Field {return false}
        if _storage._visitPackedUint32Field != rhs_storage._visitPackedUint32Field {return false}
        if _storage._visitPackedUint64Field != rhs_storage._visitPackedUint64Field {return false}
        if _storage._visitRepeated != rhs_storage._visitRepeated {return false}
        if _storage._visitRepeatedBoolField != rhs_storage._visitRepeatedBoolField {return false}
        if _storage._visitRepeatedBytesField != rhs_storage._visitRepeatedBytesField {return false}
        if _storage._visitRepeatedDoubleField != rhs_storage._visitRepeatedDoubleField {return false}
        if _storage._visitRepeatedEnumField != rhs_storage._visitRepeatedEnumField {return false}
        if _storage._visitRepeatedFixed32Field != rhs_storage._visitRepeatedFixed32Field {return false}
        if _storage._visitRepeatedFixed64Field != rhs_storage._visitRepeatedFixed64Field {return false}
        if _storage._visitRepeatedFloatField != rhs_storage._visitRepeatedFloatField {return false}
        if _storage._visitRepeatedGroupField != rhs_storage._visitRepeatedGroupField {return false}
        if _storage._visitRepeatedInt32Field != rhs_storage._visitRepeatedInt32Field {return false}
        if _storage._visitRepeatedInt64Field != rhs_storage._visitRepeatedInt64Field {return false}
        if _storage._visitRepeatedMessageField != rhs_storage._visitRepeatedMessageField {return false}
        if _storage._visitRepeatedSfixed32Field != rhs_storage._visitRepeatedSfixed32Field {return false}
        if _storage._visitRepeatedSfixed64Field != rhs_storage._visitRepeatedSfixed64Field {return false}
        if _storage._visitRepeatedSint32Field != rhs_storage._visitRepeatedSint32Field {return false}
        if _storage._visitRepeatedSint64Field != rhs_storage._visitRepeatedSint64Field {return false}
        if _storage._visitRepeatedStringField != rhs_storage._visitRepeatedStringField {return false}
        if _storage._visitRepeatedUint32Field != rhs_storage._visitRepeatedUint32Field {return false}
        if _storage._visitRepeatedUint64Field != rhs_storage._visitRepeatedUint64Field {return false}
        if _storage._visitSingular != rhs_storage._visitSingular {return false}
        if _storage._visitSingularBoolField != rhs_storage._visitSingularBoolField {return false}
        if _storage._visitSingularBytesField != rhs_storage._visitSingularBytesField {return false}
        if _storage._visitSingularDoubleField != rhs_storage._visitSingularDoubleField {return false}
        if _storage._visitSingularEnumField != rhs_storage._visitSingularEnumField {return false}
        if _storage._visitSingularFixed32Field != rhs_storage._visitSingularFixed32Field {return false}
        if _storage._visitSingularFixed64Field != rhs_storage._visitSingularFixed64Field {return false}
        if _storage._visitSingularFloatField != rhs_storage._visitSingularFloatField {return false}
        if _storage._visitSingularGroupField != rhs_storage._visitSingularGroupField {return false}
        if _storage._visitSingularInt32Field != rhs_storage._visitSingularInt32Field {return false}
        if _storage._visitSingularInt64Field != rhs_storage._visitSingularInt64Field {return false}
        if _storage._visitSingularMessageField != rhs_storage._visitSingularMessageField {return false}
        if _storage._visitSingularSfixed32Field != rhs_storage._visitSingularSfixed32Field {return false}
        if _storage._visitSingularSfixed64Field != rhs_storage._visitSingularSfixed64Field {return false}
        if _storage._visitSingularSint32Field != rhs_storage._visitSingularSint32Field {return false}
        if _storage._visitSingularSint64Field != rhs_storage._visitSingularSint64Field {return false}
        if _storage._visitSingularStringField != rhs_storage._visitSingularStringField {return false}
        if _storage._visitSingularUint32Field != rhs_storage._visitSingularUint32Field {return false}
        if _storage._visitSingularUint64Field != rhs_storage._visitSingularUint64Field {return false}
        if _storage._visitUnknown != rhs_storage._visitUnknown {return false}
        if _storage._wasDecoded != rhs_storage._wasDecoded {return false}
        if _storage._weak != rhs_storage._weak {return false}
        if _storage._weakDependency != rhs_storage._weakDependency {return false}
        if _storage._where != rhs_storage._where {return false}
        if _storage._wireFormat != rhs_storage._wireFormat {return false}
        if _storage._with != rhs_storage._with {return false}
        if _storage._withUnsafeBytes != rhs_storage._withUnsafeBytes {return false}
        if _storage._withUnsafeMutableBytes != rhs_storage._withUnsafeMutableBytes {return false}
        if _storage._work != rhs_storage._work {return false}
        if _storage._wrappedType != rhs_storage._wrappedType {return false}
        if _storage._written != rhs_storage._written {return false}
        if _storage._yday != rhs_storage._yday {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
