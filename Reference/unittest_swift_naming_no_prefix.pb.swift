// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: unittest_swift_naming_no_prefix.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Protos/unittest_swift_naming_no_prefix.proto - test proto
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2017 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See http://swift.org/LICENSE.txt for license information
// See http://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
// -----------------------------------------------------------------------------
///
/// Test Swift reserved words used as enum or message names
///
// -----------------------------------------------------------------------------

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

// MARK: - Extension support defined in unittest_swift_naming_no_prefix.proto.

// MARK: - Extension Properties

// Swift Extensions on the exteneded Messages to add easy access to the declared
// extension fields. The names are based on the extension field name from the proto
// declaration. To avoid naming collisions, the names are prefixed with the name of
// the scope where the extend directive occurs.

extension SwiftUnittest_Names_ExtensionNamingInitialsLowers {

  var http: Int32 {
    get {return getExtensionValue(ext: Extensions_http) ?? 0}
    set {setExtensionValue(ext: Extensions_http, value: newValue)}
  }
  /// Returns true if extension `Extensions_http`
  /// has been explicitly set.
  var hasHTTP: Bool {
    return hasExtensionValue(ext: Extensions_http)
  }
  /// Clears the value of extension `Extensions_http`.
  /// Subsequent reads from it will return its default value.
  mutating func clearHTTP() {
    clearExtensionValue(ext: Extensions_http)
  }

  var httpRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_http_request) ?? 0}
    set {setExtensionValue(ext: Extensions_http_request, value: newValue)}
  }
  /// Returns true if extension `Extensions_http_request`
  /// has been explicitly set.
  var hasHTTPRequest: Bool {
    return hasExtensionValue(ext: Extensions_http_request)
  }
  /// Clears the value of extension `Extensions_http_request`.
  /// Subsequent reads from it will return its default value.
  mutating func clearHTTPRequest() {
    clearExtensionValue(ext: Extensions_http_request)
  }

  var theHTTPRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_the_http_request) ?? 0}
    set {setExtensionValue(ext: Extensions_the_http_request, value: newValue)}
  }
  /// Returns true if extension `Extensions_the_http_request`
  /// has been explicitly set.
  var hasTheHTTPRequest: Bool {
    return hasExtensionValue(ext: Extensions_the_http_request)
  }
  /// Clears the value of extension `Extensions_the_http_request`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheHTTPRequest() {
    clearExtensionValue(ext: Extensions_the_http_request)
  }

  var theHTTP: Int32 {
    get {return getExtensionValue(ext: Extensions_the_http) ?? 0}
    set {setExtensionValue(ext: Extensions_the_http, value: newValue)}
  }
  /// Returns true if extension `Extensions_the_http`
  /// has been explicitly set.
  var hasTheHTTP: Bool {
    return hasExtensionValue(ext: Extensions_the_http)
  }
  /// Clears the value of extension `Extensions_the_http`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheHTTP() {
    clearExtensionValue(ext: Extensions_the_http)
  }

  var https: Int32 {
    get {return getExtensionValue(ext: Extensions_https) ?? 0}
    set {setExtensionValue(ext: Extensions_https, value: newValue)}
  }
  /// Returns true if extension `Extensions_https`
  /// has been explicitly set.
  var hasHTTPS: Bool {
    return hasExtensionValue(ext: Extensions_https)
  }
  /// Clears the value of extension `Extensions_https`.
  /// Subsequent reads from it will return its default value.
  mutating func clearHTTPS() {
    clearExtensionValue(ext: Extensions_https)
  }

  var httpsRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_https_request) ?? 0}
    set {setExtensionValue(ext: Extensions_https_request, value: newValue)}
  }
  /// Returns true if extension `Extensions_https_request`
  /// has been explicitly set.
  var hasHTTPSRequest: Bool {
    return hasExtensionValue(ext: Extensions_https_request)
  }
  /// Clears the value of extension `Extensions_https_request`.
  /// Subsequent reads from it will return its default value.
  mutating func clearHTTPSRequest() {
    clearExtensionValue(ext: Extensions_https_request)
  }

  var theHTTPSRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_the_https_request) ?? 0}
    set {setExtensionValue(ext: Extensions_the_https_request, value: newValue)}
  }
  /// Returns true if extension `Extensions_the_https_request`
  /// has been explicitly set.
  var hasTheHTTPSRequest: Bool {
    return hasExtensionValue(ext: Extensions_the_https_request)
  }
  /// Clears the value of extension `Extensions_the_https_request`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheHTTPSRequest() {
    clearExtensionValue(ext: Extensions_the_https_request)
  }

  var theHTTPS: Int32 {
    get {return getExtensionValue(ext: Extensions_the_https) ?? 0}
    set {setExtensionValue(ext: Extensions_the_https, value: newValue)}
  }
  /// Returns true if extension `Extensions_the_https`
  /// has been explicitly set.
  var hasTheHTTPS: Bool {
    return hasExtensionValue(ext: Extensions_the_https)
  }
  /// Clears the value of extension `Extensions_the_https`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheHTTPS() {
    clearExtensionValue(ext: Extensions_the_https)
  }

  var url: Int32 {
    get {return getExtensionValue(ext: Extensions_url) ?? 0}
    set {setExtensionValue(ext: Extensions_url, value: newValue)}
  }
  /// Returns true if extension `Extensions_url`
  /// has been explicitly set.
  var hasURL: Bool {
    return hasExtensionValue(ext: Extensions_url)
  }
  /// Clears the value of extension `Extensions_url`.
  /// Subsequent reads from it will return its default value.
  mutating func clearURL() {
    clearExtensionValue(ext: Extensions_url)
  }

  var urlValue: Int32 {
    get {return getExtensionValue(ext: Extensions_url_value) ?? 0}
    set {setExtensionValue(ext: Extensions_url_value, value: newValue)}
  }
  /// Returns true if extension `Extensions_url_value`
  /// has been explicitly set.
  var hasURLValue: Bool {
    return hasExtensionValue(ext: Extensions_url_value)
  }
  /// Clears the value of extension `Extensions_url_value`.
  /// Subsequent reads from it will return its default value.
  mutating func clearURLValue() {
    clearExtensionValue(ext: Extensions_url_value)
  }

  var theURLValue: Int32 {
    get {return getExtensionValue(ext: Extensions_the_url_value) ?? 0}
    set {setExtensionValue(ext: Extensions_the_url_value, value: newValue)}
  }
  /// Returns true if extension `Extensions_the_url_value`
  /// has been explicitly set.
  var hasTheURLValue: Bool {
    return hasExtensionValue(ext: Extensions_the_url_value)
  }
  /// Clears the value of extension `Extensions_the_url_value`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheURLValue() {
    clearExtensionValue(ext: Extensions_the_url_value)
  }

  var theURL: Int32 {
    get {return getExtensionValue(ext: Extensions_the_url) ?? 0}
    set {setExtensionValue(ext: Extensions_the_url, value: newValue)}
  }
  /// Returns true if extension `Extensions_the_url`
  /// has been explicitly set.
  var hasTheURL: Bool {
    return hasExtensionValue(ext: Extensions_the_url)
  }
  /// Clears the value of extension `Extensions_the_url`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheURL() {
    clearExtensionValue(ext: Extensions_the_url)
  }

  var aBC: Int32 {
    get {return getExtensionValue(ext: Extensions_a_b_c) ?? 0}
    set {setExtensionValue(ext: Extensions_a_b_c, value: newValue)}
  }
  /// Returns true if extension `Extensions_a_b_c`
  /// has been explicitly set.
  var hasABC: Bool {
    return hasExtensionValue(ext: Extensions_a_b_c)
  }
  /// Clears the value of extension `Extensions_a_b_c`.
  /// Subsequent reads from it will return its default value.
  mutating func clearABC() {
    clearExtensionValue(ext: Extensions_a_b_c)
  }

  var id: Int32 {
    get {return getExtensionValue(ext: Extensions_id) ?? 0}
    set {setExtensionValue(ext: Extensions_id, value: newValue)}
  }
  /// Returns true if extension `Extensions_id`
  /// has been explicitly set.
  var hasID: Bool {
    return hasExtensionValue(ext: Extensions_id)
  }
  /// Clears the value of extension `Extensions_id`.
  /// Subsequent reads from it will return its default value.
  mutating func clearID() {
    clearExtensionValue(ext: Extensions_id)
  }

  var idNumber: Int32 {
    get {return getExtensionValue(ext: Extensions_id_number) ?? 0}
    set {setExtensionValue(ext: Extensions_id_number, value: newValue)}
  }
  /// Returns true if extension `Extensions_id_number`
  /// has been explicitly set.
  var hasIDNumber: Bool {
    return hasExtensionValue(ext: Extensions_id_number)
  }
  /// Clears the value of extension `Extensions_id_number`.
  /// Subsequent reads from it will return its default value.
  mutating func clearIDNumber() {
    clearExtensionValue(ext: Extensions_id_number)
  }

  var theIDNumber: Int32 {
    get {return getExtensionValue(ext: Extensions_the_id_number) ?? 0}
    set {setExtensionValue(ext: Extensions_the_id_number, value: newValue)}
  }
  /// Returns true if extension `Extensions_the_id_number`
  /// has been explicitly set.
  var hasTheIDNumber: Bool {
    return hasExtensionValue(ext: Extensions_the_id_number)
  }
  /// Clears the value of extension `Extensions_the_id_number`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheIDNumber() {
    clearExtensionValue(ext: Extensions_the_id_number)
  }

  var requestID: Int32 {
    get {return getExtensionValue(ext: Extensions_request_id) ?? 0}
    set {setExtensionValue(ext: Extensions_request_id, value: newValue)}
  }
  /// Returns true if extension `Extensions_request_id`
  /// has been explicitly set.
  var hasRequestID: Bool {
    return hasExtensionValue(ext: Extensions_request_id)
  }
  /// Clears the value of extension `Extensions_request_id`.
  /// Subsequent reads from it will return its default value.
  mutating func clearRequestID() {
    clearExtensionValue(ext: Extensions_request_id)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsUppers {

  var http: Int32 {
    get {return getExtensionValue(ext: Extensions_HTTP) ?? 0}
    set {setExtensionValue(ext: Extensions_HTTP, value: newValue)}
  }
  /// Returns true if extension `Extensions_HTTP`
  /// has been explicitly set.
  var hasHTTP: Bool {
    return hasExtensionValue(ext: Extensions_HTTP)
  }
  /// Clears the value of extension `Extensions_HTTP`.
  /// Subsequent reads from it will return its default value.
  mutating func clearHTTP() {
    clearExtensionValue(ext: Extensions_HTTP)
  }

  var httpRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_HTTP_request) ?? 0}
    set {setExtensionValue(ext: Extensions_HTTP_request, value: newValue)}
  }
  /// Returns true if extension `Extensions_HTTP_request`
  /// has been explicitly set.
  var hasHTTPRequest: Bool {
    return hasExtensionValue(ext: Extensions_HTTP_request)
  }
  /// Clears the value of extension `Extensions_HTTP_request`.
  /// Subsequent reads from it will return its default value.
  mutating func clearHTTPRequest() {
    clearExtensionValue(ext: Extensions_HTTP_request)
  }

  var theHTTPRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_the_HTTP_request) ?? 0}
    set {setExtensionValue(ext: Extensions_the_HTTP_request, value: newValue)}
  }
  /// Returns true if extension `Extensions_the_HTTP_request`
  /// has been explicitly set.
  var hasTheHTTPRequest: Bool {
    return hasExtensionValue(ext: Extensions_the_HTTP_request)
  }
  /// Clears the value of extension `Extensions_the_HTTP_request`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheHTTPRequest() {
    clearExtensionValue(ext: Extensions_the_HTTP_request)
  }

  var theHTTP: Int32 {
    get {return getExtensionValue(ext: Extensions_the_HTTP) ?? 0}
    set {setExtensionValue(ext: Extensions_the_HTTP, value: newValue)}
  }
  /// Returns true if extension `Extensions_the_HTTP`
  /// has been explicitly set.
  var hasTheHTTP: Bool {
    return hasExtensionValue(ext: Extensions_the_HTTP)
  }
  /// Clears the value of extension `Extensions_the_HTTP`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheHTTP() {
    clearExtensionValue(ext: Extensions_the_HTTP)
  }

  var https: Int32 {
    get {return getExtensionValue(ext: Extensions_HTTPS) ?? 0}
    set {setExtensionValue(ext: Extensions_HTTPS, value: newValue)}
  }
  /// Returns true if extension `Extensions_HTTPS`
  /// has been explicitly set.
  var hasHTTPS: Bool {
    return hasExtensionValue(ext: Extensions_HTTPS)
  }
  /// Clears the value of extension `Extensions_HTTPS`.
  /// Subsequent reads from it will return its default value.
  mutating func clearHTTPS() {
    clearExtensionValue(ext: Extensions_HTTPS)
  }

  var httpsRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_HTTPS_request) ?? 0}
    set {setExtensionValue(ext: Extensions_HTTPS_request, value: newValue)}
  }
  /// Returns true if extension `Extensions_HTTPS_request`
  /// has been explicitly set.
  var hasHTTPSRequest: Bool {
    return hasExtensionValue(ext: Extensions_HTTPS_request)
  }
  /// Clears the value of extension `Extensions_HTTPS_request`.
  /// Subsequent reads from it will return its default value.
  mutating func clearHTTPSRequest() {
    clearExtensionValue(ext: Extensions_HTTPS_request)
  }

  var theHTTPSRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_the_HTTPS_request) ?? 0}
    set {setExtensionValue(ext: Extensions_the_HTTPS_request, value: newValue)}
  }
  /// Returns true if extension `Extensions_the_HTTPS_request`
  /// has been explicitly set.
  var hasTheHTTPSRequest: Bool {
    return hasExtensionValue(ext: Extensions_the_HTTPS_request)
  }
  /// Clears the value of extension `Extensions_the_HTTPS_request`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheHTTPSRequest() {
    clearExtensionValue(ext: Extensions_the_HTTPS_request)
  }

  var theHTTPS: Int32 {
    get {return getExtensionValue(ext: Extensions_the_HTTPS) ?? 0}
    set {setExtensionValue(ext: Extensions_the_HTTPS, value: newValue)}
  }
  /// Returns true if extension `Extensions_the_HTTPS`
  /// has been explicitly set.
  var hasTheHTTPS: Bool {
    return hasExtensionValue(ext: Extensions_the_HTTPS)
  }
  /// Clears the value of extension `Extensions_the_HTTPS`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheHTTPS() {
    clearExtensionValue(ext: Extensions_the_HTTPS)
  }

  var url: Int32 {
    get {return getExtensionValue(ext: Extensions_URL) ?? 0}
    set {setExtensionValue(ext: Extensions_URL, value: newValue)}
  }
  /// Returns true if extension `Extensions_URL`
  /// has been explicitly set.
  var hasURL: Bool {
    return hasExtensionValue(ext: Extensions_URL)
  }
  /// Clears the value of extension `Extensions_URL`.
  /// Subsequent reads from it will return its default value.
  mutating func clearURL() {
    clearExtensionValue(ext: Extensions_URL)
  }

  var urlValue: Int32 {
    get {return getExtensionValue(ext: Extensions_URL_value) ?? 0}
    set {setExtensionValue(ext: Extensions_URL_value, value: newValue)}
  }
  /// Returns true if extension `Extensions_URL_value`
  /// has been explicitly set.
  var hasURLValue: Bool {
    return hasExtensionValue(ext: Extensions_URL_value)
  }
  /// Clears the value of extension `Extensions_URL_value`.
  /// Subsequent reads from it will return its default value.
  mutating func clearURLValue() {
    clearExtensionValue(ext: Extensions_URL_value)
  }

  var theURLValue: Int32 {
    get {return getExtensionValue(ext: Extensions_the_URL_value) ?? 0}
    set {setExtensionValue(ext: Extensions_the_URL_value, value: newValue)}
  }
  /// Returns true if extension `Extensions_the_URL_value`
  /// has been explicitly set.
  var hasTheURLValue: Bool {
    return hasExtensionValue(ext: Extensions_the_URL_value)
  }
  /// Clears the value of extension `Extensions_the_URL_value`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheURLValue() {
    clearExtensionValue(ext: Extensions_the_URL_value)
  }

  var theURL: Int32 {
    get {return getExtensionValue(ext: Extensions_the_URL) ?? 0}
    set {setExtensionValue(ext: Extensions_the_URL, value: newValue)}
  }
  /// Returns true if extension `Extensions_the_URL`
  /// has been explicitly set.
  var hasTheURL: Bool {
    return hasExtensionValue(ext: Extensions_the_URL)
  }
  /// Clears the value of extension `Extensions_the_URL`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheURL() {
    clearExtensionValue(ext: Extensions_the_URL)
  }

  var id: Int32 {
    get {return getExtensionValue(ext: Extensions_ID) ?? 0}
    set {setExtensionValue(ext: Extensions_ID, value: newValue)}
  }
  /// Returns true if extension `Extensions_ID`
  /// has been explicitly set.
  var hasID: Bool {
    return hasExtensionValue(ext: Extensions_ID)
  }
  /// Clears the value of extension `Extensions_ID`.
  /// Subsequent reads from it will return its default value.
  mutating func clearID() {
    clearExtensionValue(ext: Extensions_ID)
  }

  var idNumber: Int32 {
    get {return getExtensionValue(ext: Extensions_ID_number) ?? 0}
    set {setExtensionValue(ext: Extensions_ID_number, value: newValue)}
  }
  /// Returns true if extension `Extensions_ID_number`
  /// has been explicitly set.
  var hasIDNumber: Bool {
    return hasExtensionValue(ext: Extensions_ID_number)
  }
  /// Clears the value of extension `Extensions_ID_number`.
  /// Subsequent reads from it will return its default value.
  mutating func clearIDNumber() {
    clearExtensionValue(ext: Extensions_ID_number)
  }

  var theIDNumber: Int32 {
    get {return getExtensionValue(ext: Extensions_the_ID_number) ?? 0}
    set {setExtensionValue(ext: Extensions_the_ID_number, value: newValue)}
  }
  /// Returns true if extension `Extensions_the_ID_number`
  /// has been explicitly set.
  var hasTheIDNumber: Bool {
    return hasExtensionValue(ext: Extensions_the_ID_number)
  }
  /// Clears the value of extension `Extensions_the_ID_number`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheIDNumber() {
    clearExtensionValue(ext: Extensions_the_ID_number)
  }

  var requestID: Int32 {
    get {return getExtensionValue(ext: Extensions_request_ID) ?? 0}
    set {setExtensionValue(ext: Extensions_request_ID, value: newValue)}
  }
  /// Returns true if extension `Extensions_request_ID`
  /// has been explicitly set.
  var hasRequestID: Bool {
    return hasExtensionValue(ext: Extensions_request_ID)
  }
  /// Clears the value of extension `Extensions_request_ID`.
  /// Subsequent reads from it will return its default value.
  mutating func clearRequestID() {
    clearExtensionValue(ext: Extensions_request_ID)
  }
}

extension SwiftUnittest_Names_ExtensionNamingInitialsWordCase {

  var http: Int32 {
    get {return getExtensionValue(ext: Extensions_Http) ?? 0}
    set {setExtensionValue(ext: Extensions_Http, value: newValue)}
  }
  /// Returns true if extension `Extensions_Http`
  /// has been explicitly set.
  var hasHTTP: Bool {
    return hasExtensionValue(ext: Extensions_Http)
  }
  /// Clears the value of extension `Extensions_Http`.
  /// Subsequent reads from it will return its default value.
  mutating func clearHTTP() {
    clearExtensionValue(ext: Extensions_Http)
  }

  var httpRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_HttpRequest) ?? 0}
    set {setExtensionValue(ext: Extensions_HttpRequest, value: newValue)}
  }
  /// Returns true if extension `Extensions_HttpRequest`
  /// has been explicitly set.
  var hasHTTPRequest: Bool {
    return hasExtensionValue(ext: Extensions_HttpRequest)
  }
  /// Clears the value of extension `Extensions_HttpRequest`.
  /// Subsequent reads from it will return its default value.
  mutating func clearHTTPRequest() {
    clearExtensionValue(ext: Extensions_HttpRequest)
  }

  var theHTTPRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_TheHttpRequest) ?? 0}
    set {setExtensionValue(ext: Extensions_TheHttpRequest, value: newValue)}
  }
  /// Returns true if extension `Extensions_TheHttpRequest`
  /// has been explicitly set.
  var hasTheHTTPRequest: Bool {
    return hasExtensionValue(ext: Extensions_TheHttpRequest)
  }
  /// Clears the value of extension `Extensions_TheHttpRequest`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheHTTPRequest() {
    clearExtensionValue(ext: Extensions_TheHttpRequest)
  }

  var theHTTP: Int32 {
    get {return getExtensionValue(ext: Extensions_TheHttp) ?? 0}
    set {setExtensionValue(ext: Extensions_TheHttp, value: newValue)}
  }
  /// Returns true if extension `Extensions_TheHttp`
  /// has been explicitly set.
  var hasTheHTTP: Bool {
    return hasExtensionValue(ext: Extensions_TheHttp)
  }
  /// Clears the value of extension `Extensions_TheHttp`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheHTTP() {
    clearExtensionValue(ext: Extensions_TheHttp)
  }

  var https: Int32 {
    get {return getExtensionValue(ext: Extensions_Https) ?? 0}
    set {setExtensionValue(ext: Extensions_Https, value: newValue)}
  }
  /// Returns true if extension `Extensions_Https`
  /// has been explicitly set.
  var hasHTTPS: Bool {
    return hasExtensionValue(ext: Extensions_Https)
  }
  /// Clears the value of extension `Extensions_Https`.
  /// Subsequent reads from it will return its default value.
  mutating func clearHTTPS() {
    clearExtensionValue(ext: Extensions_Https)
  }

  var httpsRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_HttpsRequest) ?? 0}
    set {setExtensionValue(ext: Extensions_HttpsRequest, value: newValue)}
  }
  /// Returns true if extension `Extensions_HttpsRequest`
  /// has been explicitly set.
  var hasHTTPSRequest: Bool {
    return hasExtensionValue(ext: Extensions_HttpsRequest)
  }
  /// Clears the value of extension `Extensions_HttpsRequest`.
  /// Subsequent reads from it will return its default value.
  mutating func clearHTTPSRequest() {
    clearExtensionValue(ext: Extensions_HttpsRequest)
  }

  var theHTTPSRequest: Int32 {
    get {return getExtensionValue(ext: Extensions_TheHttpsRequest) ?? 0}
    set {setExtensionValue(ext: Extensions_TheHttpsRequest, value: newValue)}
  }
  /// Returns true if extension `Extensions_TheHttpsRequest`
  /// has been explicitly set.
  var hasTheHTTPSRequest: Bool {
    return hasExtensionValue(ext: Extensions_TheHttpsRequest)
  }
  /// Clears the value of extension `Extensions_TheHttpsRequest`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheHTTPSRequest() {
    clearExtensionValue(ext: Extensions_TheHttpsRequest)
  }

  var theHTTPS: Int32 {
    get {return getExtensionValue(ext: Extensions_TheHttps) ?? 0}
    set {setExtensionValue(ext: Extensions_TheHttps, value: newValue)}
  }
  /// Returns true if extension `Extensions_TheHttps`
  /// has been explicitly set.
  var hasTheHTTPS: Bool {
    return hasExtensionValue(ext: Extensions_TheHttps)
  }
  /// Clears the value of extension `Extensions_TheHttps`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheHTTPS() {
    clearExtensionValue(ext: Extensions_TheHttps)
  }

  var url: Int32 {
    get {return getExtensionValue(ext: Extensions_Url) ?? 0}
    set {setExtensionValue(ext: Extensions_Url, value: newValue)}
  }
  /// Returns true if extension `Extensions_Url`
  /// has been explicitly set.
  var hasURL: Bool {
    return hasExtensionValue(ext: Extensions_Url)
  }
  /// Clears the value of extension `Extensions_Url`.
  /// Subsequent reads from it will return its default value.
  mutating func clearURL() {
    clearExtensionValue(ext: Extensions_Url)
  }

  var urlValue: Int32 {
    get {return getExtensionValue(ext: Extensions_UrlValue) ?? 0}
    set {setExtensionValue(ext: Extensions_UrlValue, value: newValue)}
  }
  /// Returns true if extension `Extensions_UrlValue`
  /// has been explicitly set.
  var hasURLValue: Bool {
    return hasExtensionValue(ext: Extensions_UrlValue)
  }
  /// Clears the value of extension `Extensions_UrlValue`.
  /// Subsequent reads from it will return its default value.
  mutating func clearURLValue() {
    clearExtensionValue(ext: Extensions_UrlValue)
  }

  var theURLValue: Int32 {
    get {return getExtensionValue(ext: Extensions_TheUrlValue) ?? 0}
    set {setExtensionValue(ext: Extensions_TheUrlValue, value: newValue)}
  }
  /// Returns true if extension `Extensions_TheUrlValue`
  /// has been explicitly set.
  var hasTheURLValue: Bool {
    return hasExtensionValue(ext: Extensions_TheUrlValue)
  }
  /// Clears the value of extension `Extensions_TheUrlValue`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheURLValue() {
    clearExtensionValue(ext: Extensions_TheUrlValue)
  }

  var theURL: Int32 {
    get {return getExtensionValue(ext: Extensions_TheUrl) ?? 0}
    set {setExtensionValue(ext: Extensions_TheUrl, value: newValue)}
  }
  /// Returns true if extension `Extensions_TheUrl`
  /// has been explicitly set.
  var hasTheURL: Bool {
    return hasExtensionValue(ext: Extensions_TheUrl)
  }
  /// Clears the value of extension `Extensions_TheUrl`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheURL() {
    clearExtensionValue(ext: Extensions_TheUrl)
  }

  var id: Int32 {
    get {return getExtensionValue(ext: Extensions_Id) ?? 0}
    set {setExtensionValue(ext: Extensions_Id, value: newValue)}
  }
  /// Returns true if extension `Extensions_Id`
  /// has been explicitly set.
  var hasID: Bool {
    return hasExtensionValue(ext: Extensions_Id)
  }
  /// Clears the value of extension `Extensions_Id`.
  /// Subsequent reads from it will return its default value.
  mutating func clearID() {
    clearExtensionValue(ext: Extensions_Id)
  }

  var idNumber: Int32 {
    get {return getExtensionValue(ext: Extensions_IdNumber) ?? 0}
    set {setExtensionValue(ext: Extensions_IdNumber, value: newValue)}
  }
  /// Returns true if extension `Extensions_IdNumber`
  /// has been explicitly set.
  var hasIDNumber: Bool {
    return hasExtensionValue(ext: Extensions_IdNumber)
  }
  /// Clears the value of extension `Extensions_IdNumber`.
  /// Subsequent reads from it will return its default value.
  mutating func clearIDNumber() {
    clearExtensionValue(ext: Extensions_IdNumber)
  }

  var theIDNumber: Int32 {
    get {return getExtensionValue(ext: Extensions_TheIdNumber) ?? 0}
    set {setExtensionValue(ext: Extensions_TheIdNumber, value: newValue)}
  }
  /// Returns true if extension `Extensions_TheIdNumber`
  /// has been explicitly set.
  var hasTheIDNumber: Bool {
    return hasExtensionValue(ext: Extensions_TheIdNumber)
  }
  /// Clears the value of extension `Extensions_TheIdNumber`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTheIDNumber() {
    clearExtensionValue(ext: Extensions_TheIdNumber)
  }

  var requestID: Int32 {
    get {return getExtensionValue(ext: Extensions_RequestId) ?? 0}
    set {setExtensionValue(ext: Extensions_RequestId, value: newValue)}
  }
  /// Returns true if extension `Extensions_RequestId`
  /// has been explicitly set.
  var hasRequestID: Bool {
    return hasExtensionValue(ext: Extensions_RequestId)
  }
  /// Clears the value of extension `Extensions_RequestId`.
  /// Subsequent reads from it will return its default value.
  mutating func clearRequestID() {
    clearExtensionValue(ext: Extensions_RequestId)
  }

}

// MARK: - File's ExtensionMap: UnittestSwiftNamingNoPrefix_Extensions

/// A `SwiftProtobuf.SimpleExtensionMap` that includes all of the extensions defined by
/// this .proto file. It can be used any place an `SwiftProtobuf.ExtensionMap` is needed
/// in parsing, or it can be combined with other `SwiftProtobuf.SimpleExtensionMap`s to create
/// a larger `SwiftProtobuf.SimpleExtensionMap`.
let UnittestSwiftNamingNoPrefix_Extensions: SwiftProtobuf.SimpleExtensionMap = [
  Extensions_http,
  Extensions_http_request,
  Extensions_the_http_request,
  Extensions_the_http,
  Extensions_https,
  Extensions_https_request,
  Extensions_the_https_request,
  Extensions_the_https,
  Extensions_url,
  Extensions_url_value,
  Extensions_the_url_value,
  Extensions_the_url,
  Extensions_a_b_c,
  Extensions_id,
  Extensions_id_number,
  Extensions_the_id_number,
  Extensions_request_id,
  Extensions_HTTP,
  Extensions_HTTP_request,
  Extensions_the_HTTP_request,
  Extensions_the_HTTP,
  Extensions_HTTPS,
  Extensions_HTTPS_request,
  Extensions_the_HTTPS_request,
  Extensions_the_HTTPS,
  Extensions_URL,
  Extensions_URL_value,
  Extensions_the_URL_value,
  Extensions_the_URL,
  Extensions_ID,
  Extensions_ID_number,
  Extensions_the_ID_number,
  Extensions_request_ID,
  Extensions_Http,
  Extensions_HttpRequest,
  Extensions_TheHttpRequest,
  Extensions_TheHttp,
  Extensions_Https,
  Extensions_HttpsRequest,
  Extensions_TheHttpsRequest,
  Extensions_TheHttps,
  Extensions_Url,
  Extensions_UrlValue,
  Extensions_TheUrlValue,
  Extensions_TheUrl,
  Extensions_Id,
  Extensions_IdNumber,
  Extensions_TheIdNumber,
  Extensions_RequestId
]

// Extension Objects - The only reason these might be needed is when manually
// constructing a `SimpleExtensionMap`, otherwise, use the above _Extension Properties_
// accessors for the extension fields on the messages directly.

let Extensions_http = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 101,
  fieldName: "http"
)

let Extensions_http_request = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 102,
  fieldName: "http_request"
)

let Extensions_the_http_request = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 103,
  fieldName: "the_http_request"
)

let Extensions_the_http = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 104,
  fieldName: "the_http"
)

let Extensions_https = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 111,
  fieldName: "https"
)

let Extensions_https_request = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 112,
  fieldName: "https_request"
)

let Extensions_the_https_request = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 113,
  fieldName: "the_https_request"
)

let Extensions_the_https = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 114,
  fieldName: "the_https"
)

let Extensions_url = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 121,
  fieldName: "url"
)

let Extensions_url_value = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 122,
  fieldName: "url_value"
)

let Extensions_the_url_value = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 123,
  fieldName: "the_url_value"
)

let Extensions_the_url = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 124,
  fieldName: "the_url"
)

let Extensions_a_b_c = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 131,
  fieldName: "a_b_c"
)

let Extensions_id = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 141,
  fieldName: "id"
)

let Extensions_id_number = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 142,
  fieldName: "id_number"
)

let Extensions_the_id_number = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 143,
  fieldName: "the_id_number"
)

let Extensions_request_id = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsLowers>(
  _protobuf_fieldNumber: 144,
  fieldName: "request_id"
)

let Extensions_HTTP = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 101,
  fieldName: "HTTP"
)

let Extensions_HTTP_request = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 102,
  fieldName: "HTTP_request"
)

let Extensions_the_HTTP_request = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 103,
  fieldName: "the_HTTP_request"
)

let Extensions_the_HTTP = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 104,
  fieldName: "the_HTTP"
)

let Extensions_HTTPS = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 111,
  fieldName: "HTTPS"
)

let Extensions_HTTPS_request = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 112,
  fieldName: "HTTPS_request"
)

let Extensions_the_HTTPS_request = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 113,
  fieldName: "the_HTTPS_request"
)

let Extensions_the_HTTPS = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 114,
  fieldName: "the_HTTPS"
)

let Extensions_URL = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 121,
  fieldName: "URL"
)

let Extensions_URL_value = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 122,
  fieldName: "URL_value"
)

let Extensions_the_URL_value = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 123,
  fieldName: "the_URL_value"
)

let Extensions_the_URL = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 124,
  fieldName: "the_URL"
)

let Extensions_ID = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 141,
  fieldName: "ID"
)

let Extensions_ID_number = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 142,
  fieldName: "ID_number"
)

let Extensions_the_ID_number = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 143,
  fieldName: "the_ID_number"
)

let Extensions_request_ID = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsUppers>(
  _protobuf_fieldNumber: 144,
  fieldName: "request_ID"
)

let Extensions_Http = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 101,
  fieldName: "Http"
)

let Extensions_HttpRequest = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 102,
  fieldName: "HttpRequest"
)

let Extensions_TheHttpRequest = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 103,
  fieldName: "TheHttpRequest"
)

let Extensions_TheHttp = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 104,
  fieldName: "TheHttp"
)

let Extensions_Https = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 111,
  fieldName: "Https"
)

let Extensions_HttpsRequest = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 112,
  fieldName: "HttpsRequest"
)

let Extensions_TheHttpsRequest = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 113,
  fieldName: "TheHttpsRequest"
)

let Extensions_TheHttps = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 114,
  fieldName: "TheHttps"
)

let Extensions_Url = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 121,
  fieldName: "Url"
)

let Extensions_UrlValue = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 122,
  fieldName: "UrlValue"
)

let Extensions_TheUrlValue = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 123,
  fieldName: "TheUrlValue"
)

let Extensions_TheUrl = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 124,
  fieldName: "TheUrl"
)

let Extensions_Id = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 141,
  fieldName: "Id"
)

let Extensions_IdNumber = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 142,
  fieldName: "IdNumber"
)

let Extensions_TheIdNumber = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 143,
  fieldName: "TheIdNumber"
)

let Extensions_RequestId = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, SwiftUnittest_Names_ExtensionNamingInitialsWordCase>(
  _protobuf_fieldNumber: 144,
  fieldName: "RequestId"
)
