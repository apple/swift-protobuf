name: Run Conformance Tests

# This workflow is a supperset of regular_conformance.yml. It runs on ever PR &
# commit to run the conformance checks.
#
# The swift versions should stay in sync with build.yml, but can be a subset
# because building protobuf on older images isn't always easier.
#
# This workflow shares the caching logic with conformance.yml. It should serve
# to update a subset of the caches for when things do land on trunk. If that is
# deemed not worth it in the future, this can be simplify.

# NOTE: If making changes to most of the steps, please also look to update
# regular_conformance.yml also.

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        swift: ["5.7.2", "5.6.3", "5.5.3", "5.4.3", "5.3.3", "5.2.5"]
        # protobuf_git can reference a commit, tag, or branch
        # commit: "commits/6935eae45c99926a000ecbef0be20dfd3d159e71"
        # tag: "ref/tags/v3.11.4"
        # branch: "ref/heads/main"
        protobuf_git: ["ref/heads/main"]
        include:
          - swift: 5.7.2
            ubuntu: focal
          - swift: 5.6.3
            ubuntu: focal
          - swift: 5.5.3
            ubuntu: focal
          - swift: 5.4.3
            ubuntu: focal
          - swift: 5.3.3
            ubuntu: focal
          - swift: 5.2.5
            ubuntu: focal
    container:
      image: swift:${{ matrix.swift }}-${{ matrix.ubuntu }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: main
    - name: Update and install dependencies
      # dependencies from https://github.com/protocolbuffers/protobuf/blob/main/src/README.md
      # this step is run before get-sha because we need curl and jq for get-sha
      run: apt-get update && apt-get install -y curl make g++ cmake jq
    - name: Get Protobuf Commit SHA
      id: get-sha
      run: |
        set -eu
        url="https://api.github.com/repos/protocolbuffers/protobuf/git/${{ matrix.protobuf_git }}"
        case ${{ matrix.protobuf_git }} in
        ref/*)
          echo "sha=$( curl -s -u "u:${{ github.token }}" "${url}" | jq -r .object.sha )" >> $GITHUB_OUTPUT
          ;;
        commits/*)
          echo "sha=$( curl -s -u "u:${{ github.token }}" "${url}" | jq -r .sha )" >> $GITHUB_OUTPUT
          ;;
        esac
    - name: Cache protobuf
      id: cache-protobuf
      uses: actions/cache@v3
      with:
        path: protobuf
        # NOTE: for refs that can float like 'main' the cache might be out of date!
        key: ${{ runner.os }}-${{ matrix.swift}}-protobuf-${{ steps.get-sha.outputs.sha }}
    - name: Checkout protobuf repo
      if: steps.cache-protobuf.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: protocolbuffers/protobuf
        ref: ${{ steps.get-sha.outputs.sha }}
        submodules: true
        path: protobuf
    - name: Build protobuf
      if: steps.cache-protobuf.outputs.cache-hit != 'true'
      working-directory: protobuf
      run: |
        mkdir cmake_build
        cd cmake_build
        cmake \
          -DCMAKE_BUILD_TYPE=Release \
          -Dprotobuf_BUILD_TESTS=OFF \
          -Dprotobuf_INSTALL=OFF \
          -Dprotobuf_BUILD_CONFORMANCE=ON \
          -S ..
        NUM_CPUS=$(getconf _NPROCESSORS_ONLN)
        make -j "${NUM_CPUS}" protoc conformance_test_runner
    - name: Test plugin
      working-directory: main
      run: make test-plugin PROTOC=../protobuf/cmake_build/protoc
    - name: Test conformance
      working-directory: main
      run: make test-conformance CONFORMANCE_TEST_RUNNER=../protobuf/cmake_build/conformance_test_runner
