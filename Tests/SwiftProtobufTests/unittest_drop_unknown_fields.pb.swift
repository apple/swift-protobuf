/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: google/protobuf/unittest_drop_unknown_fields.proto
 *
 */

//  Protocol Buffers - Google's data interchange format
//  Copyright 2008 Google Inc.  All rights reserved.
//  https://developers.google.com/protocol-buffers/
// 
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//      * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//      * Redistributions in binary form must reproduce the above
//  copyright notice, this list of conditions and the following disclaimer
//  in the documentation and/or other materials provided with the
//  distribution.
//      * Neither the name of Google Inc. nor the names of its
//  contributors may be used to endorse or promote products derived from
//  this software without specific prior written permission.
// 
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
//  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
//  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
//  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
//  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
//  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
//  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import Foundation
import SwiftProtobuf


public struct UnittestDropUnknownFields_Foo: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "UnittestDropUnknownFields_Foo"}
  public var protoMessageName: String {return "Foo"}
  public var protoPackageName: String {return "unittest_drop_unknown_fields"}
  public var jsonFieldNames: [String: Int] {return [
    "int32Value": 1,
    "enumValue": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "int32_value": 1,
    "enum_value": 2,
  ]}

  public enum NestedEnum: ProtobufEnum {
    public typealias RawValue = Int
    case foo // = 0
    case bar // = 1
    case baz // = 2
    case UNRECOGNIZED(Int)

    public init() {
      self = .foo
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .foo
      case 1: self = .bar
      case 2: self = .baz
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public init?(name: String) {
      switch name {
      case "foo": self = .foo
      case "bar": self = .bar
      case "baz": self = .baz
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "FOO": self = .foo
      case "BAR": self = .bar
      case "BAZ": self = .baz
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "FOO": self = .foo
      case "BAR": self = .bar
      case "BAZ": self = .baz
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .foo: return 0
        case .bar: return 1
        case .baz: return 2
        case .UNRECOGNIZED(let i): return i
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .foo: return "\"FOO\""
        case .bar: return "\"BAR\""
        case .baz: return "\"BAZ\""
        case .UNRECOGNIZED(let i): return String(i)
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .foo: return ".foo"
        case .bar: return ".bar"
        case .baz: return ".baz"
        case .UNRECOGNIZED(let v): return ".UNRECOGNIZED(\(v))"
        }
      }
    }

  }

  public var int32Value: Int32 = 0

  public var enumValue: UnittestDropUnknownFields_Foo.NestedEnum = UnittestDropUnknownFields_Foo.NestedEnum.foo

  public init() {}

  public init(int32Value: Int32? = nil,
    enumValue: UnittestDropUnknownFields_Foo.NestedEnum? = nil)
  {
    if let v = int32Value {
      self.int32Value = v
    }
    if let v = enumValue {
      self.enumValue = v
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeSingularField(fieldType: ProtobufInt32.self, value: &int32Value)
    case 2: handled = try setter.decodeSingularField(fieldType: UnittestDropUnknownFields_Foo.NestedEnum.self, value: &enumValue)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if int32Value != 0 {
      try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: int32Value, protoFieldNumber: 1, protoFieldName: "int32_value", jsonFieldName: "int32Value", swiftFieldName: "int32Value")
    }
    if enumValue != UnittestDropUnknownFields_Foo.NestedEnum.foo {
      try visitor.visitSingularField(fieldType: UnittestDropUnknownFields_Foo.NestedEnum.self, value: enumValue, protoFieldNumber: 2, protoFieldName: "enum_value", jsonFieldName: "enumValue", swiftFieldName: "enumValue")
    }
  }

  public func _protoc_generated_isEqualTo(other: UnittestDropUnknownFields_Foo) -> Bool {
    if int32Value != other.int32Value {return false}
    if enumValue != other.enumValue {return false}
    return true
  }
}

public struct UnittestDropUnknownFields_FooWithExtraFields: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "UnittestDropUnknownFields_FooWithExtraFields"}
  public var protoMessageName: String {return "FooWithExtraFields"}
  public var protoPackageName: String {return "unittest_drop_unknown_fields"}
  public var jsonFieldNames: [String: Int] {return [
    "int32Value": 1,
    "enumValue": 2,
    "extraInt32Value": 3,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "int32_value": 1,
    "enum_value": 2,
    "extra_int32_value": 3,
  ]}

  public enum NestedEnum: ProtobufEnum {
    public typealias RawValue = Int
    case foo // = 0
    case bar // = 1
    case baz // = 2
    case qux // = 3
    case UNRECOGNIZED(Int)

    public init() {
      self = .foo
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .foo
      case 1: self = .bar
      case 2: self = .baz
      case 3: self = .qux
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public init?(name: String) {
      switch name {
      case "foo": self = .foo
      case "bar": self = .bar
      case "baz": self = .baz
      case "qux": self = .qux
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "FOO": self = .foo
      case "BAR": self = .bar
      case "BAZ": self = .baz
      case "QUX": self = .qux
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "FOO": self = .foo
      case "BAR": self = .bar
      case "BAZ": self = .baz
      case "QUX": self = .qux
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .foo: return 0
        case .bar: return 1
        case .baz: return 2
        case .qux: return 3
        case .UNRECOGNIZED(let i): return i
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .foo: return "\"FOO\""
        case .bar: return "\"BAR\""
        case .baz: return "\"BAZ\""
        case .qux: return "\"QUX\""
        case .UNRECOGNIZED(let i): return String(i)
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .foo: return ".foo"
        case .bar: return ".bar"
        case .baz: return ".baz"
        case .qux: return ".qux"
        case .UNRECOGNIZED(let v): return ".UNRECOGNIZED(\(v))"
        }
      }
    }

  }

  public var int32Value: Int32 = 0

  public var enumValue: UnittestDropUnknownFields_FooWithExtraFields.NestedEnum = UnittestDropUnknownFields_FooWithExtraFields.NestedEnum.foo

  public var extraInt32Value: Int32 = 0

  public init() {}

  public init(int32Value: Int32? = nil,
    enumValue: UnittestDropUnknownFields_FooWithExtraFields.NestedEnum? = nil,
    extraInt32Value: Int32? = nil)
  {
    if let v = int32Value {
      self.int32Value = v
    }
    if let v = enumValue {
      self.enumValue = v
    }
    if let v = extraInt32Value {
      self.extraInt32Value = v
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeSingularField(fieldType: ProtobufInt32.self, value: &int32Value)
    case 2: handled = try setter.decodeSingularField(fieldType: UnittestDropUnknownFields_FooWithExtraFields.NestedEnum.self, value: &enumValue)
    case 3: handled = try setter.decodeSingularField(fieldType: ProtobufInt32.self, value: &extraInt32Value)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if int32Value != 0 {
      try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: int32Value, protoFieldNumber: 1, protoFieldName: "int32_value", jsonFieldName: "int32Value", swiftFieldName: "int32Value")
    }
    if enumValue != UnittestDropUnknownFields_FooWithExtraFields.NestedEnum.foo {
      try visitor.visitSingularField(fieldType: UnittestDropUnknownFields_FooWithExtraFields.NestedEnum.self, value: enumValue, protoFieldNumber: 2, protoFieldName: "enum_value", jsonFieldName: "enumValue", swiftFieldName: "enumValue")
    }
    if extraInt32Value != 0 {
      try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: extraInt32Value, protoFieldNumber: 3, protoFieldName: "extra_int32_value", jsonFieldName: "extraInt32Value", swiftFieldName: "extraInt32Value")
    }
  }

  public func _protoc_generated_isEqualTo(other: UnittestDropUnknownFields_FooWithExtraFields) -> Bool {
    if int32Value != other.int32Value {return false}
    if enumValue != other.enumValue {return false}
    if extraInt32Value != other.extraInt32Value {return false}
    return true
  }
}
