// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/protobuf/unittest_well_known_types.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _3: SwiftProtobuf.ProtobufAPIVersion_3 {}
  typealias Version = _3
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension ProtobufUnittest_TestWellKnownTypes: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "any_field"),
    2: .standard(proto: "api_field"),
    3: .standard(proto: "duration_field"),
    4: .standard(proto: "empty_field"),
    5: .standard(proto: "field_mask_field"),
    6: .standard(proto: "source_context_field"),
    7: .standard(proto: "struct_field"),
    8: .standard(proto: "timestamp_field"),
    9: .standard(proto: "type_field"),
    10: .standard(proto: "double_field"),
    11: .standard(proto: "float_field"),
    12: .standard(proto: "int64_field"),
    13: .standard(proto: "uint64_field"),
    14: .standard(proto: "int32_field"),
    15: .standard(proto: "uint32_field"),
    16: .standard(proto: "bool_field"),
    17: .standard(proto: "string_field"),
    18: .standard(proto: "bytes_field"),
    19: .standard(proto: "value_field"),
  ]
}

extension ProtobufUnittest_RepeatedWellKnownTypes: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "any_field"),
    2: .standard(proto: "api_field"),
    3: .standard(proto: "duration_field"),
    4: .standard(proto: "empty_field"),
    5: .standard(proto: "field_mask_field"),
    6: .standard(proto: "source_context_field"),
    7: .standard(proto: "struct_field"),
    8: .standard(proto: "timestamp_field"),
    9: .standard(proto: "type_field"),
    10: .standard(proto: "double_field"),
    11: .standard(proto: "float_field"),
    12: .standard(proto: "int64_field"),
    13: .standard(proto: "uint64_field"),
    14: .standard(proto: "int32_field"),
    15: .standard(proto: "uint32_field"),
    16: .standard(proto: "bool_field"),
    17: .standard(proto: "string_field"),
    18: .standard(proto: "bytes_field"),
  ]
}

extension ProtobufUnittest_OneofWellKnownTypes: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "any_field"),
    2: .standard(proto: "api_field"),
    3: .standard(proto: "duration_field"),
    4: .standard(proto: "empty_field"),
    5: .standard(proto: "field_mask_field"),
    6: .standard(proto: "source_context_field"),
    7: .standard(proto: "struct_field"),
    8: .standard(proto: "timestamp_field"),
    9: .standard(proto: "type_field"),
    10: .standard(proto: "double_field"),
    11: .standard(proto: "float_field"),
    12: .standard(proto: "int64_field"),
    13: .standard(proto: "uint64_field"),
    14: .standard(proto: "int32_field"),
    15: .standard(proto: "uint32_field"),
    16: .standard(proto: "bool_field"),
    17: .standard(proto: "string_field"),
    18: .standard(proto: "bytes_field"),
  ]
}

extension ProtobufUnittest_MapWellKnownTypes: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "any_field"),
    2: .standard(proto: "api_field"),
    3: .standard(proto: "duration_field"),
    4: .standard(proto: "empty_field"),
    5: .standard(proto: "field_mask_field"),
    6: .standard(proto: "source_context_field"),
    7: .standard(proto: "struct_field"),
    8: .standard(proto: "timestamp_field"),
    9: .standard(proto: "type_field"),
    10: .standard(proto: "double_field"),
    11: .standard(proto: "float_field"),
    12: .standard(proto: "int64_field"),
    13: .standard(proto: "uint64_field"),
    14: .standard(proto: "int32_field"),
    15: .standard(proto: "uint32_field"),
    16: .standard(proto: "bool_field"),
    17: .standard(proto: "string_field"),
    18: .standard(proto: "bytes_field"),
  ]
}
