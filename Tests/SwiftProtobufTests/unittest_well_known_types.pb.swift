/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: google/protobuf/unittest_well_known_types.proto
 *
 */

import Foundation
import SwiftProtobuf


///   Test that we can include all well-known types.
///   Each wrapper type is included separately, as languages
///   map handle different wrappers in different ways.
public struct ProtobufUnittest_TestWellKnownTypes: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "ProtobufUnittest_TestWellKnownTypes"}
  public var protoMessageName: String {return "TestWellKnownTypes"}
  public var protoPackageName: String {return "protobuf_unittest"}
  public var jsonFieldNames: [String: Int] {return [
    "anyField": 1,
    "apiField": 2,
    "durationField": 3,
    "emptyField": 4,
    "fieldMaskField": 5,
    "sourceContextField": 6,
    "structField": 7,
    "timestampField": 8,
    "typeField": 9,
    "doubleField": 10,
    "floatField": 11,
    "int64Field": 12,
    "uint64Field": 13,
    "int32Field": 14,
    "uint32Field": 15,
    "boolField": 16,
    "stringField": 17,
    "bytesField": 18,
    "valueField": 19,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "any_field": 1,
    "api_field": 2,
    "duration_field": 3,
    "empty_field": 4,
    "field_mask_field": 5,
    "source_context_field": 6,
    "struct_field": 7,
    "timestamp_field": 8,
    "type_field": 9,
    "double_field": 10,
    "float_field": 11,
    "int64_field": 12,
    "uint64_field": 13,
    "int32_field": 14,
    "uint32_field": 15,
    "bool_field": 16,
    "string_field": 17,
    "bytes_field": 18,
    "value_field": 19,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = ProtobufUnittest_TestWellKnownTypes
    var _anyField: Google_Protobuf_Any? = nil
    var _apiField: Google_Protobuf_Api? = nil
    var _durationField: Google_Protobuf_Duration? = nil
    var _emptyField: Google_Protobuf_Empty? = nil
    var _fieldMaskField: Google_Protobuf_FieldMask? = nil
    var _sourceContextField: Google_Protobuf_SourceContext? = nil
    var _structField: Google_Protobuf_Struct? = nil
    var _timestampField: Google_Protobuf_Timestamp? = nil
    var _typeField: Google_Protobuf_Type? = nil
    var _doubleField: Google_Protobuf_DoubleValue? = nil
    var _floatField: Google_Protobuf_FloatValue? = nil
    var _int64Field: Google_Protobuf_Int64Value? = nil
    var _uint64Field: Google_Protobuf_UInt64Value? = nil
    var _int32Field: Google_Protobuf_Int32Value? = nil
    var _uint32Field: Google_Protobuf_UInt32Value? = nil
    var _boolField: Google_Protobuf_BoolValue? = nil
    var _stringField: Google_Protobuf_StringValue? = nil
    var _bytesField: Google_Protobuf_BytesValue? = nil
    var _valueField: Google_Protobuf_Value? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Any.self, value: &_anyField)
      case 2: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Api.self, value: &_apiField)
      case 3: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Duration.self, value: &_durationField)
      case 4: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Empty.self, value: &_emptyField)
      case 5: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_FieldMask.self, value: &_fieldMaskField)
      case 6: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_SourceContext.self, value: &_sourceContextField)
      case 7: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Struct.self, value: &_structField)
      case 8: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Timestamp.self, value: &_timestampField)
      case 9: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Type.self, value: &_typeField)
      case 10: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_DoubleValue.self, value: &_doubleField)
      case 11: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_FloatValue.self, value: &_floatField)
      case 12: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Int64Value.self, value: &_int64Field)
      case 13: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_UInt64Value.self, value: &_uint64Field)
      case 14: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Int32Value.self, value: &_int32Field)
      case 15: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_UInt32Value.self, value: &_uint32Field)
      case 16: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_BoolValue.self, value: &_boolField)
      case 17: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_StringValue.self, value: &_stringField)
      case 18: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_BytesValue.self, value: &_bytesField)
      case 19: handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Value.self, value: &_valueField)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if let v = _anyField {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 1, protoFieldName: "any_field", jsonFieldName: "anyField", swiftFieldName: "anyField")
      }
      if let v = _apiField {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "api_field", jsonFieldName: "apiField", swiftFieldName: "apiField")
      }
      if let v = _durationField {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "duration_field", jsonFieldName: "durationField", swiftFieldName: "durationField")
      }
      if let v = _emptyField {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 4, protoFieldName: "empty_field", jsonFieldName: "emptyField", swiftFieldName: "emptyField")
      }
      if let v = _fieldMaskField {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 5, protoFieldName: "field_mask_field", jsonFieldName: "fieldMaskField", swiftFieldName: "fieldMaskField")
      }
      if let v = _sourceContextField {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 6, protoFieldName: "source_context_field", jsonFieldName: "sourceContextField", swiftFieldName: "sourceContextField")
      }
      if let v = _structField {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 7, protoFieldName: "struct_field", jsonFieldName: "structField", swiftFieldName: "structField")
      }
      if let v = _timestampField {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 8, protoFieldName: "timestamp_field", jsonFieldName: "timestampField", swiftFieldName: "timestampField")
      }
      if let v = _typeField {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 9, protoFieldName: "type_field", jsonFieldName: "typeField", swiftFieldName: "typeField")
      }
      if let v = _doubleField {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 10, protoFieldName: "double_field", jsonFieldName: "doubleField", swiftFieldName: "doubleField")
      }
      if let v = _floatField {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 11, protoFieldName: "float_field", jsonFieldName: "floatField", swiftFieldName: "floatField")
      }
      if let v = _int64Field {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 12, protoFieldName: "int64_field", jsonFieldName: "int64Field", swiftFieldName: "int64Field")
      }
      if let v = _uint64Field {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 13, protoFieldName: "uint64_field", jsonFieldName: "uint64Field", swiftFieldName: "uint64Field")
      }
      if let v = _int32Field {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 14, protoFieldName: "int32_field", jsonFieldName: "int32Field", swiftFieldName: "int32Field")
      }
      if let v = _uint32Field {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 15, protoFieldName: "uint32_field", jsonFieldName: "uint32Field", swiftFieldName: "uint32Field")
      }
      if let v = _boolField {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 16, protoFieldName: "bool_field", jsonFieldName: "boolField", swiftFieldName: "boolField")
      }
      if let v = _stringField {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 17, protoFieldName: "string_field", jsonFieldName: "stringField", swiftFieldName: "stringField")
      }
      if let v = _bytesField {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 18, protoFieldName: "bytes_field", jsonFieldName: "bytesField", swiftFieldName: "bytesField")
      }
      if let v = _valueField {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 19, protoFieldName: "value_field", jsonFieldName: "valueField", swiftFieldName: "valueField")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _anyField != other._anyField {return false}
      if _apiField != other._apiField {return false}
      if _durationField != other._durationField {return false}
      if _emptyField != other._emptyField {return false}
      if _fieldMaskField != other._fieldMaskField {return false}
      if _sourceContextField != other._sourceContextField {return false}
      if _structField != other._structField {return false}
      if _timestampField != other._timestampField {return false}
      if _typeField != other._typeField {return false}
      if _doubleField != other._doubleField {return false}
      if _floatField != other._floatField {return false}
      if _int64Field != other._int64Field {return false}
      if _uint64Field != other._uint64Field {return false}
      if _int32Field != other._int32Field {return false}
      if _uint32Field != other._uint32Field {return false}
      if _boolField != other._boolField {return false}
      if _stringField != other._stringField {return false}
      if _bytesField != other._bytesField {return false}
      if _valueField != other._valueField {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._anyField = _anyField
      clone._apiField = _apiField
      clone._durationField = _durationField
      clone._emptyField = _emptyField
      clone._fieldMaskField = _fieldMaskField
      clone._sourceContextField = _sourceContextField
      clone._structField = _structField
      clone._timestampField = _timestampField
      clone._typeField = _typeField
      clone._doubleField = _doubleField
      clone._floatField = _floatField
      clone._int64Field = _int64Field
      clone._uint64Field = _uint64Field
      clone._int32Field = _int32Field
      clone._uint32Field = _uint32Field
      clone._boolField = _boolField
      clone._stringField = _stringField
      clone._bytesField = _bytesField
      clone._valueField = _valueField
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var anyField: Google_Protobuf_Any {
    get {return _storage._anyField ?? Google_Protobuf_Any()}
    set {_uniqueStorage()._anyField = newValue}
  }

  public var apiField: Google_Protobuf_Api {
    get {return _storage._apiField ?? Google_Protobuf_Api()}
    set {_uniqueStorage()._apiField = newValue}
  }

  public var durationField: Google_Protobuf_Duration {
    get {return _storage._durationField ?? Google_Protobuf_Duration()}
    set {_uniqueStorage()._durationField = newValue}
  }

  public var emptyField: Google_Protobuf_Empty {
    get {return _storage._emptyField ?? Google_Protobuf_Empty()}
    set {_uniqueStorage()._emptyField = newValue}
  }

  public var fieldMaskField: Google_Protobuf_FieldMask {
    get {return _storage._fieldMaskField ?? Google_Protobuf_FieldMask()}
    set {_uniqueStorage()._fieldMaskField = newValue}
  }

  public var sourceContextField: Google_Protobuf_SourceContext {
    get {return _storage._sourceContextField ?? Google_Protobuf_SourceContext()}
    set {_uniqueStorage()._sourceContextField = newValue}
  }

  public var structField: Google_Protobuf_Struct {
    get {return _storage._structField ?? Google_Protobuf_Struct()}
    set {_uniqueStorage()._structField = newValue}
  }

  public var timestampField: Google_Protobuf_Timestamp {
    get {return _storage._timestampField ?? Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._timestampField = newValue}
  }

  public var typeField: Google_Protobuf_Type {
    get {return _storage._typeField ?? Google_Protobuf_Type()}
    set {_uniqueStorage()._typeField = newValue}
  }

  public var doubleField: Google_Protobuf_DoubleValue {
    get {return _storage._doubleField ?? Google_Protobuf_DoubleValue()}
    set {_uniqueStorage()._doubleField = newValue}
  }

  public var floatField: Google_Protobuf_FloatValue {
    get {return _storage._floatField ?? Google_Protobuf_FloatValue()}
    set {_uniqueStorage()._floatField = newValue}
  }

  public var int64Field: Google_Protobuf_Int64Value {
    get {return _storage._int64Field ?? Google_Protobuf_Int64Value()}
    set {_uniqueStorage()._int64Field = newValue}
  }

  public var uint64Field: Google_Protobuf_UInt64Value {
    get {return _storage._uint64Field ?? Google_Protobuf_UInt64Value()}
    set {_uniqueStorage()._uint64Field = newValue}
  }

  public var int32Field: Google_Protobuf_Int32Value {
    get {return _storage._int32Field ?? Google_Protobuf_Int32Value()}
    set {_uniqueStorage()._int32Field = newValue}
  }

  public var uint32Field: Google_Protobuf_UInt32Value {
    get {return _storage._uint32Field ?? Google_Protobuf_UInt32Value()}
    set {_uniqueStorage()._uint32Field = newValue}
  }

  public var boolField: Google_Protobuf_BoolValue {
    get {return _storage._boolField ?? Google_Protobuf_BoolValue()}
    set {_uniqueStorage()._boolField = newValue}
  }

  public var stringField: Google_Protobuf_StringValue {
    get {return _storage._stringField ?? Google_Protobuf_StringValue()}
    set {_uniqueStorage()._stringField = newValue}
  }

  public var bytesField: Google_Protobuf_BytesValue {
    get {return _storage._bytesField ?? Google_Protobuf_BytesValue()}
    set {_uniqueStorage()._bytesField = newValue}
  }

  ///   Part of struct, but useful to be able to test separately
  public var valueField: Google_Protobuf_Value {
    get {return _storage._valueField ?? Google_Protobuf_Value()}
    set {_uniqueStorage()._valueField = newValue}
  }

  public init() {}

  public init(anyField: Google_Protobuf_Any? = nil,
    apiField: Google_Protobuf_Api? = nil,
    durationField: Google_Protobuf_Duration? = nil,
    emptyField: Google_Protobuf_Empty? = nil,
    fieldMaskField: Google_Protobuf_FieldMask? = nil,
    sourceContextField: Google_Protobuf_SourceContext? = nil,
    structField: Google_Protobuf_Struct? = nil,
    timestampField: Google_Protobuf_Timestamp? = nil,
    typeField: Google_Protobuf_Type? = nil,
    doubleField: Google_Protobuf_DoubleValue? = nil,
    floatField: Google_Protobuf_FloatValue? = nil,
    int64Field: Google_Protobuf_Int64Value? = nil,
    uint64Field: Google_Protobuf_UInt64Value? = nil,
    int32Field: Google_Protobuf_Int32Value? = nil,
    uint32Field: Google_Protobuf_UInt32Value? = nil,
    boolField: Google_Protobuf_BoolValue? = nil,
    stringField: Google_Protobuf_StringValue? = nil,
    bytesField: Google_Protobuf_BytesValue? = nil,
    valueField: Google_Protobuf_Value? = nil)
  {
    let storage = _uniqueStorage()
    storage._anyField = anyField
    storage._apiField = apiField
    storage._durationField = durationField
    storage._emptyField = emptyField
    storage._fieldMaskField = fieldMaskField
    storage._sourceContextField = sourceContextField
    storage._structField = structField
    storage._timestampField = timestampField
    storage._typeField = typeField
    storage._doubleField = doubleField
    storage._floatField = floatField
    storage._int64Field = int64Field
    storage._uint64Field = uint64Field
    storage._int32Field = int32Field
    storage._uint32Field = uint32Field
    storage._boolField = boolField
    storage._stringField = stringField
    storage._bytesField = bytesField
    storage._valueField = valueField
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestWellKnownTypes) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   A repeated field for each well-known type.
public struct ProtobufUnittest_RepeatedWellKnownTypes: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "ProtobufUnittest_RepeatedWellKnownTypes"}
  public var protoMessageName: String {return "RepeatedWellKnownTypes"}
  public var protoPackageName: String {return "protobuf_unittest"}
  public var jsonFieldNames: [String: Int] {return [
    "anyField": 1,
    "apiField": 2,
    "durationField": 3,
    "emptyField": 4,
    "fieldMaskField": 5,
    "sourceContextField": 6,
    "structField": 7,
    "timestampField": 8,
    "typeField": 9,
    "doubleField": 10,
    "floatField": 11,
    "int64Field": 12,
    "uint64Field": 13,
    "int32Field": 14,
    "uint32Field": 15,
    "boolField": 16,
    "stringField": 17,
    "bytesField": 18,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "any_field": 1,
    "api_field": 2,
    "duration_field": 3,
    "empty_field": 4,
    "field_mask_field": 5,
    "source_context_field": 6,
    "struct_field": 7,
    "timestamp_field": 8,
    "type_field": 9,
    "double_field": 10,
    "float_field": 11,
    "int64_field": 12,
    "uint64_field": 13,
    "int32_field": 14,
    "uint32_field": 15,
    "bool_field": 16,
    "string_field": 17,
    "bytes_field": 18,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = ProtobufUnittest_RepeatedWellKnownTypes
    var _anyField: [Google_Protobuf_Any] = []
    var _apiField: [Google_Protobuf_Api] = []
    var _durationField: [Google_Protobuf_Duration] = []
    var _emptyField: [Google_Protobuf_Empty] = []
    var _fieldMaskField: [Google_Protobuf_FieldMask] = []
    var _sourceContextField: [Google_Protobuf_SourceContext] = []
    var _structField: [Google_Protobuf_Struct] = []
    var _timestampField: [Google_Protobuf_Timestamp] = []
    var _typeField: [Google_Protobuf_Type] = []
    var _doubleField: [Google_Protobuf_DoubleValue] = []
    var _floatField: [Google_Protobuf_FloatValue] = []
    var _int64Field: [Google_Protobuf_Int64Value] = []
    var _uint64Field: [Google_Protobuf_UInt64Value] = []
    var _int32Field: [Google_Protobuf_Int32Value] = []
    var _uint32Field: [Google_Protobuf_UInt32Value] = []
    var _boolField: [Google_Protobuf_BoolValue] = []
    var _stringField: [Google_Protobuf_StringValue] = []
    var _bytesField: [Google_Protobuf_BytesValue] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_Any.self, value: &_anyField)
      case 2: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_Api.self, value: &_apiField)
      case 3: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_Duration.self, value: &_durationField)
      case 4: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_Empty.self, value: &_emptyField)
      case 5: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_FieldMask.self, value: &_fieldMaskField)
      case 6: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_SourceContext.self, value: &_sourceContextField)
      case 7: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_Struct.self, value: &_structField)
      case 8: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_Timestamp.self, value: &_timestampField)
      case 9: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_Type.self, value: &_typeField)
      case 10: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_DoubleValue.self, value: &_doubleField)
      case 11: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_FloatValue.self, value: &_floatField)
      case 12: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_Int64Value.self, value: &_int64Field)
      case 13: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_UInt64Value.self, value: &_uint64Field)
      case 14: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_Int32Value.self, value: &_int32Field)
      case 15: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_UInt32Value.self, value: &_uint32Field)
      case 16: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_BoolValue.self, value: &_boolField)
      case 17: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_StringValue.self, value: &_stringField)
      case 18: handled = try setter.decodeRepeatedMessageField(fieldType: Google_Protobuf_BytesValue.self, value: &_bytesField)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if !_anyField.isEmpty {
        try visitor.visitRepeatedMessageField(value: _anyField, protoFieldNumber: 1, protoFieldName: "any_field", jsonFieldName: "anyField", swiftFieldName: "anyField")
      }
      if !_apiField.isEmpty {
        try visitor.visitRepeatedMessageField(value: _apiField, protoFieldNumber: 2, protoFieldName: "api_field", jsonFieldName: "apiField", swiftFieldName: "apiField")
      }
      if !_durationField.isEmpty {
        try visitor.visitRepeatedMessageField(value: _durationField, protoFieldNumber: 3, protoFieldName: "duration_field", jsonFieldName: "durationField", swiftFieldName: "durationField")
      }
      if !_emptyField.isEmpty {
        try visitor.visitRepeatedMessageField(value: _emptyField, protoFieldNumber: 4, protoFieldName: "empty_field", jsonFieldName: "emptyField", swiftFieldName: "emptyField")
      }
      if !_fieldMaskField.isEmpty {
        try visitor.visitRepeatedMessageField(value: _fieldMaskField, protoFieldNumber: 5, protoFieldName: "field_mask_field", jsonFieldName: "fieldMaskField", swiftFieldName: "fieldMaskField")
      }
      if !_sourceContextField.isEmpty {
        try visitor.visitRepeatedMessageField(value: _sourceContextField, protoFieldNumber: 6, protoFieldName: "source_context_field", jsonFieldName: "sourceContextField", swiftFieldName: "sourceContextField")
      }
      if !_structField.isEmpty {
        try visitor.visitRepeatedMessageField(value: _structField, protoFieldNumber: 7, protoFieldName: "struct_field", jsonFieldName: "structField", swiftFieldName: "structField")
      }
      if !_timestampField.isEmpty {
        try visitor.visitRepeatedMessageField(value: _timestampField, protoFieldNumber: 8, protoFieldName: "timestamp_field", jsonFieldName: "timestampField", swiftFieldName: "timestampField")
      }
      if !_typeField.isEmpty {
        try visitor.visitRepeatedMessageField(value: _typeField, protoFieldNumber: 9, protoFieldName: "type_field", jsonFieldName: "typeField", swiftFieldName: "typeField")
      }
      if !_doubleField.isEmpty {
        try visitor.visitRepeatedMessageField(value: _doubleField, protoFieldNumber: 10, protoFieldName: "double_field", jsonFieldName: "doubleField", swiftFieldName: "doubleField")
      }
      if !_floatField.isEmpty {
        try visitor.visitRepeatedMessageField(value: _floatField, protoFieldNumber: 11, protoFieldName: "float_field", jsonFieldName: "floatField", swiftFieldName: "floatField")
      }
      if !_int64Field.isEmpty {
        try visitor.visitRepeatedMessageField(value: _int64Field, protoFieldNumber: 12, protoFieldName: "int64_field", jsonFieldName: "int64Field", swiftFieldName: "int64Field")
      }
      if !_uint64Field.isEmpty {
        try visitor.visitRepeatedMessageField(value: _uint64Field, protoFieldNumber: 13, protoFieldName: "uint64_field", jsonFieldName: "uint64Field", swiftFieldName: "uint64Field")
      }
      if !_int32Field.isEmpty {
        try visitor.visitRepeatedMessageField(value: _int32Field, protoFieldNumber: 14, protoFieldName: "int32_field", jsonFieldName: "int32Field", swiftFieldName: "int32Field")
      }
      if !_uint32Field.isEmpty {
        try visitor.visitRepeatedMessageField(value: _uint32Field, protoFieldNumber: 15, protoFieldName: "uint32_field", jsonFieldName: "uint32Field", swiftFieldName: "uint32Field")
      }
      if !_boolField.isEmpty {
        try visitor.visitRepeatedMessageField(value: _boolField, protoFieldNumber: 16, protoFieldName: "bool_field", jsonFieldName: "boolField", swiftFieldName: "boolField")
      }
      if !_stringField.isEmpty {
        try visitor.visitRepeatedMessageField(value: _stringField, protoFieldNumber: 17, protoFieldName: "string_field", jsonFieldName: "stringField", swiftFieldName: "stringField")
      }
      if !_bytesField.isEmpty {
        try visitor.visitRepeatedMessageField(value: _bytesField, protoFieldNumber: 18, protoFieldName: "bytes_field", jsonFieldName: "bytesField", swiftFieldName: "bytesField")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _anyField != other._anyField {return false}
      if _apiField != other._apiField {return false}
      if _durationField != other._durationField {return false}
      if _emptyField != other._emptyField {return false}
      if _fieldMaskField != other._fieldMaskField {return false}
      if _sourceContextField != other._sourceContextField {return false}
      if _structField != other._structField {return false}
      if _timestampField != other._timestampField {return false}
      if _typeField != other._typeField {return false}
      if _doubleField != other._doubleField {return false}
      if _floatField != other._floatField {return false}
      if _int64Field != other._int64Field {return false}
      if _uint64Field != other._uint64Field {return false}
      if _int32Field != other._int32Field {return false}
      if _uint32Field != other._uint32Field {return false}
      if _boolField != other._boolField {return false}
      if _stringField != other._stringField {return false}
      if _bytesField != other._bytesField {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._anyField = _anyField
      clone._apiField = _apiField
      clone._durationField = _durationField
      clone._emptyField = _emptyField
      clone._fieldMaskField = _fieldMaskField
      clone._sourceContextField = _sourceContextField
      clone._structField = _structField
      clone._timestampField = _timestampField
      clone._typeField = _typeField
      clone._doubleField = _doubleField
      clone._floatField = _floatField
      clone._int64Field = _int64Field
      clone._uint64Field = _uint64Field
      clone._int32Field = _int32Field
      clone._uint32Field = _uint32Field
      clone._boolField = _boolField
      clone._stringField = _stringField
      clone._bytesField = _bytesField
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var anyField: [Google_Protobuf_Any] {
    get {return _storage._anyField}
    set {_uniqueStorage()._anyField = newValue}
  }

  public var apiField: [Google_Protobuf_Api] {
    get {return _storage._apiField}
    set {_uniqueStorage()._apiField = newValue}
  }

  public var durationField: [Google_Protobuf_Duration] {
    get {return _storage._durationField}
    set {_uniqueStorage()._durationField = newValue}
  }

  public var emptyField: [Google_Protobuf_Empty] {
    get {return _storage._emptyField}
    set {_uniqueStorage()._emptyField = newValue}
  }

  public var fieldMaskField: [Google_Protobuf_FieldMask] {
    get {return _storage._fieldMaskField}
    set {_uniqueStorage()._fieldMaskField = newValue}
  }

  public var sourceContextField: [Google_Protobuf_SourceContext] {
    get {return _storage._sourceContextField}
    set {_uniqueStorage()._sourceContextField = newValue}
  }

  public var structField: [Google_Protobuf_Struct] {
    get {return _storage._structField}
    set {_uniqueStorage()._structField = newValue}
  }

  public var timestampField: [Google_Protobuf_Timestamp] {
    get {return _storage._timestampField}
    set {_uniqueStorage()._timestampField = newValue}
  }

  public var typeField: [Google_Protobuf_Type] {
    get {return _storage._typeField}
    set {_uniqueStorage()._typeField = newValue}
  }

  ///   These don't actually make a lot of sense, but they're not prohibited...
  public var doubleField: [Google_Protobuf_DoubleValue] {
    get {return _storage._doubleField}
    set {_uniqueStorage()._doubleField = newValue}
  }

  public var floatField: [Google_Protobuf_FloatValue] {
    get {return _storage._floatField}
    set {_uniqueStorage()._floatField = newValue}
  }

  public var int64Field: [Google_Protobuf_Int64Value] {
    get {return _storage._int64Field}
    set {_uniqueStorage()._int64Field = newValue}
  }

  public var uint64Field: [Google_Protobuf_UInt64Value] {
    get {return _storage._uint64Field}
    set {_uniqueStorage()._uint64Field = newValue}
  }

  public var int32Field: [Google_Protobuf_Int32Value] {
    get {return _storage._int32Field}
    set {_uniqueStorage()._int32Field = newValue}
  }

  public var uint32Field: [Google_Protobuf_UInt32Value] {
    get {return _storage._uint32Field}
    set {_uniqueStorage()._uint32Field = newValue}
  }

  public var boolField: [Google_Protobuf_BoolValue] {
    get {return _storage._boolField}
    set {_uniqueStorage()._boolField = newValue}
  }

  public var stringField: [Google_Protobuf_StringValue] {
    get {return _storage._stringField}
    set {_uniqueStorage()._stringField = newValue}
  }

  public var bytesField: [Google_Protobuf_BytesValue] {
    get {return _storage._bytesField}
    set {_uniqueStorage()._bytesField = newValue}
  }

  public init() {}

  public init(anyField: [Google_Protobuf_Any] = [],
    apiField: [Google_Protobuf_Api] = [],
    durationField: [Google_Protobuf_Duration] = [],
    emptyField: [Google_Protobuf_Empty] = [],
    fieldMaskField: [Google_Protobuf_FieldMask] = [],
    sourceContextField: [Google_Protobuf_SourceContext] = [],
    structField: [Google_Protobuf_Struct] = [],
    timestampField: [Google_Protobuf_Timestamp] = [],
    typeField: [Google_Protobuf_Type] = [],
    doubleField: [Google_Protobuf_DoubleValue] = [],
    floatField: [Google_Protobuf_FloatValue] = [],
    int64Field: [Google_Protobuf_Int64Value] = [],
    uint64Field: [Google_Protobuf_UInt64Value] = [],
    int32Field: [Google_Protobuf_Int32Value] = [],
    uint32Field: [Google_Protobuf_UInt32Value] = [],
    boolField: [Google_Protobuf_BoolValue] = [],
    stringField: [Google_Protobuf_StringValue] = [],
    bytesField: [Google_Protobuf_BytesValue] = [])
  {
    let storage = _uniqueStorage()
    if !anyField.isEmpty {
      storage._anyField = anyField
    }
    if !apiField.isEmpty {
      storage._apiField = apiField
    }
    if !durationField.isEmpty {
      storage._durationField = durationField
    }
    if !emptyField.isEmpty {
      storage._emptyField = emptyField
    }
    if !fieldMaskField.isEmpty {
      storage._fieldMaskField = fieldMaskField
    }
    if !sourceContextField.isEmpty {
      storage._sourceContextField = sourceContextField
    }
    if !structField.isEmpty {
      storage._structField = structField
    }
    if !timestampField.isEmpty {
      storage._timestampField = timestampField
    }
    if !typeField.isEmpty {
      storage._typeField = typeField
    }
    if !doubleField.isEmpty {
      storage._doubleField = doubleField
    }
    if !floatField.isEmpty {
      storage._floatField = floatField
    }
    if !int64Field.isEmpty {
      storage._int64Field = int64Field
    }
    if !uint64Field.isEmpty {
      storage._uint64Field = uint64Field
    }
    if !int32Field.isEmpty {
      storage._int32Field = int32Field
    }
    if !uint32Field.isEmpty {
      storage._uint32Field = uint32Field
    }
    if !boolField.isEmpty {
      storage._boolField = boolField
    }
    if !stringField.isEmpty {
      storage._stringField = stringField
    }
    if !bytesField.isEmpty {
      storage._bytesField = bytesField
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: ProtobufUnittest_RepeatedWellKnownTypes) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct ProtobufUnittest_OneofWellKnownTypes: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "ProtobufUnittest_OneofWellKnownTypes"}
  public var protoMessageName: String {return "OneofWellKnownTypes"}
  public var protoPackageName: String {return "protobuf_unittest"}
  public var jsonFieldNames: [String: Int] {return [
    "anyField": 1,
    "apiField": 2,
    "durationField": 3,
    "emptyField": 4,
    "fieldMaskField": 5,
    "sourceContextField": 6,
    "structField": 7,
    "timestampField": 8,
    "typeField": 9,
    "doubleField": 10,
    "floatField": 11,
    "int64Field": 12,
    "uint64Field": 13,
    "int32Field": 14,
    "uint32Field": 15,
    "boolField": 16,
    "stringField": 17,
    "bytesField": 18,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "any_field": 1,
    "api_field": 2,
    "duration_field": 3,
    "empty_field": 4,
    "field_mask_field": 5,
    "source_context_field": 6,
    "struct_field": 7,
    "timestamp_field": 8,
    "type_field": 9,
    "double_field": 10,
    "float_field": 11,
    "int64_field": 12,
    "uint64_field": 13,
    "int32_field": 14,
    "uint32_field": 15,
    "bool_field": 16,
    "string_field": 17,
    "bytes_field": 18,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = ProtobufUnittest_OneofWellKnownTypes
    var _oneofField = ProtobufUnittest_OneofWellKnownTypes.OneOf_OneofField()

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
        handled = try _oneofField.decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      try _oneofField.traverse(visitor: &visitor, start: 1, end: 19)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _oneofField != other._oneofField {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._oneofField = _oneofField
      return clone
    }
  }

  private var _storage = _StorageClass()

  public enum OneOf_OneofField: ExpressibleByNilLiteral, ProtobufOneofEnum {
    case anyField(Google_Protobuf_Any)
    case apiField(Google_Protobuf_Api)
    case durationField(Google_Protobuf_Duration)
    case emptyField(Google_Protobuf_Empty)
    case fieldMaskField(Google_Protobuf_FieldMask)
    case sourceContextField(Google_Protobuf_SourceContext)
    case structField(Google_Protobuf_Struct)
    case timestampField(Google_Protobuf_Timestamp)
    case typeField(Google_Protobuf_Type)
    case doubleField(Google_Protobuf_DoubleValue)
    case floatField(Google_Protobuf_FloatValue)
    case int64Field(Google_Protobuf_Int64Value)
    case uint64Field(Google_Protobuf_UInt64Value)
    case int32Field(Google_Protobuf_Int32Value)
    case uint32Field(Google_Protobuf_UInt32Value)
    case boolField(Google_Protobuf_BoolValue)
    case stringField(Google_Protobuf_StringValue)
    case bytesField(Google_Protobuf_BytesValue)
    case None

    public init(nilLiteral: ()) {
      self = .None
    }

    public init() {
      self = .None
    }

    public mutating func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      if self != .None && setter.rejectConflictingOneof {
        throw ProtobufDecodingError.duplicatedOneOf
      }
      let handled: Bool
      switch protoFieldNumber {
      case 1:
        var value: Google_Protobuf_Any?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Any.self, value: &value)
        if let value = value, handled {
          self = .anyField(value)
        }
      case 2:
        var value: Google_Protobuf_Api?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Api.self, value: &value)
        if let value = value, handled {
          self = .apiField(value)
        }
      case 3:
        var value: Google_Protobuf_Duration?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Duration.self, value: &value)
        if let value = value, handled {
          self = .durationField(value)
        }
      case 4:
        var value: Google_Protobuf_Empty?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Empty.self, value: &value)
        if let value = value, handled {
          self = .emptyField(value)
        }
      case 5:
        var value: Google_Protobuf_FieldMask?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_FieldMask.self, value: &value)
        if let value = value, handled {
          self = .fieldMaskField(value)
        }
      case 6:
        var value: Google_Protobuf_SourceContext?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_SourceContext.self, value: &value)
        if let value = value, handled {
          self = .sourceContextField(value)
        }
      case 7:
        var value: Google_Protobuf_Struct?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Struct.self, value: &value)
        if let value = value, handled {
          self = .structField(value)
        }
      case 8:
        var value: Google_Protobuf_Timestamp?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Timestamp.self, value: &value)
        if let value = value, handled {
          self = .timestampField(value)
        }
      case 9:
        var value: Google_Protobuf_Type?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Type.self, value: &value)
        if let value = value, handled {
          self = .typeField(value)
        }
      case 10:
        var value: Google_Protobuf_DoubleValue?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_DoubleValue.self, value: &value)
        if let value = value, handled {
          self = .doubleField(value)
        }
      case 11:
        var value: Google_Protobuf_FloatValue?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_FloatValue.self, value: &value)
        if let value = value, handled {
          self = .floatField(value)
        }
      case 12:
        var value: Google_Protobuf_Int64Value?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Int64Value.self, value: &value)
        if let value = value, handled {
          self = .int64Field(value)
        }
      case 13:
        var value: Google_Protobuf_UInt64Value?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_UInt64Value.self, value: &value)
        if let value = value, handled {
          self = .uint64Field(value)
        }
      case 14:
        var value: Google_Protobuf_Int32Value?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_Int32Value.self, value: &value)
        if let value = value, handled {
          self = .int32Field(value)
        }
      case 15:
        var value: Google_Protobuf_UInt32Value?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_UInt32Value.self, value: &value)
        if let value = value, handled {
          self = .uint32Field(value)
        }
      case 16:
        var value: Google_Protobuf_BoolValue?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_BoolValue.self, value: &value)
        if let value = value, handled {
          self = .boolField(value)
        }
      case 17:
        var value: Google_Protobuf_StringValue?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_StringValue.self, value: &value)
        if let value = value, handled {
          self = .stringField(value)
        }
      case 18:
        var value: Google_Protobuf_BytesValue?
        handled = try setter.decodeSingularMessageField(fieldType: Google_Protobuf_BytesValue.self, value: &value)
        if let value = value, handled {
          self = .bytesField(value)
        }
      default:
        handled = false
        self = .None
      }
      return handled
    }

    public func traverse(visitor: inout ProtobufVisitor, start: Int, end: Int) throws {
      switch self {
      case .anyField(let v):
        if start <= 1 && 1 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 1, protoFieldName: "any_field", jsonFieldName: "anyField", swiftFieldName: "anyField")
        }
      case .apiField(let v):
        if start <= 2 && 2 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "api_field", jsonFieldName: "apiField", swiftFieldName: "apiField")
        }
      case .durationField(let v):
        if start <= 3 && 3 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "duration_field", jsonFieldName: "durationField", swiftFieldName: "durationField")
        }
      case .emptyField(let v):
        if start <= 4 && 4 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 4, protoFieldName: "empty_field", jsonFieldName: "emptyField", swiftFieldName: "emptyField")
        }
      case .fieldMaskField(let v):
        if start <= 5 && 5 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 5, protoFieldName: "field_mask_field", jsonFieldName: "fieldMaskField", swiftFieldName: "fieldMaskField")
        }
      case .sourceContextField(let v):
        if start <= 6 && 6 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 6, protoFieldName: "source_context_field", jsonFieldName: "sourceContextField", swiftFieldName: "sourceContextField")
        }
      case .structField(let v):
        if start <= 7 && 7 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 7, protoFieldName: "struct_field", jsonFieldName: "structField", swiftFieldName: "structField")
        }
      case .timestampField(let v):
        if start <= 8 && 8 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 8, protoFieldName: "timestamp_field", jsonFieldName: "timestampField", swiftFieldName: "timestampField")
        }
      case .typeField(let v):
        if start <= 9 && 9 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 9, protoFieldName: "type_field", jsonFieldName: "typeField", swiftFieldName: "typeField")
        }
      case .doubleField(let v):
        if start <= 10 && 10 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 10, protoFieldName: "double_field", jsonFieldName: "doubleField", swiftFieldName: "doubleField")
        }
      case .floatField(let v):
        if start <= 11 && 11 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 11, protoFieldName: "float_field", jsonFieldName: "floatField", swiftFieldName: "floatField")
        }
      case .int64Field(let v):
        if start <= 12 && 12 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 12, protoFieldName: "int64_field", jsonFieldName: "int64Field", swiftFieldName: "int64Field")
        }
      case .uint64Field(let v):
        if start <= 13 && 13 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 13, protoFieldName: "uint64_field", jsonFieldName: "uint64Field", swiftFieldName: "uint64Field")
        }
      case .int32Field(let v):
        if start <= 14 && 14 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 14, protoFieldName: "int32_field", jsonFieldName: "int32Field", swiftFieldName: "int32Field")
        }
      case .uint32Field(let v):
        if start <= 15 && 15 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 15, protoFieldName: "uint32_field", jsonFieldName: "uint32Field", swiftFieldName: "uint32Field")
        }
      case .boolField(let v):
        if start <= 16 && 16 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 16, protoFieldName: "bool_field", jsonFieldName: "boolField", swiftFieldName: "boolField")
        }
      case .stringField(let v):
        if start <= 17 && 17 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 17, protoFieldName: "string_field", jsonFieldName: "stringField", swiftFieldName: "stringField")
        }
      case .bytesField(let v):
        if start <= 18 && 18 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 18, protoFieldName: "bytes_field", jsonFieldName: "bytesField", swiftFieldName: "bytesField")
        }
      case .None:
        break
      }
    }
  }

  public var anyField: Google_Protobuf_Any? {
    get {
      if case .anyField(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .anyField(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var apiField: Google_Protobuf_Api? {
    get {
      if case .apiField(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .apiField(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var durationField: Google_Protobuf_Duration? {
    get {
      if case .durationField(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .durationField(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var emptyField: Google_Protobuf_Empty? {
    get {
      if case .emptyField(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .emptyField(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var fieldMaskField: Google_Protobuf_FieldMask? {
    get {
      if case .fieldMaskField(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .fieldMaskField(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var sourceContextField: Google_Protobuf_SourceContext? {
    get {
      if case .sourceContextField(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .sourceContextField(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var structField: Google_Protobuf_Struct? {
    get {
      if case .structField(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .structField(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var timestampField: Google_Protobuf_Timestamp? {
    get {
      if case .timestampField(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .timestampField(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var typeField: Google_Protobuf_Type? {
    get {
      if case .typeField(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .typeField(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var doubleField: Google_Protobuf_DoubleValue? {
    get {
      if case .doubleField(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .doubleField(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var floatField: Google_Protobuf_FloatValue? {
    get {
      if case .floatField(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .floatField(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var int64Field: Google_Protobuf_Int64Value? {
    get {
      if case .int64Field(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .int64Field(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var uint64Field: Google_Protobuf_UInt64Value? {
    get {
      if case .uint64Field(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .uint64Field(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var int32Field: Google_Protobuf_Int32Value? {
    get {
      if case .int32Field(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .int32Field(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var uint32Field: Google_Protobuf_UInt32Value? {
    get {
      if case .uint32Field(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .uint32Field(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var boolField: Google_Protobuf_BoolValue? {
    get {
      if case .boolField(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .boolField(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var stringField: Google_Protobuf_StringValue? {
    get {
      if case .stringField(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .stringField(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var bytesField: Google_Protobuf_BytesValue? {
    get {
      if case .bytesField(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .bytesField(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var _oneofField: OneOf_OneofField {
    get {return _storage._oneofField}
    set {
      _uniqueStorage()._oneofField = newValue
    }
  }

  public init() {}

  public init(anyField: Google_Protobuf_Any? = nil,
    apiField: Google_Protobuf_Api? = nil,
    durationField: Google_Protobuf_Duration? = nil,
    emptyField: Google_Protobuf_Empty? = nil,
    fieldMaskField: Google_Protobuf_FieldMask? = nil,
    sourceContextField: Google_Protobuf_SourceContext? = nil,
    structField: Google_Protobuf_Struct? = nil,
    timestampField: Google_Protobuf_Timestamp? = nil,
    typeField: Google_Protobuf_Type? = nil,
    doubleField: Google_Protobuf_DoubleValue? = nil,
    floatField: Google_Protobuf_FloatValue? = nil,
    int64Field: Google_Protobuf_Int64Value? = nil,
    uint64Field: Google_Protobuf_UInt64Value? = nil,
    int32Field: Google_Protobuf_Int32Value? = nil,
    uint32Field: Google_Protobuf_UInt32Value? = nil,
    boolField: Google_Protobuf_BoolValue? = nil,
    stringField: Google_Protobuf_StringValue? = nil,
    bytesField: Google_Protobuf_BytesValue? = nil)
  {
    let storage = _uniqueStorage()
    if let v = anyField {
      storage._oneofField = .anyField(v)
    }
    if let v = apiField {
      storage._oneofField = .apiField(v)
    }
    if let v = durationField {
      storage._oneofField = .durationField(v)
    }
    if let v = emptyField {
      storage._oneofField = .emptyField(v)
    }
    if let v = fieldMaskField {
      storage._oneofField = .fieldMaskField(v)
    }
    if let v = sourceContextField {
      storage._oneofField = .sourceContextField(v)
    }
    if let v = structField {
      storage._oneofField = .structField(v)
    }
    if let v = timestampField {
      storage._oneofField = .timestampField(v)
    }
    if let v = typeField {
      storage._oneofField = .typeField(v)
    }
    if let v = doubleField {
      storage._oneofField = .doubleField(v)
    }
    if let v = floatField {
      storage._oneofField = .floatField(v)
    }
    if let v = int64Field {
      storage._oneofField = .int64Field(v)
    }
    if let v = uint64Field {
      storage._oneofField = .uint64Field(v)
    }
    if let v = int32Field {
      storage._oneofField = .int32Field(v)
    }
    if let v = uint32Field {
      storage._oneofField = .uint32Field(v)
    }
    if let v = boolField {
      storage._oneofField = .boolField(v)
    }
    if let v = stringField {
      storage._oneofField = .stringField(v)
    }
    if let v = bytesField {
      storage._oneofField = .bytesField(v)
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: ProtobufUnittest_OneofWellKnownTypes) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   A map field for each well-known type. We only
///   need to worry about the value part of the map being the
///   well-known types, as messages can't be map keys.
public struct ProtobufUnittest_MapWellKnownTypes: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "ProtobufUnittest_MapWellKnownTypes"}
  public var protoMessageName: String {return "MapWellKnownTypes"}
  public var protoPackageName: String {return "protobuf_unittest"}
  public var jsonFieldNames: [String: Int] {return [
    "anyField": 1,
    "apiField": 2,
    "durationField": 3,
    "emptyField": 4,
    "fieldMaskField": 5,
    "sourceContextField": 6,
    "structField": 7,
    "timestampField": 8,
    "typeField": 9,
    "doubleField": 10,
    "floatField": 11,
    "int64Field": 12,
    "uint64Field": 13,
    "int32Field": 14,
    "uint32Field": 15,
    "boolField": 16,
    "stringField": 17,
    "bytesField": 18,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "any_field": 1,
    "api_field": 2,
    "duration_field": 3,
    "empty_field": 4,
    "field_mask_field": 5,
    "source_context_field": 6,
    "struct_field": 7,
    "timestamp_field": 8,
    "type_field": 9,
    "double_field": 10,
    "float_field": 11,
    "int64_field": 12,
    "uint64_field": 13,
    "int32_field": 14,
    "uint32_field": 15,
    "bool_field": 16,
    "string_field": 17,
    "bytes_field": 18,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = ProtobufUnittest_MapWellKnownTypes
    var _anyField: Dictionary<Int32,Google_Protobuf_Any> = [:]
    var _apiField: Dictionary<Int32,Google_Protobuf_Api> = [:]
    var _durationField: Dictionary<Int32,Google_Protobuf_Duration> = [:]
    var _emptyField: Dictionary<Int32,Google_Protobuf_Empty> = [:]
    var _fieldMaskField: Dictionary<Int32,Google_Protobuf_FieldMask> = [:]
    var _sourceContextField: Dictionary<Int32,Google_Protobuf_SourceContext> = [:]
    var _structField: Dictionary<Int32,Google_Protobuf_Struct> = [:]
    var _timestampField: Dictionary<Int32,Google_Protobuf_Timestamp> = [:]
    var _typeField: Dictionary<Int32,Google_Protobuf_Type> = [:]
    var _doubleField: Dictionary<Int32,Google_Protobuf_DoubleValue> = [:]
    var _floatField: Dictionary<Int32,Google_Protobuf_FloatValue> = [:]
    var _int64Field: Dictionary<Int32,Google_Protobuf_Int64Value> = [:]
    var _uint64Field: Dictionary<Int32,Google_Protobuf_UInt64Value> = [:]
    var _int32Field: Dictionary<Int32,Google_Protobuf_Int32Value> = [:]
    var _uint32Field: Dictionary<Int32,Google_Protobuf_UInt32Value> = [:]
    var _boolField: Dictionary<Int32,Google_Protobuf_BoolValue> = [:]
    var _stringField: Dictionary<Int32,Google_Protobuf_StringValue> = [:]
    var _bytesField: Dictionary<Int32,Google_Protobuf_BytesValue> = [:]

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Any>.self, value: &_anyField)
      case 2: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Api>.self, value: &_apiField)
      case 3: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Duration>.self, value: &_durationField)
      case 4: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Empty>.self, value: &_emptyField)
      case 5: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_FieldMask>.self, value: &_fieldMaskField)
      case 6: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_SourceContext>.self, value: &_sourceContextField)
      case 7: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Struct>.self, value: &_structField)
      case 8: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Timestamp>.self, value: &_timestampField)
      case 9: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Type>.self, value: &_typeField)
      case 10: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_DoubleValue>.self, value: &_doubleField)
      case 11: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_FloatValue>.self, value: &_floatField)
      case 12: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Int64Value>.self, value: &_int64Field)
      case 13: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_UInt64Value>.self, value: &_uint64Field)
      case 14: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Int32Value>.self, value: &_int32Field)
      case 15: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_UInt32Value>.self, value: &_uint32Field)
      case 16: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_BoolValue>.self, value: &_boolField)
      case 17: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_StringValue>.self, value: &_stringField)
      case 18: handled = try setter.decodeMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_BytesValue>.self, value: &_bytesField)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if !_anyField.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Any>.self, value: _anyField, protoFieldNumber: 1, protoFieldName: "any_field", jsonFieldName: "anyField", swiftFieldName: "anyField")
      }
      if !_apiField.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Api>.self, value: _apiField, protoFieldNumber: 2, protoFieldName: "api_field", jsonFieldName: "apiField", swiftFieldName: "apiField")
      }
      if !_durationField.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Duration>.self, value: _durationField, protoFieldNumber: 3, protoFieldName: "duration_field", jsonFieldName: "durationField", swiftFieldName: "durationField")
      }
      if !_emptyField.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Empty>.self, value: _emptyField, protoFieldNumber: 4, protoFieldName: "empty_field", jsonFieldName: "emptyField", swiftFieldName: "emptyField")
      }
      if !_fieldMaskField.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_FieldMask>.self, value: _fieldMaskField, protoFieldNumber: 5, protoFieldName: "field_mask_field", jsonFieldName: "fieldMaskField", swiftFieldName: "fieldMaskField")
      }
      if !_sourceContextField.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_SourceContext>.self, value: _sourceContextField, protoFieldNumber: 6, protoFieldName: "source_context_field", jsonFieldName: "sourceContextField", swiftFieldName: "sourceContextField")
      }
      if !_structField.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Struct>.self, value: _structField, protoFieldNumber: 7, protoFieldName: "struct_field", jsonFieldName: "structField", swiftFieldName: "structField")
      }
      if !_timestampField.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Timestamp>.self, value: _timestampField, protoFieldNumber: 8, protoFieldName: "timestamp_field", jsonFieldName: "timestampField", swiftFieldName: "timestampField")
      }
      if !_typeField.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Type>.self, value: _typeField, protoFieldNumber: 9, protoFieldName: "type_field", jsonFieldName: "typeField", swiftFieldName: "typeField")
      }
      if !_doubleField.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_DoubleValue>.self, value: _doubleField, protoFieldNumber: 10, protoFieldName: "double_field", jsonFieldName: "doubleField", swiftFieldName: "doubleField")
      }
      if !_floatField.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_FloatValue>.self, value: _floatField, protoFieldNumber: 11, protoFieldName: "float_field", jsonFieldName: "floatField", swiftFieldName: "floatField")
      }
      if !_int64Field.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Int64Value>.self, value: _int64Field, protoFieldNumber: 12, protoFieldName: "int64_field", jsonFieldName: "int64Field", swiftFieldName: "int64Field")
      }
      if !_uint64Field.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_UInt64Value>.self, value: _uint64Field, protoFieldNumber: 13, protoFieldName: "uint64_field", jsonFieldName: "uint64Field", swiftFieldName: "uint64Field")
      }
      if !_int32Field.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_Int32Value>.self, value: _int32Field, protoFieldNumber: 14, protoFieldName: "int32_field", jsonFieldName: "int32Field", swiftFieldName: "int32Field")
      }
      if !_uint32Field.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_UInt32Value>.self, value: _uint32Field, protoFieldNumber: 15, protoFieldName: "uint32_field", jsonFieldName: "uint32Field", swiftFieldName: "uint32Field")
      }
      if !_boolField.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_BoolValue>.self, value: _boolField, protoFieldNumber: 16, protoFieldName: "bool_field", jsonFieldName: "boolField", swiftFieldName: "boolField")
      }
      if !_stringField.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_StringValue>.self, value: _stringField, protoFieldNumber: 17, protoFieldName: "string_field", jsonFieldName: "stringField", swiftFieldName: "stringField")
      }
      if !_bytesField.isEmpty {
        try visitor.visitMapField(fieldType: ProtobufMap<ProtobufInt32,Google_Protobuf_BytesValue>.self, value: _bytesField, protoFieldNumber: 18, protoFieldName: "bytes_field", jsonFieldName: "bytesField", swiftFieldName: "bytesField")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _anyField != other._anyField {return false}
      if _apiField != other._apiField {return false}
      if _durationField != other._durationField {return false}
      if _emptyField != other._emptyField {return false}
      if _fieldMaskField != other._fieldMaskField {return false}
      if _sourceContextField != other._sourceContextField {return false}
      if _structField != other._structField {return false}
      if _timestampField != other._timestampField {return false}
      if _typeField != other._typeField {return false}
      if _doubleField != other._doubleField {return false}
      if _floatField != other._floatField {return false}
      if _int64Field != other._int64Field {return false}
      if _uint64Field != other._uint64Field {return false}
      if _int32Field != other._int32Field {return false}
      if _uint32Field != other._uint32Field {return false}
      if _boolField != other._boolField {return false}
      if _stringField != other._stringField {return false}
      if _bytesField != other._bytesField {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._anyField = _anyField
      clone._apiField = _apiField
      clone._durationField = _durationField
      clone._emptyField = _emptyField
      clone._fieldMaskField = _fieldMaskField
      clone._sourceContextField = _sourceContextField
      clone._structField = _structField
      clone._timestampField = _timestampField
      clone._typeField = _typeField
      clone._doubleField = _doubleField
      clone._floatField = _floatField
      clone._int64Field = _int64Field
      clone._uint64Field = _uint64Field
      clone._int32Field = _int32Field
      clone._uint32Field = _uint32Field
      clone._boolField = _boolField
      clone._stringField = _stringField
      clone._bytesField = _bytesField
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var anyField: Dictionary<Int32,Google_Protobuf_Any> {
    get {return _storage._anyField}
    set {_uniqueStorage()._anyField = newValue}
  }

  public var apiField: Dictionary<Int32,Google_Protobuf_Api> {
    get {return _storage._apiField}
    set {_uniqueStorage()._apiField = newValue}
  }

  public var durationField: Dictionary<Int32,Google_Protobuf_Duration> {
    get {return _storage._durationField}
    set {_uniqueStorage()._durationField = newValue}
  }

  public var emptyField: Dictionary<Int32,Google_Protobuf_Empty> {
    get {return _storage._emptyField}
    set {_uniqueStorage()._emptyField = newValue}
  }

  public var fieldMaskField: Dictionary<Int32,Google_Protobuf_FieldMask> {
    get {return _storage._fieldMaskField}
    set {_uniqueStorage()._fieldMaskField = newValue}
  }

  public var sourceContextField: Dictionary<Int32,Google_Protobuf_SourceContext> {
    get {return _storage._sourceContextField}
    set {_uniqueStorage()._sourceContextField = newValue}
  }

  public var structField: Dictionary<Int32,Google_Protobuf_Struct> {
    get {return _storage._structField}
    set {_uniqueStorage()._structField = newValue}
  }

  public var timestampField: Dictionary<Int32,Google_Protobuf_Timestamp> {
    get {return _storage._timestampField}
    set {_uniqueStorage()._timestampField = newValue}
  }

  public var typeField: Dictionary<Int32,Google_Protobuf_Type> {
    get {return _storage._typeField}
    set {_uniqueStorage()._typeField = newValue}
  }

  public var doubleField: Dictionary<Int32,Google_Protobuf_DoubleValue> {
    get {return _storage._doubleField}
    set {_uniqueStorage()._doubleField = newValue}
  }

  public var floatField: Dictionary<Int32,Google_Protobuf_FloatValue> {
    get {return _storage._floatField}
    set {_uniqueStorage()._floatField = newValue}
  }

  public var int64Field: Dictionary<Int32,Google_Protobuf_Int64Value> {
    get {return _storage._int64Field}
    set {_uniqueStorage()._int64Field = newValue}
  }

  public var uint64Field: Dictionary<Int32,Google_Protobuf_UInt64Value> {
    get {return _storage._uint64Field}
    set {_uniqueStorage()._uint64Field = newValue}
  }

  public var int32Field: Dictionary<Int32,Google_Protobuf_Int32Value> {
    get {return _storage._int32Field}
    set {_uniqueStorage()._int32Field = newValue}
  }

  public var uint32Field: Dictionary<Int32,Google_Protobuf_UInt32Value> {
    get {return _storage._uint32Field}
    set {_uniqueStorage()._uint32Field = newValue}
  }

  public var boolField: Dictionary<Int32,Google_Protobuf_BoolValue> {
    get {return _storage._boolField}
    set {_uniqueStorage()._boolField = newValue}
  }

  public var stringField: Dictionary<Int32,Google_Protobuf_StringValue> {
    get {return _storage._stringField}
    set {_uniqueStorage()._stringField = newValue}
  }

  public var bytesField: Dictionary<Int32,Google_Protobuf_BytesValue> {
    get {return _storage._bytesField}
    set {_uniqueStorage()._bytesField = newValue}
  }

  public init() {}

  public init(anyField: Dictionary<Int32,Google_Protobuf_Any> = [:],
    apiField: Dictionary<Int32,Google_Protobuf_Api> = [:],
    durationField: Dictionary<Int32,Google_Protobuf_Duration> = [:],
    emptyField: Dictionary<Int32,Google_Protobuf_Empty> = [:],
    fieldMaskField: Dictionary<Int32,Google_Protobuf_FieldMask> = [:],
    sourceContextField: Dictionary<Int32,Google_Protobuf_SourceContext> = [:],
    structField: Dictionary<Int32,Google_Protobuf_Struct> = [:],
    timestampField: Dictionary<Int32,Google_Protobuf_Timestamp> = [:],
    typeField: Dictionary<Int32,Google_Protobuf_Type> = [:],
    doubleField: Dictionary<Int32,Google_Protobuf_DoubleValue> = [:],
    floatField: Dictionary<Int32,Google_Protobuf_FloatValue> = [:],
    int64Field: Dictionary<Int32,Google_Protobuf_Int64Value> = [:],
    uint64Field: Dictionary<Int32,Google_Protobuf_UInt64Value> = [:],
    int32Field: Dictionary<Int32,Google_Protobuf_Int32Value> = [:],
    uint32Field: Dictionary<Int32,Google_Protobuf_UInt32Value> = [:],
    boolField: Dictionary<Int32,Google_Protobuf_BoolValue> = [:],
    stringField: Dictionary<Int32,Google_Protobuf_StringValue> = [:],
    bytesField: Dictionary<Int32,Google_Protobuf_BytesValue> = [:])
  {
    let storage = _uniqueStorage()
    if !anyField.isEmpty {
      storage._anyField = anyField
    }
    if !apiField.isEmpty {
      storage._apiField = apiField
    }
    if !durationField.isEmpty {
      storage._durationField = durationField
    }
    if !emptyField.isEmpty {
      storage._emptyField = emptyField
    }
    if !fieldMaskField.isEmpty {
      storage._fieldMaskField = fieldMaskField
    }
    if !sourceContextField.isEmpty {
      storage._sourceContextField = sourceContextField
    }
    if !structField.isEmpty {
      storage._structField = structField
    }
    if !timestampField.isEmpty {
      storage._timestampField = timestampField
    }
    if !typeField.isEmpty {
      storage._typeField = typeField
    }
    if !doubleField.isEmpty {
      storage._doubleField = doubleField
    }
    if !floatField.isEmpty {
      storage._floatField = floatField
    }
    if !int64Field.isEmpty {
      storage._int64Field = int64Field
    }
    if !uint64Field.isEmpty {
      storage._uint64Field = uint64Field
    }
    if !int32Field.isEmpty {
      storage._int32Field = int32Field
    }
    if !uint32Field.isEmpty {
      storage._uint32Field = uint32Field
    }
    if !boolField.isEmpty {
      storage._boolField = boolField
    }
    if !stringField.isEmpty {
      storage._stringField = stringField
    }
    if !bytesField.isEmpty {
      storage._bytesField = bytesField
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: ProtobufUnittest_MapWellKnownTypes) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public func ==(lhs: ProtobufUnittest_OneofWellKnownTypes.OneOf_OneofField, rhs: ProtobufUnittest_OneofWellKnownTypes.OneOf_OneofField) -> Bool {
  switch (lhs, rhs) {
  case (.anyField(let l), .anyField(let r)): return l == r
  case (.apiField(let l), .apiField(let r)): return l == r
  case (.durationField(let l), .durationField(let r)): return l == r
  case (.emptyField(let l), .emptyField(let r)): return l == r
  case (.fieldMaskField(let l), .fieldMaskField(let r)): return l == r
  case (.sourceContextField(let l), .sourceContextField(let r)): return l == r
  case (.structField(let l), .structField(let r)): return l == r
  case (.timestampField(let l), .timestampField(let r)): return l == r
  case (.typeField(let l), .typeField(let r)): return l == r
  case (.doubleField(let l), .doubleField(let r)): return l == r
  case (.floatField(let l), .floatField(let r)): return l == r
  case (.int64Field(let l), .int64Field(let r)): return l == r
  case (.uint64Field(let l), .uint64Field(let r)): return l == r
  case (.int32Field(let l), .int32Field(let r)): return l == r
  case (.uint32Field(let l), .uint32Field(let r)): return l == r
  case (.boolField(let l), .boolField(let r)): return l == r
  case (.stringField(let l), .stringField(let r)): return l == r
  case (.bytesField(let l), .bytesField(let r)): return l == r
  case (.None, .None): return true
  default: return false
  }
}
