/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: unittest_swift_all_required_types.proto
 *
 */

//  Protocol Buffers - Google's data interchange format
//  Copyright 2008 Google Inc.  All rights reserved.
//  https://developers.google.com/protocol-buffers/
// 
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//      * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//      * Redistributions in binary form must reproduce the above
//  copyright notice, this list of conditions and the following disclaimer
//  in the documentation and/or other materials provided with the
//  distribution.
//      * Neither the name of Google Inc. nor the names of its
//  contributors may be used to endorse or promote products derived from
//  this software without specific prior written permission.
// 
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
//  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
//  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
//  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
//  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
//  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
//  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

///   An addition to unittest.proto

import Foundation
import SwiftProtobuf


public struct ProtobufUnittest_TestAllRequiredTypes: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "ProtobufUnittest_TestAllRequiredTypes"}
  public var protoMessageName: String {return "TestAllRequiredTypes"}
  public var protoPackageName: String {return "protobuf_unittest"}
  public var jsonFieldNames: [String: Int] {return [
    "requiredInt32": 1,
    "requiredInt64": 2,
    "requiredUint32": 3,
    "requiredUint64": 4,
    "requiredSint32": 5,
    "requiredSint64": 6,
    "requiredFixed32": 7,
    "requiredFixed64": 8,
    "requiredSfixed32": 9,
    "requiredSfixed64": 10,
    "requiredFloat": 11,
    "requiredDouble": 12,
    "requiredBool": 13,
    "requiredString": 14,
    "requiredBytes": 15,
    "requiredgroup": 16,
    "requiredNestedMessage": 18,
    "requiredForeignMessage": 19,
    "requiredImportMessage": 20,
    "requiredNestedEnum": 21,
    "requiredForeignEnum": 22,
    "requiredImportEnum": 23,
    "requiredStringPiece": 24,
    "requiredCord": 25,
    "requiredPublicImportMessage": 26,
    "requiredLazyMessage": 27,
    "defaultInt32": 61,
    "defaultInt64": 62,
    "defaultUint32": 63,
    "defaultUint64": 64,
    "defaultSint32": 65,
    "defaultSint64": 66,
    "defaultFixed32": 67,
    "defaultFixed64": 68,
    "defaultSfixed32": 69,
    "defaultSfixed64": 70,
    "defaultFloat": 71,
    "defaultDouble": 72,
    "defaultBool": 73,
    "defaultString": 74,
    "defaultBytes": 75,
    "defaultNestedEnum": 81,
    "defaultForeignEnum": 82,
    "defaultImportEnum": 83,
    "defaultStringPiece": 84,
    "defaultCord": 85,
    "oneofUint32": 111,
    "oneofNestedMessage": 112,
    "oneofString": 113,
    "oneofBytes": 114,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "required_int32": 1,
    "required_int64": 2,
    "required_uint32": 3,
    "required_uint64": 4,
    "required_sint32": 5,
    "required_sint64": 6,
    "required_fixed32": 7,
    "required_fixed64": 8,
    "required_sfixed32": 9,
    "required_sfixed64": 10,
    "required_float": 11,
    "required_double": 12,
    "required_bool": 13,
    "required_string": 14,
    "required_bytes": 15,
    "requiredgroup": 16,
    "required_nested_message": 18,
    "required_foreign_message": 19,
    "required_import_message": 20,
    "required_nested_enum": 21,
    "required_foreign_enum": 22,
    "required_import_enum": 23,
    "required_string_piece": 24,
    "required_cord": 25,
    "required_public_import_message": 26,
    "required_lazy_message": 27,
    "default_int32": 61,
    "default_int64": 62,
    "default_uint32": 63,
    "default_uint64": 64,
    "default_sint32": 65,
    "default_sint64": 66,
    "default_fixed32": 67,
    "default_fixed64": 68,
    "default_sfixed32": 69,
    "default_sfixed64": 70,
    "default_float": 71,
    "default_double": 72,
    "default_bool": 73,
    "default_string": 74,
    "default_bytes": 75,
    "default_nested_enum": 81,
    "default_foreign_enum": 82,
    "default_import_enum": 83,
    "default_string_piece": 84,
    "default_cord": 85,
    "oneof_uint32": 111,
    "oneof_nested_message": 112,
    "oneof_string": 113,
    "oneof_bytes": 114,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = ProtobufUnittest_TestAllRequiredTypes
    var unknown = ProtobufUnknownStorage()
    var _requiredInt32: Int32 = 0
    var _requiredInt64: Int64 = 0
    var _requiredUint32: UInt32 = 0
    var _requiredUint64: UInt64 = 0
    var _requiredSint32: Int32 = 0
    var _requiredSint64: Int64 = 0
    var _requiredFixed32: UInt32 = 0
    var _requiredFixed64: UInt64 = 0
    var _requiredSfixed32: Int32 = 0
    var _requiredSfixed64: Int64 = 0
    var _requiredFloat: Float = 0
    var _requiredDouble: Double = 0
    var _requiredBool: Bool = false
    var _requiredString: String = ""
    var _requiredBytes: Data = Data()
    var _requiredGroup: ProtobufUnittest_TestAllRequiredTypes.RequiredGroup? = nil
    var _requiredNestedMessage: ProtobufUnittest_TestAllRequiredTypes.NestedMessage? = nil
    var _requiredForeignMessage: ProtobufUnittest_ForeignMessage? = nil
    var _requiredImportMessage: ProtobufUnittestImport_ImportMessage? = nil
    var _requiredNestedEnum: ProtobufUnittest_TestAllRequiredTypes.NestedEnum = ProtobufUnittest_TestAllRequiredTypes.NestedEnum.foo
    var _requiredForeignEnum: ProtobufUnittest_ForeignEnum = ProtobufUnittest_ForeignEnum.foreignFoo
    var _requiredImportEnum: ProtobufUnittestImport_ImportEnum = ProtobufUnittestImport_ImportEnum.importFoo
    var _requiredStringPiece: String = ""
    var _requiredCord: String = ""
    var _requiredPublicImportMessage: ProtobufUnittestImport_PublicImportMessage? = nil
    var _requiredLazyMessage: ProtobufUnittest_TestAllRequiredTypes.NestedMessage? = nil
    var _defaultInt32: Int32 = 41
    var _defaultInt64: Int64 = 42
    var _defaultUint32: UInt32 = 43
    var _defaultUint64: UInt64 = 44
    var _defaultSint32: Int32 = -45
    var _defaultSint64: Int64 = 46
    var _defaultFixed32: UInt32 = 47
    var _defaultFixed64: UInt64 = 48
    var _defaultSfixed32: Int32 = 49
    var _defaultSfixed64: Int64 = -50
    var _defaultFloat: Float = 51.5
    var _defaultDouble: Double = 52000
    var _defaultBool: Bool = true
    var _defaultString: String = "hello"
    var _defaultBytes: Data = Data(bytes: [119, 111, 114, 108, 100])
    var _defaultNestedEnum: ProtobufUnittest_TestAllRequiredTypes.NestedEnum = ProtobufUnittest_TestAllRequiredTypes.NestedEnum.bar
    var _defaultForeignEnum: ProtobufUnittest_ForeignEnum = ProtobufUnittest_ForeignEnum.foreignBar
    var _defaultImportEnum: ProtobufUnittestImport_ImportEnum = ProtobufUnittestImport_ImportEnum.importBar
    var _defaultStringPiece: String = "abc"
    var _defaultCord: String = "123"
    var _oneofField = ProtobufUnittest_TestAllRequiredTypes.OneOf_OneofField()

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufInt32.self, value: &_requiredInt32)
      case 2: handled = try setter.decodeRequiredField(fieldType: ProtobufInt64.self, value: &_requiredInt64)
      case 3: handled = try setter.decodeRequiredField(fieldType: ProtobufUInt32.self, value: &_requiredUint32)
      case 4: handled = try setter.decodeRequiredField(fieldType: ProtobufUInt64.self, value: &_requiredUint64)
      case 5: handled = try setter.decodeRequiredField(fieldType: ProtobufSInt32.self, value: &_requiredSint32)
      case 6: handled = try setter.decodeRequiredField(fieldType: ProtobufSInt64.self, value: &_requiredSint64)
      case 7: handled = try setter.decodeRequiredField(fieldType: ProtobufFixed32.self, value: &_requiredFixed32)
      case 8: handled = try setter.decodeRequiredField(fieldType: ProtobufFixed64.self, value: &_requiredFixed64)
      case 9: handled = try setter.decodeRequiredField(fieldType: ProtobufSFixed32.self, value: &_requiredSfixed32)
      case 10: handled = try setter.decodeRequiredField(fieldType: ProtobufSFixed64.self, value: &_requiredSfixed64)
      case 11: handled = try setter.decodeRequiredField(fieldType: ProtobufFloat.self, value: &_requiredFloat)
      case 12: handled = try setter.decodeRequiredField(fieldType: ProtobufDouble.self, value: &_requiredDouble)
      case 13: handled = try setter.decodeRequiredField(fieldType: ProtobufBool.self, value: &_requiredBool)
      case 14: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &_requiredString)
      case 15: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &_requiredBytes)
      case 16: handled = try setter.decodeRequiredGroupField(fieldType: ProtobufUnittest_TestAllRequiredTypes.RequiredGroup.self, value: &_requiredGroup)
      case 18: handled = try setter.decodeRequiredMessageField(fieldType: ProtobufUnittest_TestAllRequiredTypes.NestedMessage.self, value: &_requiredNestedMessage)
      case 19: handled = try setter.decodeRequiredMessageField(fieldType: ProtobufUnittest_ForeignMessage.self, value: &_requiredForeignMessage)
      case 20: handled = try setter.decodeRequiredMessageField(fieldType: ProtobufUnittestImport_ImportMessage.self, value: &_requiredImportMessage)
      case 21: handled = try setter.decodeRequiredField(fieldType: ProtobufUnittest_TestAllRequiredTypes.NestedEnum.self, value: &_requiredNestedEnum)
      case 22: handled = try setter.decodeRequiredField(fieldType: ProtobufUnittest_ForeignEnum.self, value: &_requiredForeignEnum)
      case 23: handled = try setter.decodeRequiredField(fieldType: ProtobufUnittestImport_ImportEnum.self, value: &_requiredImportEnum)
      case 24: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &_requiredStringPiece)
      case 25: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &_requiredCord)
      case 26: handled = try setter.decodeRequiredMessageField(fieldType: ProtobufUnittestImport_PublicImportMessage.self, value: &_requiredPublicImportMessage)
      case 27: handled = try setter.decodeRequiredMessageField(fieldType: ProtobufUnittest_TestAllRequiredTypes.NestedMessage.self, value: &_requiredLazyMessage)
      case 61: handled = try setter.decodeRequiredField(fieldType: ProtobufInt32.self, value: &_defaultInt32)
      case 62: handled = try setter.decodeRequiredField(fieldType: ProtobufInt64.self, value: &_defaultInt64)
      case 63: handled = try setter.decodeRequiredField(fieldType: ProtobufUInt32.self, value: &_defaultUint32)
      case 64: handled = try setter.decodeRequiredField(fieldType: ProtobufUInt64.self, value: &_defaultUint64)
      case 65: handled = try setter.decodeRequiredField(fieldType: ProtobufSInt32.self, value: &_defaultSint32)
      case 66: handled = try setter.decodeRequiredField(fieldType: ProtobufSInt64.self, value: &_defaultSint64)
      case 67: handled = try setter.decodeRequiredField(fieldType: ProtobufFixed32.self, value: &_defaultFixed32)
      case 68: handled = try setter.decodeRequiredField(fieldType: ProtobufFixed64.self, value: &_defaultFixed64)
      case 69: handled = try setter.decodeRequiredField(fieldType: ProtobufSFixed32.self, value: &_defaultSfixed32)
      case 70: handled = try setter.decodeRequiredField(fieldType: ProtobufSFixed64.self, value: &_defaultSfixed64)
      case 71: handled = try setter.decodeRequiredField(fieldType: ProtobufFloat.self, value: &_defaultFloat)
      case 72: handled = try setter.decodeRequiredField(fieldType: ProtobufDouble.self, value: &_defaultDouble)
      case 73: handled = try setter.decodeRequiredField(fieldType: ProtobufBool.self, value: &_defaultBool)
      case 74: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &_defaultString)
      case 75: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &_defaultBytes)
      case 81: handled = try setter.decodeRequiredField(fieldType: ProtobufUnittest_TestAllRequiredTypes.NestedEnum.self, value: &_defaultNestedEnum)
      case 82: handled = try setter.decodeRequiredField(fieldType: ProtobufUnittest_ForeignEnum.self, value: &_defaultForeignEnum)
      case 83: handled = try setter.decodeRequiredField(fieldType: ProtobufUnittestImport_ImportEnum.self, value: &_defaultImportEnum)
      case 84: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &_defaultStringPiece)
      case 85: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &_defaultCord)
      case 111, 112, 113, 114:
        handled = try _oneofField.decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: _requiredInt32, protoFieldNumber: 1, protoFieldName: "required_int32", jsonFieldName: "requiredInt32", swiftFieldName: "requiredInt32")
      try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _requiredInt64, protoFieldNumber: 2, protoFieldName: "required_int64", jsonFieldName: "requiredInt64", swiftFieldName: "requiredInt64")
      try visitor.visitSingularField(fieldType: ProtobufUInt32.self, value: _requiredUint32, protoFieldNumber: 3, protoFieldName: "required_uint32", jsonFieldName: "requiredUint32", swiftFieldName: "requiredUint32")
      try visitor.visitSingularField(fieldType: ProtobufUInt64.self, value: _requiredUint64, protoFieldNumber: 4, protoFieldName: "required_uint64", jsonFieldName: "requiredUint64", swiftFieldName: "requiredUint64")
      try visitor.visitSingularField(fieldType: ProtobufSInt32.self, value: _requiredSint32, protoFieldNumber: 5, protoFieldName: "required_sint32", jsonFieldName: "requiredSint32", swiftFieldName: "requiredSint32")
      try visitor.visitSingularField(fieldType: ProtobufSInt64.self, value: _requiredSint64, protoFieldNumber: 6, protoFieldName: "required_sint64", jsonFieldName: "requiredSint64", swiftFieldName: "requiredSint64")
      try visitor.visitSingularField(fieldType: ProtobufFixed32.self, value: _requiredFixed32, protoFieldNumber: 7, protoFieldName: "required_fixed32", jsonFieldName: "requiredFixed32", swiftFieldName: "requiredFixed32")
      try visitor.visitSingularField(fieldType: ProtobufFixed64.self, value: _requiredFixed64, protoFieldNumber: 8, protoFieldName: "required_fixed64", jsonFieldName: "requiredFixed64", swiftFieldName: "requiredFixed64")
      try visitor.visitSingularField(fieldType: ProtobufSFixed32.self, value: _requiredSfixed32, protoFieldNumber: 9, protoFieldName: "required_sfixed32", jsonFieldName: "requiredSfixed32", swiftFieldName: "requiredSfixed32")
      try visitor.visitSingularField(fieldType: ProtobufSFixed64.self, value: _requiredSfixed64, protoFieldNumber: 10, protoFieldName: "required_sfixed64", jsonFieldName: "requiredSfixed64", swiftFieldName: "requiredSfixed64")
      try visitor.visitSingularField(fieldType: ProtobufFloat.self, value: _requiredFloat, protoFieldNumber: 11, protoFieldName: "required_float", jsonFieldName: "requiredFloat", swiftFieldName: "requiredFloat")
      try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _requiredDouble, protoFieldNumber: 12, protoFieldName: "required_double", jsonFieldName: "requiredDouble", swiftFieldName: "requiredDouble")
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _requiredBool, protoFieldNumber: 13, protoFieldName: "required_bool", jsonFieldName: "requiredBool", swiftFieldName: "requiredBool")
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: _requiredString, protoFieldNumber: 14, protoFieldName: "required_string", jsonFieldName: "requiredString", swiftFieldName: "requiredString")
      try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: _requiredBytes, protoFieldNumber: 15, protoFieldName: "required_bytes", jsonFieldName: "requiredBytes", swiftFieldName: "requiredBytes")
      if let v = _requiredGroup {
        try visitor.visitSingularGroupField(value: v, protoFieldNumber: 16, protoFieldName: "requiredgroup", jsonFieldName: "requiredgroup", swiftFieldName: "requiredGroup")
      }
      if let v = _requiredNestedMessage {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 18, protoFieldName: "required_nested_message", jsonFieldName: "requiredNestedMessage", swiftFieldName: "requiredNestedMessage")
      }
      if let v = _requiredForeignMessage {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 19, protoFieldName: "required_foreign_message", jsonFieldName: "requiredForeignMessage", swiftFieldName: "requiredForeignMessage")
      }
      if let v = _requiredImportMessage {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 20, protoFieldName: "required_import_message", jsonFieldName: "requiredImportMessage", swiftFieldName: "requiredImportMessage")
      }
      try visitor.visitSingularField(fieldType: ProtobufUnittest_TestAllRequiredTypes.NestedEnum.self, value: _requiredNestedEnum, protoFieldNumber: 21, protoFieldName: "required_nested_enum", jsonFieldName: "requiredNestedEnum", swiftFieldName: "requiredNestedEnum")
      try visitor.visitSingularField(fieldType: ProtobufUnittest_ForeignEnum.self, value: _requiredForeignEnum, protoFieldNumber: 22, protoFieldName: "required_foreign_enum", jsonFieldName: "requiredForeignEnum", swiftFieldName: "requiredForeignEnum")
      try visitor.visitSingularField(fieldType: ProtobufUnittestImport_ImportEnum.self, value: _requiredImportEnum, protoFieldNumber: 23, protoFieldName: "required_import_enum", jsonFieldName: "requiredImportEnum", swiftFieldName: "requiredImportEnum")
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: _requiredStringPiece, protoFieldNumber: 24, protoFieldName: "required_string_piece", jsonFieldName: "requiredStringPiece", swiftFieldName: "requiredStringPiece")
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: _requiredCord, protoFieldNumber: 25, protoFieldName: "required_cord", jsonFieldName: "requiredCord", swiftFieldName: "requiredCord")
      if let v = _requiredPublicImportMessage {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 26, protoFieldName: "required_public_import_message", jsonFieldName: "requiredPublicImportMessage", swiftFieldName: "requiredPublicImportMessage")
      }
      if let v = _requiredLazyMessage {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 27, protoFieldName: "required_lazy_message", jsonFieldName: "requiredLazyMessage", swiftFieldName: "requiredLazyMessage")
      }
      try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: _defaultInt32, protoFieldNumber: 61, protoFieldName: "default_int32", jsonFieldName: "defaultInt32", swiftFieldName: "defaultInt32")
      try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _defaultInt64, protoFieldNumber: 62, protoFieldName: "default_int64", jsonFieldName: "defaultInt64", swiftFieldName: "defaultInt64")
      try visitor.visitSingularField(fieldType: ProtobufUInt32.self, value: _defaultUint32, protoFieldNumber: 63, protoFieldName: "default_uint32", jsonFieldName: "defaultUint32", swiftFieldName: "defaultUint32")
      try visitor.visitSingularField(fieldType: ProtobufUInt64.self, value: _defaultUint64, protoFieldNumber: 64, protoFieldName: "default_uint64", jsonFieldName: "defaultUint64", swiftFieldName: "defaultUint64")
      try visitor.visitSingularField(fieldType: ProtobufSInt32.self, value: _defaultSint32, protoFieldNumber: 65, protoFieldName: "default_sint32", jsonFieldName: "defaultSint32", swiftFieldName: "defaultSint32")
      try visitor.visitSingularField(fieldType: ProtobufSInt64.self, value: _defaultSint64, protoFieldNumber: 66, protoFieldName: "default_sint64", jsonFieldName: "defaultSint64", swiftFieldName: "defaultSint64")
      try visitor.visitSingularField(fieldType: ProtobufFixed32.self, value: _defaultFixed32, protoFieldNumber: 67, protoFieldName: "default_fixed32", jsonFieldName: "defaultFixed32", swiftFieldName: "defaultFixed32")
      try visitor.visitSingularField(fieldType: ProtobufFixed64.self, value: _defaultFixed64, protoFieldNumber: 68, protoFieldName: "default_fixed64", jsonFieldName: "defaultFixed64", swiftFieldName: "defaultFixed64")
      try visitor.visitSingularField(fieldType: ProtobufSFixed32.self, value: _defaultSfixed32, protoFieldNumber: 69, protoFieldName: "default_sfixed32", jsonFieldName: "defaultSfixed32", swiftFieldName: "defaultSfixed32")
      try visitor.visitSingularField(fieldType: ProtobufSFixed64.self, value: _defaultSfixed64, protoFieldNumber: 70, protoFieldName: "default_sfixed64", jsonFieldName: "defaultSfixed64", swiftFieldName: "defaultSfixed64")
      try visitor.visitSingularField(fieldType: ProtobufFloat.self, value: _defaultFloat, protoFieldNumber: 71, protoFieldName: "default_float", jsonFieldName: "defaultFloat", swiftFieldName: "defaultFloat")
      try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _defaultDouble, protoFieldNumber: 72, protoFieldName: "default_double", jsonFieldName: "defaultDouble", swiftFieldName: "defaultDouble")
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _defaultBool, protoFieldNumber: 73, protoFieldName: "default_bool", jsonFieldName: "defaultBool", swiftFieldName: "defaultBool")
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: _defaultString, protoFieldNumber: 74, protoFieldName: "default_string", jsonFieldName: "defaultString", swiftFieldName: "defaultString")
      try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: _defaultBytes, protoFieldNumber: 75, protoFieldName: "default_bytes", jsonFieldName: "defaultBytes", swiftFieldName: "defaultBytes")
      try visitor.visitSingularField(fieldType: ProtobufUnittest_TestAllRequiredTypes.NestedEnum.self, value: _defaultNestedEnum, protoFieldNumber: 81, protoFieldName: "default_nested_enum", jsonFieldName: "defaultNestedEnum", swiftFieldName: "defaultNestedEnum")
      try visitor.visitSingularField(fieldType: ProtobufUnittest_ForeignEnum.self, value: _defaultForeignEnum, protoFieldNumber: 82, protoFieldName: "default_foreign_enum", jsonFieldName: "defaultForeignEnum", swiftFieldName: "defaultForeignEnum")
      try visitor.visitSingularField(fieldType: ProtobufUnittestImport_ImportEnum.self, value: _defaultImportEnum, protoFieldNumber: 83, protoFieldName: "default_import_enum", jsonFieldName: "defaultImportEnum", swiftFieldName: "defaultImportEnum")
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: _defaultStringPiece, protoFieldNumber: 84, protoFieldName: "default_string_piece", jsonFieldName: "defaultStringPiece", swiftFieldName: "defaultStringPiece")
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: _defaultCord, protoFieldNumber: 85, protoFieldName: "default_cord", jsonFieldName: "defaultCord", swiftFieldName: "defaultCord")
      try _oneofField.traverse(visitor: &visitor, start: 111, end: 115)
      unknown.traverse(visitor: &visitor)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _requiredInt32 != other._requiredInt32 {return false}
      if _requiredInt64 != other._requiredInt64 {return false}
      if _requiredUint32 != other._requiredUint32 {return false}
      if _requiredUint64 != other._requiredUint64 {return false}
      if _requiredSint32 != other._requiredSint32 {return false}
      if _requiredSint64 != other._requiredSint64 {return false}
      if _requiredFixed32 != other._requiredFixed32 {return false}
      if _requiredFixed64 != other._requiredFixed64 {return false}
      if _requiredSfixed32 != other._requiredSfixed32 {return false}
      if _requiredSfixed64 != other._requiredSfixed64 {return false}
      if _requiredFloat != other._requiredFloat {return false}
      if _requiredDouble != other._requiredDouble {return false}
      if _requiredBool != other._requiredBool {return false}
      if _requiredString != other._requiredString {return false}
      if _requiredBytes != other._requiredBytes {return false}
      if _requiredGroup != other._requiredGroup {return false}
      if _requiredNestedMessage != other._requiredNestedMessage {return false}
      if _requiredForeignMessage != other._requiredForeignMessage {return false}
      if _requiredImportMessage != other._requiredImportMessage {return false}
      if _requiredNestedEnum != other._requiredNestedEnum {return false}
      if _requiredForeignEnum != other._requiredForeignEnum {return false}
      if _requiredImportEnum != other._requiredImportEnum {return false}
      if _requiredStringPiece != other._requiredStringPiece {return false}
      if _requiredCord != other._requiredCord {return false}
      if _requiredPublicImportMessage != other._requiredPublicImportMessage {return false}
      if _requiredLazyMessage != other._requiredLazyMessage {return false}
      if _defaultInt32 != other._defaultInt32 {return false}
      if _defaultInt64 != other._defaultInt64 {return false}
      if _defaultUint32 != other._defaultUint32 {return false}
      if _defaultUint64 != other._defaultUint64 {return false}
      if _defaultSint32 != other._defaultSint32 {return false}
      if _defaultSint64 != other._defaultSint64 {return false}
      if _defaultFixed32 != other._defaultFixed32 {return false}
      if _defaultFixed64 != other._defaultFixed64 {return false}
      if _defaultSfixed32 != other._defaultSfixed32 {return false}
      if _defaultSfixed64 != other._defaultSfixed64 {return false}
      if _defaultFloat != other._defaultFloat {return false}
      if _defaultDouble != other._defaultDouble {return false}
      if _defaultBool != other._defaultBool {return false}
      if _defaultString != other._defaultString {return false}
      if _defaultBytes != other._defaultBytes {return false}
      if _defaultNestedEnum != other._defaultNestedEnum {return false}
      if _defaultForeignEnum != other._defaultForeignEnum {return false}
      if _defaultImportEnum != other._defaultImportEnum {return false}
      if _defaultStringPiece != other._defaultStringPiece {return false}
      if _defaultCord != other._defaultCord {return false}
      if _oneofField != other._oneofField {return false}
      if unknown != other.unknown {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone.unknown = unknown
      clone._requiredInt32 = _requiredInt32
      clone._requiredInt64 = _requiredInt64
      clone._requiredUint32 = _requiredUint32
      clone._requiredUint64 = _requiredUint64
      clone._requiredSint32 = _requiredSint32
      clone._requiredSint64 = _requiredSint64
      clone._requiredFixed32 = _requiredFixed32
      clone._requiredFixed64 = _requiredFixed64
      clone._requiredSfixed32 = _requiredSfixed32
      clone._requiredSfixed64 = _requiredSfixed64
      clone._requiredFloat = _requiredFloat
      clone._requiredDouble = _requiredDouble
      clone._requiredBool = _requiredBool
      clone._requiredString = _requiredString
      clone._requiredBytes = _requiredBytes
      clone._requiredGroup = _requiredGroup
      clone._requiredNestedMessage = _requiredNestedMessage
      clone._requiredForeignMessage = _requiredForeignMessage
      clone._requiredImportMessage = _requiredImportMessage
      clone._requiredNestedEnum = _requiredNestedEnum
      clone._requiredForeignEnum = _requiredForeignEnum
      clone._requiredImportEnum = _requiredImportEnum
      clone._requiredStringPiece = _requiredStringPiece
      clone._requiredCord = _requiredCord
      clone._requiredPublicImportMessage = _requiredPublicImportMessage
      clone._requiredLazyMessage = _requiredLazyMessage
      clone._defaultInt32 = _defaultInt32
      clone._defaultInt64 = _defaultInt64
      clone._defaultUint32 = _defaultUint32
      clone._defaultUint64 = _defaultUint64
      clone._defaultSint32 = _defaultSint32
      clone._defaultSint64 = _defaultSint64
      clone._defaultFixed32 = _defaultFixed32
      clone._defaultFixed64 = _defaultFixed64
      clone._defaultSfixed32 = _defaultSfixed32
      clone._defaultSfixed64 = _defaultSfixed64
      clone._defaultFloat = _defaultFloat
      clone._defaultDouble = _defaultDouble
      clone._defaultBool = _defaultBool
      clone._defaultString = _defaultString
      clone._defaultBytes = _defaultBytes
      clone._defaultNestedEnum = _defaultNestedEnum
      clone._defaultForeignEnum = _defaultForeignEnum
      clone._defaultImportEnum = _defaultImportEnum
      clone._defaultStringPiece = _defaultStringPiece
      clone._defaultCord = _defaultCord
      clone._oneofField = _oneofField
      return clone
    }
  }

  private var _storage = _StorageClass()

  public enum OneOf_OneofField: ExpressibleByNilLiteral, ProtobufOneofEnum {
    case oneofUint32(UInt32)
    case oneofNestedMessage(ProtobufUnittest_TestAllRequiredTypes.NestedMessage)
    case oneofString(String)
    case oneofBytes(Data)
    case None

    public init(nilLiteral: ()) {
      self = .None
    }

    public init() {
      self = .None
    }

    public mutating func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      if self != .None && setter.rejectConflictingOneof {
        throw ProtobufDecodingError.duplicatedOneOf
      }
      let handled: Bool
      switch protoFieldNumber {
      case 111:
        var value: UInt32?
        handled = try setter.decodeOptionalField(fieldType: ProtobufUInt32.self, value: &value)
        if let value = value, handled {
          self = .oneofUint32(value)
        }
      case 112:
        var value: ProtobufUnittest_TestAllRequiredTypes.NestedMessage?
        handled = try setter.decodeOptionalMessageField(fieldType: ProtobufUnittest_TestAllRequiredTypes.NestedMessage.self, value: &value)
        if let value = value, handled {
          self = .oneofNestedMessage(value)
        }
      case 113:
        var value: String?
        handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &value)
        if let value = value, handled {
          self = .oneofString(value)
        }
      case 114:
        var value: Data?
        handled = try setter.decodeOptionalField(fieldType: ProtobufBytes.self, value: &value)
        if let value = value, handled {
          self = .oneofBytes(value)
        }
      default:
        handled = false
        self = .None
      }
      return handled
    }

    public func traverse(visitor: inout ProtobufVisitor, start: Int, end: Int) throws {
      switch self {
      case .oneofUint32(let v):
        if start <= 111 && 111 < end {
          try visitor.visitSingularField(fieldType: ProtobufUInt32.self, value: v, protoFieldNumber: 111, protoFieldName: "oneof_uint32", jsonFieldName: "oneofUint32", swiftFieldName: "oneofUint32")
        }
      case .oneofNestedMessage(let v):
        if start <= 112 && 112 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 112, protoFieldName: "oneof_nested_message", jsonFieldName: "oneofNestedMessage", swiftFieldName: "oneofNestedMessage")
        }
      case .oneofString(let v):
        if start <= 113 && 113 < end {
          try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 113, protoFieldName: "oneof_string", jsonFieldName: "oneofString", swiftFieldName: "oneofString")
        }
      case .oneofBytes(let v):
        if start <= 114 && 114 < end {
          try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: v, protoFieldNumber: 114, protoFieldName: "oneof_bytes", jsonFieldName: "oneofBytes", swiftFieldName: "oneofBytes")
        }
      case .None:
        break
      }
    }
  }

  public enum NestedEnum: ProtobufEnum {
    public typealias RawValue = Int
    case foo // = 1
    case bar // = 2
    case baz // = 3

    ///   Intentionally negative.
    case neg // = -1

    public init() {
      self = .foo
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .foo
      case 2: self = .bar
      case 3: self = .baz
      case -1: self = .neg
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "foo": self = .foo
      case "bar": self = .bar
      case "baz": self = .baz
      case "neg": self = .neg
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "FOO": self = .foo
      case "BAR": self = .bar
      case "BAZ": self = .baz
      case "NEG": self = .neg
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "FOO": self = .foo
      case "BAR": self = .bar
      case "BAZ": self = .baz
      case "NEG": self = .neg
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .foo: return 1
        case .bar: return 2
        case .baz: return 3
        case .neg: return -1
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .foo: return "\"FOO\""
        case .bar: return "\"BAR\""
        case .baz: return "\"BAZ\""
        case .neg: return "\"NEG\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .foo: return ".foo"
        case .bar: return ".bar"
        case .baz: return ".baz"
        case .neg: return ".neg"
        }
      }
    }

  }

  public struct NestedMessage: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "ProtobufUnittest_TestAllRequiredTypes.NestedMessage"}
    public var protoMessageName: String {return "NestedMessage"}
    public var protoPackageName: String {return "protobuf_unittest"}
    public var jsonFieldNames: [String: Int] {return [
      "bb": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "bb": 1,
    ]}

    var unknown = ProtobufUnknownStorage()

    ///   The field name "b" fails to compile in proto1 because it conflicts with
    ///   a local variable named "b" in one of the generated methods.  Doh.
    ///   This file needs to compile in proto1 to test backwards-compatibility.
    public var bb: Int32 = 0

    public init() {}

    public init(bb: Int32 = 0)
    {
      self.bb = bb
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufInt32.self, value: &bb)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: bb, protoFieldNumber: 1, protoFieldName: "bb", jsonFieldName: "bb", swiftFieldName: "bb")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestAllRequiredTypes.NestedMessage) -> Bool {
      if bb != other.bb {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct RequiredGroup: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "ProtobufUnittest_TestAllRequiredTypes.RequiredGroup"}
    public var protoMessageName: String {return "RequiredGroup"}
    public var protoPackageName: String {return "protobuf_unittest"}
    public var jsonFieldNames: [String: Int] {return [
      "a": 17,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "a": 17,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var a: Int32 = 0

    public init() {}

    public init(a: Int32 = 0)
    {
      self.a = a
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 17: handled = try setter.decodeRequiredField(fieldType: ProtobufInt32.self, value: &a)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: a, protoFieldNumber: 17, protoFieldName: "a", jsonFieldName: "a", swiftFieldName: "a")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestAllRequiredTypes.RequiredGroup) -> Bool {
      if a != other.a {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  ///   Singular
  public var requiredInt32: Int32 {
    get {return _storage._requiredInt32}
    set {_uniqueStorage()._requiredInt32 = newValue}
  }

  public var requiredInt64: Int64 {
    get {return _storage._requiredInt64}
    set {_uniqueStorage()._requiredInt64 = newValue}
  }

  public var requiredUint32: UInt32 {
    get {return _storage._requiredUint32}
    set {_uniqueStorage()._requiredUint32 = newValue}
  }

  public var requiredUint64: UInt64 {
    get {return _storage._requiredUint64}
    set {_uniqueStorage()._requiredUint64 = newValue}
  }

  public var requiredSint32: Int32 {
    get {return _storage._requiredSint32}
    set {_uniqueStorage()._requiredSint32 = newValue}
  }

  public var requiredSint64: Int64 {
    get {return _storage._requiredSint64}
    set {_uniqueStorage()._requiredSint64 = newValue}
  }

  public var requiredFixed32: UInt32 {
    get {return _storage._requiredFixed32}
    set {_uniqueStorage()._requiredFixed32 = newValue}
  }

  public var requiredFixed64: UInt64 {
    get {return _storage._requiredFixed64}
    set {_uniqueStorage()._requiredFixed64 = newValue}
  }

  public var requiredSfixed32: Int32 {
    get {return _storage._requiredSfixed32}
    set {_uniqueStorage()._requiredSfixed32 = newValue}
  }

  public var requiredSfixed64: Int64 {
    get {return _storage._requiredSfixed64}
    set {_uniqueStorage()._requiredSfixed64 = newValue}
  }

  public var requiredFloat: Float {
    get {return _storage._requiredFloat}
    set {_uniqueStorage()._requiredFloat = newValue}
  }

  public var requiredDouble: Double {
    get {return _storage._requiredDouble}
    set {_uniqueStorage()._requiredDouble = newValue}
  }

  public var requiredBool: Bool {
    get {return _storage._requiredBool}
    set {_uniqueStorage()._requiredBool = newValue}
  }

  public var requiredString: String {
    get {return _storage._requiredString}
    set {_uniqueStorage()._requiredString = newValue}
  }

  public var requiredBytes: Data {
    get {return _storage._requiredBytes}
    set {_uniqueStorage()._requiredBytes = newValue}
  }

  public var requiredGroup: ProtobufUnittest_TestAllRequiredTypes.RequiredGroup {
    get {return _storage._requiredGroup ?? ProtobufUnittest_TestAllRequiredTypes.RequiredGroup()}
    set {_uniqueStorage()._requiredGroup = newValue}
  }

  public var requiredNestedMessage: ProtobufUnittest_TestAllRequiredTypes.NestedMessage {
    get {return _storage._requiredNestedMessage ?? ProtobufUnittest_TestAllRequiredTypes.NestedMessage()}
    set {_uniqueStorage()._requiredNestedMessage = newValue}
  }

  public var requiredForeignMessage: ProtobufUnittest_ForeignMessage {
    get {return _storage._requiredForeignMessage ?? ProtobufUnittest_ForeignMessage()}
    set {_uniqueStorage()._requiredForeignMessage = newValue}
  }

  public var requiredImportMessage: ProtobufUnittestImport_ImportMessage {
    get {return _storage._requiredImportMessage ?? ProtobufUnittestImport_ImportMessage()}
    set {_uniqueStorage()._requiredImportMessage = newValue}
  }

  public var requiredNestedEnum: ProtobufUnittest_TestAllRequiredTypes.NestedEnum {
    get {return _storage._requiredNestedEnum}
    set {_uniqueStorage()._requiredNestedEnum = newValue}
  }

  public var requiredForeignEnum: ProtobufUnittest_ForeignEnum {
    get {return _storage._requiredForeignEnum}
    set {_uniqueStorage()._requiredForeignEnum = newValue}
  }

  public var requiredImportEnum: ProtobufUnittestImport_ImportEnum {
    get {return _storage._requiredImportEnum}
    set {_uniqueStorage()._requiredImportEnum = newValue}
  }

  public var requiredStringPiece: String {
    get {return _storage._requiredStringPiece}
    set {_uniqueStorage()._requiredStringPiece = newValue}
  }

  public var requiredCord: String {
    get {return _storage._requiredCord}
    set {_uniqueStorage()._requiredCord = newValue}
  }

  ///   Defined in unittest_import_public.proto
  public var requiredPublicImportMessage: ProtobufUnittestImport_PublicImportMessage {
    get {return _storage._requiredPublicImportMessage ?? ProtobufUnittestImport_PublicImportMessage()}
    set {_uniqueStorage()._requiredPublicImportMessage = newValue}
  }

  public var requiredLazyMessage: ProtobufUnittest_TestAllRequiredTypes.NestedMessage {
    get {return _storage._requiredLazyMessage ?? ProtobufUnittest_TestAllRequiredTypes.NestedMessage()}
    set {_uniqueStorage()._requiredLazyMessage = newValue}
  }

  ///   Singular with defaults
  public var defaultInt32: Int32 {
    get {return _storage._defaultInt32}
    set {_uniqueStorage()._defaultInt32 = newValue}
  }

  public var defaultInt64: Int64 {
    get {return _storage._defaultInt64}
    set {_uniqueStorage()._defaultInt64 = newValue}
  }

  public var defaultUint32: UInt32 {
    get {return _storage._defaultUint32}
    set {_uniqueStorage()._defaultUint32 = newValue}
  }

  public var defaultUint64: UInt64 {
    get {return _storage._defaultUint64}
    set {_uniqueStorage()._defaultUint64 = newValue}
  }

  public var defaultSint32: Int32 {
    get {return _storage._defaultSint32}
    set {_uniqueStorage()._defaultSint32 = newValue}
  }

  public var defaultSint64: Int64 {
    get {return _storage._defaultSint64}
    set {_uniqueStorage()._defaultSint64 = newValue}
  }

  public var defaultFixed32: UInt32 {
    get {return _storage._defaultFixed32}
    set {_uniqueStorage()._defaultFixed32 = newValue}
  }

  public var defaultFixed64: UInt64 {
    get {return _storage._defaultFixed64}
    set {_uniqueStorage()._defaultFixed64 = newValue}
  }

  public var defaultSfixed32: Int32 {
    get {return _storage._defaultSfixed32}
    set {_uniqueStorage()._defaultSfixed32 = newValue}
  }

  public var defaultSfixed64: Int64 {
    get {return _storage._defaultSfixed64}
    set {_uniqueStorage()._defaultSfixed64 = newValue}
  }

  public var defaultFloat: Float {
    get {return _storage._defaultFloat}
    set {_uniqueStorage()._defaultFloat = newValue}
  }

  public var defaultDouble: Double {
    get {return _storage._defaultDouble}
    set {_uniqueStorage()._defaultDouble = newValue}
  }

  public var defaultBool: Bool {
    get {return _storage._defaultBool}
    set {_uniqueStorage()._defaultBool = newValue}
  }

  public var defaultString: String {
    get {return _storage._defaultString}
    set {_uniqueStorage()._defaultString = newValue}
  }

  public var defaultBytes: Data {
    get {return _storage._defaultBytes}
    set {_uniqueStorage()._defaultBytes = newValue}
  }

  public var defaultNestedEnum: ProtobufUnittest_TestAllRequiredTypes.NestedEnum {
    get {return _storage._defaultNestedEnum}
    set {_uniqueStorage()._defaultNestedEnum = newValue}
  }

  public var defaultForeignEnum: ProtobufUnittest_ForeignEnum {
    get {return _storage._defaultForeignEnum}
    set {_uniqueStorage()._defaultForeignEnum = newValue}
  }

  public var defaultImportEnum: ProtobufUnittestImport_ImportEnum {
    get {return _storage._defaultImportEnum}
    set {_uniqueStorage()._defaultImportEnum = newValue}
  }

  public var defaultStringPiece: String {
    get {return _storage._defaultStringPiece}
    set {_uniqueStorage()._defaultStringPiece = newValue}
  }

  public var defaultCord: String {
    get {return _storage._defaultCord}
    set {_uniqueStorage()._defaultCord = newValue}
  }

  public var oneofUint32: UInt32? {
    get {
      if case .oneofUint32(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .oneofUint32(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var oneofNestedMessage: ProtobufUnittest_TestAllRequiredTypes.NestedMessage? {
    get {
      if case .oneofNestedMessage(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .oneofNestedMessage(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var oneofString: String? {
    get {
      if case .oneofString(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .oneofString(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var oneofBytes: Data? {
    get {
      if case .oneofBytes(let v) = _storage._oneofField {
        return v
      }
      return nil
    }
    set {
      if let newValue = newValue {
        _uniqueStorage()._oneofField = .oneofBytes(newValue)
      } else {
        _uniqueStorage()._oneofField = .None
      }
    }
  }

  public var _oneofField: OneOf_OneofField {
    get {return _storage._oneofField}
    set {
      _uniqueStorage()._oneofField = newValue
    }
  }

  public init() {}

  public init(requiredInt32: Int32 = 0,
    requiredInt64: Int64 = 0,
    requiredUint32: UInt32 = 0,
    requiredUint64: UInt64 = 0,
    requiredSint32: Int32 = 0,
    requiredSint64: Int64 = 0,
    requiredFixed32: UInt32 = 0,
    requiredFixed64: UInt64 = 0,
    requiredSfixed32: Int32 = 0,
    requiredSfixed64: Int64 = 0,
    requiredFloat: Float = 0,
    requiredDouble: Double = 0,
    requiredBool: Bool = false,
    requiredString: String = "",
    requiredBytes: Data = Data(),
    requiredGroup: ProtobufUnittest_TestAllRequiredTypes.RequiredGroup? = nil,
    requiredNestedMessage: ProtobufUnittest_TestAllRequiredTypes.NestedMessage? = nil,
    requiredForeignMessage: ProtobufUnittest_ForeignMessage? = nil,
    requiredImportMessage: ProtobufUnittestImport_ImportMessage? = nil,
    requiredNestedEnum: ProtobufUnittest_TestAllRequiredTypes.NestedEnum = ProtobufUnittest_TestAllRequiredTypes.NestedEnum.foo,
    requiredForeignEnum: ProtobufUnittest_ForeignEnum = ProtobufUnittest_ForeignEnum.foreignFoo,
    requiredImportEnum: ProtobufUnittestImport_ImportEnum = ProtobufUnittestImport_ImportEnum.importFoo,
    requiredStringPiece: String = "",
    requiredCord: String = "",
    requiredPublicImportMessage: ProtobufUnittestImport_PublicImportMessage? = nil,
    requiredLazyMessage: ProtobufUnittest_TestAllRequiredTypes.NestedMessage? = nil,
    defaultInt32: Int32 = 41,
    defaultInt64: Int64 = 42,
    defaultUint32: UInt32 = 43,
    defaultUint64: UInt64 = 44,
    defaultSint32: Int32 = -45,
    defaultSint64: Int64 = 46,
    defaultFixed32: UInt32 = 47,
    defaultFixed64: UInt64 = 48,
    defaultSfixed32: Int32 = 49,
    defaultSfixed64: Int64 = -50,
    defaultFloat: Float = 51.5,
    defaultDouble: Double = 52000,
    defaultBool: Bool = true,
    defaultString: String = "hello",
    defaultBytes: Data = Data(bytes: [119, 111, 114, 108, 100]),
    defaultNestedEnum: ProtobufUnittest_TestAllRequiredTypes.NestedEnum = ProtobufUnittest_TestAllRequiredTypes.NestedEnum.bar,
    defaultForeignEnum: ProtobufUnittest_ForeignEnum = ProtobufUnittest_ForeignEnum.foreignBar,
    defaultImportEnum: ProtobufUnittestImport_ImportEnum = ProtobufUnittestImport_ImportEnum.importBar,
    defaultStringPiece: String = "abc",
    defaultCord: String = "123",
    oneofUint32: UInt32? = nil,
    oneofNestedMessage: ProtobufUnittest_TestAllRequiredTypes.NestedMessage? = nil,
    oneofString: String? = nil,
    oneofBytes: Data? = nil)
  {
    let storage = _uniqueStorage()
    storage._requiredInt32 = requiredInt32
    storage._requiredInt64 = requiredInt64
    storage._requiredUint32 = requiredUint32
    storage._requiredUint64 = requiredUint64
    storage._requiredSint32 = requiredSint32
    storage._requiredSint64 = requiredSint64
    storage._requiredFixed32 = requiredFixed32
    storage._requiredFixed64 = requiredFixed64
    storage._requiredSfixed32 = requiredSfixed32
    storage._requiredSfixed64 = requiredSfixed64
    storage._requiredFloat = requiredFloat
    storage._requiredDouble = requiredDouble
    storage._requiredBool = requiredBool
    storage._requiredString = requiredString
    storage._requiredBytes = requiredBytes
    storage._requiredGroup = requiredGroup
    storage._requiredNestedMessage = requiredNestedMessage
    storage._requiredForeignMessage = requiredForeignMessage
    storage._requiredImportMessage = requiredImportMessage
    storage._requiredNestedEnum = requiredNestedEnum
    storage._requiredForeignEnum = requiredForeignEnum
    storage._requiredImportEnum = requiredImportEnum
    storage._requiredStringPiece = requiredStringPiece
    storage._requiredCord = requiredCord
    storage._requiredPublicImportMessage = requiredPublicImportMessage
    storage._requiredLazyMessage = requiredLazyMessage
    storage._defaultInt32 = defaultInt32
    storage._defaultInt64 = defaultInt64
    storage._defaultUint32 = defaultUint32
    storage._defaultUint64 = defaultUint64
    storage._defaultSint32 = defaultSint32
    storage._defaultSint64 = defaultSint64
    storage._defaultFixed32 = defaultFixed32
    storage._defaultFixed64 = defaultFixed64
    storage._defaultSfixed32 = defaultSfixed32
    storage._defaultSfixed64 = defaultSfixed64
    storage._defaultFloat = defaultFloat
    storage._defaultDouble = defaultDouble
    storage._defaultBool = defaultBool
    storage._defaultString = defaultString
    storage._defaultBytes = defaultBytes
    storage._defaultNestedEnum = defaultNestedEnum
    storage._defaultForeignEnum = defaultForeignEnum
    storage._defaultImportEnum = defaultImportEnum
    storage._defaultStringPiece = defaultStringPiece
    storage._defaultCord = defaultCord
    if let v = oneofUint32 {
      storage._oneofField = .oneofUint32(v)
    }
    if let v = oneofNestedMessage {
      storage._oneofField = .oneofNestedMessage(v)
    }
    if let v = oneofString {
      storage._oneofField = .oneofString(v)
    }
    if let v = oneofBytes {
      storage._oneofField = .oneofBytes(v)
    }
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestAllRequiredTypes) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct ProtobufUnittest_TestSomeRequiredTypes: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "ProtobufUnittest_TestSomeRequiredTypes"}
  public var protoMessageName: String {return "TestSomeRequiredTypes"}
  public var protoPackageName: String {return "protobuf_unittest"}
  public var jsonFieldNames: [String: Int] {return [
    "requiredInt32": 1,
    "requiredFloat": 2,
    "requiredBool": 3,
    "requiredString": 4,
    "requiredBytes": 5,
    "requiredNestedEnum": 6,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "required_int32": 1,
    "required_float": 2,
    "required_bool": 3,
    "required_string": 4,
    "required_bytes": 5,
    "required_nested_enum": 6,
  ]}

  var unknown = ProtobufUnknownStorage()

  public enum NestedEnum: ProtobufEnum {
    public typealias RawValue = Int
    case foo // = 1

    public init() {
      self = .foo
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .foo
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "foo": self = .foo
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "FOO": self = .foo
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "FOO": self = .foo
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .foo: return 1
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .foo: return "\"FOO\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .foo: return ".foo"
        }
      }
    }

  }

  ///   Singular
  public var requiredInt32: Int32 = 0

  public var requiredFloat: Float = 0

  public var requiredBool: Bool = false

  public var requiredString: String = ""

  public var requiredBytes: Data = Data()

  public var requiredNestedEnum: ProtobufUnittest_TestSomeRequiredTypes.NestedEnum = ProtobufUnittest_TestSomeRequiredTypes.NestedEnum.foo

  public init() {}

  public init(requiredInt32: Int32 = 0,
    requiredFloat: Float = 0,
    requiredBool: Bool = false,
    requiredString: String = "",
    requiredBytes: Data = Data(),
    requiredNestedEnum: ProtobufUnittest_TestSomeRequiredTypes.NestedEnum = ProtobufUnittest_TestSomeRequiredTypes.NestedEnum.foo)
  {
    self.requiredInt32 = requiredInt32
    self.requiredFloat = requiredFloat
    self.requiredBool = requiredBool
    self.requiredString = requiredString
    self.requiredBytes = requiredBytes
    self.requiredNestedEnum = requiredNestedEnum
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufInt32.self, value: &requiredInt32)
    case 2: handled = try setter.decodeRequiredField(fieldType: ProtobufFloat.self, value: &requiredFloat)
    case 3: handled = try setter.decodeRequiredField(fieldType: ProtobufBool.self, value: &requiredBool)
    case 4: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &requiredString)
    case 5: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &requiredBytes)
    case 6: handled = try setter.decodeRequiredField(fieldType: ProtobufUnittest_TestSomeRequiredTypes.NestedEnum.self, value: &requiredNestedEnum)
    default:
      handled = false
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: requiredInt32, protoFieldNumber: 1, protoFieldName: "required_int32", jsonFieldName: "requiredInt32", swiftFieldName: "requiredInt32")
    try visitor.visitSingularField(fieldType: ProtobufFloat.self, value: requiredFloat, protoFieldNumber: 2, protoFieldName: "required_float", jsonFieldName: "requiredFloat", swiftFieldName: "requiredFloat")
    try visitor.visitSingularField(fieldType: ProtobufBool.self, value: requiredBool, protoFieldNumber: 3, protoFieldName: "required_bool", jsonFieldName: "requiredBool", swiftFieldName: "requiredBool")
    try visitor.visitSingularField(fieldType: ProtobufString.self, value: requiredString, protoFieldNumber: 4, protoFieldName: "required_string", jsonFieldName: "requiredString", swiftFieldName: "requiredString")
    try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: requiredBytes, protoFieldNumber: 5, protoFieldName: "required_bytes", jsonFieldName: "requiredBytes", swiftFieldName: "requiredBytes")
    try visitor.visitSingularField(fieldType: ProtobufUnittest_TestSomeRequiredTypes.NestedEnum.self, value: requiredNestedEnum, protoFieldNumber: 6, protoFieldName: "required_nested_enum", jsonFieldName: "requiredNestedEnum", swiftFieldName: "requiredNestedEnum")
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: ProtobufUnittest_TestSomeRequiredTypes) -> Bool {
    if requiredInt32 != other.requiredInt32 {return false}
    if requiredFloat != other.requiredFloat {return false}
    if requiredBool != other.requiredBool {return false}
    if requiredString != other.requiredString {return false}
    if requiredBytes != other.requiredBytes {return false}
    if requiredNestedEnum != other.requiredNestedEnum {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

public func ==(lhs: ProtobufUnittest_TestAllRequiredTypes.OneOf_OneofField, rhs: ProtobufUnittest_TestAllRequiredTypes.OneOf_OneofField) -> Bool {
  switch (lhs, rhs) {
  case (.oneofUint32(let l), .oneofUint32(let r)): return l == r
  case (.oneofNestedMessage(let l), .oneofNestedMessage(let r)): return l == r
  case (.oneofString(let l), .oneofString(let r)): return l == r
  case (.oneofBytes(let l), .oneofBytes(let r)): return l == r
  case (.None, .None): return true
  default: return false
  }
}
