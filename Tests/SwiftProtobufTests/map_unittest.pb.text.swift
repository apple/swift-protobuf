// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/protobuf/map_unittest.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _3: SwiftProtobuf.ProtobufAPIVersion_3 {}
  typealias Version = _3
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension ProtobufUnittest_MapEnum: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "MAP_ENUM_FOO"),
    1: .same(proto: "MAP_ENUM_BAR"),
    2: .same(proto: "MAP_ENUM_BAZ"),
  ]
}

extension ProtobufUnittest_TestMap: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "map_int32_int32"),
    2: .standard(proto: "map_int64_int64"),
    3: .standard(proto: "map_uint32_uint32"),
    4: .standard(proto: "map_uint64_uint64"),
    5: .standard(proto: "map_sint32_sint32"),
    6: .standard(proto: "map_sint64_sint64"),
    7: .standard(proto: "map_fixed32_fixed32"),
    8: .standard(proto: "map_fixed64_fixed64"),
    9: .standard(proto: "map_sfixed32_sfixed32"),
    10: .standard(proto: "map_sfixed64_sfixed64"),
    11: .standard(proto: "map_int32_float"),
    12: .standard(proto: "map_int32_double"),
    13: .standard(proto: "map_bool_bool"),
    14: .standard(proto: "map_string_string"),
    15: .standard(proto: "map_int32_bytes"),
    16: .standard(proto: "map_int32_enum"),
    17: .standard(proto: "map_int32_foreign_message"),
    18: .standard(proto: "map_string_foreign_message"),
    19: .standard(proto: "map_int32_all_types"),
  ]
}

extension ProtobufUnittest_TestMapSubmessage: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "test_map"),
  ]
}

extension ProtobufUnittest_TestMessageMap: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "map_int32_message"),
  ]
}

extension ProtobufUnittest_TestSameTypeMap: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "map1"),
    2: .same(proto: "map2"),
  ]
}

extension ProtobufUnittest_TestRequiredMessageMap: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "map_field"),
  ]
}

extension ProtobufUnittest_TestArenaMap: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "map_int32_int32"),
    2: .standard(proto: "map_int64_int64"),
    3: .standard(proto: "map_uint32_uint32"),
    4: .standard(proto: "map_uint64_uint64"),
    5: .standard(proto: "map_sint32_sint32"),
    6: .standard(proto: "map_sint64_sint64"),
    7: .standard(proto: "map_fixed32_fixed32"),
    8: .standard(proto: "map_fixed64_fixed64"),
    9: .standard(proto: "map_sfixed32_sfixed32"),
    10: .standard(proto: "map_sfixed64_sfixed64"),
    11: .standard(proto: "map_int32_float"),
    12: .standard(proto: "map_int32_double"),
    13: .standard(proto: "map_bool_bool"),
    14: .standard(proto: "map_string_string"),
    15: .standard(proto: "map_int32_bytes"),
    16: .standard(proto: "map_int32_enum"),
    17: .standard(proto: "map_int32_foreign_message"),
  ]
}

extension ProtobufUnittest_MessageContainingEnumCalledType: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "type"),
  ]
}

extension ProtobufUnittest_MessageContainingEnumCalledType.TypeEnum: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "TYPE_FOO"),
  ]
}

extension ProtobufUnittest_MessageContainingMapCalledEntry: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "entry"),
  ]
}

extension ProtobufUnittest_TestRecursiveMapMessage: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "a"),
  ]
}
