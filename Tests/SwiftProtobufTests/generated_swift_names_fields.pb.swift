// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: generated_swift_names_fields.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

/// See Makefile for the logic that generates this
/// Protoc errors imply this file is being generated incorrectly
/// Swift compile errors are probably bugs in protoc-gen-swift

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _3: SwiftProtobuf.ProtobufAPIVersion_3 {}
  typealias Version = _3
}

struct SwiftProtoTesting_Generated_GeneratedSwiftReservedFields: @unchecked Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var adjusted: Int32 {
    get {return _storage._adjusted}
    set {_uniqueStorage()._adjusted = newValue}
  }

  var aggregateValue: Int32 {
    get {return _storage._aggregateValue}
    set {_uniqueStorage()._aggregateValue = newValue}
  }

  var allCases: Int32 {
    get {return _storage._allCases}
    set {_uniqueStorage()._allCases = newValue}
  }

  var allowAlias: Int32 {
    get {return _storage._allowAlias}
    set {_uniqueStorage()._allowAlias = newValue}
  }

  var alwaysPrintEnumsAsInts: Int32 {
    get {return _storage._alwaysPrintEnumsAsInts}
    set {_uniqueStorage()._alwaysPrintEnumsAsInts = newValue}
  }

  var alwaysPrintInt64SAsNumbers: Int32 {
    get {return _storage._alwaysPrintInt64SAsNumbers}
    set {_uniqueStorage()._alwaysPrintInt64SAsNumbers = newValue}
  }

  var annotation: Int32 {
    get {return _storage._annotation}
    set {_uniqueStorage()._annotation = newValue}
  }

  var any: Int32 {
    get {return _storage._any}
    set {_uniqueStorage()._any = newValue}
  }

  var anyExtensionField: Int32 {
    get {return _storage._anyExtensionField}
    set {_uniqueStorage()._anyExtensionField = newValue}
  }

  var anyMessageExtension: Int32 {
    get {return _storage._anyMessageExtension}
    set {_uniqueStorage()._anyMessageExtension = newValue}
  }

  var anyMessageStorage: Int32 {
    get {return _storage._anyMessageStorage}
    set {_uniqueStorage()._anyMessageStorage = newValue}
  }

  var anyUnpackError: Int32 {
    get {return _storage._anyUnpackError}
    set {_uniqueStorage()._anyUnpackError = newValue}
  }

  var api: Int32 {
    get {return _storage._api}
    set {_uniqueStorage()._api = newValue}
  }

  var appended: Int32 {
    get {return _storage._appended}
    set {_uniqueStorage()._appended = newValue}
  }

  var appendUintHex: Int32 {
    get {return _storage._appendUintHex}
    set {_uniqueStorage()._appendUintHex = newValue}
  }

  var appendUnknown: Int32 {
    get {return _storage._appendUnknown}
    set {_uniqueStorage()._appendUnknown = newValue}
  }

  var areAllInitialized: Int32 {
    get {return _storage._areAllInitialized}
    set {_uniqueStorage()._areAllInitialized = newValue}
  }

  var array: Int32 {
    get {return _storage._array}
    set {_uniqueStorage()._array = newValue}
  }

  var arrayDepth: Int32 {
    get {return _storage._arrayDepth}
    set {_uniqueStorage()._arrayDepth = newValue}
  }

  var arrayLiteral: Int32 {
    get {return _storage._arrayLiteral}
    set {_uniqueStorage()._arrayLiteral = newValue}
  }

  var arraySeparator: Int32 {
    get {return _storage._arraySeparator}
    set {_uniqueStorage()._arraySeparator = newValue}
  }

  var `as`: Int32 {
    get {return _storage._as}
    set {_uniqueStorage()._as = newValue}
  }

  var asciiOpenCurlyBracket: Int32 {
    get {return _storage._asciiOpenCurlyBracket}
    set {_uniqueStorage()._asciiOpenCurlyBracket = newValue}
  }

  var asciiZero: Int32 {
    get {return _storage._asciiZero}
    set {_uniqueStorage()._asciiZero = newValue}
  }

  var async: Int32 {
    get {return _storage._async}
    set {_uniqueStorage()._async = newValue}
  }

  var asyncIterator: Int32 {
    get {return _storage._asyncIterator}
    set {_uniqueStorage()._asyncIterator = newValue}
  }

  var asyncIteratorProtocol: Int32 {
    get {return _storage._asyncIteratorProtocol}
    set {_uniqueStorage()._asyncIteratorProtocol = newValue}
  }

  var asyncMessageSequence: Int32 {
    get {return _storage._asyncMessageSequence}
    set {_uniqueStorage()._asyncMessageSequence = newValue}
  }

  var available: Int32 {
    get {return _storage._available}
    set {_uniqueStorage()._available = newValue}
  }

  var b: Int32 {
    get {return _storage._b}
    set {_uniqueStorage()._b = newValue}
  }

  var base: Int32 {
    get {return _storage._base}
    set {_uniqueStorage()._base = newValue}
  }

  var base64Values: Int32 {
    get {return _storage._base64Values}
    set {_uniqueStorage()._base64Values = newValue}
  }

  var baseAddress: Int32 {
    get {return _storage._baseAddress}
    set {_uniqueStorage()._baseAddress = newValue}
  }

  var baseType: Int32 {
    get {return _storage._baseType}
    set {_uniqueStorage()._baseType = newValue}
  }

  var begin: Int32 {
    get {return _storage._begin}
    set {_uniqueStorage()._begin = newValue}
  }

  var binary: Int32 {
    get {return _storage._binary}
    set {_uniqueStorage()._binary = newValue}
  }

  var binaryDecoder: Int32 {
    get {return _storage._binaryDecoder}
    set {_uniqueStorage()._binaryDecoder = newValue}
  }

  var binaryDecodingError: Int32 {
    get {return _storage._binaryDecodingError}
    set {_uniqueStorage()._binaryDecodingError = newValue}
  }

  var binaryDecodingOptions: Int32 {
    get {return _storage._binaryDecodingOptions}
    set {_uniqueStorage()._binaryDecodingOptions = newValue}
  }

  var binaryDelimited: Int32 {
    get {return _storage._binaryDelimited}
    set {_uniqueStorage()._binaryDelimited = newValue}
  }

  var binaryEncoder: Int32 {
    get {return _storage._binaryEncoder}
    set {_uniqueStorage()._binaryEncoder = newValue}
  }

  var binaryEncodingError: Int32 {
    get {return _storage._binaryEncodingError}
    set {_uniqueStorage()._binaryEncodingError = newValue}
  }

  var binaryEncodingMessageSetSizeVisitor: Int32 {
    get {return _storage._binaryEncodingMessageSetSizeVisitor}
    set {_uniqueStorage()._binaryEncodingMessageSetSizeVisitor = newValue}
  }

  var binaryEncodingMessageSetVisitor: Int32 {
    get {return _storage._binaryEncodingMessageSetVisitor}
    set {_uniqueStorage()._binaryEncodingMessageSetVisitor = newValue}
  }

  var binaryEncodingOptions: Int32 {
    get {return _storage._binaryEncodingOptions}
    set {_uniqueStorage()._binaryEncodingOptions = newValue}
  }

  var binaryEncodingSizeVisitor: Int32 {
    get {return _storage._binaryEncodingSizeVisitor}
    set {_uniqueStorage()._binaryEncodingSizeVisitor = newValue}
  }

  var binaryEncodingVisitor: Int32 {
    get {return _storage._binaryEncodingVisitor}
    set {_uniqueStorage()._binaryEncodingVisitor = newValue}
  }

  var binaryOptions: Int32 {
    get {return _storage._binaryOptions}
    set {_uniqueStorage()._binaryOptions = newValue}
  }

  var binaryProtobufDelimitedMessages: Int32 {
    get {return _storage._binaryProtobufDelimitedMessages}
    set {_uniqueStorage()._binaryProtobufDelimitedMessages = newValue}
  }

  var bitPattern: Int32 {
    get {return _storage._bitPattern}
    set {_uniqueStorage()._bitPattern = newValue}
  }

  var body: Int32 {
    get {return _storage._body}
    set {_uniqueStorage()._body = newValue}
  }

  var bool: Int32 {
    get {return _storage._bool}
    set {_uniqueStorage()._bool = newValue}
  }

  var booleanLiteral: Int32 {
    get {return _storage._booleanLiteral}
    set {_uniqueStorage()._booleanLiteral = newValue}
  }

  var booleanLiteralType: Int32 {
    get {return _storage._booleanLiteralType}
    set {_uniqueStorage()._booleanLiteralType = newValue}
  }

  var boolValue: Int32 {
    get {return _storage._boolValue}
    set {_uniqueStorage()._boolValue = newValue}
  }

  var buffer: Int32 {
    get {return _storage._buffer}
    set {_uniqueStorage()._buffer = newValue}
  }

  var bytes: Int32 {
    get {return _storage._bytes}
    set {_uniqueStorage()._bytes = newValue}
  }

  var bytesInGroup: Int32 {
    get {return _storage._bytesInGroup}
    set {_uniqueStorage()._bytesInGroup = newValue}
  }

  var bytesNeeded: Int32 {
    get {return _storage._bytesNeeded}
    set {_uniqueStorage()._bytesNeeded = newValue}
  }

  var bytesRead: Int32 {
    get {return _storage._bytesRead}
    set {_uniqueStorage()._bytesRead = newValue}
  }

  var bytesValue: Int32 {
    get {return _storage._bytesValue}
    set {_uniqueStorage()._bytesValue = newValue}
  }

  var c: Int32 {
    get {return _storage._c}
    set {_uniqueStorage()._c = newValue}
  }

  var capitalizeNext: Int32 {
    get {return _storage._capitalizeNext}
    set {_uniqueStorage()._capitalizeNext = newValue}
  }

  var cardinality: Int32 {
    get {return _storage._cardinality}
    set {_uniqueStorage()._cardinality = newValue}
  }

  var caseIterable: Int32 {
    get {return _storage._caseIterable}
    set {_uniqueStorage()._caseIterable = newValue}
  }

  var ccEnableArenas: Int32 {
    get {return _storage._ccEnableArenas}
    set {_uniqueStorage()._ccEnableArenas = newValue}
  }

  var ccGenericServices: Int32 {
    get {return _storage._ccGenericServices}
    set {_uniqueStorage()._ccGenericServices = newValue}
  }

  var character: Int32 {
    get {return _storage._character}
    set {_uniqueStorage()._character = newValue}
  }

  var chars: Int32 {
    get {return _storage._chars}
    set {_uniqueStorage()._chars = newValue}
  }

  var chunk: Int32 {
    get {return _storage._chunk}
    set {_uniqueStorage()._chunk = newValue}
  }

  var `class`: Int32 {
    get {return _storage._class}
    set {_uniqueStorage()._class = newValue}
  }

  var clearAggregateValue_p: Int32 {
    get {return _storage._clearAggregateValue_p}
    set {_uniqueStorage()._clearAggregateValue_p = newValue}
  }

  var clearAllowAlias_p: Int32 {
    get {return _storage._clearAllowAlias_p}
    set {_uniqueStorage()._clearAllowAlias_p = newValue}
  }

  var clearBegin_p: Int32 {
    get {return _storage._clearBegin_p}
    set {_uniqueStorage()._clearBegin_p = newValue}
  }

  var clearCcEnableArenas_p: Int32 {
    get {return _storage._clearCcEnableArenas_p}
    set {_uniqueStorage()._clearCcEnableArenas_p = newValue}
  }

  var clearCcGenericServices_p: Int32 {
    get {return _storage._clearCcGenericServices_p}
    set {_uniqueStorage()._clearCcGenericServices_p = newValue}
  }

  var clearClientStreaming_p: Int32 {
    get {return _storage._clearClientStreaming_p}
    set {_uniqueStorage()._clearClientStreaming_p = newValue}
  }

  var clearCsharpNamespace_p: Int32 {
    get {return _storage._clearCsharpNamespace_p}
    set {_uniqueStorage()._clearCsharpNamespace_p = newValue}
  }

  var clearCtype_p: Int32 {
    get {return _storage._clearCtype_p}
    set {_uniqueStorage()._clearCtype_p = newValue}
  }

  var clearDebugRedact_p: Int32 {
    get {return _storage._clearDebugRedact_p}
    set {_uniqueStorage()._clearDebugRedact_p = newValue}
  }

  var clearDefaultValue_p: Int32 {
    get {return _storage._clearDefaultValue_p}
    set {_uniqueStorage()._clearDefaultValue_p = newValue}
  }

  var clearDeprecated_p: Int32 {
    get {return _storage._clearDeprecated_p}
    set {_uniqueStorage()._clearDeprecated_p = newValue}
  }

  var clearDeprecatedLegacyJsonFieldConflicts_p: Int32 {
    get {return _storage._clearDeprecatedLegacyJsonFieldConflicts_p}
    set {_uniqueStorage()._clearDeprecatedLegacyJsonFieldConflicts_p = newValue}
  }

  var clearDoubleValue_p: Int32 {
    get {return _storage._clearDoubleValue_p}
    set {_uniqueStorage()._clearDoubleValue_p = newValue}
  }

  var clearEdition_p: Int32 {
    get {return _storage._clearEdition_p}
    set {_uniqueStorage()._clearEdition_p = newValue}
  }

  var clearEnd_p: Int32 {
    get {return _storage._clearEnd_p}
    set {_uniqueStorage()._clearEnd_p = newValue}
  }

  var clearEnumType_p: Int32 {
    get {return _storage._clearEnumType_p}
    set {_uniqueStorage()._clearEnumType_p = newValue}
  }

  var clearExtendee_p: Int32 {
    get {return _storage._clearExtendee_p}
    set {_uniqueStorage()._clearExtendee_p = newValue}
  }

  var clearExtensionValue_p: Int32 {
    get {return _storage._clearExtensionValue_p}
    set {_uniqueStorage()._clearExtensionValue_p = newValue}
  }

  var clearFeatures_p: Int32 {
    get {return _storage._clearFeatures_p}
    set {_uniqueStorage()._clearFeatures_p = newValue}
  }

  var clearFieldPresence_p: Int32 {
    get {return _storage._clearFieldPresence_p}
    set {_uniqueStorage()._clearFieldPresence_p = newValue}
  }

  var clearFullName_p: Int32 {
    get {return _storage._clearFullName_p}
    set {_uniqueStorage()._clearFullName_p = newValue}
  }

  var clearGoPackage_p: Int32 {
    get {return _storage._clearGoPackage_p}
    set {_uniqueStorage()._clearGoPackage_p = newValue}
  }

  var clearIdempotencyLevel_p: Int32 {
    get {return _storage._clearIdempotencyLevel_p}
    set {_uniqueStorage()._clearIdempotencyLevel_p = newValue}
  }

  var clearIdentifierValue_p: Int32 {
    get {return _storage._clearIdentifierValue_p}
    set {_uniqueStorage()._clearIdentifierValue_p = newValue}
  }

  var clearInputType_p: Int32 {
    get {return _storage._clearInputType_p}
    set {_uniqueStorage()._clearInputType_p = newValue}
  }

  var clearIsExtension_p: Int32 {
    get {return _storage._clearIsExtension_p}
    set {_uniqueStorage()._clearIsExtension_p = newValue}
  }

  var clearJavaGenerateEqualsAndHash_p: Int32 {
    get {return _storage._clearJavaGenerateEqualsAndHash_p}
    set {_uniqueStorage()._clearJavaGenerateEqualsAndHash_p = newValue}
  }

  var clearJavaGenericServices_p: Int32 {
    get {return _storage._clearJavaGenericServices_p}
    set {_uniqueStorage()._clearJavaGenericServices_p = newValue}
  }

  var clearJavaMultipleFiles_p: Int32 {
    get {return _storage._clearJavaMultipleFiles_p}
    set {_uniqueStorage()._clearJavaMultipleFiles_p = newValue}
  }

  var clearJavaOuterClassname_p: Int32 {
    get {return _storage._clearJavaOuterClassname_p}
    set {_uniqueStorage()._clearJavaOuterClassname_p = newValue}
  }

  var clearJavaPackage_p: Int32 {
    get {return _storage._clearJavaPackage_p}
    set {_uniqueStorage()._clearJavaPackage_p = newValue}
  }

  var clearJavaStringCheckUtf8_p: Int32 {
    get {return _storage._clearJavaStringCheckUtf8_p}
    set {_uniqueStorage()._clearJavaStringCheckUtf8_p = newValue}
  }

  var clearJsonFormat_p: Int32 {
    get {return _storage._clearJsonFormat_p}
    set {_uniqueStorage()._clearJsonFormat_p = newValue}
  }

  var clearJsonName_p: Int32 {
    get {return _storage._clearJsonName_p}
    set {_uniqueStorage()._clearJsonName_p = newValue}
  }

  var clearJstype_p: Int32 {
    get {return _storage._clearJstype_p}
    set {_uniqueStorage()._clearJstype_p = newValue}
  }

  var clearLabel_p: Int32 {
    get {return _storage._clearLabel_p}
    set {_uniqueStorage()._clearLabel_p = newValue}
  }

  var clearLazy_p: Int32 {
    get {return _storage._clearLazy_p}
    set {_uniqueStorage()._clearLazy_p = newValue}
  }

  var clearLeadingComments_p: Int32 {
    get {return _storage._clearLeadingComments_p}
    set {_uniqueStorage()._clearLeadingComments_p = newValue}
  }

  var clearMapEntry_p: Int32 {
    get {return _storage._clearMapEntry_p}
    set {_uniqueStorage()._clearMapEntry_p = newValue}
  }

  var clearMaximumEdition_p: Int32 {
    get {return _storage._clearMaximumEdition_p}
    set {_uniqueStorage()._clearMaximumEdition_p = newValue}
  }

  var clearMessageEncoding_p: Int32 {
    get {return _storage._clearMessageEncoding_p}
    set {_uniqueStorage()._clearMessageEncoding_p = newValue}
  }

  var clearMessageSetWireFormat_p: Int32 {
    get {return _storage._clearMessageSetWireFormat_p}
    set {_uniqueStorage()._clearMessageSetWireFormat_p = newValue}
  }

  var clearMinimumEdition_p: Int32 {
    get {return _storage._clearMinimumEdition_p}
    set {_uniqueStorage()._clearMinimumEdition_p = newValue}
  }

  var clearName_p: Int32 {
    get {return _storage._clearName_p}
    set {_uniqueStorage()._clearName_p = newValue}
  }

  var clearNamePart_p: Int32 {
    get {return _storage._clearNamePart_p}
    set {_uniqueStorage()._clearNamePart_p = newValue}
  }

  var clearNegativeIntValue_p: Int32 {
    get {return _storage._clearNegativeIntValue_p}
    set {_uniqueStorage()._clearNegativeIntValue_p = newValue}
  }

  var clearNoStandardDescriptorAccessor_p: Int32 {
    get {return _storage._clearNoStandardDescriptorAccessor_p}
    set {_uniqueStorage()._clearNoStandardDescriptorAccessor_p = newValue}
  }

  var clearNumber_p: Int32 {
    get {return _storage._clearNumber_p}
    set {_uniqueStorage()._clearNumber_p = newValue}
  }

  var clearObjcClassPrefix_p: Int32 {
    get {return _storage._clearObjcClassPrefix_p}
    set {_uniqueStorage()._clearObjcClassPrefix_p = newValue}
  }

  var clearOneofIndex_p: Int32 {
    get {return _storage._clearOneofIndex_p}
    set {_uniqueStorage()._clearOneofIndex_p = newValue}
  }

  var clearOptimizeFor_p: Int32 {
    get {return _storage._clearOptimizeFor_p}
    set {_uniqueStorage()._clearOptimizeFor_p = newValue}
  }

  var clearOptions_p: Int32 {
    get {return _storage._clearOptions_p}
    set {_uniqueStorage()._clearOptions_p = newValue}
  }

  var clearOutputType_p: Int32 {
    get {return _storage._clearOutputType_p}
    set {_uniqueStorage()._clearOutputType_p = newValue}
  }

  var clearPackage_p: Int32 {
    get {return _storage._clearPackage_p}
    set {_uniqueStorage()._clearPackage_p = newValue}
  }

  var clearPacked_p: Int32 {
    get {return _storage._clearPacked_p}
    set {_uniqueStorage()._clearPacked_p = newValue}
  }

  var clearPhpClassPrefix_p: Int32 {
    get {return _storage._clearPhpClassPrefix_p}
    set {_uniqueStorage()._clearPhpClassPrefix_p = newValue}
  }

  var clearPhpGenericServices_p: Int32 {
    get {return _storage._clearPhpGenericServices_p}
    set {_uniqueStorage()._clearPhpGenericServices_p = newValue}
  }

  var clearPhpMetadataNamespace_p: Int32 {
    get {return _storage._clearPhpMetadataNamespace_p}
    set {_uniqueStorage()._clearPhpMetadataNamespace_p = newValue}
  }

  var clearPhpNamespace_p: Int32 {
    get {return _storage._clearPhpNamespace_p}
    set {_uniqueStorage()._clearPhpNamespace_p = newValue}
  }

  var clearPositiveIntValue_p: Int32 {
    get {return _storage._clearPositiveIntValue_p}
    set {_uniqueStorage()._clearPositiveIntValue_p = newValue}
  }

  var clearProto3Optional_p: Int32 {
    get {return _storage._clearProto3Optional_p}
    set {_uniqueStorage()._clearProto3Optional_p = newValue}
  }

  var clearPyGenericServices_p: Int32 {
    get {return _storage._clearPyGenericServices_p}
    set {_uniqueStorage()._clearPyGenericServices_p = newValue}
  }

  var clearRepeated_p: Int32 {
    get {return _storage._clearRepeated_p}
    set {_uniqueStorage()._clearRepeated_p = newValue}
  }

  var clearRepeatedFieldEncoding_p: Int32 {
    get {return _storage._clearRepeatedFieldEncoding_p}
    set {_uniqueStorage()._clearRepeatedFieldEncoding_p = newValue}
  }

  var clearReserved_p: Int32 {
    get {return _storage._clearReserved_p}
    set {_uniqueStorage()._clearReserved_p = newValue}
  }

  var clearRetention_p: Int32 {
    get {return _storage._clearRetention_p}
    set {_uniqueStorage()._clearRetention_p = newValue}
  }

  var clearRubyPackage_p: Int32 {
    get {return _storage._clearRubyPackage_p}
    set {_uniqueStorage()._clearRubyPackage_p = newValue}
  }

  var clearSemantic_p: Int32 {
    get {return _storage._clearSemantic_p}
    set {_uniqueStorage()._clearSemantic_p = newValue}
  }

  var clearServerStreaming_p: Int32 {
    get {return _storage._clearServerStreaming_p}
    set {_uniqueStorage()._clearServerStreaming_p = newValue}
  }

  var clearSourceCodeInfo_p: Int32 {
    get {return _storage._clearSourceCodeInfo_p}
    set {_uniqueStorage()._clearSourceCodeInfo_p = newValue}
  }

  var clearSourceContext_p: Int32 {
    get {return _storage._clearSourceContext_p}
    set {_uniqueStorage()._clearSourceContext_p = newValue}
  }

  var clearSourceFile_p: Int32 {
    get {return _storage._clearSourceFile_p}
    set {_uniqueStorage()._clearSourceFile_p = newValue}
  }

  var clearStart_p: Int32 {
    get {return _storage._clearStart_p}
    set {_uniqueStorage()._clearStart_p = newValue}
  }

  var clearStringValue_p: Int32 {
    get {return _storage._clearStringValue_p}
    set {_uniqueStorage()._clearStringValue_p = newValue}
  }

  var clearSwiftPrefix_p: Int32 {
    get {return _storage._clearSwiftPrefix_p}
    set {_uniqueStorage()._clearSwiftPrefix_p = newValue}
  }

  var clearSyntax_p: Int32 {
    get {return _storage._clearSyntax_p}
    set {_uniqueStorage()._clearSyntax_p = newValue}
  }

  var clearTrailingComments_p: Int32 {
    get {return _storage._clearTrailingComments_p}
    set {_uniqueStorage()._clearTrailingComments_p = newValue}
  }

  var clearType_p: Int32 {
    get {return _storage._clearType_p}
    set {_uniqueStorage()._clearType_p = newValue}
  }

  var clearTypeName_p: Int32 {
    get {return _storage._clearTypeName_p}
    set {_uniqueStorage()._clearTypeName_p = newValue}
  }

  var clearUnverifiedLazy_p: Int32 {
    get {return _storage._clearUnverifiedLazy_p}
    set {_uniqueStorage()._clearUnverifiedLazy_p = newValue}
  }

  var clearUtf8Validation_p: Int32 {
    get {return _storage._clearUtf8Validation_p}
    set {_uniqueStorage()._clearUtf8Validation_p = newValue}
  }

  var clearValue_p: Int32 {
    get {return _storage._clearValue_p}
    set {_uniqueStorage()._clearValue_p = newValue}
  }

  var clearVerification_p: Int32 {
    get {return _storage._clearVerification_p}
    set {_uniqueStorage()._clearVerification_p = newValue}
  }

  var clearWeak_p: Int32 {
    get {return _storage._clearWeak_p}
    set {_uniqueStorage()._clearWeak_p = newValue}
  }

  var clientStreaming: Int32 {
    get {return _storage._clientStreaming}
    set {_uniqueStorage()._clientStreaming = newValue}
  }

  var codePoint: Int32 {
    get {return _storage._codePoint}
    set {_uniqueStorage()._codePoint = newValue}
  }

  var codeUnits: Int32 {
    get {return _storage._codeUnits}
    set {_uniqueStorage()._codeUnits = newValue}
  }

  var collection: Int32 {
    get {return _storage._collection}
    set {_uniqueStorage()._collection = newValue}
  }

  var com: Int32 {
    get {return _storage._com}
    set {_uniqueStorage()._com = newValue}
  }

  var comma: Int32 {
    get {return _storage._comma}
    set {_uniqueStorage()._comma = newValue}
  }

  var commonMessageConformances: Int32 {
    get {return _storage._commonMessageConformances}
    set {_uniqueStorage()._commonMessageConformances = newValue}
  }

  var consumedBytes: Int32 {
    get {return _storage._consumedBytes}
    set {_uniqueStorage()._consumedBytes = newValue}
  }

  var contentsOf: Int32 {
    get {return _storage._contentsOf}
    set {_uniqueStorage()._contentsOf = newValue}
  }

  var count: Int32 {
    get {return _storage._count}
    set {_uniqueStorage()._count = newValue}
  }

  var countVarintsInBuffer: Int32 {
    get {return _storage._countVarintsInBuffer}
    set {_uniqueStorage()._countVarintsInBuffer = newValue}
  }

  var csharpNamespace: Int32 {
    get {return _storage._csharpNamespace}
    set {_uniqueStorage()._csharpNamespace = newValue}
  }

  var ctype: Int32 {
    get {return _storage._ctype}
    set {_uniqueStorage()._ctype = newValue}
  }

  var customCodable: Int32 {
    get {return _storage._customCodable}
    set {_uniqueStorage()._customCodable = newValue}
  }

  var d: Int32 {
    get {return _storage._d}
    set {_uniqueStorage()._d = newValue}
  }

  var data: Int32 {
    get {return _storage._data}
    set {_uniqueStorage()._data = newValue}
  }

  var dataResult: Int32 {
    get {return _storage._dataResult}
    set {_uniqueStorage()._dataResult = newValue}
  }

  var date: Int32 {
    get {return _storage._date}
    set {_uniqueStorage()._date = newValue}
  }

  var daySec: Int32 {
    get {return _storage._daySec}
    set {_uniqueStorage()._daySec = newValue}
  }

  var daysSinceEpoch: Int32 {
    get {return _storage._daysSinceEpoch}
    set {_uniqueStorage()._daysSinceEpoch = newValue}
  }

  var debugDescription_p: Int32 {
    get {return _storage._debugDescription_p}
    set {_uniqueStorage()._debugDescription_p = newValue}
  }

  var debugRedact: Int32 {
    get {return _storage._debugRedact}
    set {_uniqueStorage()._debugRedact = newValue}
  }

  var declaration: Int32 {
    get {return _storage._declaration}
    set {_uniqueStorage()._declaration = newValue}
  }

  var decoded: Int32 {
    get {return _storage._decoded}
    set {_uniqueStorage()._decoded = newValue}
  }

  var decodedFromJsonnull: Int32 {
    get {return _storage._decodedFromJsonnull}
    set {_uniqueStorage()._decodedFromJsonnull = newValue}
  }

  var decodeExtensionField: Int32 {
    get {return _storage._decodeExtensionField}
    set {_uniqueStorage()._decodeExtensionField = newValue}
  }

  var decodeExtensionFieldsAsMessageSet: Int32 {
    get {return _storage._decodeExtensionFieldsAsMessageSet}
    set {_uniqueStorage()._decodeExtensionFieldsAsMessageSet = newValue}
  }

  var decodeJson: Int32 {
    get {return _storage._decodeJson}
    set {_uniqueStorage()._decodeJson = newValue}
  }

  var decodeMapField: Int32 {
    get {return _storage._decodeMapField}
    set {_uniqueStorage()._decodeMapField = newValue}
  }

  var decodeMessage: Int32 {
    get {return _storage._decodeMessage}
    set {_uniqueStorage()._decodeMessage = newValue}
  }

  var decoder: Int32 {
    get {return _storage._decoder}
    set {_uniqueStorage()._decoder = newValue}
  }

  var decodeRepeated: Int32 {
    get {return _storage._decodeRepeated}
    set {_uniqueStorage()._decodeRepeated = newValue}
  }

  var decodeRepeatedBoolField: Int32 {
    get {return _storage._decodeRepeatedBoolField}
    set {_uniqueStorage()._decodeRepeatedBoolField = newValue}
  }

  var decodeRepeatedBytesField: Int32 {
    get {return _storage._decodeRepeatedBytesField}
    set {_uniqueStorage()._decodeRepeatedBytesField = newValue}
  }

  var decodeRepeatedDoubleField: Int32 {
    get {return _storage._decodeRepeatedDoubleField}
    set {_uniqueStorage()._decodeRepeatedDoubleField = newValue}
  }

  var decodeRepeatedEnumField: Int32 {
    get {return _storage._decodeRepeatedEnumField}
    set {_uniqueStorage()._decodeRepeatedEnumField = newValue}
  }

  var decodeRepeatedFixed32Field: Int32 {
    get {return _storage._decodeRepeatedFixed32Field}
    set {_uniqueStorage()._decodeRepeatedFixed32Field = newValue}
  }

  var decodeRepeatedFixed64Field: Int32 {
    get {return _storage._decodeRepeatedFixed64Field}
    set {_uniqueStorage()._decodeRepeatedFixed64Field = newValue}
  }

  var decodeRepeatedFloatField: Int32 {
    get {return _storage._decodeRepeatedFloatField}
    set {_uniqueStorage()._decodeRepeatedFloatField = newValue}
  }

  var decodeRepeatedGroupField: Int32 {
    get {return _storage._decodeRepeatedGroupField}
    set {_uniqueStorage()._decodeRepeatedGroupField = newValue}
  }

  var decodeRepeatedInt32Field: Int32 {
    get {return _storage._decodeRepeatedInt32Field}
    set {_uniqueStorage()._decodeRepeatedInt32Field = newValue}
  }

  var decodeRepeatedInt64Field: Int32 {
    get {return _storage._decodeRepeatedInt64Field}
    set {_uniqueStorage()._decodeRepeatedInt64Field = newValue}
  }

  var decodeRepeatedMessageField: Int32 {
    get {return _storage._decodeRepeatedMessageField}
    set {_uniqueStorage()._decodeRepeatedMessageField = newValue}
  }

  var decodeRepeatedSfixed32Field: Int32 {
    get {return _storage._decodeRepeatedSfixed32Field}
    set {_uniqueStorage()._decodeRepeatedSfixed32Field = newValue}
  }

  var decodeRepeatedSfixed64Field: Int32 {
    get {return _storage._decodeRepeatedSfixed64Field}
    set {_uniqueStorage()._decodeRepeatedSfixed64Field = newValue}
  }

  var decodeRepeatedSint32Field: Int32 {
    get {return _storage._decodeRepeatedSint32Field}
    set {_uniqueStorage()._decodeRepeatedSint32Field = newValue}
  }

  var decodeRepeatedSint64Field: Int32 {
    get {return _storage._decodeRepeatedSint64Field}
    set {_uniqueStorage()._decodeRepeatedSint64Field = newValue}
  }

  var decodeRepeatedStringField: Int32 {
    get {return _storage._decodeRepeatedStringField}
    set {_uniqueStorage()._decodeRepeatedStringField = newValue}
  }

  var decodeRepeatedUint32Field: Int32 {
    get {return _storage._decodeRepeatedUint32Field}
    set {_uniqueStorage()._decodeRepeatedUint32Field = newValue}
  }

  var decodeRepeatedUint64Field: Int32 {
    get {return _storage._decodeRepeatedUint64Field}
    set {_uniqueStorage()._decodeRepeatedUint64Field = newValue}
  }

  var decodeSingular: Int32 {
    get {return _storage._decodeSingular}
    set {_uniqueStorage()._decodeSingular = newValue}
  }

  var decodeSingularBoolField: Int32 {
    get {return _storage._decodeSingularBoolField}
    set {_uniqueStorage()._decodeSingularBoolField = newValue}
  }

  var decodeSingularBytesField: Int32 {
    get {return _storage._decodeSingularBytesField}
    set {_uniqueStorage()._decodeSingularBytesField = newValue}
  }

  var decodeSingularDoubleField: Int32 {
    get {return _storage._decodeSingularDoubleField}
    set {_uniqueStorage()._decodeSingularDoubleField = newValue}
  }

  var decodeSingularEnumField: Int32 {
    get {return _storage._decodeSingularEnumField}
    set {_uniqueStorage()._decodeSingularEnumField = newValue}
  }

  var decodeSingularFixed32Field: Int32 {
    get {return _storage._decodeSingularFixed32Field}
    set {_uniqueStorage()._decodeSingularFixed32Field = newValue}
  }

  var decodeSingularFixed64Field: Int32 {
    get {return _storage._decodeSingularFixed64Field}
    set {_uniqueStorage()._decodeSingularFixed64Field = newValue}
  }

  var decodeSingularFloatField: Int32 {
    get {return _storage._decodeSingularFloatField}
    set {_uniqueStorage()._decodeSingularFloatField = newValue}
  }

  var decodeSingularGroupField: Int32 {
    get {return _storage._decodeSingularGroupField}
    set {_uniqueStorage()._decodeSingularGroupField = newValue}
  }

  var decodeSingularInt32Field: Int32 {
    get {return _storage._decodeSingularInt32Field}
    set {_uniqueStorage()._decodeSingularInt32Field = newValue}
  }

  var decodeSingularInt64Field: Int32 {
    get {return _storage._decodeSingularInt64Field}
    set {_uniqueStorage()._decodeSingularInt64Field = newValue}
  }

  var decodeSingularMessageField: Int32 {
    get {return _storage._decodeSingularMessageField}
    set {_uniqueStorage()._decodeSingularMessageField = newValue}
  }

  var decodeSingularSfixed32Field: Int32 {
    get {return _storage._decodeSingularSfixed32Field}
    set {_uniqueStorage()._decodeSingularSfixed32Field = newValue}
  }

  var decodeSingularSfixed64Field: Int32 {
    get {return _storage._decodeSingularSfixed64Field}
    set {_uniqueStorage()._decodeSingularSfixed64Field = newValue}
  }

  var decodeSingularSint32Field: Int32 {
    get {return _storage._decodeSingularSint32Field}
    set {_uniqueStorage()._decodeSingularSint32Field = newValue}
  }

  var decodeSingularSint64Field: Int32 {
    get {return _storage._decodeSingularSint64Field}
    set {_uniqueStorage()._decodeSingularSint64Field = newValue}
  }

  var decodeSingularStringField: Int32 {
    get {return _storage._decodeSingularStringField}
    set {_uniqueStorage()._decodeSingularStringField = newValue}
  }

  var decodeSingularUint32Field: Int32 {
    get {return _storage._decodeSingularUint32Field}
    set {_uniqueStorage()._decodeSingularUint32Field = newValue}
  }

  var decodeSingularUint64Field: Int32 {
    get {return _storage._decodeSingularUint64Field}
    set {_uniqueStorage()._decodeSingularUint64Field = newValue}
  }

  var decodeTextFormat: Int32 {
    get {return _storage._decodeTextFormat}
    set {_uniqueStorage()._decodeTextFormat = newValue}
  }

  var defaultAnyTypeUrlprefix: Int32 {
    get {return _storage._defaultAnyTypeUrlprefix}
    set {_uniqueStorage()._defaultAnyTypeUrlprefix = newValue}
  }

  var defaults: Int32 {
    get {return _storage._defaults}
    set {_uniqueStorage()._defaults = newValue}
  }

  var defaultValue: Int32 {
    get {return _storage._defaultValue}
    set {_uniqueStorage()._defaultValue = newValue}
  }

  var dependency: Int32 {
    get {return _storage._dependency}
    set {_uniqueStorage()._dependency = newValue}
  }

  var deprecated: Int32 {
    get {return _storage._deprecated}
    set {_uniqueStorage()._deprecated = newValue}
  }

  var deprecatedLegacyJsonFieldConflicts: Int32 {
    get {return _storage._deprecatedLegacyJsonFieldConflicts}
    set {_uniqueStorage()._deprecatedLegacyJsonFieldConflicts = newValue}
  }

  var description_p: Int32 {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  var descriptorProto: Int32 {
    get {return _storage._descriptorProto}
    set {_uniqueStorage()._descriptorProto = newValue}
  }

  var dictionary: Int32 {
    get {return _storage._dictionary}
    set {_uniqueStorage()._dictionary = newValue}
  }

  var dictionaryLiteral: Int32 {
    get {return _storage._dictionaryLiteral}
    set {_uniqueStorage()._dictionaryLiteral = newValue}
  }

  var digit: Int32 {
    get {return _storage._digit}
    set {_uniqueStorage()._digit = newValue}
  }

  var digit0: Int32 {
    get {return _storage._digit0}
    set {_uniqueStorage()._digit0 = newValue}
  }

  var digit1: Int32 {
    get {return _storage._digit1}
    set {_uniqueStorage()._digit1 = newValue}
  }

  var digitCount: Int32 {
    get {return _storage._digitCount}
    set {_uniqueStorage()._digitCount = newValue}
  }

  var digits: Int32 {
    get {return _storage._digits}
    set {_uniqueStorage()._digits = newValue}
  }

  var digitValue: Int32 {
    get {return _storage._digitValue}
    set {_uniqueStorage()._digitValue = newValue}
  }

  var discardableResult: Int32 {
    get {return _storage._discardableResult}
    set {_uniqueStorage()._discardableResult = newValue}
  }

  var discardUnknownFields: Int32 {
    get {return _storage._discardUnknownFields}
    set {_uniqueStorage()._discardUnknownFields = newValue}
  }

  var double: Int32 {
    get {return _storage._double}
    set {_uniqueStorage()._double = newValue}
  }

  var doubleValue: Int32 {
    get {return _storage._doubleValue}
    set {_uniqueStorage()._doubleValue = newValue}
  }

  var duration: Int32 {
    get {return _storage._duration}
    set {_uniqueStorage()._duration = newValue}
  }

  var e: Int32 {
    get {return _storage._e}
    set {_uniqueStorage()._e = newValue}
  }

  var edition: Int32 {
    get {return _storage._edition}
    set {_uniqueStorage()._edition = newValue}
  }

  var editionDefault: Int32 {
    get {return _storage._editionDefault}
    set {_uniqueStorage()._editionDefault = newValue}
  }

  var editionDefaults: Int32 {
    get {return _storage._editionDefaults}
    set {_uniqueStorage()._editionDefaults = newValue}
  }

  var element: Int32 {
    get {return _storage._element}
    set {_uniqueStorage()._element = newValue}
  }

  var elements: Int32 {
    get {return _storage._elements}
    set {_uniqueStorage()._elements = newValue}
  }

  var emitExtensionFieldName: Int32 {
    get {return _storage._emitExtensionFieldName}
    set {_uniqueStorage()._emitExtensionFieldName = newValue}
  }

  var emitFieldName: Int32 {
    get {return _storage._emitFieldName}
    set {_uniqueStorage()._emitFieldName = newValue}
  }

  var emitFieldNumber: Int32 {
    get {return _storage._emitFieldNumber}
    set {_uniqueStorage()._emitFieldNumber = newValue}
  }

  var empty: Int32 {
    get {return _storage._empty}
    set {_uniqueStorage()._empty = newValue}
  }

  var encodeAsBytes: Int32 {
    get {return _storage._encodeAsBytes}
    set {_uniqueStorage()._encodeAsBytes = newValue}
  }

  var encoded: Int32 {
    get {return _storage._encoded}
    set {_uniqueStorage()._encoded = newValue}
  }

  var encodedJsonstring: Int32 {
    get {return _storage._encodedJsonstring}
    set {_uniqueStorage()._encodedJsonstring = newValue}
  }

  var encodedSize: Int32 {
    get {return _storage._encodedSize}
    set {_uniqueStorage()._encodedSize = newValue}
  }

  var encodeField: Int32 {
    get {return _storage._encodeField}
    set {_uniqueStorage()._encodeField = newValue}
  }

  var encoder: Int32 {
    get {return _storage._encoder}
    set {_uniqueStorage()._encoder = newValue}
  }

  var end: Int32 {
    get {return _storage._end}
    set {_uniqueStorage()._end = newValue}
  }

  var endArray: Int32 {
    get {return _storage._endArray}
    set {_uniqueStorage()._endArray = newValue}
  }

  var endMessageField: Int32 {
    get {return _storage._endMessageField}
    set {_uniqueStorage()._endMessageField = newValue}
  }

  var endObject: Int32 {
    get {return _storage._endObject}
    set {_uniqueStorage()._endObject = newValue}
  }

  var endRegularField: Int32 {
    get {return _storage._endRegularField}
    set {_uniqueStorage()._endRegularField = newValue}
  }

  var `enum`: Int32 {
    get {return _storage._enum}
    set {_uniqueStorage()._enum = newValue}
  }

  var enumDescriptorProto: Int32 {
    get {return _storage._enumDescriptorProto}
    set {_uniqueStorage()._enumDescriptorProto = newValue}
  }

  var enumOptions: Int32 {
    get {return _storage._enumOptions}
    set {_uniqueStorage()._enumOptions = newValue}
  }

  var enumReservedRange: Int32 {
    get {return _storage._enumReservedRange}
    set {_uniqueStorage()._enumReservedRange = newValue}
  }

  var enumType: Int32 {
    get {return _storage._enumType}
    set {_uniqueStorage()._enumType = newValue}
  }

  var enumvalue: Int32 {
    get {return _storage._enumvalue}
    set {_uniqueStorage()._enumvalue = newValue}
  }

  var enumValueDescriptorProto: Int32 {
    get {return _storage._enumValueDescriptorProto}
    set {_uniqueStorage()._enumValueDescriptorProto = newValue}
  }

  var enumValueOptions: Int32 {
    get {return _storage._enumValueOptions}
    set {_uniqueStorage()._enumValueOptions = newValue}
  }

  var equatable: Int32 {
    get {return _storage._equatable}
    set {_uniqueStorage()._equatable = newValue}
  }

  var error: Int32 {
    get {return _storage._error}
    set {_uniqueStorage()._error = newValue}
  }

  var escaping: Int32 {
    get {return _storage._escaping}
    set {_uniqueStorage()._escaping = newValue}
  }

  var expressibleByArrayLiteral: Int32 {
    get {return _storage._expressibleByArrayLiteral}
    set {_uniqueStorage()._expressibleByArrayLiteral = newValue}
  }

  var expressibleByDictionaryLiteral: Int32 {
    get {return _storage._expressibleByDictionaryLiteral}
    set {_uniqueStorage()._expressibleByDictionaryLiteral = newValue}
  }

  var ext: Int32 {
    get {return _storage._ext}
    set {_uniqueStorage()._ext = newValue}
  }

  var extDecoder: Int32 {
    get {return _storage._extDecoder}
    set {_uniqueStorage()._extDecoder = newValue}
  }

  var extendedGraphemeClusterLiteral: Int32 {
    get {return _storage._extendedGraphemeClusterLiteral}
    set {_uniqueStorage()._extendedGraphemeClusterLiteral = newValue}
  }

  var extendedGraphemeClusterLiteralType: Int32 {
    get {return _storage._extendedGraphemeClusterLiteralType}
    set {_uniqueStorage()._extendedGraphemeClusterLiteralType = newValue}
  }

  var extendee: Int32 {
    get {return _storage._extendee}
    set {_uniqueStorage()._extendee = newValue}
  }

  var extensibleMessage: Int32 {
    get {return _storage._extensibleMessage}
    set {_uniqueStorage()._extensibleMessage = newValue}
  }

  var `extension`: Int32 {
    get {return _storage._extension}
    set {_uniqueStorage()._extension = newValue}
  }

  var extensionField: Int32 {
    get {return _storage._extensionField}
    set {_uniqueStorage()._extensionField = newValue}
  }

  var extensionFieldNumber: Int32 {
    get {return _storage._extensionFieldNumber}
    set {_uniqueStorage()._extensionFieldNumber = newValue}
  }

  var extensionFields: Int32 {
    get {return _storage._extensionFields}
    set {_uniqueStorage()._extensionFields = newValue}
  }

  var extensionFieldsAsMessageSet: Int32 {
    get {return _storage._extensionFieldsAsMessageSet}
    set {_uniqueStorage()._extensionFieldsAsMessageSet = newValue}
  }

  var extensionFieldValueSet: Int32 {
    get {return _storage._extensionFieldValueSet}
    set {_uniqueStorage()._extensionFieldValueSet = newValue}
  }

  var extensionMap: Int32 {
    get {return _storage._extensionMap}
    set {_uniqueStorage()._extensionMap = newValue}
  }

  var extensionRange: Int32 {
    get {return _storage._extensionRange}
    set {_uniqueStorage()._extensionRange = newValue}
  }

  var extensionRangeOptions: Int32 {
    get {return _storage._extensionRangeOptions}
    set {_uniqueStorage()._extensionRangeOptions = newValue}
  }

  var extensions: Int32 {
    get {return _storage._extensions}
    set {_uniqueStorage()._extensions = newValue}
  }

  var extras: Int32 {
    get {return _storage._extras}
    set {_uniqueStorage()._extras = newValue}
  }

  var f: Int32 {
    get {return _storage._f}
    set {_uniqueStorage()._f = newValue}
  }

  var `false`: Int32 {
    get {return _storage._false}
    set {_uniqueStorage()._false = newValue}
  }

  var features: Int32 {
    get {return _storage._features}
    set {_uniqueStorage()._features = newValue}
  }

  var featureSet: Int32 {
    get {return _storage._featureSet}
    set {_uniqueStorage()._featureSet = newValue}
  }

  var featureSetDefaults: Int32 {
    get {return _storage._featureSetDefaults}
    set {_uniqueStorage()._featureSetDefaults = newValue}
  }

  var featureSetEditionDefault: Int32 {
    get {return _storage._featureSetEditionDefault}
    set {_uniqueStorage()._featureSetEditionDefault = newValue}
  }

  var field: Int32 {
    get {return _storage._field}
    set {_uniqueStorage()._field = newValue}
  }

  var fieldData: Int32 {
    get {return _storage._fieldData}
    set {_uniqueStorage()._fieldData = newValue}
  }

  var fieldDescriptorProto: Int32 {
    get {return _storage._fieldDescriptorProto}
    set {_uniqueStorage()._fieldDescriptorProto = newValue}
  }

  var fieldMask: Int32 {
    get {return _storage._fieldMask}
    set {_uniqueStorage()._fieldMask = newValue}
  }

  var fieldName: Int32 {
    get {return _storage._fieldName}
    set {_uniqueStorage()._fieldName = newValue}
  }

  var fieldNameCount: Int32 {
    get {return _storage._fieldNameCount}
    set {_uniqueStorage()._fieldNameCount = newValue}
  }

  var fieldNum: Int32 {
    get {return _storage._fieldNum}
    set {_uniqueStorage()._fieldNum = newValue}
  }

  var fieldNumber: Int32 {
    get {return _storage._fieldNumber}
    set {_uniqueStorage()._fieldNumber = newValue}
  }

  var fieldNumberForProto: Int32 {
    get {return _storage._fieldNumberForProto}
    set {_uniqueStorage()._fieldNumberForProto = newValue}
  }

  var fieldOptions: Int32 {
    get {return _storage._fieldOptions}
    set {_uniqueStorage()._fieldOptions = newValue}
  }

  var fieldPresence: Int32 {
    get {return _storage._fieldPresence}
    set {_uniqueStorage()._fieldPresence = newValue}
  }

  var fields: Int32 {
    get {return _storage._fields}
    set {_uniqueStorage()._fields = newValue}
  }

  var fieldSize: Int32 {
    get {return _storage._fieldSize}
    set {_uniqueStorage()._fieldSize = newValue}
  }

  var fieldTag: Int32 {
    get {return _storage._fieldTag}
    set {_uniqueStorage()._fieldTag = newValue}
  }

  var fieldType: Int32 {
    get {return _storage._fieldType}
    set {_uniqueStorage()._fieldType = newValue}
  }

  var file: Int32 {
    get {return _storage._file}
    set {_uniqueStorage()._file = newValue}
  }

  var fileDescriptorProto: Int32 {
    get {return _storage._fileDescriptorProto}
    set {_uniqueStorage()._fileDescriptorProto = newValue}
  }

  var fileDescriptorSet: Int32 {
    get {return _storage._fileDescriptorSet}
    set {_uniqueStorage()._fileDescriptorSet = newValue}
  }

  var fileName: Int32 {
    get {return _storage._fileName}
    set {_uniqueStorage()._fileName = newValue}
  }

  var fileOptions: Int32 {
    get {return _storage._fileOptions}
    set {_uniqueStorage()._fileOptions = newValue}
  }

  var filter: Int32 {
    get {return _storage._filter}
    set {_uniqueStorage()._filter = newValue}
  }

  var final: Int32 {
    get {return _storage._final}
    set {_uniqueStorage()._final = newValue}
  }

  var first: Int32 {
    get {return _storage._first}
    set {_uniqueStorage()._first = newValue}
  }

  var firstItem: Int32 {
    get {return _storage._firstItem}
    set {_uniqueStorage()._firstItem = newValue}
  }

  var float: Int32 {
    get {return _storage._float}
    set {_uniqueStorage()._float = newValue}
  }

  var floatLiteral: Int32 {
    get {return _storage._floatLiteral}
    set {_uniqueStorage()._floatLiteral = newValue}
  }

  var floatLiteralType: Int32 {
    get {return _storage._floatLiteralType}
    set {_uniqueStorage()._floatLiteralType = newValue}
  }

  var floatValue: Int32 {
    get {return _storage._floatValue}
    set {_uniqueStorage()._floatValue = newValue}
  }

  var forMessageName: Int32 {
    get {return _storage._forMessageName}
    set {_uniqueStorage()._forMessageName = newValue}
  }

  var formUnion: Int32 {
    get {return _storage._formUnion}
    set {_uniqueStorage()._formUnion = newValue}
  }

  var forReadingFrom: Int32 {
    get {return _storage._forReadingFrom}
    set {_uniqueStorage()._forReadingFrom = newValue}
  }

  var forTypeURL: Int32 {
    get {return _storage._forTypeURL}
    set {_uniqueStorage()._forTypeURL = newValue}
  }

  var forwardParser: Int32 {
    get {return _storage._forwardParser}
    set {_uniqueStorage()._forwardParser = newValue}
  }

  var forWritingInto: Int32 {
    get {return _storage._forWritingInto}
    set {_uniqueStorage()._forWritingInto = newValue}
  }

  var from: Int32 {
    get {return _storage._from}
    set {_uniqueStorage()._from = newValue}
  }

  var fromAscii2: Int32 {
    get {return _storage._fromAscii2}
    set {_uniqueStorage()._fromAscii2 = newValue}
  }

  var fromAscii4: Int32 {
    get {return _storage._fromAscii4}
    set {_uniqueStorage()._fromAscii4 = newValue}
  }

  var fromByteOffset: Int32 {
    get {return _storage._fromByteOffset}
    set {_uniqueStorage()._fromByteOffset = newValue}
  }

  var fromHexDigit: Int32 {
    get {return _storage._fromHexDigit}
    set {_uniqueStorage()._fromHexDigit = newValue}
  }

  var fullName: Int32 {
    get {return _storage._fullName}
    set {_uniqueStorage()._fullName = newValue}
  }

  var `func`: Int32 {
    get {return _storage._func}
    set {_uniqueStorage()._func = newValue}
  }

  var g: Int32 {
    get {return _storage._g}
    set {_uniqueStorage()._g = newValue}
  }

  var generatedCodeInfo: Int32 {
    get {return _storage._generatedCodeInfo}
    set {_uniqueStorage()._generatedCodeInfo = newValue}
  }

  var get: Int32 {
    get {return _storage._get}
    set {_uniqueStorage()._get = newValue}
  }

  var getExtensionValue: Int32 {
    get {return _storage._getExtensionValue}
    set {_uniqueStorage()._getExtensionValue = newValue}
  }

  var getValue: Int32 {
    get {return _storage._getValue}
    set {_uniqueStorage()._getValue = newValue}
  }

  var googleapis: Int32 {
    get {return _storage._googleapis}
    set {_uniqueStorage()._googleapis = newValue}
  }

  var googleProtobufAny: Int32 {
    get {return _storage._googleProtobufAny}
    set {_uniqueStorage()._googleProtobufAny = newValue}
  }

  var googleProtobufApi: Int32 {
    get {return _storage._googleProtobufApi}
    set {_uniqueStorage()._googleProtobufApi = newValue}
  }

  var googleProtobufBoolValue: Int32 {
    get {return _storage._googleProtobufBoolValue}
    set {_uniqueStorage()._googleProtobufBoolValue = newValue}
  }

  var googleProtobufBytesValue: Int32 {
    get {return _storage._googleProtobufBytesValue}
    set {_uniqueStorage()._googleProtobufBytesValue = newValue}
  }

  var googleProtobufDescriptorProto: Int32 {
    get {return _storage._googleProtobufDescriptorProto}
    set {_uniqueStorage()._googleProtobufDescriptorProto = newValue}
  }

  var googleProtobufDoubleValue: Int32 {
    get {return _storage._googleProtobufDoubleValue}
    set {_uniqueStorage()._googleProtobufDoubleValue = newValue}
  }

  var googleProtobufDuration: Int32 {
    get {return _storage._googleProtobufDuration}
    set {_uniqueStorage()._googleProtobufDuration = newValue}
  }

  var googleProtobufEdition: Int32 {
    get {return _storage._googleProtobufEdition}
    set {_uniqueStorage()._googleProtobufEdition = newValue}
  }

  var googleProtobufEmpty: Int32 {
    get {return _storage._googleProtobufEmpty}
    set {_uniqueStorage()._googleProtobufEmpty = newValue}
  }

  var googleProtobufEnum: Int32 {
    get {return _storage._googleProtobufEnum}
    set {_uniqueStorage()._googleProtobufEnum = newValue}
  }

  var googleProtobufEnumDescriptorProto: Int32 {
    get {return _storage._googleProtobufEnumDescriptorProto}
    set {_uniqueStorage()._googleProtobufEnumDescriptorProto = newValue}
  }

  var googleProtobufEnumOptions: Int32 {
    get {return _storage._googleProtobufEnumOptions}
    set {_uniqueStorage()._googleProtobufEnumOptions = newValue}
  }

  var googleProtobufEnumValue: Int32 {
    get {return _storage._googleProtobufEnumValue}
    set {_uniqueStorage()._googleProtobufEnumValue = newValue}
  }

  var googleProtobufEnumValueDescriptorProto: Int32 {
    get {return _storage._googleProtobufEnumValueDescriptorProto}
    set {_uniqueStorage()._googleProtobufEnumValueDescriptorProto = newValue}
  }

  var googleProtobufEnumValueOptions: Int32 {
    get {return _storage._googleProtobufEnumValueOptions}
    set {_uniqueStorage()._googleProtobufEnumValueOptions = newValue}
  }

  var googleProtobufExtensionRangeOptions: Int32 {
    get {return _storage._googleProtobufExtensionRangeOptions}
    set {_uniqueStorage()._googleProtobufExtensionRangeOptions = newValue}
  }

  var googleProtobufFeatureSet: Int32 {
    get {return _storage._googleProtobufFeatureSet}
    set {_uniqueStorage()._googleProtobufFeatureSet = newValue}
  }

  var googleProtobufFeatureSetDefaults: Int32 {
    get {return _storage._googleProtobufFeatureSetDefaults}
    set {_uniqueStorage()._googleProtobufFeatureSetDefaults = newValue}
  }

  var googleProtobufField: Int32 {
    get {return _storage._googleProtobufField}
    set {_uniqueStorage()._googleProtobufField = newValue}
  }

  var googleProtobufFieldDescriptorProto: Int32 {
    get {return _storage._googleProtobufFieldDescriptorProto}
    set {_uniqueStorage()._googleProtobufFieldDescriptorProto = newValue}
  }

  var googleProtobufFieldMask: Int32 {
    get {return _storage._googleProtobufFieldMask}
    set {_uniqueStorage()._googleProtobufFieldMask = newValue}
  }

  var googleProtobufFieldOptions: Int32 {
    get {return _storage._googleProtobufFieldOptions}
    set {_uniqueStorage()._googleProtobufFieldOptions = newValue}
  }

  var googleProtobufFileDescriptorProto: Int32 {
    get {return _storage._googleProtobufFileDescriptorProto}
    set {_uniqueStorage()._googleProtobufFileDescriptorProto = newValue}
  }

  var googleProtobufFileDescriptorSet: Int32 {
    get {return _storage._googleProtobufFileDescriptorSet}
    set {_uniqueStorage()._googleProtobufFileDescriptorSet = newValue}
  }

  var googleProtobufFileOptions: Int32 {
    get {return _storage._googleProtobufFileOptions}
    set {_uniqueStorage()._googleProtobufFileOptions = newValue}
  }

  var googleProtobufFloatValue: Int32 {
    get {return _storage._googleProtobufFloatValue}
    set {_uniqueStorage()._googleProtobufFloatValue = newValue}
  }

  var googleProtobufGeneratedCodeInfo: Int32 {
    get {return _storage._googleProtobufGeneratedCodeInfo}
    set {_uniqueStorage()._googleProtobufGeneratedCodeInfo = newValue}
  }

  var googleProtobufInt32Value: Int32 {
    get {return _storage._googleProtobufInt32Value}
    set {_uniqueStorage()._googleProtobufInt32Value = newValue}
  }

  var googleProtobufInt64Value: Int32 {
    get {return _storage._googleProtobufInt64Value}
    set {_uniqueStorage()._googleProtobufInt64Value = newValue}
  }

  var googleProtobufListValue: Int32 {
    get {return _storage._googleProtobufListValue}
    set {_uniqueStorage()._googleProtobufListValue = newValue}
  }

  var googleProtobufMessageOptions: Int32 {
    get {return _storage._googleProtobufMessageOptions}
    set {_uniqueStorage()._googleProtobufMessageOptions = newValue}
  }

  var googleProtobufMethod: Int32 {
    get {return _storage._googleProtobufMethod}
    set {_uniqueStorage()._googleProtobufMethod = newValue}
  }

  var googleProtobufMethodDescriptorProto: Int32 {
    get {return _storage._googleProtobufMethodDescriptorProto}
    set {_uniqueStorage()._googleProtobufMethodDescriptorProto = newValue}
  }

  var googleProtobufMethodOptions: Int32 {
    get {return _storage._googleProtobufMethodOptions}
    set {_uniqueStorage()._googleProtobufMethodOptions = newValue}
  }

  var googleProtobufMixin: Int32 {
    get {return _storage._googleProtobufMixin}
    set {_uniqueStorage()._googleProtobufMixin = newValue}
  }

  var googleProtobufNullValue: Int32 {
    get {return _storage._googleProtobufNullValue}
    set {_uniqueStorage()._googleProtobufNullValue = newValue}
  }

  var googleProtobufOneofDescriptorProto: Int32 {
    get {return _storage._googleProtobufOneofDescriptorProto}
    set {_uniqueStorage()._googleProtobufOneofDescriptorProto = newValue}
  }

  var googleProtobufOneofOptions: Int32 {
    get {return _storage._googleProtobufOneofOptions}
    set {_uniqueStorage()._googleProtobufOneofOptions = newValue}
  }

  var googleProtobufOption: Int32 {
    get {return _storage._googleProtobufOption}
    set {_uniqueStorage()._googleProtobufOption = newValue}
  }

  var googleProtobufServiceDescriptorProto: Int32 {
    get {return _storage._googleProtobufServiceDescriptorProto}
    set {_uniqueStorage()._googleProtobufServiceDescriptorProto = newValue}
  }

  var googleProtobufServiceOptions: Int32 {
    get {return _storage._googleProtobufServiceOptions}
    set {_uniqueStorage()._googleProtobufServiceOptions = newValue}
  }

  var googleProtobufSourceCodeInfo: Int32 {
    get {return _storage._googleProtobufSourceCodeInfo}
    set {_uniqueStorage()._googleProtobufSourceCodeInfo = newValue}
  }

  var googleProtobufSourceContext: Int32 {
    get {return _storage._googleProtobufSourceContext}
    set {_uniqueStorage()._googleProtobufSourceContext = newValue}
  }

  var googleProtobufStringValue: Int32 {
    get {return _storage._googleProtobufStringValue}
    set {_uniqueStorage()._googleProtobufStringValue = newValue}
  }

  var googleProtobufStruct: Int32 {
    get {return _storage._googleProtobufStruct}
    set {_uniqueStorage()._googleProtobufStruct = newValue}
  }

  var googleProtobufSyntax: Int32 {
    get {return _storage._googleProtobufSyntax}
    set {_uniqueStorage()._googleProtobufSyntax = newValue}
  }

  var googleProtobufTimestamp: Int32 {
    get {return _storage._googleProtobufTimestamp}
    set {_uniqueStorage()._googleProtobufTimestamp = newValue}
  }

  var googleProtobufType: Int32 {
    get {return _storage._googleProtobufType}
    set {_uniqueStorage()._googleProtobufType = newValue}
  }

  var googleProtobufUint32Value: Int32 {
    get {return _storage._googleProtobufUint32Value}
    set {_uniqueStorage()._googleProtobufUint32Value = newValue}
  }

  var googleProtobufUint64Value: Int32 {
    get {return _storage._googleProtobufUint64Value}
    set {_uniqueStorage()._googleProtobufUint64Value = newValue}
  }

  var googleProtobufUninterpretedOption: Int32 {
    get {return _storage._googleProtobufUninterpretedOption}
    set {_uniqueStorage()._googleProtobufUninterpretedOption = newValue}
  }

  var googleProtobufValue: Int32 {
    get {return _storage._googleProtobufValue}
    set {_uniqueStorage()._googleProtobufValue = newValue}
  }

  var goPackage: Int32 {
    get {return _storage._goPackage}
    set {_uniqueStorage()._goPackage = newValue}
  }

  var group: Int32 {
    get {return _storage._group}
    set {_uniqueStorage()._group = newValue}
  }

  var groupFieldNumberStack: Int32 {
    get {return _storage._groupFieldNumberStack}
    set {_uniqueStorage()._groupFieldNumberStack = newValue}
  }

  var groupSize: Int32 {
    get {return _storage._groupSize}
    set {_uniqueStorage()._groupSize = newValue}
  }

  var hadOneofValue: Int32 {
    get {return _storage._hadOneofValue}
    set {_uniqueStorage()._hadOneofValue = newValue}
  }

  var handleConflictingOneOf: Int32 {
    get {return _storage._handleConflictingOneOf}
    set {_uniqueStorage()._handleConflictingOneOf = newValue}
  }

  var hasAggregateValue_p: Int32 {
    get {return _storage._hasAggregateValue_p}
    set {_uniqueStorage()._hasAggregateValue_p = newValue}
  }

  var hasAllowAlias_p: Int32 {
    get {return _storage._hasAllowAlias_p}
    set {_uniqueStorage()._hasAllowAlias_p = newValue}
  }

  var hasBegin_p: Int32 {
    get {return _storage._hasBegin_p}
    set {_uniqueStorage()._hasBegin_p = newValue}
  }

  var hasCcEnableArenas_p: Int32 {
    get {return _storage._hasCcEnableArenas_p}
    set {_uniqueStorage()._hasCcEnableArenas_p = newValue}
  }

  var hasCcGenericServices_p: Int32 {
    get {return _storage._hasCcGenericServices_p}
    set {_uniqueStorage()._hasCcGenericServices_p = newValue}
  }

  var hasClientStreaming_p: Int32 {
    get {return _storage._hasClientStreaming_p}
    set {_uniqueStorage()._hasClientStreaming_p = newValue}
  }

  var hasCsharpNamespace_p: Int32 {
    get {return _storage._hasCsharpNamespace_p}
    set {_uniqueStorage()._hasCsharpNamespace_p = newValue}
  }

  var hasCtype_p: Int32 {
    get {return _storage._hasCtype_p}
    set {_uniqueStorage()._hasCtype_p = newValue}
  }

  var hasDebugRedact_p: Int32 {
    get {return _storage._hasDebugRedact_p}
    set {_uniqueStorage()._hasDebugRedact_p = newValue}
  }

  var hasDefaultValue_p: Int32 {
    get {return _storage._hasDefaultValue_p}
    set {_uniqueStorage()._hasDefaultValue_p = newValue}
  }

  var hasDeprecated_p: Int32 {
    get {return _storage._hasDeprecated_p}
    set {_uniqueStorage()._hasDeprecated_p = newValue}
  }

  var hasDeprecatedLegacyJsonFieldConflicts_p: Int32 {
    get {return _storage._hasDeprecatedLegacyJsonFieldConflicts_p}
    set {_uniqueStorage()._hasDeprecatedLegacyJsonFieldConflicts_p = newValue}
  }

  var hasDoubleValue_p: Int32 {
    get {return _storage._hasDoubleValue_p}
    set {_uniqueStorage()._hasDoubleValue_p = newValue}
  }

  var hasEdition_p: Int32 {
    get {return _storage._hasEdition_p}
    set {_uniqueStorage()._hasEdition_p = newValue}
  }

  var hasEnd_p: Int32 {
    get {return _storage._hasEnd_p}
    set {_uniqueStorage()._hasEnd_p = newValue}
  }

  var hasEnumType_p: Int32 {
    get {return _storage._hasEnumType_p}
    set {_uniqueStorage()._hasEnumType_p = newValue}
  }

  var hasExtendee_p: Int32 {
    get {return _storage._hasExtendee_p}
    set {_uniqueStorage()._hasExtendee_p = newValue}
  }

  var hasExtensionValue_p: Int32 {
    get {return _storage._hasExtensionValue_p}
    set {_uniqueStorage()._hasExtensionValue_p = newValue}
  }

  var hasFeatures_p: Int32 {
    get {return _storage._hasFeatures_p}
    set {_uniqueStorage()._hasFeatures_p = newValue}
  }

  var hasFieldPresence_p: Int32 {
    get {return _storage._hasFieldPresence_p}
    set {_uniqueStorage()._hasFieldPresence_p = newValue}
  }

  var hasFullName_p: Int32 {
    get {return _storage._hasFullName_p}
    set {_uniqueStorage()._hasFullName_p = newValue}
  }

  var hasGoPackage_p: Int32 {
    get {return _storage._hasGoPackage_p}
    set {_uniqueStorage()._hasGoPackage_p = newValue}
  }

  var hash: Int32 {
    get {return _storage._hash}
    set {_uniqueStorage()._hash = newValue}
  }

  var hashable: Int32 {
    get {return _storage._hashable}
    set {_uniqueStorage()._hashable = newValue}
  }

  var hasher: Int32 {
    get {return _storage._hasher}
    set {_uniqueStorage()._hasher = newValue}
  }

  var hashVisitor: Int32 {
    get {return _storage._hashVisitor}
    set {_uniqueStorage()._hashVisitor = newValue}
  }

  var hasIdempotencyLevel_p: Int32 {
    get {return _storage._hasIdempotencyLevel_p}
    set {_uniqueStorage()._hasIdempotencyLevel_p = newValue}
  }

  var hasIdentifierValue_p: Int32 {
    get {return _storage._hasIdentifierValue_p}
    set {_uniqueStorage()._hasIdentifierValue_p = newValue}
  }

  var hasInputType_p: Int32 {
    get {return _storage._hasInputType_p}
    set {_uniqueStorage()._hasInputType_p = newValue}
  }

  var hasIsExtension_p: Int32 {
    get {return _storage._hasIsExtension_p}
    set {_uniqueStorage()._hasIsExtension_p = newValue}
  }

  var hasJavaGenerateEqualsAndHash_p: Int32 {
    get {return _storage._hasJavaGenerateEqualsAndHash_p}
    set {_uniqueStorage()._hasJavaGenerateEqualsAndHash_p = newValue}
  }

  var hasJavaGenericServices_p: Int32 {
    get {return _storage._hasJavaGenericServices_p}
    set {_uniqueStorage()._hasJavaGenericServices_p = newValue}
  }

  var hasJavaMultipleFiles_p: Int32 {
    get {return _storage._hasJavaMultipleFiles_p}
    set {_uniqueStorage()._hasJavaMultipleFiles_p = newValue}
  }

  var hasJavaOuterClassname_p: Int32 {
    get {return _storage._hasJavaOuterClassname_p}
    set {_uniqueStorage()._hasJavaOuterClassname_p = newValue}
  }

  var hasJavaPackage_p: Int32 {
    get {return _storage._hasJavaPackage_p}
    set {_uniqueStorage()._hasJavaPackage_p = newValue}
  }

  var hasJavaStringCheckUtf8_p: Int32 {
    get {return _storage._hasJavaStringCheckUtf8_p}
    set {_uniqueStorage()._hasJavaStringCheckUtf8_p = newValue}
  }

  var hasJsonFormat_p: Int32 {
    get {return _storage._hasJsonFormat_p}
    set {_uniqueStorage()._hasJsonFormat_p = newValue}
  }

  var hasJsonName_p: Int32 {
    get {return _storage._hasJsonName_p}
    set {_uniqueStorage()._hasJsonName_p = newValue}
  }

  var hasJstype_p: Int32 {
    get {return _storage._hasJstype_p}
    set {_uniqueStorage()._hasJstype_p = newValue}
  }

  var hasLabel_p: Int32 {
    get {return _storage._hasLabel_p}
    set {_uniqueStorage()._hasLabel_p = newValue}
  }

  var hasLazy_p: Int32 {
    get {return _storage._hasLazy_p}
    set {_uniqueStorage()._hasLazy_p = newValue}
  }

  var hasLeadingComments_p: Int32 {
    get {return _storage._hasLeadingComments_p}
    set {_uniqueStorage()._hasLeadingComments_p = newValue}
  }

  var hasMapEntry_p: Int32 {
    get {return _storage._hasMapEntry_p}
    set {_uniqueStorage()._hasMapEntry_p = newValue}
  }

  var hasMaximumEdition_p: Int32 {
    get {return _storage._hasMaximumEdition_p}
    set {_uniqueStorage()._hasMaximumEdition_p = newValue}
  }

  var hasMessageEncoding_p: Int32 {
    get {return _storage._hasMessageEncoding_p}
    set {_uniqueStorage()._hasMessageEncoding_p = newValue}
  }

  var hasMessageSetWireFormat_p: Int32 {
    get {return _storage._hasMessageSetWireFormat_p}
    set {_uniqueStorage()._hasMessageSetWireFormat_p = newValue}
  }

  var hasMinimumEdition_p: Int32 {
    get {return _storage._hasMinimumEdition_p}
    set {_uniqueStorage()._hasMinimumEdition_p = newValue}
  }

  var hasName_p: Int32 {
    get {return _storage._hasName_p}
    set {_uniqueStorage()._hasName_p = newValue}
  }

  var hasNamePart_p: Int32 {
    get {return _storage._hasNamePart_p}
    set {_uniqueStorage()._hasNamePart_p = newValue}
  }

  var hasNegativeIntValue_p: Int32 {
    get {return _storage._hasNegativeIntValue_p}
    set {_uniqueStorage()._hasNegativeIntValue_p = newValue}
  }

  var hasNoStandardDescriptorAccessor_p: Int32 {
    get {return _storage._hasNoStandardDescriptorAccessor_p}
    set {_uniqueStorage()._hasNoStandardDescriptorAccessor_p = newValue}
  }

  var hasNumber_p: Int32 {
    get {return _storage._hasNumber_p}
    set {_uniqueStorage()._hasNumber_p = newValue}
  }

  var hasObjcClassPrefix_p: Int32 {
    get {return _storage._hasObjcClassPrefix_p}
    set {_uniqueStorage()._hasObjcClassPrefix_p = newValue}
  }

  var hasOneofIndex_p: Int32 {
    get {return _storage._hasOneofIndex_p}
    set {_uniqueStorage()._hasOneofIndex_p = newValue}
  }

  var hasOptimizeFor_p: Int32 {
    get {return _storage._hasOptimizeFor_p}
    set {_uniqueStorage()._hasOptimizeFor_p = newValue}
  }

  var hasOptions_p: Int32 {
    get {return _storage._hasOptions_p}
    set {_uniqueStorage()._hasOptions_p = newValue}
  }

  var hasOutputType_p: Int32 {
    get {return _storage._hasOutputType_p}
    set {_uniqueStorage()._hasOutputType_p = newValue}
  }

  var hasPackage_p: Int32 {
    get {return _storage._hasPackage_p}
    set {_uniqueStorage()._hasPackage_p = newValue}
  }

  var hasPacked_p: Int32 {
    get {return _storage._hasPacked_p}
    set {_uniqueStorage()._hasPacked_p = newValue}
  }

  var hasPhpClassPrefix_p: Int32 {
    get {return _storage._hasPhpClassPrefix_p}
    set {_uniqueStorage()._hasPhpClassPrefix_p = newValue}
  }

  var hasPhpGenericServices_p: Int32 {
    get {return _storage._hasPhpGenericServices_p}
    set {_uniqueStorage()._hasPhpGenericServices_p = newValue}
  }

  var hasPhpMetadataNamespace_p: Int32 {
    get {return _storage._hasPhpMetadataNamespace_p}
    set {_uniqueStorage()._hasPhpMetadataNamespace_p = newValue}
  }

  var hasPhpNamespace_p: Int32 {
    get {return _storage._hasPhpNamespace_p}
    set {_uniqueStorage()._hasPhpNamespace_p = newValue}
  }

  var hasPositiveIntValue_p: Int32 {
    get {return _storage._hasPositiveIntValue_p}
    set {_uniqueStorage()._hasPositiveIntValue_p = newValue}
  }

  var hasProto3Optional_p: Int32 {
    get {return _storage._hasProto3Optional_p}
    set {_uniqueStorage()._hasProto3Optional_p = newValue}
  }

  var hasPyGenericServices_p: Int32 {
    get {return _storage._hasPyGenericServices_p}
    set {_uniqueStorage()._hasPyGenericServices_p = newValue}
  }

  var hasRepeated_p: Int32 {
    get {return _storage._hasRepeated_p}
    set {_uniqueStorage()._hasRepeated_p = newValue}
  }

  var hasRepeatedFieldEncoding_p: Int32 {
    get {return _storage._hasRepeatedFieldEncoding_p}
    set {_uniqueStorage()._hasRepeatedFieldEncoding_p = newValue}
  }

  var hasReserved_p: Int32 {
    get {return _storage._hasReserved_p}
    set {_uniqueStorage()._hasReserved_p = newValue}
  }

  var hasRetention_p: Int32 {
    get {return _storage._hasRetention_p}
    set {_uniqueStorage()._hasRetention_p = newValue}
  }

  var hasRubyPackage_p: Int32 {
    get {return _storage._hasRubyPackage_p}
    set {_uniqueStorage()._hasRubyPackage_p = newValue}
  }

  var hasSemantic_p: Int32 {
    get {return _storage._hasSemantic_p}
    set {_uniqueStorage()._hasSemantic_p = newValue}
  }

  var hasServerStreaming_p: Int32 {
    get {return _storage._hasServerStreaming_p}
    set {_uniqueStorage()._hasServerStreaming_p = newValue}
  }

  var hasSourceCodeInfo_p: Int32 {
    get {return _storage._hasSourceCodeInfo_p}
    set {_uniqueStorage()._hasSourceCodeInfo_p = newValue}
  }

  var hasSourceContext_p: Int32 {
    get {return _storage._hasSourceContext_p}
    set {_uniqueStorage()._hasSourceContext_p = newValue}
  }

  var hasSourceFile_p: Int32 {
    get {return _storage._hasSourceFile_p}
    set {_uniqueStorage()._hasSourceFile_p = newValue}
  }

  var hasStart_p: Int32 {
    get {return _storage._hasStart_p}
    set {_uniqueStorage()._hasStart_p = newValue}
  }

  var hasStringValue_p: Int32 {
    get {return _storage._hasStringValue_p}
    set {_uniqueStorage()._hasStringValue_p = newValue}
  }

  var hasSwiftPrefix_p: Int32 {
    get {return _storage._hasSwiftPrefix_p}
    set {_uniqueStorage()._hasSwiftPrefix_p = newValue}
  }

  var hasSyntax_p: Int32 {
    get {return _storage._hasSyntax_p}
    set {_uniqueStorage()._hasSyntax_p = newValue}
  }

  var hasTrailingComments_p: Int32 {
    get {return _storage._hasTrailingComments_p}
    set {_uniqueStorage()._hasTrailingComments_p = newValue}
  }

  var hasType_p: Int32 {
    get {return _storage._hasType_p}
    set {_uniqueStorage()._hasType_p = newValue}
  }

  var hasTypeName_p: Int32 {
    get {return _storage._hasTypeName_p}
    set {_uniqueStorage()._hasTypeName_p = newValue}
  }

  var hasUnverifiedLazy_p: Int32 {
    get {return _storage._hasUnverifiedLazy_p}
    set {_uniqueStorage()._hasUnverifiedLazy_p = newValue}
  }

  var hasUtf8Validation_p: Int32 {
    get {return _storage._hasUtf8Validation_p}
    set {_uniqueStorage()._hasUtf8Validation_p = newValue}
  }

  var hasValue_p: Int32 {
    get {return _storage._hasValue_p}
    set {_uniqueStorage()._hasValue_p = newValue}
  }

  var hasVerification_p: Int32 {
    get {return _storage._hasVerification_p}
    set {_uniqueStorage()._hasVerification_p = newValue}
  }

  var hasWeak_p: Int32 {
    get {return _storage._hasWeak_p}
    set {_uniqueStorage()._hasWeak_p = newValue}
  }

  var hour: Int32 {
    get {return _storage._hour}
    set {_uniqueStorage()._hour = newValue}
  }

  var i: Int32 {
    get {return _storage._i}
    set {_uniqueStorage()._i = newValue}
  }

  var idempotencyLevel: Int32 {
    get {return _storage._idempotencyLevel}
    set {_uniqueStorage()._idempotencyLevel = newValue}
  }

  var identifierValue: Int32 {
    get {return _storage._identifierValue}
    set {_uniqueStorage()._identifierValue = newValue}
  }

  var `if`: Int32 {
    get {return _storage._if}
    set {_uniqueStorage()._if = newValue}
  }

  var ignoreUnknownFields: Int32 {
    get {return _storage._ignoreUnknownFields}
    set {_uniqueStorage()._ignoreUnknownFields = newValue}
  }

  var index: Int32 {
    get {return _storage._index}
    set {_uniqueStorage()._index = newValue}
  }

  var init_p: Int32 {
    get {return _storage._init_p}
    set {_uniqueStorage()._init_p = newValue}
  }

  var `inout`: Int32 {
    get {return _storage._inout}
    set {_uniqueStorage()._inout = newValue}
  }

  var inputType: Int32 {
    get {return _storage._inputType}
    set {_uniqueStorage()._inputType = newValue}
  }

  var insert: Int32 {
    get {return _storage._insert}
    set {_uniqueStorage()._insert = newValue}
  }

  var int: Int32 {
    get {return _storage._int}
    set {_uniqueStorage()._int = newValue}
  }

  var int32: Int32 {
    get {return _storage._int32}
    set {_uniqueStorage()._int32 = newValue}
  }

  var int32Value: Int32 {
    get {return _storage._int32Value}
    set {_uniqueStorage()._int32Value = newValue}
  }

  var int64: Int32 {
    get {return _storage._int64}
    set {_uniqueStorage()._int64 = newValue}
  }

  var int64Value: Int32 {
    get {return _storage._int64Value}
    set {_uniqueStorage()._int64Value = newValue}
  }

  var int8: Int32 {
    get {return _storage._int8}
    set {_uniqueStorage()._int8 = newValue}
  }

  var integerLiteral: Int32 {
    get {return _storage._integerLiteral}
    set {_uniqueStorage()._integerLiteral = newValue}
  }

  var integerLiteralType: Int32 {
    get {return _storage._integerLiteralType}
    set {_uniqueStorage()._integerLiteralType = newValue}
  }

  var intern: Int32 {
    get {return _storage._intern}
    set {_uniqueStorage()._intern = newValue}
  }

  var `internal`: Int32 {
    get {return _storage._internal}
    set {_uniqueStorage()._internal = newValue}
  }

  var internalState: Int32 {
    get {return _storage._internalState}
    set {_uniqueStorage()._internalState = newValue}
  }

  var into: Int32 {
    get {return _storage._into}
    set {_uniqueStorage()._into = newValue}
  }

  var ints: Int32 {
    get {return _storage._ints}
    set {_uniqueStorage()._ints = newValue}
  }

  var isA: Int32 {
    get {return _storage._isA}
    set {_uniqueStorage()._isA = newValue}
  }

  var isEqual: Int32 {
    get {return _storage._isEqual}
    set {_uniqueStorage()._isEqual = newValue}
  }

  var isEqualTo: Int32 {
    get {return _storage._isEqualTo}
    set {_uniqueStorage()._isEqualTo = newValue}
  }

  var isExtension: Int32 {
    get {return _storage._isExtension}
    set {_uniqueStorage()._isExtension = newValue}
  }

  var isInitialized_p: Int32 {
    get {return _storage._isInitialized_p}
    set {_uniqueStorage()._isInitialized_p = newValue}
  }

  var isNegative: Int32 {
    get {return _storage._isNegative}
    set {_uniqueStorage()._isNegative = newValue}
  }

  var isUnset: Int32 {
    get {return _storage._isUnset}
    set {_uniqueStorage()._isUnset = newValue}
  }

  var itemTagsEncodedSize: Int32 {
    get {return _storage._itemTagsEncodedSize}
    set {_uniqueStorage()._itemTagsEncodedSize = newValue}
  }

  var iterator: Int32 {
    get {return _storage._iterator}
    set {_uniqueStorage()._iterator = newValue}
  }

  var javaGenerateEqualsAndHash: Int32 {
    get {return _storage._javaGenerateEqualsAndHash}
    set {_uniqueStorage()._javaGenerateEqualsAndHash = newValue}
  }

  var javaGenericServices: Int32 {
    get {return _storage._javaGenericServices}
    set {_uniqueStorage()._javaGenericServices = newValue}
  }

  var javaMultipleFiles: Int32 {
    get {return _storage._javaMultipleFiles}
    set {_uniqueStorage()._javaMultipleFiles = newValue}
  }

  var javaOuterClassname: Int32 {
    get {return _storage._javaOuterClassname}
    set {_uniqueStorage()._javaOuterClassname = newValue}
  }

  var javaPackage: Int32 {
    get {return _storage._javaPackage}
    set {_uniqueStorage()._javaPackage = newValue}
  }

  var javaStringCheckUtf8: Int32 {
    get {return _storage._javaStringCheckUtf8}
    set {_uniqueStorage()._javaStringCheckUtf8 = newValue}
  }

  var jsondecoder: Int32 {
    get {return _storage._jsondecoder}
    set {_uniqueStorage()._jsondecoder = newValue}
  }

  var jsondecodingError: Int32 {
    get {return _storage._jsondecodingError}
    set {_uniqueStorage()._jsondecodingError = newValue}
  }

  var jsondecodingOptions: Int32 {
    get {return _storage._jsondecodingOptions}
    set {_uniqueStorage()._jsondecodingOptions = newValue}
  }

  var jsonEncoder: Int32 {
    get {return _storage._jsonEncoder}
    set {_uniqueStorage()._jsonEncoder = newValue}
  }

  var jsonencodingError: Int32 {
    get {return _storage._jsonencodingError}
    set {_uniqueStorage()._jsonencodingError = newValue}
  }

  var jsonencodingOptions: Int32 {
    get {return _storage._jsonencodingOptions}
    set {_uniqueStorage()._jsonencodingOptions = newValue}
  }

  var jsonencodingVisitor: Int32 {
    get {return _storage._jsonencodingVisitor}
    set {_uniqueStorage()._jsonencodingVisitor = newValue}
  }

  var jsonFormat: Int32 {
    get {return _storage._jsonFormat}
    set {_uniqueStorage()._jsonFormat = newValue}
  }

  var jsonmapEncodingVisitor: Int32 {
    get {return _storage._jsonmapEncodingVisitor}
    set {_uniqueStorage()._jsonmapEncodingVisitor = newValue}
  }

  var jsonName: Int32 {
    get {return _storage._jsonName}
    set {_uniqueStorage()._jsonName = newValue}
  }

  var jsonPath: Int32 {
    get {return _storage._jsonPath}
    set {_uniqueStorage()._jsonPath = newValue}
  }

  var jsonPaths: Int32 {
    get {return _storage._jsonPaths}
    set {_uniqueStorage()._jsonPaths = newValue}
  }

  var jsonscanner: Int32 {
    get {return _storage._jsonscanner}
    set {_uniqueStorage()._jsonscanner = newValue}
  }

  var jsonString: Int32 {
    get {return _storage._jsonString}
    set {_uniqueStorage()._jsonString = newValue}
  }

  var jsonText: Int32 {
    get {return _storage._jsonText}
    set {_uniqueStorage()._jsonText = newValue}
  }

  var jsonUtf8Bytes: Int32 {
    get {return _storage._jsonUtf8Bytes}
    set {_uniqueStorage()._jsonUtf8Bytes = newValue}
  }

  var jsonUtf8Data: Int32 {
    get {return _storage._jsonUtf8Data}
    set {_uniqueStorage()._jsonUtf8Data = newValue}
  }

  var jstype: Int32 {
    get {return _storage._jstype}
    set {_uniqueStorage()._jstype = newValue}
  }

  var k: Int32 {
    get {return _storage._k}
    set {_uniqueStorage()._k = newValue}
  }

  var kChunkSize: Int32 {
    get {return _storage._kChunkSize}
    set {_uniqueStorage()._kChunkSize = newValue}
  }

  var key: Int32 {
    get {return _storage._key}
    set {_uniqueStorage()._key = newValue}
  }

  var keyField: Int32 {
    get {return _storage._keyField}
    set {_uniqueStorage()._keyField = newValue}
  }

  var keyFieldOpt: Int32 {
    get {return _storage._keyFieldOpt}
    set {_uniqueStorage()._keyFieldOpt = newValue}
  }

  var keyType: Int32 {
    get {return _storage._keyType}
    set {_uniqueStorage()._keyType = newValue}
  }

  var kind: Int32 {
    get {return _storage._kind}
    set {_uniqueStorage()._kind = newValue}
  }

  var l: Int32 {
    get {return _storage._l}
    set {_uniqueStorage()._l = newValue}
  }

  var label: Int32 {
    get {return _storage._label}
    set {_uniqueStorage()._label = newValue}
  }

  var lazy: Int32 {
    get {return _storage._lazy}
    set {_uniqueStorage()._lazy = newValue}
  }

  var leadingComments: Int32 {
    get {return _storage._leadingComments}
    set {_uniqueStorage()._leadingComments = newValue}
  }

  var leadingDetachedComments: Int32 {
    get {return _storage._leadingDetachedComments}
    set {_uniqueStorage()._leadingDetachedComments = newValue}
  }

  var length: Int32 {
    get {return _storage._length}
    set {_uniqueStorage()._length = newValue}
  }

  var lessThan: Int32 {
    get {return _storage._lessThan}
    set {_uniqueStorage()._lessThan = newValue}
  }

  var `let`: Int32 {
    get {return _storage._let}
    set {_uniqueStorage()._let = newValue}
  }

  var lhs: Int32 {
    get {return _storage._lhs}
    set {_uniqueStorage()._lhs = newValue}
  }

  var list: Int32 {
    get {return _storage._list}
    set {_uniqueStorage()._list = newValue}
  }

  var listOfMessages: Int32 {
    get {return _storage._listOfMessages}
    set {_uniqueStorage()._listOfMessages = newValue}
  }

  var listValue: Int32 {
    get {return _storage._listValue}
    set {_uniqueStorage()._listValue = newValue}
  }

  var littleEndian: Int32 {
    get {return _storage._littleEndian}
    set {_uniqueStorage()._littleEndian = newValue}
  }

  var littleEndianBytes: Int32 {
    get {return _storage._littleEndianBytes}
    set {_uniqueStorage()._littleEndianBytes = newValue}
  }

  var load: Int32 {
    get {return _storage._load}
    set {_uniqueStorage()._load = newValue}
  }

  var localHasher: Int32 {
    get {return _storage._localHasher}
    set {_uniqueStorage()._localHasher = newValue}
  }

  var location: Int32 {
    get {return _storage._location}
    set {_uniqueStorage()._location = newValue}
  }

  var m: Int32 {
    get {return _storage._m}
    set {_uniqueStorage()._m = newValue}
  }

  var major: Int32 {
    get {return _storage._major}
    set {_uniqueStorage()._major = newValue}
  }

  var makeAsyncIterator: Int32 {
    get {return _storage._makeAsyncIterator}
    set {_uniqueStorage()._makeAsyncIterator = newValue}
  }

  var makeIterator: Int32 {
    get {return _storage._makeIterator}
    set {_uniqueStorage()._makeIterator = newValue}
  }

  var map: Int32 {
    get {return _storage._map}
    set {_uniqueStorage()._map = newValue}
  }

  var mapEntry: Int32 {
    get {return _storage._mapEntry}
    set {_uniqueStorage()._mapEntry = newValue}
  }

  var mapKeyType: Int32 {
    get {return _storage._mapKeyType}
    set {_uniqueStorage()._mapKeyType = newValue}
  }

  var mapToMessages: Int32 {
    get {return _storage._mapToMessages}
    set {_uniqueStorage()._mapToMessages = newValue}
  }

  var mapValueType: Int32 {
    get {return _storage._mapValueType}
    set {_uniqueStorage()._mapValueType = newValue}
  }

  var mapVisitor: Int32 {
    get {return _storage._mapVisitor}
    set {_uniqueStorage()._mapVisitor = newValue}
  }

  var maximumEdition: Int32 {
    get {return _storage._maximumEdition}
    set {_uniqueStorage()._maximumEdition = newValue}
  }

  var mdayStart: Int32 {
    get {return _storage._mdayStart}
    set {_uniqueStorage()._mdayStart = newValue}
  }

  var merge: Int32 {
    get {return _storage._merge}
    set {_uniqueStorage()._merge = newValue}
  }

  var message: Int32 {
    get {return _storage._message}
    set {_uniqueStorage()._message = newValue}
  }

  var messageDepthLimit: Int32 {
    get {return _storage._messageDepthLimit}
    set {_uniqueStorage()._messageDepthLimit = newValue}
  }

  var messageEncoding: Int32 {
    get {return _storage._messageEncoding}
    set {_uniqueStorage()._messageEncoding = newValue}
  }

  var messageExtension: Int32 {
    get {return _storage._messageExtension}
    set {_uniqueStorage()._messageExtension = newValue}
  }

  var messageImplementationBase: Int32 {
    get {return _storage._messageImplementationBase}
    set {_uniqueStorage()._messageImplementationBase = newValue}
  }

  var messageOptions: Int32 {
    get {return _storage._messageOptions}
    set {_uniqueStorage()._messageOptions = newValue}
  }

  var messageSet: Int32 {
    get {return _storage._messageSet}
    set {_uniqueStorage()._messageSet = newValue}
  }

  var messageSetWireFormat: Int32 {
    get {return _storage._messageSetWireFormat}
    set {_uniqueStorage()._messageSetWireFormat = newValue}
  }

  var messageSize: Int32 {
    get {return _storage._messageSize}
    set {_uniqueStorage()._messageSize = newValue}
  }

  var messageType: Int32 {
    get {return _storage._messageType}
    set {_uniqueStorage()._messageType = newValue}
  }

  var method: Int32 {
    get {return _storage._method}
    set {_uniqueStorage()._method = newValue}
  }

  var methodDescriptorProto: Int32 {
    get {return _storage._methodDescriptorProto}
    set {_uniqueStorage()._methodDescriptorProto = newValue}
  }

  var methodOptions: Int32 {
    get {return _storage._methodOptions}
    set {_uniqueStorage()._methodOptions = newValue}
  }

  var methods: Int32 {
    get {return _storage._methods}
    set {_uniqueStorage()._methods = newValue}
  }

  var min: Int32 {
    get {return _storage._min}
    set {_uniqueStorage()._min = newValue}
  }

  var minimumEdition: Int32 {
    get {return _storage._minimumEdition}
    set {_uniqueStorage()._minimumEdition = newValue}
  }

  var minor: Int32 {
    get {return _storage._minor}
    set {_uniqueStorage()._minor = newValue}
  }

  var mixin: Int32 {
    get {return _storage._mixin}
    set {_uniqueStorage()._mixin = newValue}
  }

  var mixins: Int32 {
    get {return _storage._mixins}
    set {_uniqueStorage()._mixins = newValue}
  }

  var modifier: Int32 {
    get {return _storage._modifier}
    set {_uniqueStorage()._modifier = newValue}
  }

  var modify: Int32 {
    get {return _storage._modify}
    set {_uniqueStorage()._modify = newValue}
  }

  var month: Int32 {
    get {return _storage._month}
    set {_uniqueStorage()._month = newValue}
  }

  var msgExtension: Int32 {
    get {return _storage._msgExtension}
    set {_uniqueStorage()._msgExtension = newValue}
  }

  var mutating: Int32 {
    get {return _storage._mutating}
    set {_uniqueStorage()._mutating = newValue}
  }

  var n: Int32 {
    get {return _storage._n}
    set {_uniqueStorage()._n = newValue}
  }

  var name: Int32 {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  var nameDescription: Int32 {
    get {return _storage._nameDescription}
    set {_uniqueStorage()._nameDescription = newValue}
  }

  var nameMap: Int32 {
    get {return _storage._nameMap}
    set {_uniqueStorage()._nameMap = newValue}
  }

  var namePart: Int32 {
    get {return _storage._namePart}
    set {_uniqueStorage()._namePart = newValue}
  }

  var names: Int32 {
    get {return _storage._names}
    set {_uniqueStorage()._names = newValue}
  }

  var nanos: Int32 {
    get {return _storage._nanos}
    set {_uniqueStorage()._nanos = newValue}
  }

  var negativeIntValue: Int32 {
    get {return _storage._negativeIntValue}
    set {_uniqueStorage()._negativeIntValue = newValue}
  }

  var nestedType: Int32 {
    get {return _storage._nestedType}
    set {_uniqueStorage()._nestedType = newValue}
  }

  var newL: Int32 {
    get {return _storage._newL}
    set {_uniqueStorage()._newL = newValue}
  }

  var newList: Int32 {
    get {return _storage._newList}
    set {_uniqueStorage()._newList = newValue}
  }

  var newValue: Int32 {
    get {return _storage._newValue}
    set {_uniqueStorage()._newValue = newValue}
  }

  var next: Int32 {
    get {return _storage._next}
    set {_uniqueStorage()._next = newValue}
  }

  var nextByte: Int32 {
    get {return _storage._nextByte}
    set {_uniqueStorage()._nextByte = newValue}
  }

  var nextFieldNumber: Int32 {
    get {return _storage._nextFieldNumber}
    set {_uniqueStorage()._nextFieldNumber = newValue}
  }

  var nextVarInt: Int32 {
    get {return _storage._nextVarInt}
    set {_uniqueStorage()._nextVarInt = newValue}
  }

  var `nil`: Int32 {
    get {return _storage._nil}
    set {_uniqueStorage()._nil = newValue}
  }

  var nilLiteral: Int32 {
    get {return _storage._nilLiteral}
    set {_uniqueStorage()._nilLiteral = newValue}
  }

  var noStandardDescriptorAccessor: Int32 {
    get {return _storage._noStandardDescriptorAccessor}
    set {_uniqueStorage()._noStandardDescriptorAccessor = newValue}
  }

  var nullValue: Int32 {
    get {return _storage._nullValue}
    set {_uniqueStorage()._nullValue = newValue}
  }

  var number: Int32 {
    get {return _storage._number}
    set {_uniqueStorage()._number = newValue}
  }

  var numberValue: Int32 {
    get {return _storage._numberValue}
    set {_uniqueStorage()._numberValue = newValue}
  }

  var objcClassPrefix: Int32 {
    get {return _storage._objcClassPrefix}
    set {_uniqueStorage()._objcClassPrefix = newValue}
  }

  var of: Int32 {
    get {return _storage._of}
    set {_uniqueStorage()._of = newValue}
  }

  var oneOf: Int32 {
    get {return _storage._oneOf}
    set {_uniqueStorage()._oneOf = newValue}
  }

  var oneofDecl: Int32 {
    get {return _storage._oneofDecl}
    set {_uniqueStorage()._oneofDecl = newValue}
  }

  var oneofDescriptorProto: Int32 {
    get {return _storage._oneofDescriptorProto}
    set {_uniqueStorage()._oneofDescriptorProto = newValue}
  }

  var oneofIndex: Int32 {
    get {return _storage._oneofIndex}
    set {_uniqueStorage()._oneofIndex = newValue}
  }

  var oneofOptions: Int32 {
    get {return _storage._oneofOptions}
    set {_uniqueStorage()._oneofOptions = newValue}
  }

  var oneofs: Int32 {
    get {return _storage._oneofs}
    set {_uniqueStorage()._oneofs = newValue}
  }

  var oneOfKind: Int32 {
    get {return _storage._oneOfKind}
    set {_uniqueStorage()._oneOfKind = newValue}
  }

  var optimizeFor: Int32 {
    get {return _storage._optimizeFor}
    set {_uniqueStorage()._optimizeFor = newValue}
  }

  var optimizeMode: Int32 {
    get {return _storage._optimizeMode}
    set {_uniqueStorage()._optimizeMode = newValue}
  }

  var option: Int32 {
    get {return _storage._option}
    set {_uniqueStorage()._option = newValue}
  }

  var optionalEnumExtensionField: Int32 {
    get {return _storage._optionalEnumExtensionField}
    set {_uniqueStorage()._optionalEnumExtensionField = newValue}
  }

  var optionalExtensionField: Int32 {
    get {return _storage._optionalExtensionField}
    set {_uniqueStorage()._optionalExtensionField = newValue}
  }

  var optionalGroupExtensionField: Int32 {
    get {return _storage._optionalGroupExtensionField}
    set {_uniqueStorage()._optionalGroupExtensionField = newValue}
  }

  var optionalMessageExtensionField: Int32 {
    get {return _storage._optionalMessageExtensionField}
    set {_uniqueStorage()._optionalMessageExtensionField = newValue}
  }

  var optionRetention: Int32 {
    get {return _storage._optionRetention}
    set {_uniqueStorage()._optionRetention = newValue}
  }

  var options: Int32 {
    get {return _storage._options}
    set {_uniqueStorage()._options = newValue}
  }

  var optionTargetType: Int32 {
    get {return _storage._optionTargetType}
    set {_uniqueStorage()._optionTargetType = newValue}
  }

  var other: Int32 {
    get {return _storage._other}
    set {_uniqueStorage()._other = newValue}
  }

  var others: Int32 {
    get {return _storage._others}
    set {_uniqueStorage()._others = newValue}
  }

  var out: Int32 {
    get {return _storage._out}
    set {_uniqueStorage()._out = newValue}
  }

  var outputType: Int32 {
    get {return _storage._outputType}
    set {_uniqueStorage()._outputType = newValue}
  }

  var p: Int32 {
    get {return _storage._p}
    set {_uniqueStorage()._p = newValue}
  }

  var package: Int32 {
    get {return _storage._package}
    set {_uniqueStorage()._package = newValue}
  }

  var packed: Int32 {
    get {return _storage._packed}
    set {_uniqueStorage()._packed = newValue}
  }

  var packedBool: Int32 {
    get {return _storage._packedBool}
    set {_uniqueStorage()._packedBool = newValue}
  }

  var packedDouble: Int32 {
    get {return _storage._packedDouble}
    set {_uniqueStorage()._packedDouble = newValue}
  }

  var packedEnum: Int32 {
    get {return _storage._packedEnum}
    set {_uniqueStorage()._packedEnum = newValue}
  }

  var packedEnumExtensionField: Int32 {
    get {return _storage._packedEnumExtensionField}
    set {_uniqueStorage()._packedEnumExtensionField = newValue}
  }

  var packedExtensionField: Int32 {
    get {return _storage._packedExtensionField}
    set {_uniqueStorage()._packedExtensionField = newValue}
  }

  var packedFixed32: Int32 {
    get {return _storage._packedFixed32}
    set {_uniqueStorage()._packedFixed32 = newValue}
  }

  var packedFixed64: Int32 {
    get {return _storage._packedFixed64}
    set {_uniqueStorage()._packedFixed64 = newValue}
  }

  var packedFloat: Int32 {
    get {return _storage._packedFloat}
    set {_uniqueStorage()._packedFloat = newValue}
  }

  var packedInt32: Int32 {
    get {return _storage._packedInt32}
    set {_uniqueStorage()._packedInt32 = newValue}
  }

  var packedInt64: Int32 {
    get {return _storage._packedInt64}
    set {_uniqueStorage()._packedInt64 = newValue}
  }

  var packedSfixed32: Int32 {
    get {return _storage._packedSfixed32}
    set {_uniqueStorage()._packedSfixed32 = newValue}
  }

  var packedSfixed64: Int32 {
    get {return _storage._packedSfixed64}
    set {_uniqueStorage()._packedSfixed64 = newValue}
  }

  var packedSint32: Int32 {
    get {return _storage._packedSint32}
    set {_uniqueStorage()._packedSint32 = newValue}
  }

  var packedSint64: Int32 {
    get {return _storage._packedSint64}
    set {_uniqueStorage()._packedSint64 = newValue}
  }

  var packedUint32: Int32 {
    get {return _storage._packedUint32}
    set {_uniqueStorage()._packedUint32 = newValue}
  }

  var packedUint64: Int32 {
    get {return _storage._packedUint64}
    set {_uniqueStorage()._packedUint64 = newValue}
  }

  var padding: Int32 {
    get {return _storage._padding}
    set {_uniqueStorage()._padding = newValue}
  }

  var parent: Int32 {
    get {return _storage._parent}
    set {_uniqueStorage()._parent = newValue}
  }

  var parse: Int32 {
    get {return _storage._parse}
    set {_uniqueStorage()._parse = newValue}
  }

  var path: Int32 {
    get {return _storage._path}
    set {_uniqueStorage()._path = newValue}
  }

  var paths: Int32 {
    get {return _storage._paths}
    set {_uniqueStorage()._paths = newValue}
  }

  var payload: Int32 {
    get {return _storage._payload}
    set {_uniqueStorage()._payload = newValue}
  }

  var payloadSize: Int32 {
    get {return _storage._payloadSize}
    set {_uniqueStorage()._payloadSize = newValue}
  }

  var phpClassPrefix: Int32 {
    get {return _storage._phpClassPrefix}
    set {_uniqueStorage()._phpClassPrefix = newValue}
  }

  var phpGenericServices: Int32 {
    get {return _storage._phpGenericServices}
    set {_uniqueStorage()._phpGenericServices = newValue}
  }

  var phpMetadataNamespace: Int32 {
    get {return _storage._phpMetadataNamespace}
    set {_uniqueStorage()._phpMetadataNamespace = newValue}
  }

  var phpNamespace: Int32 {
    get {return _storage._phpNamespace}
    set {_uniqueStorage()._phpNamespace = newValue}
  }

  var pos: Int32 {
    get {return _storage._pos}
    set {_uniqueStorage()._pos = newValue}
  }

  var positiveIntValue: Int32 {
    get {return _storage._positiveIntValue}
    set {_uniqueStorage()._positiveIntValue = newValue}
  }

  var prefix: Int32 {
    get {return _storage._prefix}
    set {_uniqueStorage()._prefix = newValue}
  }

  var preserveProtoFieldNames: Int32 {
    get {return _storage._preserveProtoFieldNames}
    set {_uniqueStorage()._preserveProtoFieldNames = newValue}
  }

  var preTraverse: Int32 {
    get {return _storage._preTraverse}
    set {_uniqueStorage()._preTraverse = newValue}
  }

  var printUnknownFields: Int32 {
    get {return _storage._printUnknownFields}
    set {_uniqueStorage()._printUnknownFields = newValue}
  }

  var proto2: Int32 {
    get {return _storage._proto2}
    set {_uniqueStorage()._proto2 = newValue}
  }

  var proto3DefaultValue: Int32 {
    get {return _storage._proto3DefaultValue}
    set {_uniqueStorage()._proto3DefaultValue = newValue}
  }

  var proto3Optional: Int32 {
    get {return _storage._proto3Optional}
    set {_uniqueStorage()._proto3Optional = newValue}
  }

  var protobufApiversionCheck: Int32 {
    get {return _storage._protobufApiversionCheck}
    set {_uniqueStorage()._protobufApiversionCheck = newValue}
  }

  var protobufApiversion3: Int32 {
    get {return _storage._protobufApiversion3}
    set {_uniqueStorage()._protobufApiversion3 = newValue}
  }

  var protobufBool: Int32 {
    get {return _storage._protobufBool}
    set {_uniqueStorage()._protobufBool = newValue}
  }

  var protobufBytes: Int32 {
    get {return _storage._protobufBytes}
    set {_uniqueStorage()._protobufBytes = newValue}
  }

  var protobufDouble: Int32 {
    get {return _storage._protobufDouble}
    set {_uniqueStorage()._protobufDouble = newValue}
  }

  var protobufEnumMap: Int32 {
    get {return _storage._protobufEnumMap}
    set {_uniqueStorage()._protobufEnumMap = newValue}
  }

  var protobufExtension: Int32 {
    get {return _storage._protobufExtension}
    set {_uniqueStorage()._protobufExtension = newValue}
  }

  var protobufFixed32: Int32 {
    get {return _storage._protobufFixed32}
    set {_uniqueStorage()._protobufFixed32 = newValue}
  }

  var protobufFixed64: Int32 {
    get {return _storage._protobufFixed64}
    set {_uniqueStorage()._protobufFixed64 = newValue}
  }

  var protobufFloat: Int32 {
    get {return _storage._protobufFloat}
    set {_uniqueStorage()._protobufFloat = newValue}
  }

  var protobufInt32: Int32 {
    get {return _storage._protobufInt32}
    set {_uniqueStorage()._protobufInt32 = newValue}
  }

  var protobufInt64: Int32 {
    get {return _storage._protobufInt64}
    set {_uniqueStorage()._protobufInt64 = newValue}
  }

  var protobufMap: Int32 {
    get {return _storage._protobufMap}
    set {_uniqueStorage()._protobufMap = newValue}
  }

  var protobufMessageMap: Int32 {
    get {return _storage._protobufMessageMap}
    set {_uniqueStorage()._protobufMessageMap = newValue}
  }

  var protobufSfixed32: Int32 {
    get {return _storage._protobufSfixed32}
    set {_uniqueStorage()._protobufSfixed32 = newValue}
  }

  var protobufSfixed64: Int32 {
    get {return _storage._protobufSfixed64}
    set {_uniqueStorage()._protobufSfixed64 = newValue}
  }

  var protobufSint32: Int32 {
    get {return _storage._protobufSint32}
    set {_uniqueStorage()._protobufSint32 = newValue}
  }

  var protobufSint64: Int32 {
    get {return _storage._protobufSint64}
    set {_uniqueStorage()._protobufSint64 = newValue}
  }

  var protobufString: Int32 {
    get {return _storage._protobufString}
    set {_uniqueStorage()._protobufString = newValue}
  }

  var protobufUint32: Int32 {
    get {return _storage._protobufUint32}
    set {_uniqueStorage()._protobufUint32 = newValue}
  }

  var protobufUint64: Int32 {
    get {return _storage._protobufUint64}
    set {_uniqueStorage()._protobufUint64 = newValue}
  }

  var protobufExtensionFieldValues: Int32 {
    get {return _storage._protobufExtensionFieldValues}
    set {_uniqueStorage()._protobufExtensionFieldValues = newValue}
  }

  var protobufFieldNumber: Int32 {
    get {return _storage._protobufFieldNumber}
    set {_uniqueStorage()._protobufFieldNumber = newValue}
  }

  var protobufGeneratedIsEqualTo: Int32 {
    get {return _storage._protobufGeneratedIsEqualTo}
    set {_uniqueStorage()._protobufGeneratedIsEqualTo = newValue}
  }

  var protobufNameMap: Int32 {
    get {return _storage._protobufNameMap}
    set {_uniqueStorage()._protobufNameMap = newValue}
  }

  var protobufNewField: Int32 {
    get {return _storage._protobufNewField}
    set {_uniqueStorage()._protobufNewField = newValue}
  }

  var protobufPackage: Int32 {
    get {return _storage._protobufPackage}
    set {_uniqueStorage()._protobufPackage = newValue}
  }

  var `protocol`: Int32 {
    get {return _storage._protocol}
    set {_uniqueStorage()._protocol = newValue}
  }

  var protoFieldName: Int32 {
    get {return _storage._protoFieldName}
    set {_uniqueStorage()._protoFieldName = newValue}
  }

  var protoMessageName: Int32 {
    get {return _storage._protoMessageName}
    set {_uniqueStorage()._protoMessageName = newValue}
  }

  var protoNameProviding: Int32 {
    get {return _storage._protoNameProviding}
    set {_uniqueStorage()._protoNameProviding = newValue}
  }

  var protoPaths: Int32 {
    get {return _storage._protoPaths}
    set {_uniqueStorage()._protoPaths = newValue}
  }

  var `public`: Int32 {
    get {return _storage._public}
    set {_uniqueStorage()._public = newValue}
  }

  var publicDependency: Int32 {
    get {return _storage._publicDependency}
    set {_uniqueStorage()._publicDependency = newValue}
  }

  var putBoolValue: Int32 {
    get {return _storage._putBoolValue}
    set {_uniqueStorage()._putBoolValue = newValue}
  }

  var putBytesValue: Int32 {
    get {return _storage._putBytesValue}
    set {_uniqueStorage()._putBytesValue = newValue}
  }

  var putDoubleValue: Int32 {
    get {return _storage._putDoubleValue}
    set {_uniqueStorage()._putDoubleValue = newValue}
  }

  var putEnumValue: Int32 {
    get {return _storage._putEnumValue}
    set {_uniqueStorage()._putEnumValue = newValue}
  }

  var putFixedUint32: Int32 {
    get {return _storage._putFixedUint32}
    set {_uniqueStorage()._putFixedUint32 = newValue}
  }

  var putFixedUint64: Int32 {
    get {return _storage._putFixedUint64}
    set {_uniqueStorage()._putFixedUint64 = newValue}
  }

  var putFloatValue: Int32 {
    get {return _storage._putFloatValue}
    set {_uniqueStorage()._putFloatValue = newValue}
  }

  var putInt64: Int32 {
    get {return _storage._putInt64}
    set {_uniqueStorage()._putInt64 = newValue}
  }

  var putStringValue: Int32 {
    get {return _storage._putStringValue}
    set {_uniqueStorage()._putStringValue = newValue}
  }

  var putUint64: Int32 {
    get {return _storage._putUint64}
    set {_uniqueStorage()._putUint64 = newValue}
  }

  var putUint64Hex: Int32 {
    get {return _storage._putUint64Hex}
    set {_uniqueStorage()._putUint64Hex = newValue}
  }

  var putVarInt: Int32 {
    get {return _storage._putVarInt}
    set {_uniqueStorage()._putVarInt = newValue}
  }

  var putZigZagVarInt: Int32 {
    get {return _storage._putZigZagVarInt}
    set {_uniqueStorage()._putZigZagVarInt = newValue}
  }

  var pyGenericServices: Int32 {
    get {return _storage._pyGenericServices}
    set {_uniqueStorage()._pyGenericServices = newValue}
  }

  var r: Int32 {
    get {return _storage._r}
    set {_uniqueStorage()._r = newValue}
  }

  var rawChars: Int32 {
    get {return _storage._rawChars}
    set {_uniqueStorage()._rawChars = newValue}
  }

  var rawRepresentable: Int32 {
    get {return _storage._rawRepresentable}
    set {_uniqueStorage()._rawRepresentable = newValue}
  }

  var rawValue: Int32 {
    get {return _storage._rawValue}
    set {_uniqueStorage()._rawValue = newValue}
  }

  var read4HexDigits: Int32 {
    get {return _storage._read4HexDigits}
    set {_uniqueStorage()._read4HexDigits = newValue}
  }

  var readBytes: Int32 {
    get {return _storage._readBytes}
    set {_uniqueStorage()._readBytes = newValue}
  }

  var register: Int32 {
    get {return _storage._register}
    set {_uniqueStorage()._register = newValue}
  }

  var repeated: Int32 {
    get {return _storage._repeated}
    set {_uniqueStorage()._repeated = newValue}
  }

  var repeatedBool: Int32 {
    get {return _storage._repeatedBool}
    set {_uniqueStorage()._repeatedBool = newValue}
  }

  var repeatedBytes: Int32 {
    get {return _storage._repeatedBytes}
    set {_uniqueStorage()._repeatedBytes = newValue}
  }

  var repeatedDouble: Int32 {
    get {return _storage._repeatedDouble}
    set {_uniqueStorage()._repeatedDouble = newValue}
  }

  var repeatedEnum: Int32 {
    get {return _storage._repeatedEnum}
    set {_uniqueStorage()._repeatedEnum = newValue}
  }

  var repeatedEnumExtensionField: Int32 {
    get {return _storage._repeatedEnumExtensionField}
    set {_uniqueStorage()._repeatedEnumExtensionField = newValue}
  }

  var repeatedExtensionField: Int32 {
    get {return _storage._repeatedExtensionField}
    set {_uniqueStorage()._repeatedExtensionField = newValue}
  }

  var repeatedFieldEncoding: Int32 {
    get {return _storage._repeatedFieldEncoding}
    set {_uniqueStorage()._repeatedFieldEncoding = newValue}
  }

  var repeatedFixed32: Int32 {
    get {return _storage._repeatedFixed32}
    set {_uniqueStorage()._repeatedFixed32 = newValue}
  }

  var repeatedFixed64: Int32 {
    get {return _storage._repeatedFixed64}
    set {_uniqueStorage()._repeatedFixed64 = newValue}
  }

  var repeatedFloat: Int32 {
    get {return _storage._repeatedFloat}
    set {_uniqueStorage()._repeatedFloat = newValue}
  }

  var repeatedGroup: Int32 {
    get {return _storage._repeatedGroup}
    set {_uniqueStorage()._repeatedGroup = newValue}
  }

  var repeatedGroupExtensionField: Int32 {
    get {return _storage._repeatedGroupExtensionField}
    set {_uniqueStorage()._repeatedGroupExtensionField = newValue}
  }

  var repeatedInt32: Int32 {
    get {return _storage._repeatedInt32}
    set {_uniqueStorage()._repeatedInt32 = newValue}
  }

  var repeatedInt64: Int32 {
    get {return _storage._repeatedInt64}
    set {_uniqueStorage()._repeatedInt64 = newValue}
  }

  var repeatedMessage: Int32 {
    get {return _storage._repeatedMessage}
    set {_uniqueStorage()._repeatedMessage = newValue}
  }

  var repeatedMessageExtensionField: Int32 {
    get {return _storage._repeatedMessageExtensionField}
    set {_uniqueStorage()._repeatedMessageExtensionField = newValue}
  }

  var repeatedSfixed32: Int32 {
    get {return _storage._repeatedSfixed32}
    set {_uniqueStorage()._repeatedSfixed32 = newValue}
  }

  var repeatedSfixed64: Int32 {
    get {return _storage._repeatedSfixed64}
    set {_uniqueStorage()._repeatedSfixed64 = newValue}
  }

  var repeatedSint32: Int32 {
    get {return _storage._repeatedSint32}
    set {_uniqueStorage()._repeatedSint32 = newValue}
  }

  var repeatedSint64: Int32 {
    get {return _storage._repeatedSint64}
    set {_uniqueStorage()._repeatedSint64 = newValue}
  }

  var repeatedString: Int32 {
    get {return _storage._repeatedString}
    set {_uniqueStorage()._repeatedString = newValue}
  }

  var repeatedUint32: Int32 {
    get {return _storage._repeatedUint32}
    set {_uniqueStorage()._repeatedUint32 = newValue}
  }

  var repeatedUint64: Int32 {
    get {return _storage._repeatedUint64}
    set {_uniqueStorage()._repeatedUint64 = newValue}
  }

  var repeating: Int32 {
    get {return _storage._repeating}
    set {_uniqueStorage()._repeating = newValue}
  }

  var requestStreaming: Int32 {
    get {return _storage._requestStreaming}
    set {_uniqueStorage()._requestStreaming = newValue}
  }

  var requestTypeURL: Int32 {
    get {return _storage._requestTypeURL}
    set {_uniqueStorage()._requestTypeURL = newValue}
  }

  var requiredSize: Int32 {
    get {return _storage._requiredSize}
    set {_uniqueStorage()._requiredSize = newValue}
  }

  var responseStreaming: Int32 {
    get {return _storage._responseStreaming}
    set {_uniqueStorage()._responseStreaming = newValue}
  }

  var responseTypeURL: Int32 {
    get {return _storage._responseTypeURL}
    set {_uniqueStorage()._responseTypeURL = newValue}
  }

  var result: Int32 {
    get {return _storage._result}
    set {_uniqueStorage()._result = newValue}
  }

  var retention: Int32 {
    get {return _storage._retention}
    set {_uniqueStorage()._retention = newValue}
  }

  var `rethrows`: Int32 {
    get {return _storage._rethrows}
    set {_uniqueStorage()._rethrows = newValue}
  }

  var `return`: Int32 {
    get {return _storage._return}
    set {_uniqueStorage()._return = newValue}
  }

  var returnType: Int32 {
    get {return _storage._returnType}
    set {_uniqueStorage()._returnType = newValue}
  }

  var revision: Int32 {
    get {return _storage._revision}
    set {_uniqueStorage()._revision = newValue}
  }

  var rhs: Int32 {
    get {return _storage._rhs}
    set {_uniqueStorage()._rhs = newValue}
  }

  var root: Int32 {
    get {return _storage._root}
    set {_uniqueStorage()._root = newValue}
  }

  var rubyPackage: Int32 {
    get {return _storage._rubyPackage}
    set {_uniqueStorage()._rubyPackage = newValue}
  }

  var s: Int32 {
    get {return _storage._s}
    set {_uniqueStorage()._s = newValue}
  }

  var sawBackslash: Int32 {
    get {return _storage._sawBackslash}
    set {_uniqueStorage()._sawBackslash = newValue}
  }

  var sawSection4Characters: Int32 {
    get {return _storage._sawSection4Characters}
    set {_uniqueStorage()._sawSection4Characters = newValue}
  }

  var sawSection5Characters: Int32 {
    get {return _storage._sawSection5Characters}
    set {_uniqueStorage()._sawSection5Characters = newValue}
  }

  var scanner: Int32 {
    get {return _storage._scanner}
    set {_uniqueStorage()._scanner = newValue}
  }

  var seconds: Int32 {
    get {return _storage._seconds}
    set {_uniqueStorage()._seconds = newValue}
  }

  var self_p: Int32 {
    get {return _storage._self_p}
    set {_uniqueStorage()._self_p = newValue}
  }

  var semantic: Int32 {
    get {return _storage._semantic}
    set {_uniqueStorage()._semantic = newValue}
  }

  var sendable: Int32 {
    get {return _storage._sendable}
    set {_uniqueStorage()._sendable = newValue}
  }

  var separator: Int32 {
    get {return _storage._separator}
    set {_uniqueStorage()._separator = newValue}
  }

  var serialize: Int32 {
    get {return _storage._serialize}
    set {_uniqueStorage()._serialize = newValue}
  }

  var serializedBytes: Int32 {
    get {return _storage._serializedBytes}
    set {_uniqueStorage()._serializedBytes = newValue}
  }

  var serializedData: Int32 {
    get {return _storage._serializedData}
    set {_uniqueStorage()._serializedData = newValue}
  }

  var serializedSize: Int32 {
    get {return _storage._serializedSize}
    set {_uniqueStorage()._serializedSize = newValue}
  }

  var serverStreaming: Int32 {
    get {return _storage._serverStreaming}
    set {_uniqueStorage()._serverStreaming = newValue}
  }

  var service: Int32 {
    get {return _storage._service}
    set {_uniqueStorage()._service = newValue}
  }

  var serviceDescriptorProto: Int32 {
    get {return _storage._serviceDescriptorProto}
    set {_uniqueStorage()._serviceDescriptorProto = newValue}
  }

  var serviceOptions: Int32 {
    get {return _storage._serviceOptions}
    set {_uniqueStorage()._serviceOptions = newValue}
  }

  var set: Int32 {
    get {return _storage._set}
    set {_uniqueStorage()._set = newValue}
  }

  var setExtensionValue: Int32 {
    get {return _storage._setExtensionValue}
    set {_uniqueStorage()._setExtensionValue = newValue}
  }

  var shift: Int32 {
    get {return _storage._shift}
    set {_uniqueStorage()._shift = newValue}
  }

  var simpleExtensionMap: Int32 {
    get {return _storage._simpleExtensionMap}
    set {_uniqueStorage()._simpleExtensionMap = newValue}
  }

  var singularBool: Int32 {
    get {return _storage._singularBool}
    set {_uniqueStorage()._singularBool = newValue}
  }

  var singularBytes: Int32 {
    get {return _storage._singularBytes}
    set {_uniqueStorage()._singularBytes = newValue}
  }

  var singularDouble: Int32 {
    get {return _storage._singularDouble}
    set {_uniqueStorage()._singularDouble = newValue}
  }

  var singularEnum: Int32 {
    get {return _storage._singularEnum}
    set {_uniqueStorage()._singularEnum = newValue}
  }

  var singularFixed32: Int32 {
    get {return _storage._singularFixed32}
    set {_uniqueStorage()._singularFixed32 = newValue}
  }

  var singularFixed64: Int32 {
    get {return _storage._singularFixed64}
    set {_uniqueStorage()._singularFixed64 = newValue}
  }

  var singularFloat: Int32 {
    get {return _storage._singularFloat}
    set {_uniqueStorage()._singularFloat = newValue}
  }

  var singularGroup: Int32 {
    get {return _storage._singularGroup}
    set {_uniqueStorage()._singularGroup = newValue}
  }

  var singularInt32: Int32 {
    get {return _storage._singularInt32}
    set {_uniqueStorage()._singularInt32 = newValue}
  }

  var singularInt64: Int32 {
    get {return _storage._singularInt64}
    set {_uniqueStorage()._singularInt64 = newValue}
  }

  var singularMessage: Int32 {
    get {return _storage._singularMessage}
    set {_uniqueStorage()._singularMessage = newValue}
  }

  var singularSfixed32: Int32 {
    get {return _storage._singularSfixed32}
    set {_uniqueStorage()._singularSfixed32 = newValue}
  }

  var singularSfixed64: Int32 {
    get {return _storage._singularSfixed64}
    set {_uniqueStorage()._singularSfixed64 = newValue}
  }

  var singularSint32: Int32 {
    get {return _storage._singularSint32}
    set {_uniqueStorage()._singularSint32 = newValue}
  }

  var singularSint64: Int32 {
    get {return _storage._singularSint64}
    set {_uniqueStorage()._singularSint64 = newValue}
  }

  var singularString: Int32 {
    get {return _storage._singularString}
    set {_uniqueStorage()._singularString = newValue}
  }

  var singularUint32: Int32 {
    get {return _storage._singularUint32}
    set {_uniqueStorage()._singularUint32 = newValue}
  }

  var singularUint64: Int32 {
    get {return _storage._singularUint64}
    set {_uniqueStorage()._singularUint64 = newValue}
  }

  var size: Int32 {
    get {return _storage._size}
    set {_uniqueStorage()._size = newValue}
  }

  var sizer: Int32 {
    get {return _storage._sizer}
    set {_uniqueStorage()._sizer = newValue}
  }

  var source: Int32 {
    get {return _storage._source}
    set {_uniqueStorage()._source = newValue}
  }

  var sourceCodeInfo: Int32 {
    get {return _storage._sourceCodeInfo}
    set {_uniqueStorage()._sourceCodeInfo = newValue}
  }

  var sourceContext: Int32 {
    get {return _storage._sourceContext}
    set {_uniqueStorage()._sourceContext = newValue}
  }

  var sourceEncoding: Int32 {
    get {return _storage._sourceEncoding}
    set {_uniqueStorage()._sourceEncoding = newValue}
  }

  var sourceFile: Int32 {
    get {return _storage._sourceFile}
    set {_uniqueStorage()._sourceFile = newValue}
  }

  var span: Int32 {
    get {return _storage._span}
    set {_uniqueStorage()._span = newValue}
  }

  var split: Int32 {
    get {return _storage._split}
    set {_uniqueStorage()._split = newValue}
  }

  var start: Int32 {
    get {return _storage._start}
    set {_uniqueStorage()._start = newValue}
  }

  var startArray: Int32 {
    get {return _storage._startArray}
    set {_uniqueStorage()._startArray = newValue}
  }

  var startArrayObject: Int32 {
    get {return _storage._startArrayObject}
    set {_uniqueStorage()._startArrayObject = newValue}
  }

  var startField: Int32 {
    get {return _storage._startField}
    set {_uniqueStorage()._startField = newValue}
  }

  var startIndex: Int32 {
    get {return _storage._startIndex}
    set {_uniqueStorage()._startIndex = newValue}
  }

  var startMessageField: Int32 {
    get {return _storage._startMessageField}
    set {_uniqueStorage()._startMessageField = newValue}
  }

  var startObject: Int32 {
    get {return _storage._startObject}
    set {_uniqueStorage()._startObject = newValue}
  }

  var startRegularField: Int32 {
    get {return _storage._startRegularField}
    set {_uniqueStorage()._startRegularField = newValue}
  }

  var state: Int32 {
    get {return _storage._state}
    set {_uniqueStorage()._state = newValue}
  }

  var `static`: Int32 {
    get {return _storage._static}
    set {_uniqueStorage()._static = newValue}
  }

  var staticString: Int32 {
    get {return _storage._staticString}
    set {_uniqueStorage()._staticString = newValue}
  }

  var storage: Int32 {
    get {return _storage._storage}
    set {_uniqueStorage()._storage = newValue}
  }

  var string: Int32 {
    get {return _storage._string}
    set {_uniqueStorage()._string = newValue}
  }

  var stringLiteral: Int32 {
    get {return _storage._stringLiteral}
    set {_uniqueStorage()._stringLiteral = newValue}
  }

  var stringLiteralType: Int32 {
    get {return _storage._stringLiteralType}
    set {_uniqueStorage()._stringLiteralType = newValue}
  }

  var stringResult: Int32 {
    get {return _storage._stringResult}
    set {_uniqueStorage()._stringResult = newValue}
  }

  var stringValue: Int32 {
    get {return _storage._stringValue}
    set {_uniqueStorage()._stringValue = newValue}
  }

  var `struct`: Int32 {
    get {return _storage._struct}
    set {_uniqueStorage()._struct = newValue}
  }

  var structValue: Int32 {
    get {return _storage._structValue}
    set {_uniqueStorage()._structValue = newValue}
  }

  var subDecoder: Int32 {
    get {return _storage._subDecoder}
    set {_uniqueStorage()._subDecoder = newValue}
  }

  var `subscript`: Int32 {
    get {return _storage._subscript}
    set {_uniqueStorage()._subscript = newValue}
  }

  var subVisitor: Int32 {
    get {return _storage._subVisitor}
    set {_uniqueStorage()._subVisitor = newValue}
  }

  var swift: Int32 {
    get {return _storage._swift}
    set {_uniqueStorage()._swift = newValue}
  }

  var swiftPrefix: Int32 {
    get {return _storage._swiftPrefix}
    set {_uniqueStorage()._swiftPrefix = newValue}
  }

  var swiftProtobufContiguousBytes: Int32 {
    get {return _storage._swiftProtobufContiguousBytes}
    set {_uniqueStorage()._swiftProtobufContiguousBytes = newValue}
  }

  var syntax: Int32 {
    get {return _storage._syntax}
    set {_uniqueStorage()._syntax = newValue}
  }

  var t: Int32 {
    get {return _storage._t}
    set {_uniqueStorage()._t = newValue}
  }

  var tag: Int32 {
    get {return _storage._tag}
    set {_uniqueStorage()._tag = newValue}
  }

  var targets: Int32 {
    get {return _storage._targets}
    set {_uniqueStorage()._targets = newValue}
  }

  var terminator: Int32 {
    get {return _storage._terminator}
    set {_uniqueStorage()._terminator = newValue}
  }

  var testDecoder: Int32 {
    get {return _storage._testDecoder}
    set {_uniqueStorage()._testDecoder = newValue}
  }

  var text: Int32 {
    get {return _storage._text}
    set {_uniqueStorage()._text = newValue}
  }

  var textDecoder: Int32 {
    get {return _storage._textDecoder}
    set {_uniqueStorage()._textDecoder = newValue}
  }

  var textFormatDecoder: Int32 {
    get {return _storage._textFormatDecoder}
    set {_uniqueStorage()._textFormatDecoder = newValue}
  }

  var textFormatDecodingError: Int32 {
    get {return _storage._textFormatDecodingError}
    set {_uniqueStorage()._textFormatDecodingError = newValue}
  }

  var textFormatDecodingOptions: Int32 {
    get {return _storage._textFormatDecodingOptions}
    set {_uniqueStorage()._textFormatDecodingOptions = newValue}
  }

  var textFormatEncodingOptions: Int32 {
    get {return _storage._textFormatEncodingOptions}
    set {_uniqueStorage()._textFormatEncodingOptions = newValue}
  }

  var textFormatEncodingVisitor: Int32 {
    get {return _storage._textFormatEncodingVisitor}
    set {_uniqueStorage()._textFormatEncodingVisitor = newValue}
  }

  var textFormatString: Int32 {
    get {return _storage._textFormatString}
    set {_uniqueStorage()._textFormatString = newValue}
  }

  var throwOrIgnore: Int32 {
    get {return _storage._throwOrIgnore}
    set {_uniqueStorage()._throwOrIgnore = newValue}
  }

  var `throws`: Int32 {
    get {return _storage._throws}
    set {_uniqueStorage()._throws = newValue}
  }

  var timeInterval: Int32 {
    get {return _storage._timeInterval}
    set {_uniqueStorage()._timeInterval = newValue}
  }

  var timeIntervalSince1970: Int32 {
    get {return _storage._timeIntervalSince1970}
    set {_uniqueStorage()._timeIntervalSince1970 = newValue}
  }

  var timeIntervalSinceReferenceDate: Int32 {
    get {return _storage._timeIntervalSinceReferenceDate}
    set {_uniqueStorage()._timeIntervalSinceReferenceDate = newValue}
  }

  var timestamp: Int32 {
    get {return _storage._timestamp}
    set {_uniqueStorage()._timestamp = newValue}
  }

  var toConcrete: Int32 {
    get {return _storage._toConcrete}
    set {_uniqueStorage()._toConcrete = newValue}
  }

  var total: Int32 {
    get {return _storage._total}
    set {_uniqueStorage()._total = newValue}
  }

  var totalArrayDepth: Int32 {
    get {return _storage._totalArrayDepth}
    set {_uniqueStorage()._totalArrayDepth = newValue}
  }

  var totalSize: Int32 {
    get {return _storage._totalSize}
    set {_uniqueStorage()._totalSize = newValue}
  }

  var trailingComments: Int32 {
    get {return _storage._trailingComments}
    set {_uniqueStorage()._trailingComments = newValue}
  }

  var traverse: Int32 {
    get {return _storage._traverse}
    set {_uniqueStorage()._traverse = newValue}
  }

  var `true`: Int32 {
    get {return _storage._true}
    set {_uniqueStorage()._true = newValue}
  }

  var `try`: Int32 {
    get {return _storage._try}
    set {_uniqueStorage()._try = newValue}
  }

  var type: Int32 {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  var `typealias`: Int32 {
    get {return _storage._typealias}
    set {_uniqueStorage()._typealias = newValue}
  }

  var typeEnum: Int32 {
    get {return _storage._typeEnum}
    set {_uniqueStorage()._typeEnum = newValue}
  }

  var typeName: Int32 {
    get {return _storage._typeName}
    set {_uniqueStorage()._typeName = newValue}
  }

  var typePrefix: Int32 {
    get {return _storage._typePrefix}
    set {_uniqueStorage()._typePrefix = newValue}
  }

  var typeStart: Int32 {
    get {return _storage._typeStart}
    set {_uniqueStorage()._typeStart = newValue}
  }

  var typeUnknown: Int32 {
    get {return _storage._typeUnknown}
    set {_uniqueStorage()._typeUnknown = newValue}
  }

  var typeURL: Int32 {
    get {return _storage._typeURL}
    set {_uniqueStorage()._typeURL = newValue}
  }

  var uint32: Int32 {
    get {return _storage._uint32}
    set {_uniqueStorage()._uint32 = newValue}
  }

  var uint32Value: Int32 {
    get {return _storage._uint32Value}
    set {_uniqueStorage()._uint32Value = newValue}
  }

  var uint64: Int32 {
    get {return _storage._uint64}
    set {_uniqueStorage()._uint64 = newValue}
  }

  var uint64Value: Int32 {
    get {return _storage._uint64Value}
    set {_uniqueStorage()._uint64Value = newValue}
  }

  var uint8: Int32 {
    get {return _storage._uint8}
    set {_uniqueStorage()._uint8 = newValue}
  }

  var unchecked: Int32 {
    get {return _storage._unchecked}
    set {_uniqueStorage()._unchecked = newValue}
  }

  var unicodeScalarLiteral: Int32 {
    get {return _storage._unicodeScalarLiteral}
    set {_uniqueStorage()._unicodeScalarLiteral = newValue}
  }

  var unicodeScalarLiteralType: Int32 {
    get {return _storage._unicodeScalarLiteralType}
    set {_uniqueStorage()._unicodeScalarLiteralType = newValue}
  }

  var unicodeScalars: Int32 {
    get {return _storage._unicodeScalars}
    set {_uniqueStorage()._unicodeScalars = newValue}
  }

  var unicodeScalarView: Int32 {
    get {return _storage._unicodeScalarView}
    set {_uniqueStorage()._unicodeScalarView = newValue}
  }

  var uninterpretedOption: Int32 {
    get {return _storage._uninterpretedOption}
    set {_uniqueStorage()._uninterpretedOption = newValue}
  }

  var union: Int32 {
    get {return _storage._union}
    set {_uniqueStorage()._union = newValue}
  }

  var uniqueStorage: Int32 {
    get {return _storage._uniqueStorage}
    set {_uniqueStorage()._uniqueStorage = newValue}
  }

  var unknown: Int32 {
    get {return _storage._unknown}
    set {_uniqueStorage()._unknown = newValue}
  }

  var unknownFields_p: Int32 {
    get {return _storage._unknownFields_p}
    set {_uniqueStorage()._unknownFields_p = newValue}
  }

  var unknownStorage: Int32 {
    get {return _storage._unknownStorage}
    set {_uniqueStorage()._unknownStorage = newValue}
  }

  var unpackTo: Int32 {
    get {return _storage._unpackTo}
    set {_uniqueStorage()._unpackTo = newValue}
  }

  var unsafeBufferPointer: Int32 {
    get {return _storage._unsafeBufferPointer}
    set {_uniqueStorage()._unsafeBufferPointer = newValue}
  }

  var unsafeMutablePointer: Int32 {
    get {return _storage._unsafeMutablePointer}
    set {_uniqueStorage()._unsafeMutablePointer = newValue}
  }

  var unsafeMutableRawBufferPointer: Int32 {
    get {return _storage._unsafeMutableRawBufferPointer}
    set {_uniqueStorage()._unsafeMutableRawBufferPointer = newValue}
  }

  var unsafeRawBufferPointer: Int32 {
    get {return _storage._unsafeRawBufferPointer}
    set {_uniqueStorage()._unsafeRawBufferPointer = newValue}
  }

  var unsafeRawPointer: Int32 {
    get {return _storage._unsafeRawPointer}
    set {_uniqueStorage()._unsafeRawPointer = newValue}
  }

  var unverifiedLazy: Int32 {
    get {return _storage._unverifiedLazy}
    set {_uniqueStorage()._unverifiedLazy = newValue}
  }

  var updatedOptions: Int32 {
    get {return _storage._updatedOptions}
    set {_uniqueStorage()._updatedOptions = newValue}
  }

  var url: Int32 {
    get {return _storage._url}
    set {_uniqueStorage()._url = newValue}
  }

  var useDeterministicOrdering: Int32 {
    get {return _storage._useDeterministicOrdering}
    set {_uniqueStorage()._useDeterministicOrdering = newValue}
  }

  var utf8: Int32 {
    get {return _storage._utf8}
    set {_uniqueStorage()._utf8 = newValue}
  }

  var utf8Ptr: Int32 {
    get {return _storage._utf8Ptr}
    set {_uniqueStorage()._utf8Ptr = newValue}
  }

  var utf8ToDouble: Int32 {
    get {return _storage._utf8ToDouble}
    set {_uniqueStorage()._utf8ToDouble = newValue}
  }

  var utf8Validation: Int32 {
    get {return _storage._utf8Validation}
    set {_uniqueStorage()._utf8Validation = newValue}
  }

  var utf8View: Int32 {
    get {return _storage._utf8View}
    set {_uniqueStorage()._utf8View = newValue}
  }

  var v: Int32 {
    get {return _storage._v}
    set {_uniqueStorage()._v = newValue}
  }

  var value: Int32 {
    get {return _storage._value}
    set {_uniqueStorage()._value = newValue}
  }

  var valueField: Int32 {
    get {return _storage._valueField}
    set {_uniqueStorage()._valueField = newValue}
  }

  var values: Int32 {
    get {return _storage._values}
    set {_uniqueStorage()._values = newValue}
  }

  var valueType: Int32 {
    get {return _storage._valueType}
    set {_uniqueStorage()._valueType = newValue}
  }

  var `var`: Int32 {
    get {return _storage._var}
    set {_uniqueStorage()._var = newValue}
  }

  var verification: Int32 {
    get {return _storage._verification}
    set {_uniqueStorage()._verification = newValue}
  }

  var verificationState: Int32 {
    get {return _storage._verificationState}
    set {_uniqueStorage()._verificationState = newValue}
  }

  var version: Int32 {
    get {return _storage._version}
    set {_uniqueStorage()._version = newValue}
  }

  var versionString: Int32 {
    get {return _storage._versionString}
    set {_uniqueStorage()._versionString = newValue}
  }

  var visitExtensionFields: Int32 {
    get {return _storage._visitExtensionFields}
    set {_uniqueStorage()._visitExtensionFields = newValue}
  }

  var visitExtensionFieldsAsMessageSet: Int32 {
    get {return _storage._visitExtensionFieldsAsMessageSet}
    set {_uniqueStorage()._visitExtensionFieldsAsMessageSet = newValue}
  }

  var visitMapField: Int32 {
    get {return _storage._visitMapField}
    set {_uniqueStorage()._visitMapField = newValue}
  }

  var visitor: Int32 {
    get {return _storage._visitor}
    set {_uniqueStorage()._visitor = newValue}
  }

  var visitPacked: Int32 {
    get {return _storage._visitPacked}
    set {_uniqueStorage()._visitPacked = newValue}
  }

  var visitPackedBoolField: Int32 {
    get {return _storage._visitPackedBoolField}
    set {_uniqueStorage()._visitPackedBoolField = newValue}
  }

  var visitPackedDoubleField: Int32 {
    get {return _storage._visitPackedDoubleField}
    set {_uniqueStorage()._visitPackedDoubleField = newValue}
  }

  var visitPackedEnumField: Int32 {
    get {return _storage._visitPackedEnumField}
    set {_uniqueStorage()._visitPackedEnumField = newValue}
  }

  var visitPackedFixed32Field: Int32 {
    get {return _storage._visitPackedFixed32Field}
    set {_uniqueStorage()._visitPackedFixed32Field = newValue}
  }

  var visitPackedFixed64Field: Int32 {
    get {return _storage._visitPackedFixed64Field}
    set {_uniqueStorage()._visitPackedFixed64Field = newValue}
  }

  var visitPackedFloatField: Int32 {
    get {return _storage._visitPackedFloatField}
    set {_uniqueStorage()._visitPackedFloatField = newValue}
  }

  var visitPackedInt32Field: Int32 {
    get {return _storage._visitPackedInt32Field}
    set {_uniqueStorage()._visitPackedInt32Field = newValue}
  }

  var visitPackedInt64Field: Int32 {
    get {return _storage._visitPackedInt64Field}
    set {_uniqueStorage()._visitPackedInt64Field = newValue}
  }

  var visitPackedSfixed32Field: Int32 {
    get {return _storage._visitPackedSfixed32Field}
    set {_uniqueStorage()._visitPackedSfixed32Field = newValue}
  }

  var visitPackedSfixed64Field: Int32 {
    get {return _storage._visitPackedSfixed64Field}
    set {_uniqueStorage()._visitPackedSfixed64Field = newValue}
  }

  var visitPackedSint32Field: Int32 {
    get {return _storage._visitPackedSint32Field}
    set {_uniqueStorage()._visitPackedSint32Field = newValue}
  }

  var visitPackedSint64Field: Int32 {
    get {return _storage._visitPackedSint64Field}
    set {_uniqueStorage()._visitPackedSint64Field = newValue}
  }

  var visitPackedUint32Field: Int32 {
    get {return _storage._visitPackedUint32Field}
    set {_uniqueStorage()._visitPackedUint32Field = newValue}
  }

  var visitPackedUint64Field: Int32 {
    get {return _storage._visitPackedUint64Field}
    set {_uniqueStorage()._visitPackedUint64Field = newValue}
  }

  var visitRepeated: Int32 {
    get {return _storage._visitRepeated}
    set {_uniqueStorage()._visitRepeated = newValue}
  }

  var visitRepeatedBoolField: Int32 {
    get {return _storage._visitRepeatedBoolField}
    set {_uniqueStorage()._visitRepeatedBoolField = newValue}
  }

  var visitRepeatedBytesField: Int32 {
    get {return _storage._visitRepeatedBytesField}
    set {_uniqueStorage()._visitRepeatedBytesField = newValue}
  }

  var visitRepeatedDoubleField: Int32 {
    get {return _storage._visitRepeatedDoubleField}
    set {_uniqueStorage()._visitRepeatedDoubleField = newValue}
  }

  var visitRepeatedEnumField: Int32 {
    get {return _storage._visitRepeatedEnumField}
    set {_uniqueStorage()._visitRepeatedEnumField = newValue}
  }

  var visitRepeatedFixed32Field: Int32 {
    get {return _storage._visitRepeatedFixed32Field}
    set {_uniqueStorage()._visitRepeatedFixed32Field = newValue}
  }

  var visitRepeatedFixed64Field: Int32 {
    get {return _storage._visitRepeatedFixed64Field}
    set {_uniqueStorage()._visitRepeatedFixed64Field = newValue}
  }

  var visitRepeatedFloatField: Int32 {
    get {return _storage._visitRepeatedFloatField}
    set {_uniqueStorage()._visitRepeatedFloatField = newValue}
  }

  var visitRepeatedGroupField: Int32 {
    get {return _storage._visitRepeatedGroupField}
    set {_uniqueStorage()._visitRepeatedGroupField = newValue}
  }

  var visitRepeatedInt32Field: Int32 {
    get {return _storage._visitRepeatedInt32Field}
    set {_uniqueStorage()._visitRepeatedInt32Field = newValue}
  }

  var visitRepeatedInt64Field: Int32 {
    get {return _storage._visitRepeatedInt64Field}
    set {_uniqueStorage()._visitRepeatedInt64Field = newValue}
  }

  var visitRepeatedMessageField: Int32 {
    get {return _storage._visitRepeatedMessageField}
    set {_uniqueStorage()._visitRepeatedMessageField = newValue}
  }

  var visitRepeatedSfixed32Field: Int32 {
    get {return _storage._visitRepeatedSfixed32Field}
    set {_uniqueStorage()._visitRepeatedSfixed32Field = newValue}
  }

  var visitRepeatedSfixed64Field: Int32 {
    get {return _storage._visitRepeatedSfixed64Field}
    set {_uniqueStorage()._visitRepeatedSfixed64Field = newValue}
  }

  var visitRepeatedSint32Field: Int32 {
    get {return _storage._visitRepeatedSint32Field}
    set {_uniqueStorage()._visitRepeatedSint32Field = newValue}
  }

  var visitRepeatedSint64Field: Int32 {
    get {return _storage._visitRepeatedSint64Field}
    set {_uniqueStorage()._visitRepeatedSint64Field = newValue}
  }

  var visitRepeatedStringField: Int32 {
    get {return _storage._visitRepeatedStringField}
    set {_uniqueStorage()._visitRepeatedStringField = newValue}
  }

  var visitRepeatedUint32Field: Int32 {
    get {return _storage._visitRepeatedUint32Field}
    set {_uniqueStorage()._visitRepeatedUint32Field = newValue}
  }

  var visitRepeatedUint64Field: Int32 {
    get {return _storage._visitRepeatedUint64Field}
    set {_uniqueStorage()._visitRepeatedUint64Field = newValue}
  }

  var visitSingular: Int32 {
    get {return _storage._visitSingular}
    set {_uniqueStorage()._visitSingular = newValue}
  }

  var visitSingularBoolField: Int32 {
    get {return _storage._visitSingularBoolField}
    set {_uniqueStorage()._visitSingularBoolField = newValue}
  }

  var visitSingularBytesField: Int32 {
    get {return _storage._visitSingularBytesField}
    set {_uniqueStorage()._visitSingularBytesField = newValue}
  }

  var visitSingularDoubleField: Int32 {
    get {return _storage._visitSingularDoubleField}
    set {_uniqueStorage()._visitSingularDoubleField = newValue}
  }

  var visitSingularEnumField: Int32 {
    get {return _storage._visitSingularEnumField}
    set {_uniqueStorage()._visitSingularEnumField = newValue}
  }

  var visitSingularFixed32Field: Int32 {
    get {return _storage._visitSingularFixed32Field}
    set {_uniqueStorage()._visitSingularFixed32Field = newValue}
  }

  var visitSingularFixed64Field: Int32 {
    get {return _storage._visitSingularFixed64Field}
    set {_uniqueStorage()._visitSingularFixed64Field = newValue}
  }

  var visitSingularFloatField: Int32 {
    get {return _storage._visitSingularFloatField}
    set {_uniqueStorage()._visitSingularFloatField = newValue}
  }

  var visitSingularGroupField: Int32 {
    get {return _storage._visitSingularGroupField}
    set {_uniqueStorage()._visitSingularGroupField = newValue}
  }

  var visitSingularInt32Field: Int32 {
    get {return _storage._visitSingularInt32Field}
    set {_uniqueStorage()._visitSingularInt32Field = newValue}
  }

  var visitSingularInt64Field: Int32 {
    get {return _storage._visitSingularInt64Field}
    set {_uniqueStorage()._visitSingularInt64Field = newValue}
  }

  var visitSingularMessageField: Int32 {
    get {return _storage._visitSingularMessageField}
    set {_uniqueStorage()._visitSingularMessageField = newValue}
  }

  var visitSingularSfixed32Field: Int32 {
    get {return _storage._visitSingularSfixed32Field}
    set {_uniqueStorage()._visitSingularSfixed32Field = newValue}
  }

  var visitSingularSfixed64Field: Int32 {
    get {return _storage._visitSingularSfixed64Field}
    set {_uniqueStorage()._visitSingularSfixed64Field = newValue}
  }

  var visitSingularSint32Field: Int32 {
    get {return _storage._visitSingularSint32Field}
    set {_uniqueStorage()._visitSingularSint32Field = newValue}
  }

  var visitSingularSint64Field: Int32 {
    get {return _storage._visitSingularSint64Field}
    set {_uniqueStorage()._visitSingularSint64Field = newValue}
  }

  var visitSingularStringField: Int32 {
    get {return _storage._visitSingularStringField}
    set {_uniqueStorage()._visitSingularStringField = newValue}
  }

  var visitSingularUint32Field: Int32 {
    get {return _storage._visitSingularUint32Field}
    set {_uniqueStorage()._visitSingularUint32Field = newValue}
  }

  var visitSingularUint64Field: Int32 {
    get {return _storage._visitSingularUint64Field}
    set {_uniqueStorage()._visitSingularUint64Field = newValue}
  }

  var visitUnknown: Int32 {
    get {return _storage._visitUnknown}
    set {_uniqueStorage()._visitUnknown = newValue}
  }

  var wasDecoded: Int32 {
    get {return _storage._wasDecoded}
    set {_uniqueStorage()._wasDecoded = newValue}
  }

  var weak: Int32 {
    get {return _storage._weak}
    set {_uniqueStorage()._weak = newValue}
  }

  var weakDependency: Int32 {
    get {return _storage._weakDependency}
    set {_uniqueStorage()._weakDependency = newValue}
  }

  var `where`: Int32 {
    get {return _storage._where}
    set {_uniqueStorage()._where = newValue}
  }

  var wireFormat: Int32 {
    get {return _storage._wireFormat}
    set {_uniqueStorage()._wireFormat = newValue}
  }

  var with: Int32 {
    get {return _storage._with}
    set {_uniqueStorage()._with = newValue}
  }

  var withUnsafeBytes: Int32 {
    get {return _storage._withUnsafeBytes}
    set {_uniqueStorage()._withUnsafeBytes = newValue}
  }

  var withUnsafeMutableBytes: Int32 {
    get {return _storage._withUnsafeMutableBytes}
    set {_uniqueStorage()._withUnsafeMutableBytes = newValue}
  }

  var work: Int32 {
    get {return _storage._work}
    set {_uniqueStorage()._work = newValue}
  }

  var wrapped: Int32 {
    get {return _storage._wrapped}
    set {_uniqueStorage()._wrapped = newValue}
  }

  var wrappedType: Int32 {
    get {return _storage._wrappedType}
    set {_uniqueStorage()._wrappedType = newValue}
  }

  var wrappedValue: Int32 {
    get {return _storage._wrappedValue}
    set {_uniqueStorage()._wrappedValue = newValue}
  }

  var written: Int32 {
    get {return _storage._written}
    set {_uniqueStorage()._written = newValue}
  }

  var yday: Int32 {
    get {return _storage._yday}
    set {_uniqueStorage()._yday = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "swift_proto_testing.generated"

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedFields: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".GeneratedSwiftReservedFields"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "adjusted"),
    2: .same(proto: "aggregateValue"),
    3: .same(proto: "allCases"),
    4: .same(proto: "allowAlias"),
    5: .same(proto: "alwaysPrintEnumsAsInts"),
    6: .same(proto: "alwaysPrintInt64sAsNumbers"),
    7: .same(proto: "annotation"),
    8: .same(proto: "any"),
    9: .same(proto: "AnyExtensionField"),
    10: .same(proto: "AnyMessageExtension"),
    11: .same(proto: "AnyMessageStorage"),
    12: .same(proto: "AnyUnpackError"),
    13: .same(proto: "Api"),
    14: .same(proto: "appended"),
    15: .same(proto: "appendUIntHex"),
    16: .same(proto: "appendUnknown"),
    17: .same(proto: "areAllInitialized"),
    18: .same(proto: "Array"),
    19: .same(proto: "arrayDepth"),
    20: .same(proto: "arrayLiteral"),
    21: .same(proto: "arraySeparator"),
    22: .same(proto: "as"),
    23: .same(proto: "asciiOpenCurlyBracket"),
    24: .same(proto: "asciiZero"),
    25: .same(proto: "async"),
    26: .same(proto: "AsyncIterator"),
    27: .same(proto: "AsyncIteratorProtocol"),
    28: .same(proto: "AsyncMessageSequence"),
    29: .same(proto: "available"),
    30: .same(proto: "b"),
    31: .same(proto: "Base"),
    32: .same(proto: "base64Values"),
    33: .same(proto: "baseAddress"),
    34: .same(proto: "BaseType"),
    35: .same(proto: "begin"),
    36: .same(proto: "binary"),
    37: .same(proto: "BinaryDecoder"),
    38: .same(proto: "BinaryDecodingError"),
    39: .same(proto: "BinaryDecodingOptions"),
    40: .same(proto: "BinaryDelimited"),
    41: .same(proto: "BinaryEncoder"),
    42: .same(proto: "BinaryEncodingError"),
    43: .same(proto: "BinaryEncodingMessageSetSizeVisitor"),
    44: .same(proto: "BinaryEncodingMessageSetVisitor"),
    45: .same(proto: "BinaryEncodingOptions"),
    46: .same(proto: "BinaryEncodingSizeVisitor"),
    47: .same(proto: "BinaryEncodingVisitor"),
    48: .same(proto: "binaryOptions"),
    49: .same(proto: "binaryProtobufDelimitedMessages"),
    50: .same(proto: "bitPattern"),
    51: .same(proto: "body"),
    52: .same(proto: "Bool"),
    53: .same(proto: "booleanLiteral"),
    54: .same(proto: "BooleanLiteralType"),
    55: .same(proto: "boolValue"),
    56: .same(proto: "buffer"),
    57: .same(proto: "bytes"),
    58: .same(proto: "bytesInGroup"),
    59: .same(proto: "bytesNeeded"),
    60: .same(proto: "bytesRead"),
    61: .same(proto: "BytesValue"),
    62: .same(proto: "c"),
    63: .same(proto: "capitalizeNext"),
    64: .same(proto: "cardinality"),
    65: .same(proto: "CaseIterable"),
    66: .same(proto: "ccEnableArenas"),
    67: .same(proto: "ccGenericServices"),
    68: .same(proto: "Character"),
    69: .same(proto: "chars"),
    70: .same(proto: "chunk"),
    71: .same(proto: "class"),
    72: .same(proto: "clearAggregateValue"),
    73: .same(proto: "clearAllowAlias"),
    74: .same(proto: "clearBegin"),
    75: .same(proto: "clearCcEnableArenas"),
    76: .same(proto: "clearCcGenericServices"),
    77: .same(proto: "clearClientStreaming"),
    78: .same(proto: "clearCsharpNamespace"),
    79: .same(proto: "clearCtype"),
    80: .same(proto: "clearDebugRedact"),
    81: .same(proto: "clearDefaultValue"),
    82: .same(proto: "clearDeprecated"),
    83: .same(proto: "clearDeprecatedLegacyJsonFieldConflicts"),
    84: .same(proto: "clearDoubleValue"),
    85: .same(proto: "clearEdition"),
    86: .same(proto: "clearEnd"),
    87: .same(proto: "clearEnumType"),
    88: .same(proto: "clearExtendee"),
    89: .same(proto: "clearExtensionValue"),
    90: .same(proto: "clearFeatures"),
    91: .same(proto: "clearFieldPresence"),
    92: .same(proto: "clearFullName"),
    93: .same(proto: "clearGoPackage"),
    94: .same(proto: "clearIdempotencyLevel"),
    95: .same(proto: "clearIdentifierValue"),
    96: .same(proto: "clearInputType"),
    97: .same(proto: "clearIsExtension"),
    98: .same(proto: "clearJavaGenerateEqualsAndHash"),
    99: .same(proto: "clearJavaGenericServices"),
    100: .same(proto: "clearJavaMultipleFiles"),
    101: .same(proto: "clearJavaOuterClassname"),
    102: .same(proto: "clearJavaPackage"),
    103: .same(proto: "clearJavaStringCheckUtf8"),
    104: .same(proto: "clearJsonFormat"),
    105: .same(proto: "clearJsonName"),
    106: .same(proto: "clearJstype"),
    107: .same(proto: "clearLabel"),
    108: .same(proto: "clearLazy"),
    109: .same(proto: "clearLeadingComments"),
    110: .same(proto: "clearMapEntry"),
    111: .same(proto: "clearMaximumEdition"),
    112: .same(proto: "clearMessageEncoding"),
    113: .same(proto: "clearMessageSetWireFormat"),
    114: .same(proto: "clearMinimumEdition"),
    115: .same(proto: "clearName"),
    116: .same(proto: "clearNamePart"),
    117: .same(proto: "clearNegativeIntValue"),
    118: .same(proto: "clearNoStandardDescriptorAccessor"),
    119: .same(proto: "clearNumber"),
    120: .same(proto: "clearObjcClassPrefix"),
    121: .same(proto: "clearOneofIndex"),
    122: .same(proto: "clearOptimizeFor"),
    123: .same(proto: "clearOptions"),
    124: .same(proto: "clearOutputType"),
    125: .same(proto: "clearPackage"),
    126: .same(proto: "clearPacked"),
    127: .same(proto: "clearPhpClassPrefix"),
    128: .same(proto: "clearPhpGenericServices"),
    129: .same(proto: "clearPhpMetadataNamespace"),
    130: .same(proto: "clearPhpNamespace"),
    131: .same(proto: "clearPositiveIntValue"),
    132: .same(proto: "clearProto3Optional"),
    133: .same(proto: "clearPyGenericServices"),
    134: .same(proto: "clearRepeated"),
    135: .same(proto: "clearRepeatedFieldEncoding"),
    136: .same(proto: "clearReserved"),
    137: .same(proto: "clearRetention"),
    138: .same(proto: "clearRubyPackage"),
    139: .same(proto: "clearSemantic"),
    140: .same(proto: "clearServerStreaming"),
    141: .same(proto: "clearSourceCodeInfo"),
    142: .same(proto: "clearSourceContext"),
    143: .same(proto: "clearSourceFile"),
    144: .same(proto: "clearStart"),
    145: .same(proto: "clearStringValue"),
    146: .same(proto: "clearSwiftPrefix"),
    147: .same(proto: "clearSyntax"),
    148: .same(proto: "clearTrailingComments"),
    149: .same(proto: "clearType"),
    150: .same(proto: "clearTypeName"),
    151: .same(proto: "clearUnverifiedLazy"),
    152: .same(proto: "clearUtf8Validation"),
    153: .same(proto: "clearValue"),
    154: .same(proto: "clearVerification"),
    155: .same(proto: "clearWeak"),
    156: .same(proto: "clientStreaming"),
    157: .same(proto: "codePoint"),
    158: .same(proto: "codeUnits"),
    159: .same(proto: "Collection"),
    160: .same(proto: "com"),
    161: .same(proto: "comma"),
    162: .same(proto: "CommonMessageConformances"),
    163: .same(proto: "consumedBytes"),
    164: .same(proto: "contentsOf"),
    165: .same(proto: "count"),
    166: .same(proto: "countVarintsInBuffer"),
    167: .same(proto: "csharpNamespace"),
    168: .same(proto: "ctype"),
    169: .same(proto: "customCodable"),
    170: .same(proto: "d"),
    171: .same(proto: "Data"),
    172: .same(proto: "dataResult"),
    173: .same(proto: "date"),
    174: .same(proto: "daySec"),
    175: .same(proto: "daysSinceEpoch"),
    176: .same(proto: "debugDescription"),
    177: .same(proto: "debugRedact"),
    178: .same(proto: "declaration"),
    179: .same(proto: "decoded"),
    180: .same(proto: "decodedFromJSONNull"),
    181: .same(proto: "decodeExtensionField"),
    182: .same(proto: "decodeExtensionFieldsAsMessageSet"),
    183: .same(proto: "decodeJSON"),
    184: .same(proto: "decodeMapField"),
    185: .same(proto: "decodeMessage"),
    186: .same(proto: "decoder"),
    187: .same(proto: "decodeRepeated"),
    188: .same(proto: "decodeRepeatedBoolField"),
    189: .same(proto: "decodeRepeatedBytesField"),
    190: .same(proto: "decodeRepeatedDoubleField"),
    191: .same(proto: "decodeRepeatedEnumField"),
    192: .same(proto: "decodeRepeatedFixed32Field"),
    193: .same(proto: "decodeRepeatedFixed64Field"),
    194: .same(proto: "decodeRepeatedFloatField"),
    195: .same(proto: "decodeRepeatedGroupField"),
    196: .same(proto: "decodeRepeatedInt32Field"),
    197: .same(proto: "decodeRepeatedInt64Field"),
    198: .same(proto: "decodeRepeatedMessageField"),
    199: .same(proto: "decodeRepeatedSFixed32Field"),
    200: .same(proto: "decodeRepeatedSFixed64Field"),
    201: .same(proto: "decodeRepeatedSInt32Field"),
    202: .same(proto: "decodeRepeatedSInt64Field"),
    203: .same(proto: "decodeRepeatedStringField"),
    204: .same(proto: "decodeRepeatedUInt32Field"),
    205: .same(proto: "decodeRepeatedUInt64Field"),
    206: .same(proto: "decodeSingular"),
    207: .same(proto: "decodeSingularBoolField"),
    208: .same(proto: "decodeSingularBytesField"),
    209: .same(proto: "decodeSingularDoubleField"),
    210: .same(proto: "decodeSingularEnumField"),
    211: .same(proto: "decodeSingularFixed32Field"),
    212: .same(proto: "decodeSingularFixed64Field"),
    213: .same(proto: "decodeSingularFloatField"),
    214: .same(proto: "decodeSingularGroupField"),
    215: .same(proto: "decodeSingularInt32Field"),
    216: .same(proto: "decodeSingularInt64Field"),
    217: .same(proto: "decodeSingularMessageField"),
    218: .same(proto: "decodeSingularSFixed32Field"),
    219: .same(proto: "decodeSingularSFixed64Field"),
    220: .same(proto: "decodeSingularSInt32Field"),
    221: .same(proto: "decodeSingularSInt64Field"),
    222: .same(proto: "decodeSingularStringField"),
    223: .same(proto: "decodeSingularUInt32Field"),
    224: .same(proto: "decodeSingularUInt64Field"),
    225: .same(proto: "decodeTextFormat"),
    226: .same(proto: "defaultAnyTypeURLPrefix"),
    227: .same(proto: "defaults"),
    228: .same(proto: "defaultValue"),
    229: .same(proto: "dependency"),
    230: .same(proto: "deprecated"),
    231: .same(proto: "deprecatedLegacyJsonFieldConflicts"),
    232: .same(proto: "description"),
    233: .same(proto: "DescriptorProto"),
    234: .same(proto: "Dictionary"),
    235: .same(proto: "dictionaryLiteral"),
    236: .same(proto: "digit"),
    237: .same(proto: "digit0"),
    238: .same(proto: "digit1"),
    239: .same(proto: "digitCount"),
    240: .same(proto: "digits"),
    241: .same(proto: "digitValue"),
    242: .same(proto: "discardableResult"),
    243: .same(proto: "discardUnknownFields"),
    244: .same(proto: "Double"),
    245: .same(proto: "doubleValue"),
    246: .same(proto: "Duration"),
    247: .same(proto: "E"),
    248: .same(proto: "edition"),
    249: .same(proto: "EditionDefault"),
    250: .same(proto: "editionDefaults"),
    251: .same(proto: "Element"),
    252: .same(proto: "elements"),
    253: .same(proto: "emitExtensionFieldName"),
    254: .same(proto: "emitFieldName"),
    255: .same(proto: "emitFieldNumber"),
    256: .same(proto: "Empty"),
    257: .same(proto: "encodeAsBytes"),
    258: .same(proto: "encoded"),
    259: .same(proto: "encodedJSONString"),
    260: .same(proto: "encodedSize"),
    261: .same(proto: "encodeField"),
    262: .same(proto: "encoder"),
    263: .same(proto: "end"),
    264: .same(proto: "endArray"),
    265: .same(proto: "endMessageField"),
    266: .same(proto: "endObject"),
    267: .same(proto: "endRegularField"),
    268: .same(proto: "enum"),
    269: .same(proto: "EnumDescriptorProto"),
    270: .same(proto: "EnumOptions"),
    271: .same(proto: "EnumReservedRange"),
    272: .same(proto: "enumType"),
    273: .same(proto: "enumvalue"),
    274: .same(proto: "EnumValueDescriptorProto"),
    275: .same(proto: "EnumValueOptions"),
    276: .same(proto: "Equatable"),
    277: .same(proto: "Error"),
    278: .same(proto: "escaping"),
    279: .same(proto: "ExpressibleByArrayLiteral"),
    280: .same(proto: "ExpressibleByDictionaryLiteral"),
    281: .same(proto: "ext"),
    282: .same(proto: "extDecoder"),
    283: .same(proto: "extendedGraphemeClusterLiteral"),
    284: .same(proto: "ExtendedGraphemeClusterLiteralType"),
    285: .same(proto: "extendee"),
    286: .same(proto: "ExtensibleMessage"),
    287: .same(proto: "extension"),
    288: .same(proto: "ExtensionField"),
    289: .same(proto: "extensionFieldNumber"),
    290: .same(proto: "extensionFields"),
    291: .same(proto: "extensionFieldsAsMessageSet"),
    292: .same(proto: "ExtensionFieldValueSet"),
    293: .same(proto: "ExtensionMap"),
    294: .same(proto: "extensionRange"),
    295: .same(proto: "ExtensionRangeOptions"),
    296: .same(proto: "extensions"),
    297: .same(proto: "extras"),
    298: .same(proto: "F"),
    299: .same(proto: "false"),
    300: .same(proto: "features"),
    301: .same(proto: "FeatureSet"),
    302: .same(proto: "FeatureSetDefaults"),
    303: .same(proto: "FeatureSetEditionDefault"),
    304: .same(proto: "field"),
    305: .same(proto: "fieldData"),
    306: .same(proto: "FieldDescriptorProto"),
    307: .same(proto: "FieldMask"),
    308: .same(proto: "fieldName"),
    309: .same(proto: "fieldNameCount"),
    310: .same(proto: "fieldNum"),
    311: .same(proto: "fieldNumber"),
    312: .same(proto: "fieldNumberForProto"),
    313: .same(proto: "FieldOptions"),
    314: .same(proto: "fieldPresence"),
    315: .same(proto: "fields"),
    316: .same(proto: "fieldSize"),
    317: .same(proto: "FieldTag"),
    318: .same(proto: "fieldType"),
    319: .same(proto: "file"),
    320: .same(proto: "FileDescriptorProto"),
    321: .same(proto: "FileDescriptorSet"),
    322: .same(proto: "fileName"),
    323: .same(proto: "FileOptions"),
    324: .same(proto: "filter"),
    325: .same(proto: "final"),
    326: .same(proto: "first"),
    327: .same(proto: "firstItem"),
    328: .same(proto: "Float"),
    329: .same(proto: "floatLiteral"),
    330: .same(proto: "FloatLiteralType"),
    331: .same(proto: "FloatValue"),
    332: .same(proto: "forMessageName"),
    333: .same(proto: "formUnion"),
    334: .same(proto: "forReadingFrom"),
    335: .same(proto: "forTypeURL"),
    336: .same(proto: "ForwardParser"),
    337: .same(proto: "forWritingInto"),
    338: .same(proto: "from"),
    339: .same(proto: "fromAscii2"),
    340: .same(proto: "fromAscii4"),
    341: .same(proto: "fromByteOffset"),
    342: .same(proto: "fromHexDigit"),
    343: .same(proto: "fullName"),
    344: .same(proto: "func"),
    345: .same(proto: "G"),
    346: .same(proto: "GeneratedCodeInfo"),
    347: .same(proto: "get"),
    348: .same(proto: "getExtensionValue"),
    349: .same(proto: "getValue"),
    350: .same(proto: "googleapis"),
    351: .standard(proto: "Google_Protobuf_Any"),
    352: .standard(proto: "Google_Protobuf_Api"),
    353: .standard(proto: "Google_Protobuf_BoolValue"),
    354: .standard(proto: "Google_Protobuf_BytesValue"),
    355: .standard(proto: "Google_Protobuf_DescriptorProto"),
    356: .standard(proto: "Google_Protobuf_DoubleValue"),
    357: .standard(proto: "Google_Protobuf_Duration"),
    358: .standard(proto: "Google_Protobuf_Edition"),
    359: .standard(proto: "Google_Protobuf_Empty"),
    360: .standard(proto: "Google_Protobuf_Enum"),
    361: .standard(proto: "Google_Protobuf_EnumDescriptorProto"),
    362: .standard(proto: "Google_Protobuf_EnumOptions"),
    363: .standard(proto: "Google_Protobuf_EnumValue"),
    364: .standard(proto: "Google_Protobuf_EnumValueDescriptorProto"),
    365: .standard(proto: "Google_Protobuf_EnumValueOptions"),
    366: .standard(proto: "Google_Protobuf_ExtensionRangeOptions"),
    367: .standard(proto: "Google_Protobuf_FeatureSet"),
    368: .standard(proto: "Google_Protobuf_FeatureSetDefaults"),
    369: .standard(proto: "Google_Protobuf_Field"),
    370: .standard(proto: "Google_Protobuf_FieldDescriptorProto"),
    371: .standard(proto: "Google_Protobuf_FieldMask"),
    372: .standard(proto: "Google_Protobuf_FieldOptions"),
    373: .standard(proto: "Google_Protobuf_FileDescriptorProto"),
    374: .standard(proto: "Google_Protobuf_FileDescriptorSet"),
    375: .standard(proto: "Google_Protobuf_FileOptions"),
    376: .standard(proto: "Google_Protobuf_FloatValue"),
    377: .standard(proto: "Google_Protobuf_GeneratedCodeInfo"),
    378: .standard(proto: "Google_Protobuf_Int32Value"),
    379: .standard(proto: "Google_Protobuf_Int64Value"),
    380: .standard(proto: "Google_Protobuf_ListValue"),
    381: .standard(proto: "Google_Protobuf_MessageOptions"),
    382: .standard(proto: "Google_Protobuf_Method"),
    383: .standard(proto: "Google_Protobuf_MethodDescriptorProto"),
    384: .standard(proto: "Google_Protobuf_MethodOptions"),
    385: .standard(proto: "Google_Protobuf_Mixin"),
    386: .standard(proto: "Google_Protobuf_NullValue"),
    387: .standard(proto: "Google_Protobuf_OneofDescriptorProto"),
    388: .standard(proto: "Google_Protobuf_OneofOptions"),
    389: .standard(proto: "Google_Protobuf_Option"),
    390: .standard(proto: "Google_Protobuf_ServiceDescriptorProto"),
    391: .standard(proto: "Google_Protobuf_ServiceOptions"),
    392: .standard(proto: "Google_Protobuf_SourceCodeInfo"),
    393: .standard(proto: "Google_Protobuf_SourceContext"),
    394: .standard(proto: "Google_Protobuf_StringValue"),
    395: .standard(proto: "Google_Protobuf_Struct"),
    396: .standard(proto: "Google_Protobuf_Syntax"),
    397: .standard(proto: "Google_Protobuf_Timestamp"),
    398: .standard(proto: "Google_Protobuf_Type"),
    399: .standard(proto: "Google_Protobuf_UInt32Value"),
    400: .standard(proto: "Google_Protobuf_UInt64Value"),
    401: .standard(proto: "Google_Protobuf_UninterpretedOption"),
    402: .standard(proto: "Google_Protobuf_Value"),
    403: .same(proto: "goPackage"),
    404: .same(proto: "group"),
    405: .same(proto: "groupFieldNumberStack"),
    406: .same(proto: "groupSize"),
    407: .same(proto: "hadOneofValue"),
    408: .same(proto: "handleConflictingOneOf"),
    409: .same(proto: "hasAggregateValue"),
    410: .same(proto: "hasAllowAlias"),
    411: .same(proto: "hasBegin"),
    412: .same(proto: "hasCcEnableArenas"),
    413: .same(proto: "hasCcGenericServices"),
    414: .same(proto: "hasClientStreaming"),
    415: .same(proto: "hasCsharpNamespace"),
    416: .same(proto: "hasCtype"),
    417: .same(proto: "hasDebugRedact"),
    418: .same(proto: "hasDefaultValue"),
    419: .same(proto: "hasDeprecated"),
    420: .same(proto: "hasDeprecatedLegacyJsonFieldConflicts"),
    421: .same(proto: "hasDoubleValue"),
    422: .same(proto: "hasEdition"),
    423: .same(proto: "hasEnd"),
    424: .same(proto: "hasEnumType"),
    425: .same(proto: "hasExtendee"),
    426: .same(proto: "hasExtensionValue"),
    427: .same(proto: "hasFeatures"),
    428: .same(proto: "hasFieldPresence"),
    429: .same(proto: "hasFullName"),
    430: .same(proto: "hasGoPackage"),
    431: .same(proto: "hash"),
    432: .same(proto: "Hashable"),
    433: .same(proto: "hasher"),
    434: .same(proto: "HashVisitor"),
    435: .same(proto: "hasIdempotencyLevel"),
    436: .same(proto: "hasIdentifierValue"),
    437: .same(proto: "hasInputType"),
    438: .same(proto: "hasIsExtension"),
    439: .same(proto: "hasJavaGenerateEqualsAndHash"),
    440: .same(proto: "hasJavaGenericServices"),
    441: .same(proto: "hasJavaMultipleFiles"),
    442: .same(proto: "hasJavaOuterClassname"),
    443: .same(proto: "hasJavaPackage"),
    444: .same(proto: "hasJavaStringCheckUtf8"),
    445: .same(proto: "hasJsonFormat"),
    446: .same(proto: "hasJsonName"),
    447: .same(proto: "hasJstype"),
    448: .same(proto: "hasLabel"),
    449: .same(proto: "hasLazy"),
    450: .same(proto: "hasLeadingComments"),
    451: .same(proto: "hasMapEntry"),
    452: .same(proto: "hasMaximumEdition"),
    453: .same(proto: "hasMessageEncoding"),
    454: .same(proto: "hasMessageSetWireFormat"),
    455: .same(proto: "hasMinimumEdition"),
    456: .same(proto: "hasName"),
    457: .same(proto: "hasNamePart"),
    458: .same(proto: "hasNegativeIntValue"),
    459: .same(proto: "hasNoStandardDescriptorAccessor"),
    460: .same(proto: "hasNumber"),
    461: .same(proto: "hasObjcClassPrefix"),
    462: .same(proto: "hasOneofIndex"),
    463: .same(proto: "hasOptimizeFor"),
    464: .same(proto: "hasOptions"),
    465: .same(proto: "hasOutputType"),
    466: .same(proto: "hasPackage"),
    467: .same(proto: "hasPacked"),
    468: .same(proto: "hasPhpClassPrefix"),
    469: .same(proto: "hasPhpGenericServices"),
    470: .same(proto: "hasPhpMetadataNamespace"),
    471: .same(proto: "hasPhpNamespace"),
    472: .same(proto: "hasPositiveIntValue"),
    473: .same(proto: "hasProto3Optional"),
    474: .same(proto: "hasPyGenericServices"),
    475: .same(proto: "hasRepeated"),
    476: .same(proto: "hasRepeatedFieldEncoding"),
    477: .same(proto: "hasReserved"),
    478: .same(proto: "hasRetention"),
    479: .same(proto: "hasRubyPackage"),
    480: .same(proto: "hasSemantic"),
    481: .same(proto: "hasServerStreaming"),
    482: .same(proto: "hasSourceCodeInfo"),
    483: .same(proto: "hasSourceContext"),
    484: .same(proto: "hasSourceFile"),
    485: .same(proto: "hasStart"),
    486: .same(proto: "hasStringValue"),
    487: .same(proto: "hasSwiftPrefix"),
    488: .same(proto: "hasSyntax"),
    489: .same(proto: "hasTrailingComments"),
    490: .same(proto: "hasType"),
    491: .same(proto: "hasTypeName"),
    492: .same(proto: "hasUnverifiedLazy"),
    493: .same(proto: "hasUtf8Validation"),
    494: .same(proto: "hasValue"),
    495: .same(proto: "hasVerification"),
    496: .same(proto: "hasWeak"),
    497: .same(proto: "hour"),
    498: .same(proto: "i"),
    499: .same(proto: "idempotencyLevel"),
    500: .same(proto: "identifierValue"),
    501: .same(proto: "if"),
    502: .same(proto: "ignoreUnknownFields"),
    503: .same(proto: "index"),
    504: .same(proto: "init"),
    505: .same(proto: "inout"),
    506: .same(proto: "inputType"),
    507: .same(proto: "insert"),
    508: .same(proto: "Int"),
    509: .same(proto: "Int32"),
    510: .same(proto: "Int32Value"),
    511: .same(proto: "Int64"),
    512: .same(proto: "Int64Value"),
    513: .same(proto: "Int8"),
    514: .same(proto: "integerLiteral"),
    515: .same(proto: "IntegerLiteralType"),
    516: .same(proto: "intern"),
    517: .same(proto: "Internal"),
    518: .same(proto: "InternalState"),
    519: .same(proto: "into"),
    520: .same(proto: "ints"),
    521: .same(proto: "isA"),
    522: .same(proto: "isEqual"),
    523: .same(proto: "isEqualTo"),
    524: .same(proto: "isExtension"),
    525: .same(proto: "isInitialized"),
    526: .same(proto: "isNegative"),
    527: .same(proto: "isUnset"),
    528: .same(proto: "itemTagsEncodedSize"),
    529: .same(proto: "iterator"),
    530: .same(proto: "javaGenerateEqualsAndHash"),
    531: .same(proto: "javaGenericServices"),
    532: .same(proto: "javaMultipleFiles"),
    533: .same(proto: "javaOuterClassname"),
    534: .same(proto: "javaPackage"),
    535: .same(proto: "javaStringCheckUtf8"),
    536: .same(proto: "JSONDecoder"),
    537: .same(proto: "JSONDecodingError"),
    538: .same(proto: "JSONDecodingOptions"),
    539: .same(proto: "jsonEncoder"),
    540: .same(proto: "JSONEncodingError"),
    541: .same(proto: "JSONEncodingOptions"),
    542: .same(proto: "JSONEncodingVisitor"),
    543: .same(proto: "jsonFormat"),
    544: .same(proto: "JSONMapEncodingVisitor"),
    545: .same(proto: "jsonName"),
    546: .same(proto: "jsonPath"),
    547: .same(proto: "jsonPaths"),
    548: .same(proto: "JSONScanner"),
    549: .same(proto: "jsonString"),
    550: .same(proto: "jsonText"),
    551: .same(proto: "jsonUTF8Bytes"),
    552: .same(proto: "jsonUTF8Data"),
    553: .same(proto: "jstype"),
    554: .same(proto: "k"),
    555: .same(proto: "kChunkSize"),
    556: .same(proto: "Key"),
    557: .same(proto: "keyField"),
    558: .same(proto: "keyFieldOpt"),
    559: .same(proto: "KeyType"),
    560: .same(proto: "kind"),
    561: .same(proto: "l"),
    562: .same(proto: "label"),
    563: .same(proto: "lazy"),
    564: .same(proto: "leadingComments"),
    565: .same(proto: "leadingDetachedComments"),
    566: .same(proto: "length"),
    567: .same(proto: "lessThan"),
    568: .same(proto: "let"),
    569: .same(proto: "lhs"),
    570: .same(proto: "list"),
    571: .same(proto: "listOfMessages"),
    572: .same(proto: "listValue"),
    573: .same(proto: "littleEndian"),
    574: .same(proto: "littleEndianBytes"),
    575: .same(proto: "load"),
    576: .same(proto: "localHasher"),
    577: .same(proto: "location"),
    578: .same(proto: "M"),
    579: .same(proto: "major"),
    580: .same(proto: "makeAsyncIterator"),
    581: .same(proto: "makeIterator"),
    582: .same(proto: "map"),
    583: .same(proto: "mapEntry"),
    584: .same(proto: "MapKeyType"),
    585: .same(proto: "mapToMessages"),
    586: .same(proto: "MapValueType"),
    587: .same(proto: "mapVisitor"),
    588: .same(proto: "maximumEdition"),
    589: .same(proto: "mdayStart"),
    590: .same(proto: "merge"),
    591: .same(proto: "message"),
    592: .same(proto: "messageDepthLimit"),
    593: .same(proto: "messageEncoding"),
    594: .same(proto: "MessageExtension"),
    595: .same(proto: "MessageImplementationBase"),
    596: .same(proto: "MessageOptions"),
    597: .same(proto: "MessageSet"),
    598: .same(proto: "messageSetWireFormat"),
    599: .same(proto: "messageSize"),
    600: .same(proto: "messageType"),
    601: .same(proto: "Method"),
    602: .same(proto: "MethodDescriptorProto"),
    603: .same(proto: "MethodOptions"),
    604: .same(proto: "methods"),
    605: .same(proto: "min"),
    606: .same(proto: "minimumEdition"),
    607: .same(proto: "minor"),
    608: .same(proto: "Mixin"),
    609: .same(proto: "mixins"),
    610: .same(proto: "modifier"),
    611: .same(proto: "modify"),
    612: .same(proto: "month"),
    613: .same(proto: "msgExtension"),
    614: .same(proto: "mutating"),
    615: .same(proto: "n"),
    616: .same(proto: "name"),
    617: .same(proto: "NameDescription"),
    618: .same(proto: "NameMap"),
    619: .same(proto: "NamePart"),
    620: .same(proto: "names"),
    621: .same(proto: "nanos"),
    622: .same(proto: "negativeIntValue"),
    623: .same(proto: "nestedType"),
    624: .same(proto: "newL"),
    625: .same(proto: "newList"),
    626: .same(proto: "newValue"),
    627: .same(proto: "next"),
    628: .same(proto: "nextByte"),
    629: .same(proto: "nextFieldNumber"),
    630: .same(proto: "nextVarInt"),
    631: .same(proto: "nil"),
    632: .same(proto: "nilLiteral"),
    633: .same(proto: "noStandardDescriptorAccessor"),
    634: .same(proto: "nullValue"),
    635: .same(proto: "number"),
    636: .same(proto: "numberValue"),
    637: .same(proto: "objcClassPrefix"),
    638: .same(proto: "of"),
    639: .same(proto: "oneOf"),
    640: .same(proto: "oneofDecl"),
    641: .same(proto: "OneofDescriptorProto"),
    642: .same(proto: "oneofIndex"),
    643: .same(proto: "OneofOptions"),
    644: .same(proto: "oneofs"),
    645: .standard(proto: "OneOf_Kind"),
    646: .same(proto: "optimizeFor"),
    647: .same(proto: "OptimizeMode"),
    648: .same(proto: "Option"),
    649: .same(proto: "OptionalEnumExtensionField"),
    650: .same(proto: "OptionalExtensionField"),
    651: .same(proto: "OptionalGroupExtensionField"),
    652: .same(proto: "OptionalMessageExtensionField"),
    653: .same(proto: "OptionRetention"),
    654: .same(proto: "options"),
    655: .same(proto: "OptionTargetType"),
    656: .same(proto: "other"),
    657: .same(proto: "others"),
    658: .same(proto: "out"),
    659: .same(proto: "outputType"),
    660: .same(proto: "p"),
    661: .same(proto: "package"),
    662: .same(proto: "packed"),
    663: .same(proto: "packedBool"),
    664: .same(proto: "packedDouble"),
    665: .same(proto: "packedEnum"),
    666: .same(proto: "PackedEnumExtensionField"),
    667: .same(proto: "PackedExtensionField"),
    668: .same(proto: "packedFixed32"),
    669: .same(proto: "packedFixed64"),
    670: .same(proto: "packedFloat"),
    671: .same(proto: "packedInt32"),
    672: .same(proto: "packedInt64"),
    673: .same(proto: "packedSFixed32"),
    674: .same(proto: "packedSFixed64"),
    675: .same(proto: "packedSInt32"),
    676: .same(proto: "packedSInt64"),
    677: .same(proto: "packedUInt32"),
    678: .same(proto: "packedUInt64"),
    679: .same(proto: "padding"),
    680: .same(proto: "parent"),
    681: .same(proto: "parse"),
    682: .same(proto: "path"),
    683: .same(proto: "paths"),
    684: .same(proto: "payload"),
    685: .same(proto: "payloadSize"),
    686: .same(proto: "phpClassPrefix"),
    687: .same(proto: "phpGenericServices"),
    688: .same(proto: "phpMetadataNamespace"),
    689: .same(proto: "phpNamespace"),
    690: .same(proto: "pos"),
    691: .same(proto: "positiveIntValue"),
    692: .same(proto: "prefix"),
    693: .same(proto: "preserveProtoFieldNames"),
    694: .same(proto: "preTraverse"),
    695: .same(proto: "printUnknownFields"),
    696: .same(proto: "proto2"),
    697: .same(proto: "proto3DefaultValue"),
    698: .same(proto: "proto3Optional"),
    699: .same(proto: "ProtobufAPIVersionCheck"),
    700: .standard(proto: "ProtobufAPIVersion_3"),
    701: .same(proto: "ProtobufBool"),
    702: .same(proto: "ProtobufBytes"),
    703: .same(proto: "ProtobufDouble"),
    704: .same(proto: "ProtobufEnumMap"),
    705: .same(proto: "protobufExtension"),
    706: .same(proto: "ProtobufFixed32"),
    707: .same(proto: "ProtobufFixed64"),
    708: .same(proto: "ProtobufFloat"),
    709: .same(proto: "ProtobufInt32"),
    710: .same(proto: "ProtobufInt64"),
    711: .same(proto: "ProtobufMap"),
    712: .same(proto: "ProtobufMessageMap"),
    713: .same(proto: "ProtobufSFixed32"),
    714: .same(proto: "ProtobufSFixed64"),
    715: .same(proto: "ProtobufSInt32"),
    716: .same(proto: "ProtobufSInt64"),
    717: .same(proto: "ProtobufString"),
    718: .same(proto: "ProtobufUInt32"),
    719: .same(proto: "ProtobufUInt64"),
    720: .standard(proto: "protobuf_extensionFieldValues"),
    721: .standard(proto: "protobuf_fieldNumber"),
    722: .standard(proto: "protobuf_generated_isEqualTo"),
    723: .standard(proto: "protobuf_nameMap"),
    724: .standard(proto: "protobuf_newField"),
    725: .standard(proto: "protobuf_package"),
    726: .same(proto: "protocol"),
    727: .same(proto: "protoFieldName"),
    728: .same(proto: "protoMessageName"),
    729: .same(proto: "ProtoNameProviding"),
    730: .same(proto: "protoPaths"),
    731: .same(proto: "public"),
    732: .same(proto: "publicDependency"),
    733: .same(proto: "putBoolValue"),
    734: .same(proto: "putBytesValue"),
    735: .same(proto: "putDoubleValue"),
    736: .same(proto: "putEnumValue"),
    737: .same(proto: "putFixedUInt32"),
    738: .same(proto: "putFixedUInt64"),
    739: .same(proto: "putFloatValue"),
    740: .same(proto: "putInt64"),
    741: .same(proto: "putStringValue"),
    742: .same(proto: "putUInt64"),
    743: .same(proto: "putUInt64Hex"),
    744: .same(proto: "putVarInt"),
    745: .same(proto: "putZigZagVarInt"),
    746: .same(proto: "pyGenericServices"),
    747: .same(proto: "R"),
    748: .same(proto: "rawChars"),
    749: .same(proto: "RawRepresentable"),
    750: .same(proto: "RawValue"),
    751: .same(proto: "read4HexDigits"),
    752: .same(proto: "readBytes"),
    753: .same(proto: "register"),
    754: .same(proto: "repeated"),
    755: .same(proto: "repeatedBool"),
    756: .same(proto: "repeatedBytes"),
    757: .same(proto: "repeatedDouble"),
    758: .same(proto: "repeatedEnum"),
    759: .same(proto: "RepeatedEnumExtensionField"),
    760: .same(proto: "RepeatedExtensionField"),
    761: .same(proto: "repeatedFieldEncoding"),
    762: .same(proto: "repeatedFixed32"),
    763: .same(proto: "repeatedFixed64"),
    764: .same(proto: "repeatedFloat"),
    765: .same(proto: "repeatedGroup"),
    766: .same(proto: "RepeatedGroupExtensionField"),
    767: .same(proto: "repeatedInt32"),
    768: .same(proto: "repeatedInt64"),
    769: .same(proto: "repeatedMessage"),
    770: .same(proto: "RepeatedMessageExtensionField"),
    771: .same(proto: "repeatedSFixed32"),
    772: .same(proto: "repeatedSFixed64"),
    773: .same(proto: "repeatedSInt32"),
    774: .same(proto: "repeatedSInt64"),
    775: .same(proto: "repeatedString"),
    776: .same(proto: "repeatedUInt32"),
    777: .same(proto: "repeatedUInt64"),
    778: .same(proto: "repeating"),
    779: .same(proto: "requestStreaming"),
    780: .same(proto: "requestTypeURL"),
    781: .same(proto: "requiredSize"),
    782: .same(proto: "responseStreaming"),
    783: .same(proto: "responseTypeURL"),
    784: .same(proto: "result"),
    785: .same(proto: "retention"),
    786: .same(proto: "rethrows"),
    787: .same(proto: "return"),
    788: .same(proto: "ReturnType"),
    789: .same(proto: "revision"),
    790: .same(proto: "rhs"),
    791: .same(proto: "root"),
    792: .same(proto: "rubyPackage"),
    793: .same(proto: "s"),
    794: .same(proto: "sawBackslash"),
    795: .same(proto: "sawSection4Characters"),
    796: .same(proto: "sawSection5Characters"),
    797: .same(proto: "scanner"),
    798: .same(proto: "seconds"),
    799: .same(proto: "self"),
    800: .same(proto: "semantic"),
    801: .same(proto: "Sendable"),
    802: .same(proto: "separator"),
    803: .same(proto: "serialize"),
    804: .same(proto: "serializedBytes"),
    805: .same(proto: "serializedData"),
    806: .same(proto: "serializedSize"),
    807: .same(proto: "serverStreaming"),
    808: .same(proto: "service"),
    809: .same(proto: "ServiceDescriptorProto"),
    810: .same(proto: "ServiceOptions"),
    811: .same(proto: "set"),
    812: .same(proto: "setExtensionValue"),
    813: .same(proto: "shift"),
    814: .same(proto: "SimpleExtensionMap"),
    815: .same(proto: "singularBool"),
    816: .same(proto: "singularBytes"),
    817: .same(proto: "singularDouble"),
    818: .same(proto: "singularEnum"),
    819: .same(proto: "singularFixed32"),
    820: .same(proto: "singularFixed64"),
    821: .same(proto: "singularFloat"),
    822: .same(proto: "singularGroup"),
    823: .same(proto: "singularInt32"),
    824: .same(proto: "singularInt64"),
    825: .same(proto: "singularMessage"),
    826: .same(proto: "singularSFixed32"),
    827: .same(proto: "singularSFixed64"),
    828: .same(proto: "singularSInt32"),
    829: .same(proto: "singularSInt64"),
    830: .same(proto: "singularString"),
    831: .same(proto: "singularUInt32"),
    832: .same(proto: "singularUInt64"),
    833: .same(proto: "size"),
    834: .same(proto: "sizer"),
    835: .same(proto: "source"),
    836: .same(proto: "sourceCodeInfo"),
    837: .same(proto: "sourceContext"),
    838: .same(proto: "sourceEncoding"),
    839: .same(proto: "sourceFile"),
    840: .same(proto: "span"),
    841: .same(proto: "split"),
    842: .same(proto: "start"),
    843: .same(proto: "startArray"),
    844: .same(proto: "startArrayObject"),
    845: .same(proto: "startField"),
    846: .same(proto: "startIndex"),
    847: .same(proto: "startMessageField"),
    848: .same(proto: "startObject"),
    849: .same(proto: "startRegularField"),
    850: .same(proto: "state"),
    851: .same(proto: "static"),
    852: .same(proto: "StaticString"),
    853: .same(proto: "storage"),
    854: .same(proto: "String"),
    855: .same(proto: "stringLiteral"),
    856: .same(proto: "StringLiteralType"),
    857: .same(proto: "stringResult"),
    858: .same(proto: "stringValue"),
    859: .same(proto: "struct"),
    860: .same(proto: "structValue"),
    861: .same(proto: "subDecoder"),
    862: .same(proto: "subscript"),
    863: .same(proto: "subVisitor"),
    864: .same(proto: "Swift"),
    865: .same(proto: "swiftPrefix"),
    866: .same(proto: "SwiftProtobufContiguousBytes"),
    867: .same(proto: "syntax"),
    868: .same(proto: "T"),
    869: .same(proto: "tag"),
    870: .same(proto: "targets"),
    871: .same(proto: "terminator"),
    872: .same(proto: "testDecoder"),
    873: .same(proto: "text"),
    874: .same(proto: "textDecoder"),
    875: .same(proto: "TextFormatDecoder"),
    876: .same(proto: "TextFormatDecodingError"),
    877: .same(proto: "TextFormatDecodingOptions"),
    878: .same(proto: "TextFormatEncodingOptions"),
    879: .same(proto: "TextFormatEncodingVisitor"),
    880: .same(proto: "textFormatString"),
    881: .same(proto: "throwOrIgnore"),
    882: .same(proto: "throws"),
    883: .same(proto: "timeInterval"),
    884: .same(proto: "timeIntervalSince1970"),
    885: .same(proto: "timeIntervalSinceReferenceDate"),
    886: .same(proto: "Timestamp"),
    887: .same(proto: "toConcrete"),
    888: .same(proto: "total"),
    889: .same(proto: "totalArrayDepth"),
    890: .same(proto: "totalSize"),
    891: .same(proto: "trailingComments"),
    892: .same(proto: "traverse"),
    893: .same(proto: "true"),
    894: .same(proto: "try"),
    895: .same(proto: "type"),
    896: .same(proto: "typealias"),
    897: .same(proto: "TypeEnum"),
    898: .same(proto: "typeName"),
    899: .same(proto: "typePrefix"),
    900: .same(proto: "typeStart"),
    901: .same(proto: "typeUnknown"),
    902: .same(proto: "typeURL"),
    903: .same(proto: "UInt32"),
    904: .same(proto: "UInt32Value"),
    905: .same(proto: "UInt64"),
    906: .same(proto: "UInt64Value"),
    907: .same(proto: "UInt8"),
    908: .same(proto: "unchecked"),
    909: .same(proto: "unicodeScalarLiteral"),
    910: .same(proto: "UnicodeScalarLiteralType"),
    911: .same(proto: "unicodeScalars"),
    912: .same(proto: "UnicodeScalarView"),
    913: .same(proto: "uninterpretedOption"),
    914: .same(proto: "union"),
    915: .same(proto: "uniqueStorage"),
    916: .same(proto: "unknown"),
    917: .same(proto: "unknownFields"),
    918: .same(proto: "UnknownStorage"),
    919: .same(proto: "unpackTo"),
    920: .same(proto: "UnsafeBufferPointer"),
    921: .same(proto: "UnsafeMutablePointer"),
    922: .same(proto: "UnsafeMutableRawBufferPointer"),
    923: .same(proto: "UnsafeRawBufferPointer"),
    924: .same(proto: "UnsafeRawPointer"),
    925: .same(proto: "unverifiedLazy"),
    926: .same(proto: "updatedOptions"),
    927: .same(proto: "url"),
    928: .same(proto: "useDeterministicOrdering"),
    929: .same(proto: "utf8"),
    930: .same(proto: "utf8Ptr"),
    931: .same(proto: "utf8ToDouble"),
    932: .same(proto: "utf8Validation"),
    933: .same(proto: "UTF8View"),
    934: .same(proto: "v"),
    935: .same(proto: "value"),
    936: .same(proto: "valueField"),
    937: .same(proto: "values"),
    938: .same(proto: "ValueType"),
    939: .same(proto: "var"),
    940: .same(proto: "verification"),
    941: .same(proto: "VerificationState"),
    942: .same(proto: "Version"),
    943: .same(proto: "versionString"),
    944: .same(proto: "visitExtensionFields"),
    945: .same(proto: "visitExtensionFieldsAsMessageSet"),
    946: .same(proto: "visitMapField"),
    947: .same(proto: "visitor"),
    948: .same(proto: "visitPacked"),
    949: .same(proto: "visitPackedBoolField"),
    950: .same(proto: "visitPackedDoubleField"),
    951: .same(proto: "visitPackedEnumField"),
    952: .same(proto: "visitPackedFixed32Field"),
    953: .same(proto: "visitPackedFixed64Field"),
    954: .same(proto: "visitPackedFloatField"),
    955: .same(proto: "visitPackedInt32Field"),
    956: .same(proto: "visitPackedInt64Field"),
    957: .same(proto: "visitPackedSFixed32Field"),
    958: .same(proto: "visitPackedSFixed64Field"),
    959: .same(proto: "visitPackedSInt32Field"),
    960: .same(proto: "visitPackedSInt64Field"),
    961: .same(proto: "visitPackedUInt32Field"),
    962: .same(proto: "visitPackedUInt64Field"),
    963: .same(proto: "visitRepeated"),
    964: .same(proto: "visitRepeatedBoolField"),
    965: .same(proto: "visitRepeatedBytesField"),
    966: .same(proto: "visitRepeatedDoubleField"),
    967: .same(proto: "visitRepeatedEnumField"),
    968: .same(proto: "visitRepeatedFixed32Field"),
    969: .same(proto: "visitRepeatedFixed64Field"),
    970: .same(proto: "visitRepeatedFloatField"),
    971: .same(proto: "visitRepeatedGroupField"),
    972: .same(proto: "visitRepeatedInt32Field"),
    973: .same(proto: "visitRepeatedInt64Field"),
    974: .same(proto: "visitRepeatedMessageField"),
    975: .same(proto: "visitRepeatedSFixed32Field"),
    976: .same(proto: "visitRepeatedSFixed64Field"),
    977: .same(proto: "visitRepeatedSInt32Field"),
    978: .same(proto: "visitRepeatedSInt64Field"),
    979: .same(proto: "visitRepeatedStringField"),
    980: .same(proto: "visitRepeatedUInt32Field"),
    981: .same(proto: "visitRepeatedUInt64Field"),
    982: .same(proto: "visitSingular"),
    983: .same(proto: "visitSingularBoolField"),
    984: .same(proto: "visitSingularBytesField"),
    985: .same(proto: "visitSingularDoubleField"),
    986: .same(proto: "visitSingularEnumField"),
    987: .same(proto: "visitSingularFixed32Field"),
    988: .same(proto: "visitSingularFixed64Field"),
    989: .same(proto: "visitSingularFloatField"),
    990: .same(proto: "visitSingularGroupField"),
    991: .same(proto: "visitSingularInt32Field"),
    992: .same(proto: "visitSingularInt64Field"),
    993: .same(proto: "visitSingularMessageField"),
    994: .same(proto: "visitSingularSFixed32Field"),
    995: .same(proto: "visitSingularSFixed64Field"),
    996: .same(proto: "visitSingularSInt32Field"),
    997: .same(proto: "visitSingularSInt64Field"),
    998: .same(proto: "visitSingularStringField"),
    999: .same(proto: "visitSingularUInt32Field"),
    1000: .same(proto: "visitSingularUInt64Field"),
    1001: .same(proto: "visitUnknown"),
    1002: .same(proto: "wasDecoded"),
    1003: .same(proto: "weak"),
    1004: .same(proto: "weakDependency"),
    1005: .same(proto: "where"),
    1006: .same(proto: "wireFormat"),
    1007: .same(proto: "with"),
    1008: .same(proto: "withUnsafeBytes"),
    1009: .same(proto: "withUnsafeMutableBytes"),
    1010: .same(proto: "work"),
    1011: .same(proto: "Wrapped"),
    1012: .same(proto: "WrappedType"),
    1013: .same(proto: "wrappedValue"),
    1014: .same(proto: "written"),
    1015: .same(proto: "yday"),
  ]

  fileprivate class _StorageClass {
    var _adjusted: Int32 = 0
    var _aggregateValue: Int32 = 0
    var _allCases: Int32 = 0
    var _allowAlias: Int32 = 0
    var _alwaysPrintEnumsAsInts: Int32 = 0
    var _alwaysPrintInt64SAsNumbers: Int32 = 0
    var _annotation: Int32 = 0
    var _any: Int32 = 0
    var _anyExtensionField: Int32 = 0
    var _anyMessageExtension: Int32 = 0
    var _anyMessageStorage: Int32 = 0
    var _anyUnpackError: Int32 = 0
    var _api: Int32 = 0
    var _appended: Int32 = 0
    var _appendUintHex: Int32 = 0
    var _appendUnknown: Int32 = 0
    var _areAllInitialized: Int32 = 0
    var _array: Int32 = 0
    var _arrayDepth: Int32 = 0
    var _arrayLiteral: Int32 = 0
    var _arraySeparator: Int32 = 0
    var _as: Int32 = 0
    var _asciiOpenCurlyBracket: Int32 = 0
    var _asciiZero: Int32 = 0
    var _async: Int32 = 0
    var _asyncIterator: Int32 = 0
    var _asyncIteratorProtocol: Int32 = 0
    var _asyncMessageSequence: Int32 = 0
    var _available: Int32 = 0
    var _b: Int32 = 0
    var _base: Int32 = 0
    var _base64Values: Int32 = 0
    var _baseAddress: Int32 = 0
    var _baseType: Int32 = 0
    var _begin: Int32 = 0
    var _binary: Int32 = 0
    var _binaryDecoder: Int32 = 0
    var _binaryDecodingError: Int32 = 0
    var _binaryDecodingOptions: Int32 = 0
    var _binaryDelimited: Int32 = 0
    var _binaryEncoder: Int32 = 0
    var _binaryEncodingError: Int32 = 0
    var _binaryEncodingMessageSetSizeVisitor: Int32 = 0
    var _binaryEncodingMessageSetVisitor: Int32 = 0
    var _binaryEncodingOptions: Int32 = 0
    var _binaryEncodingSizeVisitor: Int32 = 0
    var _binaryEncodingVisitor: Int32 = 0
    var _binaryOptions: Int32 = 0
    var _binaryProtobufDelimitedMessages: Int32 = 0
    var _bitPattern: Int32 = 0
    var _body: Int32 = 0
    var _bool: Int32 = 0
    var _booleanLiteral: Int32 = 0
    var _booleanLiteralType: Int32 = 0
    var _boolValue: Int32 = 0
    var _buffer: Int32 = 0
    var _bytes: Int32 = 0
    var _bytesInGroup: Int32 = 0
    var _bytesNeeded: Int32 = 0
    var _bytesRead: Int32 = 0
    var _bytesValue: Int32 = 0
    var _c: Int32 = 0
    var _capitalizeNext: Int32 = 0
    var _cardinality: Int32 = 0
    var _caseIterable: Int32 = 0
    var _ccEnableArenas: Int32 = 0
    var _ccGenericServices: Int32 = 0
    var _character: Int32 = 0
    var _chars: Int32 = 0
    var _chunk: Int32 = 0
    var _class: Int32 = 0
    var _clearAggregateValue_p: Int32 = 0
    var _clearAllowAlias_p: Int32 = 0
    var _clearBegin_p: Int32 = 0
    var _clearCcEnableArenas_p: Int32 = 0
    var _clearCcGenericServices_p: Int32 = 0
    var _clearClientStreaming_p: Int32 = 0
    var _clearCsharpNamespace_p: Int32 = 0
    var _clearCtype_p: Int32 = 0
    var _clearDebugRedact_p: Int32 = 0
    var _clearDefaultValue_p: Int32 = 0
    var _clearDeprecated_p: Int32 = 0
    var _clearDeprecatedLegacyJsonFieldConflicts_p: Int32 = 0
    var _clearDoubleValue_p: Int32 = 0
    var _clearEdition_p: Int32 = 0
    var _clearEnd_p: Int32 = 0
    var _clearEnumType_p: Int32 = 0
    var _clearExtendee_p: Int32 = 0
    var _clearExtensionValue_p: Int32 = 0
    var _clearFeatures_p: Int32 = 0
    var _clearFieldPresence_p: Int32 = 0
    var _clearFullName_p: Int32 = 0
    var _clearGoPackage_p: Int32 = 0
    var _clearIdempotencyLevel_p: Int32 = 0
    var _clearIdentifierValue_p: Int32 = 0
    var _clearInputType_p: Int32 = 0
    var _clearIsExtension_p: Int32 = 0
    var _clearJavaGenerateEqualsAndHash_p: Int32 = 0
    var _clearJavaGenericServices_p: Int32 = 0
    var _clearJavaMultipleFiles_p: Int32 = 0
    var _clearJavaOuterClassname_p: Int32 = 0
    var _clearJavaPackage_p: Int32 = 0
    var _clearJavaStringCheckUtf8_p: Int32 = 0
    var _clearJsonFormat_p: Int32 = 0
    var _clearJsonName_p: Int32 = 0
    var _clearJstype_p: Int32 = 0
    var _clearLabel_p: Int32 = 0
    var _clearLazy_p: Int32 = 0
    var _clearLeadingComments_p: Int32 = 0
    var _clearMapEntry_p: Int32 = 0
    var _clearMaximumEdition_p: Int32 = 0
    var _clearMessageEncoding_p: Int32 = 0
    var _clearMessageSetWireFormat_p: Int32 = 0
    var _clearMinimumEdition_p: Int32 = 0
    var _clearName_p: Int32 = 0
    var _clearNamePart_p: Int32 = 0
    var _clearNegativeIntValue_p: Int32 = 0
    var _clearNoStandardDescriptorAccessor_p: Int32 = 0
    var _clearNumber_p: Int32 = 0
    var _clearObjcClassPrefix_p: Int32 = 0
    var _clearOneofIndex_p: Int32 = 0
    var _clearOptimizeFor_p: Int32 = 0
    var _clearOptions_p: Int32 = 0
    var _clearOutputType_p: Int32 = 0
    var _clearPackage_p: Int32 = 0
    var _clearPacked_p: Int32 = 0
    var _clearPhpClassPrefix_p: Int32 = 0
    var _clearPhpGenericServices_p: Int32 = 0
    var _clearPhpMetadataNamespace_p: Int32 = 0
    var _clearPhpNamespace_p: Int32 = 0
    var _clearPositiveIntValue_p: Int32 = 0
    var _clearProto3Optional_p: Int32 = 0
    var _clearPyGenericServices_p: Int32 = 0
    var _clearRepeated_p: Int32 = 0
    var _clearRepeatedFieldEncoding_p: Int32 = 0
    var _clearReserved_p: Int32 = 0
    var _clearRetention_p: Int32 = 0
    var _clearRubyPackage_p: Int32 = 0
    var _clearSemantic_p: Int32 = 0
    var _clearServerStreaming_p: Int32 = 0
    var _clearSourceCodeInfo_p: Int32 = 0
    var _clearSourceContext_p: Int32 = 0
    var _clearSourceFile_p: Int32 = 0
    var _clearStart_p: Int32 = 0
    var _clearStringValue_p: Int32 = 0
    var _clearSwiftPrefix_p: Int32 = 0
    var _clearSyntax_p: Int32 = 0
    var _clearTrailingComments_p: Int32 = 0
    var _clearType_p: Int32 = 0
    var _clearTypeName_p: Int32 = 0
    var _clearUnverifiedLazy_p: Int32 = 0
    var _clearUtf8Validation_p: Int32 = 0
    var _clearValue_p: Int32 = 0
    var _clearVerification_p: Int32 = 0
    var _clearWeak_p: Int32 = 0
    var _clientStreaming: Int32 = 0
    var _codePoint: Int32 = 0
    var _codeUnits: Int32 = 0
    var _collection: Int32 = 0
    var _com: Int32 = 0
    var _comma: Int32 = 0
    var _commonMessageConformances: Int32 = 0
    var _consumedBytes: Int32 = 0
    var _contentsOf: Int32 = 0
    var _count: Int32 = 0
    var _countVarintsInBuffer: Int32 = 0
    var _csharpNamespace: Int32 = 0
    var _ctype: Int32 = 0
    var _customCodable: Int32 = 0
    var _d: Int32 = 0
    var _data: Int32 = 0
    var _dataResult: Int32 = 0
    var _date: Int32 = 0
    var _daySec: Int32 = 0
    var _daysSinceEpoch: Int32 = 0
    var _debugDescription_p: Int32 = 0
    var _debugRedact: Int32 = 0
    var _declaration: Int32 = 0
    var _decoded: Int32 = 0
    var _decodedFromJsonnull: Int32 = 0
    var _decodeExtensionField: Int32 = 0
    var _decodeExtensionFieldsAsMessageSet: Int32 = 0
    var _decodeJson: Int32 = 0
    var _decodeMapField: Int32 = 0
    var _decodeMessage: Int32 = 0
    var _decoder: Int32 = 0
    var _decodeRepeated: Int32 = 0
    var _decodeRepeatedBoolField: Int32 = 0
    var _decodeRepeatedBytesField: Int32 = 0
    var _decodeRepeatedDoubleField: Int32 = 0
    var _decodeRepeatedEnumField: Int32 = 0
    var _decodeRepeatedFixed32Field: Int32 = 0
    var _decodeRepeatedFixed64Field: Int32 = 0
    var _decodeRepeatedFloatField: Int32 = 0
    var _decodeRepeatedGroupField: Int32 = 0
    var _decodeRepeatedInt32Field: Int32 = 0
    var _decodeRepeatedInt64Field: Int32 = 0
    var _decodeRepeatedMessageField: Int32 = 0
    var _decodeRepeatedSfixed32Field: Int32 = 0
    var _decodeRepeatedSfixed64Field: Int32 = 0
    var _decodeRepeatedSint32Field: Int32 = 0
    var _decodeRepeatedSint64Field: Int32 = 0
    var _decodeRepeatedStringField: Int32 = 0
    var _decodeRepeatedUint32Field: Int32 = 0
    var _decodeRepeatedUint64Field: Int32 = 0
    var _decodeSingular: Int32 = 0
    var _decodeSingularBoolField: Int32 = 0
    var _decodeSingularBytesField: Int32 = 0
    var _decodeSingularDoubleField: Int32 = 0
    var _decodeSingularEnumField: Int32 = 0
    var _decodeSingularFixed32Field: Int32 = 0
    var _decodeSingularFixed64Field: Int32 = 0
    var _decodeSingularFloatField: Int32 = 0
    var _decodeSingularGroupField: Int32 = 0
    var _decodeSingularInt32Field: Int32 = 0
    var _decodeSingularInt64Field: Int32 = 0
    var _decodeSingularMessageField: Int32 = 0
    var _decodeSingularSfixed32Field: Int32 = 0
    var _decodeSingularSfixed64Field: Int32 = 0
    var _decodeSingularSint32Field: Int32 = 0
    var _decodeSingularSint64Field: Int32 = 0
    var _decodeSingularStringField: Int32 = 0
    var _decodeSingularUint32Field: Int32 = 0
    var _decodeSingularUint64Field: Int32 = 0
    var _decodeTextFormat: Int32 = 0
    var _defaultAnyTypeUrlprefix: Int32 = 0
    var _defaults: Int32 = 0
    var _defaultValue: Int32 = 0
    var _dependency: Int32 = 0
    var _deprecated: Int32 = 0
    var _deprecatedLegacyJsonFieldConflicts: Int32 = 0
    var _description_p: Int32 = 0
    var _descriptorProto: Int32 = 0
    var _dictionary: Int32 = 0
    var _dictionaryLiteral: Int32 = 0
    var _digit: Int32 = 0
    var _digit0: Int32 = 0
    var _digit1: Int32 = 0
    var _digitCount: Int32 = 0
    var _digits: Int32 = 0
    var _digitValue: Int32 = 0
    var _discardableResult: Int32 = 0
    var _discardUnknownFields: Int32 = 0
    var _double: Int32 = 0
    var _doubleValue: Int32 = 0
    var _duration: Int32 = 0
    var _e: Int32 = 0
    var _edition: Int32 = 0
    var _editionDefault: Int32 = 0
    var _editionDefaults: Int32 = 0
    var _element: Int32 = 0
    var _elements: Int32 = 0
    var _emitExtensionFieldName: Int32 = 0
    var _emitFieldName: Int32 = 0
    var _emitFieldNumber: Int32 = 0
    var _empty: Int32 = 0
    var _encodeAsBytes: Int32 = 0
    var _encoded: Int32 = 0
    var _encodedJsonstring: Int32 = 0
    var _encodedSize: Int32 = 0
    var _encodeField: Int32 = 0
    var _encoder: Int32 = 0
    var _end: Int32 = 0
    var _endArray: Int32 = 0
    var _endMessageField: Int32 = 0
    var _endObject: Int32 = 0
    var _endRegularField: Int32 = 0
    var _enum: Int32 = 0
    var _enumDescriptorProto: Int32 = 0
    var _enumOptions: Int32 = 0
    var _enumReservedRange: Int32 = 0
    var _enumType: Int32 = 0
    var _enumvalue: Int32 = 0
    var _enumValueDescriptorProto: Int32 = 0
    var _enumValueOptions: Int32 = 0
    var _equatable: Int32 = 0
    var _error: Int32 = 0
    var _escaping: Int32 = 0
    var _expressibleByArrayLiteral: Int32 = 0
    var _expressibleByDictionaryLiteral: Int32 = 0
    var _ext: Int32 = 0
    var _extDecoder: Int32 = 0
    var _extendedGraphemeClusterLiteral: Int32 = 0
    var _extendedGraphemeClusterLiteralType: Int32 = 0
    var _extendee: Int32 = 0
    var _extensibleMessage: Int32 = 0
    var _extension: Int32 = 0
    var _extensionField: Int32 = 0
    var _extensionFieldNumber: Int32 = 0
    var _extensionFields: Int32 = 0
    var _extensionFieldsAsMessageSet: Int32 = 0
    var _extensionFieldValueSet: Int32 = 0
    var _extensionMap: Int32 = 0
    var _extensionRange: Int32 = 0
    var _extensionRangeOptions: Int32 = 0
    var _extensions: Int32 = 0
    var _extras: Int32 = 0
    var _f: Int32 = 0
    var _false: Int32 = 0
    var _features: Int32 = 0
    var _featureSet: Int32 = 0
    var _featureSetDefaults: Int32 = 0
    var _featureSetEditionDefault: Int32 = 0
    var _field: Int32 = 0
    var _fieldData: Int32 = 0
    var _fieldDescriptorProto: Int32 = 0
    var _fieldMask: Int32 = 0
    var _fieldName: Int32 = 0
    var _fieldNameCount: Int32 = 0
    var _fieldNum: Int32 = 0
    var _fieldNumber: Int32 = 0
    var _fieldNumberForProto: Int32 = 0
    var _fieldOptions: Int32 = 0
    var _fieldPresence: Int32 = 0
    var _fields: Int32 = 0
    var _fieldSize: Int32 = 0
    var _fieldTag: Int32 = 0
    var _fieldType: Int32 = 0
    var _file: Int32 = 0
    var _fileDescriptorProto: Int32 = 0
    var _fileDescriptorSet: Int32 = 0
    var _fileName: Int32 = 0
    var _fileOptions: Int32 = 0
    var _filter: Int32 = 0
    var _final: Int32 = 0
    var _first: Int32 = 0
    var _firstItem: Int32 = 0
    var _float: Int32 = 0
    var _floatLiteral: Int32 = 0
    var _floatLiteralType: Int32 = 0
    var _floatValue: Int32 = 0
    var _forMessageName: Int32 = 0
    var _formUnion: Int32 = 0
    var _forReadingFrom: Int32 = 0
    var _forTypeURL: Int32 = 0
    var _forwardParser: Int32 = 0
    var _forWritingInto: Int32 = 0
    var _from: Int32 = 0
    var _fromAscii2: Int32 = 0
    var _fromAscii4: Int32 = 0
    var _fromByteOffset: Int32 = 0
    var _fromHexDigit: Int32 = 0
    var _fullName: Int32 = 0
    var _func: Int32 = 0
    var _g: Int32 = 0
    var _generatedCodeInfo: Int32 = 0
    var _get: Int32 = 0
    var _getExtensionValue: Int32 = 0
    var _getValue: Int32 = 0
    var _googleapis: Int32 = 0
    var _googleProtobufAny: Int32 = 0
    var _googleProtobufApi: Int32 = 0
    var _googleProtobufBoolValue: Int32 = 0
    var _googleProtobufBytesValue: Int32 = 0
    var _googleProtobufDescriptorProto: Int32 = 0
    var _googleProtobufDoubleValue: Int32 = 0
    var _googleProtobufDuration: Int32 = 0
    var _googleProtobufEdition: Int32 = 0
    var _googleProtobufEmpty: Int32 = 0
    var _googleProtobufEnum: Int32 = 0
    var _googleProtobufEnumDescriptorProto: Int32 = 0
    var _googleProtobufEnumOptions: Int32 = 0
    var _googleProtobufEnumValue: Int32 = 0
    var _googleProtobufEnumValueDescriptorProto: Int32 = 0
    var _googleProtobufEnumValueOptions: Int32 = 0
    var _googleProtobufExtensionRangeOptions: Int32 = 0
    var _googleProtobufFeatureSet: Int32 = 0
    var _googleProtobufFeatureSetDefaults: Int32 = 0
    var _googleProtobufField: Int32 = 0
    var _googleProtobufFieldDescriptorProto: Int32 = 0
    var _googleProtobufFieldMask: Int32 = 0
    var _googleProtobufFieldOptions: Int32 = 0
    var _googleProtobufFileDescriptorProto: Int32 = 0
    var _googleProtobufFileDescriptorSet: Int32 = 0
    var _googleProtobufFileOptions: Int32 = 0
    var _googleProtobufFloatValue: Int32 = 0
    var _googleProtobufGeneratedCodeInfo: Int32 = 0
    var _googleProtobufInt32Value: Int32 = 0
    var _googleProtobufInt64Value: Int32 = 0
    var _googleProtobufListValue: Int32 = 0
    var _googleProtobufMessageOptions: Int32 = 0
    var _googleProtobufMethod: Int32 = 0
    var _googleProtobufMethodDescriptorProto: Int32 = 0
    var _googleProtobufMethodOptions: Int32 = 0
    var _googleProtobufMixin: Int32 = 0
    var _googleProtobufNullValue: Int32 = 0
    var _googleProtobufOneofDescriptorProto: Int32 = 0
    var _googleProtobufOneofOptions: Int32 = 0
    var _googleProtobufOption: Int32 = 0
    var _googleProtobufServiceDescriptorProto: Int32 = 0
    var _googleProtobufServiceOptions: Int32 = 0
    var _googleProtobufSourceCodeInfo: Int32 = 0
    var _googleProtobufSourceContext: Int32 = 0
    var _googleProtobufStringValue: Int32 = 0
    var _googleProtobufStruct: Int32 = 0
    var _googleProtobufSyntax: Int32 = 0
    var _googleProtobufTimestamp: Int32 = 0
    var _googleProtobufType: Int32 = 0
    var _googleProtobufUint32Value: Int32 = 0
    var _googleProtobufUint64Value: Int32 = 0
    var _googleProtobufUninterpretedOption: Int32 = 0
    var _googleProtobufValue: Int32 = 0
    var _goPackage: Int32 = 0
    var _group: Int32 = 0
    var _groupFieldNumberStack: Int32 = 0
    var _groupSize: Int32 = 0
    var _hadOneofValue: Int32 = 0
    var _handleConflictingOneOf: Int32 = 0
    var _hasAggregateValue_p: Int32 = 0
    var _hasAllowAlias_p: Int32 = 0
    var _hasBegin_p: Int32 = 0
    var _hasCcEnableArenas_p: Int32 = 0
    var _hasCcGenericServices_p: Int32 = 0
    var _hasClientStreaming_p: Int32 = 0
    var _hasCsharpNamespace_p: Int32 = 0
    var _hasCtype_p: Int32 = 0
    var _hasDebugRedact_p: Int32 = 0
    var _hasDefaultValue_p: Int32 = 0
    var _hasDeprecated_p: Int32 = 0
    var _hasDeprecatedLegacyJsonFieldConflicts_p: Int32 = 0
    var _hasDoubleValue_p: Int32 = 0
    var _hasEdition_p: Int32 = 0
    var _hasEnd_p: Int32 = 0
    var _hasEnumType_p: Int32 = 0
    var _hasExtendee_p: Int32 = 0
    var _hasExtensionValue_p: Int32 = 0
    var _hasFeatures_p: Int32 = 0
    var _hasFieldPresence_p: Int32 = 0
    var _hasFullName_p: Int32 = 0
    var _hasGoPackage_p: Int32 = 0
    var _hash: Int32 = 0
    var _hashable: Int32 = 0
    var _hasher: Int32 = 0
    var _hashVisitor: Int32 = 0
    var _hasIdempotencyLevel_p: Int32 = 0
    var _hasIdentifierValue_p: Int32 = 0
    var _hasInputType_p: Int32 = 0
    var _hasIsExtension_p: Int32 = 0
    var _hasJavaGenerateEqualsAndHash_p: Int32 = 0
    var _hasJavaGenericServices_p: Int32 = 0
    var _hasJavaMultipleFiles_p: Int32 = 0
    var _hasJavaOuterClassname_p: Int32 = 0
    var _hasJavaPackage_p: Int32 = 0
    var _hasJavaStringCheckUtf8_p: Int32 = 0
    var _hasJsonFormat_p: Int32 = 0
    var _hasJsonName_p: Int32 = 0
    var _hasJstype_p: Int32 = 0
    var _hasLabel_p: Int32 = 0
    var _hasLazy_p: Int32 = 0
    var _hasLeadingComments_p: Int32 = 0
    var _hasMapEntry_p: Int32 = 0
    var _hasMaximumEdition_p: Int32 = 0
    var _hasMessageEncoding_p: Int32 = 0
    var _hasMessageSetWireFormat_p: Int32 = 0
    var _hasMinimumEdition_p: Int32 = 0
    var _hasName_p: Int32 = 0
    var _hasNamePart_p: Int32 = 0
    var _hasNegativeIntValue_p: Int32 = 0
    var _hasNoStandardDescriptorAccessor_p: Int32 = 0
    var _hasNumber_p: Int32 = 0
    var _hasObjcClassPrefix_p: Int32 = 0
    var _hasOneofIndex_p: Int32 = 0
    var _hasOptimizeFor_p: Int32 = 0
    var _hasOptions_p: Int32 = 0
    var _hasOutputType_p: Int32 = 0
    var _hasPackage_p: Int32 = 0
    var _hasPacked_p: Int32 = 0
    var _hasPhpClassPrefix_p: Int32 = 0
    var _hasPhpGenericServices_p: Int32 = 0
    var _hasPhpMetadataNamespace_p: Int32 = 0
    var _hasPhpNamespace_p: Int32 = 0
    var _hasPositiveIntValue_p: Int32 = 0
    var _hasProto3Optional_p: Int32 = 0
    var _hasPyGenericServices_p: Int32 = 0
    var _hasRepeated_p: Int32 = 0
    var _hasRepeatedFieldEncoding_p: Int32 = 0
    var _hasReserved_p: Int32 = 0
    var _hasRetention_p: Int32 = 0
    var _hasRubyPackage_p: Int32 = 0
    var _hasSemantic_p: Int32 = 0
    var _hasServerStreaming_p: Int32 = 0
    var _hasSourceCodeInfo_p: Int32 = 0
    var _hasSourceContext_p: Int32 = 0
    var _hasSourceFile_p: Int32 = 0
    var _hasStart_p: Int32 = 0
    var _hasStringValue_p: Int32 = 0
    var _hasSwiftPrefix_p: Int32 = 0
    var _hasSyntax_p: Int32 = 0
    var _hasTrailingComments_p: Int32 = 0
    var _hasType_p: Int32 = 0
    var _hasTypeName_p: Int32 = 0
    var _hasUnverifiedLazy_p: Int32 = 0
    var _hasUtf8Validation_p: Int32 = 0
    var _hasValue_p: Int32 = 0
    var _hasVerification_p: Int32 = 0
    var _hasWeak_p: Int32 = 0
    var _hour: Int32 = 0
    var _i: Int32 = 0
    var _idempotencyLevel: Int32 = 0
    var _identifierValue: Int32 = 0
    var _if: Int32 = 0
    var _ignoreUnknownFields: Int32 = 0
    var _index: Int32 = 0
    var _init_p: Int32 = 0
    var _inout: Int32 = 0
    var _inputType: Int32 = 0
    var _insert: Int32 = 0
    var _int: Int32 = 0
    var _int32: Int32 = 0
    var _int32Value: Int32 = 0
    var _int64: Int32 = 0
    var _int64Value: Int32 = 0
    var _int8: Int32 = 0
    var _integerLiteral: Int32 = 0
    var _integerLiteralType: Int32 = 0
    var _intern: Int32 = 0
    var _internal: Int32 = 0
    var _internalState: Int32 = 0
    var _into: Int32 = 0
    var _ints: Int32 = 0
    var _isA: Int32 = 0
    var _isEqual: Int32 = 0
    var _isEqualTo: Int32 = 0
    var _isExtension: Int32 = 0
    var _isInitialized_p: Int32 = 0
    var _isNegative: Int32 = 0
    var _isUnset: Int32 = 0
    var _itemTagsEncodedSize: Int32 = 0
    var _iterator: Int32 = 0
    var _javaGenerateEqualsAndHash: Int32 = 0
    var _javaGenericServices: Int32 = 0
    var _javaMultipleFiles: Int32 = 0
    var _javaOuterClassname: Int32 = 0
    var _javaPackage: Int32 = 0
    var _javaStringCheckUtf8: Int32 = 0
    var _jsondecoder: Int32 = 0
    var _jsondecodingError: Int32 = 0
    var _jsondecodingOptions: Int32 = 0
    var _jsonEncoder: Int32 = 0
    var _jsonencodingError: Int32 = 0
    var _jsonencodingOptions: Int32 = 0
    var _jsonencodingVisitor: Int32 = 0
    var _jsonFormat: Int32 = 0
    var _jsonmapEncodingVisitor: Int32 = 0
    var _jsonName: Int32 = 0
    var _jsonPath: Int32 = 0
    var _jsonPaths: Int32 = 0
    var _jsonscanner: Int32 = 0
    var _jsonString: Int32 = 0
    var _jsonText: Int32 = 0
    var _jsonUtf8Bytes: Int32 = 0
    var _jsonUtf8Data: Int32 = 0
    var _jstype: Int32 = 0
    var _k: Int32 = 0
    var _kChunkSize: Int32 = 0
    var _key: Int32 = 0
    var _keyField: Int32 = 0
    var _keyFieldOpt: Int32 = 0
    var _keyType: Int32 = 0
    var _kind: Int32 = 0
    var _l: Int32 = 0
    var _label: Int32 = 0
    var _lazy: Int32 = 0
    var _leadingComments: Int32 = 0
    var _leadingDetachedComments: Int32 = 0
    var _length: Int32 = 0
    var _lessThan: Int32 = 0
    var _let: Int32 = 0
    var _lhs: Int32 = 0
    var _list: Int32 = 0
    var _listOfMessages: Int32 = 0
    var _listValue: Int32 = 0
    var _littleEndian: Int32 = 0
    var _littleEndianBytes: Int32 = 0
    var _load: Int32 = 0
    var _localHasher: Int32 = 0
    var _location: Int32 = 0
    var _m: Int32 = 0
    var _major: Int32 = 0
    var _makeAsyncIterator: Int32 = 0
    var _makeIterator: Int32 = 0
    var _map: Int32 = 0
    var _mapEntry: Int32 = 0
    var _mapKeyType: Int32 = 0
    var _mapToMessages: Int32 = 0
    var _mapValueType: Int32 = 0
    var _mapVisitor: Int32 = 0
    var _maximumEdition: Int32 = 0
    var _mdayStart: Int32 = 0
    var _merge: Int32 = 0
    var _message: Int32 = 0
    var _messageDepthLimit: Int32 = 0
    var _messageEncoding: Int32 = 0
    var _messageExtension: Int32 = 0
    var _messageImplementationBase: Int32 = 0
    var _messageOptions: Int32 = 0
    var _messageSet: Int32 = 0
    var _messageSetWireFormat: Int32 = 0
    var _messageSize: Int32 = 0
    var _messageType: Int32 = 0
    var _method: Int32 = 0
    var _methodDescriptorProto: Int32 = 0
    var _methodOptions: Int32 = 0
    var _methods: Int32 = 0
    var _min: Int32 = 0
    var _minimumEdition: Int32 = 0
    var _minor: Int32 = 0
    var _mixin: Int32 = 0
    var _mixins: Int32 = 0
    var _modifier: Int32 = 0
    var _modify: Int32 = 0
    var _month: Int32 = 0
    var _msgExtension: Int32 = 0
    var _mutating: Int32 = 0
    var _n: Int32 = 0
    var _name: Int32 = 0
    var _nameDescription: Int32 = 0
    var _nameMap: Int32 = 0
    var _namePart: Int32 = 0
    var _names: Int32 = 0
    var _nanos: Int32 = 0
    var _negativeIntValue: Int32 = 0
    var _nestedType: Int32 = 0
    var _newL: Int32 = 0
    var _newList: Int32 = 0
    var _newValue: Int32 = 0
    var _next: Int32 = 0
    var _nextByte: Int32 = 0
    var _nextFieldNumber: Int32 = 0
    var _nextVarInt: Int32 = 0
    var _nil: Int32 = 0
    var _nilLiteral: Int32 = 0
    var _noStandardDescriptorAccessor: Int32 = 0
    var _nullValue: Int32 = 0
    var _number: Int32 = 0
    var _numberValue: Int32 = 0
    var _objcClassPrefix: Int32 = 0
    var _of: Int32 = 0
    var _oneOf: Int32 = 0
    var _oneofDecl: Int32 = 0
    var _oneofDescriptorProto: Int32 = 0
    var _oneofIndex: Int32 = 0
    var _oneofOptions: Int32 = 0
    var _oneofs: Int32 = 0
    var _oneOfKind: Int32 = 0
    var _optimizeFor: Int32 = 0
    var _optimizeMode: Int32 = 0
    var _option: Int32 = 0
    var _optionalEnumExtensionField: Int32 = 0
    var _optionalExtensionField: Int32 = 0
    var _optionalGroupExtensionField: Int32 = 0
    var _optionalMessageExtensionField: Int32 = 0
    var _optionRetention: Int32 = 0
    var _options: Int32 = 0
    var _optionTargetType: Int32 = 0
    var _other: Int32 = 0
    var _others: Int32 = 0
    var _out: Int32 = 0
    var _outputType: Int32 = 0
    var _p: Int32 = 0
    var _package: Int32 = 0
    var _packed: Int32 = 0
    var _packedBool: Int32 = 0
    var _packedDouble: Int32 = 0
    var _packedEnum: Int32 = 0
    var _packedEnumExtensionField: Int32 = 0
    var _packedExtensionField: Int32 = 0
    var _packedFixed32: Int32 = 0
    var _packedFixed64: Int32 = 0
    var _packedFloat: Int32 = 0
    var _packedInt32: Int32 = 0
    var _packedInt64: Int32 = 0
    var _packedSfixed32: Int32 = 0
    var _packedSfixed64: Int32 = 0
    var _packedSint32: Int32 = 0
    var _packedSint64: Int32 = 0
    var _packedUint32: Int32 = 0
    var _packedUint64: Int32 = 0
    var _padding: Int32 = 0
    var _parent: Int32 = 0
    var _parse: Int32 = 0
    var _path: Int32 = 0
    var _paths: Int32 = 0
    var _payload: Int32 = 0
    var _payloadSize: Int32 = 0
    var _phpClassPrefix: Int32 = 0
    var _phpGenericServices: Int32 = 0
    var _phpMetadataNamespace: Int32 = 0
    var _phpNamespace: Int32 = 0
    var _pos: Int32 = 0
    var _positiveIntValue: Int32 = 0
    var _prefix: Int32 = 0
    var _preserveProtoFieldNames: Int32 = 0
    var _preTraverse: Int32 = 0
    var _printUnknownFields: Int32 = 0
    var _proto2: Int32 = 0
    var _proto3DefaultValue: Int32 = 0
    var _proto3Optional: Int32 = 0
    var _protobufApiversionCheck: Int32 = 0
    var _protobufApiversion3: Int32 = 0
    var _protobufBool: Int32 = 0
    var _protobufBytes: Int32 = 0
    var _protobufDouble: Int32 = 0
    var _protobufEnumMap: Int32 = 0
    var _protobufExtension: Int32 = 0
    var _protobufFixed32: Int32 = 0
    var _protobufFixed64: Int32 = 0
    var _protobufFloat: Int32 = 0
    var _protobufInt32: Int32 = 0
    var _protobufInt64: Int32 = 0
    var _protobufMap: Int32 = 0
    var _protobufMessageMap: Int32 = 0
    var _protobufSfixed32: Int32 = 0
    var _protobufSfixed64: Int32 = 0
    var _protobufSint32: Int32 = 0
    var _protobufSint64: Int32 = 0
    var _protobufString: Int32 = 0
    var _protobufUint32: Int32 = 0
    var _protobufUint64: Int32 = 0
    var _protobufExtensionFieldValues: Int32 = 0
    var _protobufFieldNumber: Int32 = 0
    var _protobufGeneratedIsEqualTo: Int32 = 0
    var _protobufNameMap: Int32 = 0
    var _protobufNewField: Int32 = 0
    var _protobufPackage: Int32 = 0
    var _protocol: Int32 = 0
    var _protoFieldName: Int32 = 0
    var _protoMessageName: Int32 = 0
    var _protoNameProviding: Int32 = 0
    var _protoPaths: Int32 = 0
    var _public: Int32 = 0
    var _publicDependency: Int32 = 0
    var _putBoolValue: Int32 = 0
    var _putBytesValue: Int32 = 0
    var _putDoubleValue: Int32 = 0
    var _putEnumValue: Int32 = 0
    var _putFixedUint32: Int32 = 0
    var _putFixedUint64: Int32 = 0
    var _putFloatValue: Int32 = 0
    var _putInt64: Int32 = 0
    var _putStringValue: Int32 = 0
    var _putUint64: Int32 = 0
    var _putUint64Hex: Int32 = 0
    var _putVarInt: Int32 = 0
    var _putZigZagVarInt: Int32 = 0
    var _pyGenericServices: Int32 = 0
    var _r: Int32 = 0
    var _rawChars: Int32 = 0
    var _rawRepresentable: Int32 = 0
    var _rawValue: Int32 = 0
    var _read4HexDigits: Int32 = 0
    var _readBytes: Int32 = 0
    var _register: Int32 = 0
    var _repeated: Int32 = 0
    var _repeatedBool: Int32 = 0
    var _repeatedBytes: Int32 = 0
    var _repeatedDouble: Int32 = 0
    var _repeatedEnum: Int32 = 0
    var _repeatedEnumExtensionField: Int32 = 0
    var _repeatedExtensionField: Int32 = 0
    var _repeatedFieldEncoding: Int32 = 0
    var _repeatedFixed32: Int32 = 0
    var _repeatedFixed64: Int32 = 0
    var _repeatedFloat: Int32 = 0
    var _repeatedGroup: Int32 = 0
    var _repeatedGroupExtensionField: Int32 = 0
    var _repeatedInt32: Int32 = 0
    var _repeatedInt64: Int32 = 0
    var _repeatedMessage: Int32 = 0
    var _repeatedMessageExtensionField: Int32 = 0
    var _repeatedSfixed32: Int32 = 0
    var _repeatedSfixed64: Int32 = 0
    var _repeatedSint32: Int32 = 0
    var _repeatedSint64: Int32 = 0
    var _repeatedString: Int32 = 0
    var _repeatedUint32: Int32 = 0
    var _repeatedUint64: Int32 = 0
    var _repeating: Int32 = 0
    var _requestStreaming: Int32 = 0
    var _requestTypeURL: Int32 = 0
    var _requiredSize: Int32 = 0
    var _responseStreaming: Int32 = 0
    var _responseTypeURL: Int32 = 0
    var _result: Int32 = 0
    var _retention: Int32 = 0
    var _rethrows: Int32 = 0
    var _return: Int32 = 0
    var _returnType: Int32 = 0
    var _revision: Int32 = 0
    var _rhs: Int32 = 0
    var _root: Int32 = 0
    var _rubyPackage: Int32 = 0
    var _s: Int32 = 0
    var _sawBackslash: Int32 = 0
    var _sawSection4Characters: Int32 = 0
    var _sawSection5Characters: Int32 = 0
    var _scanner: Int32 = 0
    var _seconds: Int32 = 0
    var _self_p: Int32 = 0
    var _semantic: Int32 = 0
    var _sendable: Int32 = 0
    var _separator: Int32 = 0
    var _serialize: Int32 = 0
    var _serializedBytes: Int32 = 0
    var _serializedData: Int32 = 0
    var _serializedSize: Int32 = 0
    var _serverStreaming: Int32 = 0
    var _service: Int32 = 0
    var _serviceDescriptorProto: Int32 = 0
    var _serviceOptions: Int32 = 0
    var _set: Int32 = 0
    var _setExtensionValue: Int32 = 0
    var _shift: Int32 = 0
    var _simpleExtensionMap: Int32 = 0
    var _singularBool: Int32 = 0
    var _singularBytes: Int32 = 0
    var _singularDouble: Int32 = 0
    var _singularEnum: Int32 = 0
    var _singularFixed32: Int32 = 0
    var _singularFixed64: Int32 = 0
    var _singularFloat: Int32 = 0
    var _singularGroup: Int32 = 0
    var _singularInt32: Int32 = 0
    var _singularInt64: Int32 = 0
    var _singularMessage: Int32 = 0
    var _singularSfixed32: Int32 = 0
    var _singularSfixed64: Int32 = 0
    var _singularSint32: Int32 = 0
    var _singularSint64: Int32 = 0
    var _singularString: Int32 = 0
    var _singularUint32: Int32 = 0
    var _singularUint64: Int32 = 0
    var _size: Int32 = 0
    var _sizer: Int32 = 0
    var _source: Int32 = 0
    var _sourceCodeInfo: Int32 = 0
    var _sourceContext: Int32 = 0
    var _sourceEncoding: Int32 = 0
    var _sourceFile: Int32 = 0
    var _span: Int32 = 0
    var _split: Int32 = 0
    var _start: Int32 = 0
    var _startArray: Int32 = 0
    var _startArrayObject: Int32 = 0
    var _startField: Int32 = 0
    var _startIndex: Int32 = 0
    var _startMessageField: Int32 = 0
    var _startObject: Int32 = 0
    var _startRegularField: Int32 = 0
    var _state: Int32 = 0
    var _static: Int32 = 0
    var _staticString: Int32 = 0
    var _storage: Int32 = 0
    var _string: Int32 = 0
    var _stringLiteral: Int32 = 0
    var _stringLiteralType: Int32 = 0
    var _stringResult: Int32 = 0
    var _stringValue: Int32 = 0
    var _struct: Int32 = 0
    var _structValue: Int32 = 0
    var _subDecoder: Int32 = 0
    var _subscript: Int32 = 0
    var _subVisitor: Int32 = 0
    var _swift: Int32 = 0
    var _swiftPrefix: Int32 = 0
    var _swiftProtobufContiguousBytes: Int32 = 0
    var _syntax: Int32 = 0
    var _t: Int32 = 0
    var _tag: Int32 = 0
    var _targets: Int32 = 0
    var _terminator: Int32 = 0
    var _testDecoder: Int32 = 0
    var _text: Int32 = 0
    var _textDecoder: Int32 = 0
    var _textFormatDecoder: Int32 = 0
    var _textFormatDecodingError: Int32 = 0
    var _textFormatDecodingOptions: Int32 = 0
    var _textFormatEncodingOptions: Int32 = 0
    var _textFormatEncodingVisitor: Int32 = 0
    var _textFormatString: Int32 = 0
    var _throwOrIgnore: Int32 = 0
    var _throws: Int32 = 0
    var _timeInterval: Int32 = 0
    var _timeIntervalSince1970: Int32 = 0
    var _timeIntervalSinceReferenceDate: Int32 = 0
    var _timestamp: Int32 = 0
    var _toConcrete: Int32 = 0
    var _total: Int32 = 0
    var _totalArrayDepth: Int32 = 0
    var _totalSize: Int32 = 0
    var _trailingComments: Int32 = 0
    var _traverse: Int32 = 0
    var _true: Int32 = 0
    var _try: Int32 = 0
    var _type: Int32 = 0
    var _typealias: Int32 = 0
    var _typeEnum: Int32 = 0
    var _typeName: Int32 = 0
    var _typePrefix: Int32 = 0
    var _typeStart: Int32 = 0
    var _typeUnknown: Int32 = 0
    var _typeURL: Int32 = 0
    var _uint32: Int32 = 0
    var _uint32Value: Int32 = 0
    var _uint64: Int32 = 0
    var _uint64Value: Int32 = 0
    var _uint8: Int32 = 0
    var _unchecked: Int32 = 0
    var _unicodeScalarLiteral: Int32 = 0
    var _unicodeScalarLiteralType: Int32 = 0
    var _unicodeScalars: Int32 = 0
    var _unicodeScalarView: Int32 = 0
    var _uninterpretedOption: Int32 = 0
    var _union: Int32 = 0
    var _uniqueStorage: Int32 = 0
    var _unknown: Int32 = 0
    var _unknownFields_p: Int32 = 0
    var _unknownStorage: Int32 = 0
    var _unpackTo: Int32 = 0
    var _unsafeBufferPointer: Int32 = 0
    var _unsafeMutablePointer: Int32 = 0
    var _unsafeMutableRawBufferPointer: Int32 = 0
    var _unsafeRawBufferPointer: Int32 = 0
    var _unsafeRawPointer: Int32 = 0
    var _unverifiedLazy: Int32 = 0
    var _updatedOptions: Int32 = 0
    var _url: Int32 = 0
    var _useDeterministicOrdering: Int32 = 0
    var _utf8: Int32 = 0
    var _utf8Ptr: Int32 = 0
    var _utf8ToDouble: Int32 = 0
    var _utf8Validation: Int32 = 0
    var _utf8View: Int32 = 0
    var _v: Int32 = 0
    var _value: Int32 = 0
    var _valueField: Int32 = 0
    var _values: Int32 = 0
    var _valueType: Int32 = 0
    var _var: Int32 = 0
    var _verification: Int32 = 0
    var _verificationState: Int32 = 0
    var _version: Int32 = 0
    var _versionString: Int32 = 0
    var _visitExtensionFields: Int32 = 0
    var _visitExtensionFieldsAsMessageSet: Int32 = 0
    var _visitMapField: Int32 = 0
    var _visitor: Int32 = 0
    var _visitPacked: Int32 = 0
    var _visitPackedBoolField: Int32 = 0
    var _visitPackedDoubleField: Int32 = 0
    var _visitPackedEnumField: Int32 = 0
    var _visitPackedFixed32Field: Int32 = 0
    var _visitPackedFixed64Field: Int32 = 0
    var _visitPackedFloatField: Int32 = 0
    var _visitPackedInt32Field: Int32 = 0
    var _visitPackedInt64Field: Int32 = 0
    var _visitPackedSfixed32Field: Int32 = 0
    var _visitPackedSfixed64Field: Int32 = 0
    var _visitPackedSint32Field: Int32 = 0
    var _visitPackedSint64Field: Int32 = 0
    var _visitPackedUint32Field: Int32 = 0
    var _visitPackedUint64Field: Int32 = 0
    var _visitRepeated: Int32 = 0
    var _visitRepeatedBoolField: Int32 = 0
    var _visitRepeatedBytesField: Int32 = 0
    var _visitRepeatedDoubleField: Int32 = 0
    var _visitRepeatedEnumField: Int32 = 0
    var _visitRepeatedFixed32Field: Int32 = 0
    var _visitRepeatedFixed64Field: Int32 = 0
    var _visitRepeatedFloatField: Int32 = 0
    var _visitRepeatedGroupField: Int32 = 0
    var _visitRepeatedInt32Field: Int32 = 0
    var _visitRepeatedInt64Field: Int32 = 0
    var _visitRepeatedMessageField: Int32 = 0
    var _visitRepeatedSfixed32Field: Int32 = 0
    var _visitRepeatedSfixed64Field: Int32 = 0
    var _visitRepeatedSint32Field: Int32 = 0
    var _visitRepeatedSint64Field: Int32 = 0
    var _visitRepeatedStringField: Int32 = 0
    var _visitRepeatedUint32Field: Int32 = 0
    var _visitRepeatedUint64Field: Int32 = 0
    var _visitSingular: Int32 = 0
    var _visitSingularBoolField: Int32 = 0
    var _visitSingularBytesField: Int32 = 0
    var _visitSingularDoubleField: Int32 = 0
    var _visitSingularEnumField: Int32 = 0
    var _visitSingularFixed32Field: Int32 = 0
    var _visitSingularFixed64Field: Int32 = 0
    var _visitSingularFloatField: Int32 = 0
    var _visitSingularGroupField: Int32 = 0
    var _visitSingularInt32Field: Int32 = 0
    var _visitSingularInt64Field: Int32 = 0
    var _visitSingularMessageField: Int32 = 0
    var _visitSingularSfixed32Field: Int32 = 0
    var _visitSingularSfixed64Field: Int32 = 0
    var _visitSingularSint32Field: Int32 = 0
    var _visitSingularSint64Field: Int32 = 0
    var _visitSingularStringField: Int32 = 0
    var _visitSingularUint32Field: Int32 = 0
    var _visitSingularUint64Field: Int32 = 0
    var _visitUnknown: Int32 = 0
    var _wasDecoded: Int32 = 0
    var _weak: Int32 = 0
    var _weakDependency: Int32 = 0
    var _where: Int32 = 0
    var _wireFormat: Int32 = 0
    var _with: Int32 = 0
    var _withUnsafeBytes: Int32 = 0
    var _withUnsafeMutableBytes: Int32 = 0
    var _work: Int32 = 0
    var _wrapped: Int32 = 0
    var _wrappedType: Int32 = 0
    var _wrappedValue: Int32 = 0
    var _written: Int32 = 0
    var _yday: Int32 = 0

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _adjusted = source._adjusted
      _aggregateValue = source._aggregateValue
      _allCases = source._allCases
      _allowAlias = source._allowAlias
      _alwaysPrintEnumsAsInts = source._alwaysPrintEnumsAsInts
      _alwaysPrintInt64SAsNumbers = source._alwaysPrintInt64SAsNumbers
      _annotation = source._annotation
      _any = source._any
      _anyExtensionField = source._anyExtensionField
      _anyMessageExtension = source._anyMessageExtension
      _anyMessageStorage = source._anyMessageStorage
      _anyUnpackError = source._anyUnpackError
      _api = source._api
      _appended = source._appended
      _appendUintHex = source._appendUintHex
      _appendUnknown = source._appendUnknown
      _areAllInitialized = source._areAllInitialized
      _array = source._array
      _arrayDepth = source._arrayDepth
      _arrayLiteral = source._arrayLiteral
      _arraySeparator = source._arraySeparator
      _as = source._as
      _asciiOpenCurlyBracket = source._asciiOpenCurlyBracket
      _asciiZero = source._asciiZero
      _async = source._async
      _asyncIterator = source._asyncIterator
      _asyncIteratorProtocol = source._asyncIteratorProtocol
      _asyncMessageSequence = source._asyncMessageSequence
      _available = source._available
      _b = source._b
      _base = source._base
      _base64Values = source._base64Values
      _baseAddress = source._baseAddress
      _baseType = source._baseType
      _begin = source._begin
      _binary = source._binary
      _binaryDecoder = source._binaryDecoder
      _binaryDecodingError = source._binaryDecodingError
      _binaryDecodingOptions = source._binaryDecodingOptions
      _binaryDelimited = source._binaryDelimited
      _binaryEncoder = source._binaryEncoder
      _binaryEncodingError = source._binaryEncodingError
      _binaryEncodingMessageSetSizeVisitor = source._binaryEncodingMessageSetSizeVisitor
      _binaryEncodingMessageSetVisitor = source._binaryEncodingMessageSetVisitor
      _binaryEncodingOptions = source._binaryEncodingOptions
      _binaryEncodingSizeVisitor = source._binaryEncodingSizeVisitor
      _binaryEncodingVisitor = source._binaryEncodingVisitor
      _binaryOptions = source._binaryOptions
      _binaryProtobufDelimitedMessages = source._binaryProtobufDelimitedMessages
      _bitPattern = source._bitPattern
      _body = source._body
      _bool = source._bool
      _booleanLiteral = source._booleanLiteral
      _booleanLiteralType = source._booleanLiteralType
      _boolValue = source._boolValue
      _buffer = source._buffer
      _bytes = source._bytes
      _bytesInGroup = source._bytesInGroup
      _bytesNeeded = source._bytesNeeded
      _bytesRead = source._bytesRead
      _bytesValue = source._bytesValue
      _c = source._c
      _capitalizeNext = source._capitalizeNext
      _cardinality = source._cardinality
      _caseIterable = source._caseIterable
      _ccEnableArenas = source._ccEnableArenas
      _ccGenericServices = source._ccGenericServices
      _character = source._character
      _chars = source._chars
      _chunk = source._chunk
      _class = source._class
      _clearAggregateValue_p = source._clearAggregateValue_p
      _clearAllowAlias_p = source._clearAllowAlias_p
      _clearBegin_p = source._clearBegin_p
      _clearCcEnableArenas_p = source._clearCcEnableArenas_p
      _clearCcGenericServices_p = source._clearCcGenericServices_p
      _clearClientStreaming_p = source._clearClientStreaming_p
      _clearCsharpNamespace_p = source._clearCsharpNamespace_p
      _clearCtype_p = source._clearCtype_p
      _clearDebugRedact_p = source._clearDebugRedact_p
      _clearDefaultValue_p = source._clearDefaultValue_p
      _clearDeprecated_p = source._clearDeprecated_p
      _clearDeprecatedLegacyJsonFieldConflicts_p = source._clearDeprecatedLegacyJsonFieldConflicts_p
      _clearDoubleValue_p = source._clearDoubleValue_p
      _clearEdition_p = source._clearEdition_p
      _clearEnd_p = source._clearEnd_p
      _clearEnumType_p = source._clearEnumType_p
      _clearExtendee_p = source._clearExtendee_p
      _clearExtensionValue_p = source._clearExtensionValue_p
      _clearFeatures_p = source._clearFeatures_p
      _clearFieldPresence_p = source._clearFieldPresence_p
      _clearFullName_p = source._clearFullName_p
      _clearGoPackage_p = source._clearGoPackage_p
      _clearIdempotencyLevel_p = source._clearIdempotencyLevel_p
      _clearIdentifierValue_p = source._clearIdentifierValue_p
      _clearInputType_p = source._clearInputType_p
      _clearIsExtension_p = source._clearIsExtension_p
      _clearJavaGenerateEqualsAndHash_p = source._clearJavaGenerateEqualsAndHash_p
      _clearJavaGenericServices_p = source._clearJavaGenericServices_p
      _clearJavaMultipleFiles_p = source._clearJavaMultipleFiles_p
      _clearJavaOuterClassname_p = source._clearJavaOuterClassname_p
      _clearJavaPackage_p = source._clearJavaPackage_p
      _clearJavaStringCheckUtf8_p = source._clearJavaStringCheckUtf8_p
      _clearJsonFormat_p = source._clearJsonFormat_p
      _clearJsonName_p = source._clearJsonName_p
      _clearJstype_p = source._clearJstype_p
      _clearLabel_p = source._clearLabel_p
      _clearLazy_p = source._clearLazy_p
      _clearLeadingComments_p = source._clearLeadingComments_p
      _clearMapEntry_p = source._clearMapEntry_p
      _clearMaximumEdition_p = source._clearMaximumEdition_p
      _clearMessageEncoding_p = source._clearMessageEncoding_p
      _clearMessageSetWireFormat_p = source._clearMessageSetWireFormat_p
      _clearMinimumEdition_p = source._clearMinimumEdition_p
      _clearName_p = source._clearName_p
      _clearNamePart_p = source._clearNamePart_p
      _clearNegativeIntValue_p = source._clearNegativeIntValue_p
      _clearNoStandardDescriptorAccessor_p = source._clearNoStandardDescriptorAccessor_p
      _clearNumber_p = source._clearNumber_p
      _clearObjcClassPrefix_p = source._clearObjcClassPrefix_p
      _clearOneofIndex_p = source._clearOneofIndex_p
      _clearOptimizeFor_p = source._clearOptimizeFor_p
      _clearOptions_p = source._clearOptions_p
      _clearOutputType_p = source._clearOutputType_p
      _clearPackage_p = source._clearPackage_p
      _clearPacked_p = source._clearPacked_p
      _clearPhpClassPrefix_p = source._clearPhpClassPrefix_p
      _clearPhpGenericServices_p = source._clearPhpGenericServices_p
      _clearPhpMetadataNamespace_p = source._clearPhpMetadataNamespace_p
      _clearPhpNamespace_p = source._clearPhpNamespace_p
      _clearPositiveIntValue_p = source._clearPositiveIntValue_p
      _clearProto3Optional_p = source._clearProto3Optional_p
      _clearPyGenericServices_p = source._clearPyGenericServices_p
      _clearRepeated_p = source._clearRepeated_p
      _clearRepeatedFieldEncoding_p = source._clearRepeatedFieldEncoding_p
      _clearReserved_p = source._clearReserved_p
      _clearRetention_p = source._clearRetention_p
      _clearRubyPackage_p = source._clearRubyPackage_p
      _clearSemantic_p = source._clearSemantic_p
      _clearServerStreaming_p = source._clearServerStreaming_p
      _clearSourceCodeInfo_p = source._clearSourceCodeInfo_p
      _clearSourceContext_p = source._clearSourceContext_p
      _clearSourceFile_p = source._clearSourceFile_p
      _clearStart_p = source._clearStart_p
      _clearStringValue_p = source._clearStringValue_p
      _clearSwiftPrefix_p = source._clearSwiftPrefix_p
      _clearSyntax_p = source._clearSyntax_p
      _clearTrailingComments_p = source._clearTrailingComments_p
      _clearType_p = source._clearType_p
      _clearTypeName_p = source._clearTypeName_p
      _clearUnverifiedLazy_p = source._clearUnverifiedLazy_p
      _clearUtf8Validation_p = source._clearUtf8Validation_p
      _clearValue_p = source._clearValue_p
      _clearVerification_p = source._clearVerification_p
      _clearWeak_p = source._clearWeak_p
      _clientStreaming = source._clientStreaming
      _codePoint = source._codePoint
      _codeUnits = source._codeUnits
      _collection = source._collection
      _com = source._com
      _comma = source._comma
      _commonMessageConformances = source._commonMessageConformances
      _consumedBytes = source._consumedBytes
      _contentsOf = source._contentsOf
      _count = source._count
      _countVarintsInBuffer = source._countVarintsInBuffer
      _csharpNamespace = source._csharpNamespace
      _ctype = source._ctype
      _customCodable = source._customCodable
      _d = source._d
      _data = source._data
      _dataResult = source._dataResult
      _date = source._date
      _daySec = source._daySec
      _daysSinceEpoch = source._daysSinceEpoch
      _debugDescription_p = source._debugDescription_p
      _debugRedact = source._debugRedact
      _declaration = source._declaration
      _decoded = source._decoded
      _decodedFromJsonnull = source._decodedFromJsonnull
      _decodeExtensionField = source._decodeExtensionField
      _decodeExtensionFieldsAsMessageSet = source._decodeExtensionFieldsAsMessageSet
      _decodeJson = source._decodeJson
      _decodeMapField = source._decodeMapField
      _decodeMessage = source._decodeMessage
      _decoder = source._decoder
      _decodeRepeated = source._decodeRepeated
      _decodeRepeatedBoolField = source._decodeRepeatedBoolField
      _decodeRepeatedBytesField = source._decodeRepeatedBytesField
      _decodeRepeatedDoubleField = source._decodeRepeatedDoubleField
      _decodeRepeatedEnumField = source._decodeRepeatedEnumField
      _decodeRepeatedFixed32Field = source._decodeRepeatedFixed32Field
      _decodeRepeatedFixed64Field = source._decodeRepeatedFixed64Field
      _decodeRepeatedFloatField = source._decodeRepeatedFloatField
      _decodeRepeatedGroupField = source._decodeRepeatedGroupField
      _decodeRepeatedInt32Field = source._decodeRepeatedInt32Field
      _decodeRepeatedInt64Field = source._decodeRepeatedInt64Field
      _decodeRepeatedMessageField = source._decodeRepeatedMessageField
      _decodeRepeatedSfixed32Field = source._decodeRepeatedSfixed32Field
      _decodeRepeatedSfixed64Field = source._decodeRepeatedSfixed64Field
      _decodeRepeatedSint32Field = source._decodeRepeatedSint32Field
      _decodeRepeatedSint64Field = source._decodeRepeatedSint64Field
      _decodeRepeatedStringField = source._decodeRepeatedStringField
      _decodeRepeatedUint32Field = source._decodeRepeatedUint32Field
      _decodeRepeatedUint64Field = source._decodeRepeatedUint64Field
      _decodeSingular = source._decodeSingular
      _decodeSingularBoolField = source._decodeSingularBoolField
      _decodeSingularBytesField = source._decodeSingularBytesField
      _decodeSingularDoubleField = source._decodeSingularDoubleField
      _decodeSingularEnumField = source._decodeSingularEnumField
      _decodeSingularFixed32Field = source._decodeSingularFixed32Field
      _decodeSingularFixed64Field = source._decodeSingularFixed64Field
      _decodeSingularFloatField = source._decodeSingularFloatField
      _decodeSingularGroupField = source._decodeSingularGroupField
      _decodeSingularInt32Field = source._decodeSingularInt32Field
      _decodeSingularInt64Field = source._decodeSingularInt64Field
      _decodeSingularMessageField = source._decodeSingularMessageField
      _decodeSingularSfixed32Field = source._decodeSingularSfixed32Field
      _decodeSingularSfixed64Field = source._decodeSingularSfixed64Field
      _decodeSingularSint32Field = source._decodeSingularSint32Field
      _decodeSingularSint64Field = source._decodeSingularSint64Field
      _decodeSingularStringField = source._decodeSingularStringField
      _decodeSingularUint32Field = source._decodeSingularUint32Field
      _decodeSingularUint64Field = source._decodeSingularUint64Field
      _decodeTextFormat = source._decodeTextFormat
      _defaultAnyTypeUrlprefix = source._defaultAnyTypeUrlprefix
      _defaults = source._defaults
      _defaultValue = source._defaultValue
      _dependency = source._dependency
      _deprecated = source._deprecated
      _deprecatedLegacyJsonFieldConflicts = source._deprecatedLegacyJsonFieldConflicts
      _description_p = source._description_p
      _descriptorProto = source._descriptorProto
      _dictionary = source._dictionary
      _dictionaryLiteral = source._dictionaryLiteral
      _digit = source._digit
      _digit0 = source._digit0
      _digit1 = source._digit1
      _digitCount = source._digitCount
      _digits = source._digits
      _digitValue = source._digitValue
      _discardableResult = source._discardableResult
      _discardUnknownFields = source._discardUnknownFields
      _double = source._double
      _doubleValue = source._doubleValue
      _duration = source._duration
      _e = source._e
      _edition = source._edition
      _editionDefault = source._editionDefault
      _editionDefaults = source._editionDefaults
      _element = source._element
      _elements = source._elements
      _emitExtensionFieldName = source._emitExtensionFieldName
      _emitFieldName = source._emitFieldName
      _emitFieldNumber = source._emitFieldNumber
      _empty = source._empty
      _encodeAsBytes = source._encodeAsBytes
      _encoded = source._encoded
      _encodedJsonstring = source._encodedJsonstring
      _encodedSize = source._encodedSize
      _encodeField = source._encodeField
      _encoder = source._encoder
      _end = source._end
      _endArray = source._endArray
      _endMessageField = source._endMessageField
      _endObject = source._endObject
      _endRegularField = source._endRegularField
      _enum = source._enum
      _enumDescriptorProto = source._enumDescriptorProto
      _enumOptions = source._enumOptions
      _enumReservedRange = source._enumReservedRange
      _enumType = source._enumType
      _enumvalue = source._enumvalue
      _enumValueDescriptorProto = source._enumValueDescriptorProto
      _enumValueOptions = source._enumValueOptions
      _equatable = source._equatable
      _error = source._error
      _escaping = source._escaping
      _expressibleByArrayLiteral = source._expressibleByArrayLiteral
      _expressibleByDictionaryLiteral = source._expressibleByDictionaryLiteral
      _ext = source._ext
      _extDecoder = source._extDecoder
      _extendedGraphemeClusterLiteral = source._extendedGraphemeClusterLiteral
      _extendedGraphemeClusterLiteralType = source._extendedGraphemeClusterLiteralType
      _extendee = source._extendee
      _extensibleMessage = source._extensibleMessage
      _extension = source._extension
      _extensionField = source._extensionField
      _extensionFieldNumber = source._extensionFieldNumber
      _extensionFields = source._extensionFields
      _extensionFieldsAsMessageSet = source._extensionFieldsAsMessageSet
      _extensionFieldValueSet = source._extensionFieldValueSet
      _extensionMap = source._extensionMap
      _extensionRange = source._extensionRange
      _extensionRangeOptions = source._extensionRangeOptions
      _extensions = source._extensions
      _extras = source._extras
      _f = source._f
      _false = source._false
      _features = source._features
      _featureSet = source._featureSet
      _featureSetDefaults = source._featureSetDefaults
      _featureSetEditionDefault = source._featureSetEditionDefault
      _field = source._field
      _fieldData = source._fieldData
      _fieldDescriptorProto = source._fieldDescriptorProto
      _fieldMask = source._fieldMask
      _fieldName = source._fieldName
      _fieldNameCount = source._fieldNameCount
      _fieldNum = source._fieldNum
      _fieldNumber = source._fieldNumber
      _fieldNumberForProto = source._fieldNumberForProto
      _fieldOptions = source._fieldOptions
      _fieldPresence = source._fieldPresence
      _fields = source._fields
      _fieldSize = source._fieldSize
      _fieldTag = source._fieldTag
      _fieldType = source._fieldType
      _file = source._file
      _fileDescriptorProto = source._fileDescriptorProto
      _fileDescriptorSet = source._fileDescriptorSet
      _fileName = source._fileName
      _fileOptions = source._fileOptions
      _filter = source._filter
      _final = source._final
      _first = source._first
      _firstItem = source._firstItem
      _float = source._float
      _floatLiteral = source._floatLiteral
      _floatLiteralType = source._floatLiteralType
      _floatValue = source._floatValue
      _forMessageName = source._forMessageName
      _formUnion = source._formUnion
      _forReadingFrom = source._forReadingFrom
      _forTypeURL = source._forTypeURL
      _forwardParser = source._forwardParser
      _forWritingInto = source._forWritingInto
      _from = source._from
      _fromAscii2 = source._fromAscii2
      _fromAscii4 = source._fromAscii4
      _fromByteOffset = source._fromByteOffset
      _fromHexDigit = source._fromHexDigit
      _fullName = source._fullName
      _func = source._func
      _g = source._g
      _generatedCodeInfo = source._generatedCodeInfo
      _get = source._get
      _getExtensionValue = source._getExtensionValue
      _getValue = source._getValue
      _googleapis = source._googleapis
      _googleProtobufAny = source._googleProtobufAny
      _googleProtobufApi = source._googleProtobufApi
      _googleProtobufBoolValue = source._googleProtobufBoolValue
      _googleProtobufBytesValue = source._googleProtobufBytesValue
      _googleProtobufDescriptorProto = source._googleProtobufDescriptorProto
      _googleProtobufDoubleValue = source._googleProtobufDoubleValue
      _googleProtobufDuration = source._googleProtobufDuration
      _googleProtobufEdition = source._googleProtobufEdition
      _googleProtobufEmpty = source._googleProtobufEmpty
      _googleProtobufEnum = source._googleProtobufEnum
      _googleProtobufEnumDescriptorProto = source._googleProtobufEnumDescriptorProto
      _googleProtobufEnumOptions = source._googleProtobufEnumOptions
      _googleProtobufEnumValue = source._googleProtobufEnumValue
      _googleProtobufEnumValueDescriptorProto = source._googleProtobufEnumValueDescriptorProto
      _googleProtobufEnumValueOptions = source._googleProtobufEnumValueOptions
      _googleProtobufExtensionRangeOptions = source._googleProtobufExtensionRangeOptions
      _googleProtobufFeatureSet = source._googleProtobufFeatureSet
      _googleProtobufFeatureSetDefaults = source._googleProtobufFeatureSetDefaults
      _googleProtobufField = source._googleProtobufField
      _googleProtobufFieldDescriptorProto = source._googleProtobufFieldDescriptorProto
      _googleProtobufFieldMask = source._googleProtobufFieldMask
      _googleProtobufFieldOptions = source._googleProtobufFieldOptions
      _googleProtobufFileDescriptorProto = source._googleProtobufFileDescriptorProto
      _googleProtobufFileDescriptorSet = source._googleProtobufFileDescriptorSet
      _googleProtobufFileOptions = source._googleProtobufFileOptions
      _googleProtobufFloatValue = source._googleProtobufFloatValue
      _googleProtobufGeneratedCodeInfo = source._googleProtobufGeneratedCodeInfo
      _googleProtobufInt32Value = source._googleProtobufInt32Value
      _googleProtobufInt64Value = source._googleProtobufInt64Value
      _googleProtobufListValue = source._googleProtobufListValue
      _googleProtobufMessageOptions = source._googleProtobufMessageOptions
      _googleProtobufMethod = source._googleProtobufMethod
      _googleProtobufMethodDescriptorProto = source._googleProtobufMethodDescriptorProto
      _googleProtobufMethodOptions = source._googleProtobufMethodOptions
      _googleProtobufMixin = source._googleProtobufMixin
      _googleProtobufNullValue = source._googleProtobufNullValue
      _googleProtobufOneofDescriptorProto = source._googleProtobufOneofDescriptorProto
      _googleProtobufOneofOptions = source._googleProtobufOneofOptions
      _googleProtobufOption = source._googleProtobufOption
      _googleProtobufServiceDescriptorProto = source._googleProtobufServiceDescriptorProto
      _googleProtobufServiceOptions = source._googleProtobufServiceOptions
      _googleProtobufSourceCodeInfo = source._googleProtobufSourceCodeInfo
      _googleProtobufSourceContext = source._googleProtobufSourceContext
      _googleProtobufStringValue = source._googleProtobufStringValue
      _googleProtobufStruct = source._googleProtobufStruct
      _googleProtobufSyntax = source._googleProtobufSyntax
      _googleProtobufTimestamp = source._googleProtobufTimestamp
      _googleProtobufType = source._googleProtobufType
      _googleProtobufUint32Value = source._googleProtobufUint32Value
      _googleProtobufUint64Value = source._googleProtobufUint64Value
      _googleProtobufUninterpretedOption = source._googleProtobufUninterpretedOption
      _googleProtobufValue = source._googleProtobufValue
      _goPackage = source._goPackage
      _group = source._group
      _groupFieldNumberStack = source._groupFieldNumberStack
      _groupSize = source._groupSize
      _hadOneofValue = source._hadOneofValue
      _handleConflictingOneOf = source._handleConflictingOneOf
      _hasAggregateValue_p = source._hasAggregateValue_p
      _hasAllowAlias_p = source._hasAllowAlias_p
      _hasBegin_p = source._hasBegin_p
      _hasCcEnableArenas_p = source._hasCcEnableArenas_p
      _hasCcGenericServices_p = source._hasCcGenericServices_p
      _hasClientStreaming_p = source._hasClientStreaming_p
      _hasCsharpNamespace_p = source._hasCsharpNamespace_p
      _hasCtype_p = source._hasCtype_p
      _hasDebugRedact_p = source._hasDebugRedact_p
      _hasDefaultValue_p = source._hasDefaultValue_p
      _hasDeprecated_p = source._hasDeprecated_p
      _hasDeprecatedLegacyJsonFieldConflicts_p = source._hasDeprecatedLegacyJsonFieldConflicts_p
      _hasDoubleValue_p = source._hasDoubleValue_p
      _hasEdition_p = source._hasEdition_p
      _hasEnd_p = source._hasEnd_p
      _hasEnumType_p = source._hasEnumType_p
      _hasExtendee_p = source._hasExtendee_p
      _hasExtensionValue_p = source._hasExtensionValue_p
      _hasFeatures_p = source._hasFeatures_p
      _hasFieldPresence_p = source._hasFieldPresence_p
      _hasFullName_p = source._hasFullName_p
      _hasGoPackage_p = source._hasGoPackage_p
      _hash = source._hash
      _hashable = source._hashable
      _hasher = source._hasher
      _hashVisitor = source._hashVisitor
      _hasIdempotencyLevel_p = source._hasIdempotencyLevel_p
      _hasIdentifierValue_p = source._hasIdentifierValue_p
      _hasInputType_p = source._hasInputType_p
      _hasIsExtension_p = source._hasIsExtension_p
      _hasJavaGenerateEqualsAndHash_p = source._hasJavaGenerateEqualsAndHash_p
      _hasJavaGenericServices_p = source._hasJavaGenericServices_p
      _hasJavaMultipleFiles_p = source._hasJavaMultipleFiles_p
      _hasJavaOuterClassname_p = source._hasJavaOuterClassname_p
      _hasJavaPackage_p = source._hasJavaPackage_p
      _hasJavaStringCheckUtf8_p = source._hasJavaStringCheckUtf8_p
      _hasJsonFormat_p = source._hasJsonFormat_p
      _hasJsonName_p = source._hasJsonName_p
      _hasJstype_p = source._hasJstype_p
      _hasLabel_p = source._hasLabel_p
      _hasLazy_p = source._hasLazy_p
      _hasLeadingComments_p = source._hasLeadingComments_p
      _hasMapEntry_p = source._hasMapEntry_p
      _hasMaximumEdition_p = source._hasMaximumEdition_p
      _hasMessageEncoding_p = source._hasMessageEncoding_p
      _hasMessageSetWireFormat_p = source._hasMessageSetWireFormat_p
      _hasMinimumEdition_p = source._hasMinimumEdition_p
      _hasName_p = source._hasName_p
      _hasNamePart_p = source._hasNamePart_p
      _hasNegativeIntValue_p = source._hasNegativeIntValue_p
      _hasNoStandardDescriptorAccessor_p = source._hasNoStandardDescriptorAccessor_p
      _hasNumber_p = source._hasNumber_p
      _hasObjcClassPrefix_p = source._hasObjcClassPrefix_p
      _hasOneofIndex_p = source._hasOneofIndex_p
      _hasOptimizeFor_p = source._hasOptimizeFor_p
      _hasOptions_p = source._hasOptions_p
      _hasOutputType_p = source._hasOutputType_p
      _hasPackage_p = source._hasPackage_p
      _hasPacked_p = source._hasPacked_p
      _hasPhpClassPrefix_p = source._hasPhpClassPrefix_p
      _hasPhpGenericServices_p = source._hasPhpGenericServices_p
      _hasPhpMetadataNamespace_p = source._hasPhpMetadataNamespace_p
      _hasPhpNamespace_p = source._hasPhpNamespace_p
      _hasPositiveIntValue_p = source._hasPositiveIntValue_p
      _hasProto3Optional_p = source._hasProto3Optional_p
      _hasPyGenericServices_p = source._hasPyGenericServices_p
      _hasRepeated_p = source._hasRepeated_p
      _hasRepeatedFieldEncoding_p = source._hasRepeatedFieldEncoding_p
      _hasReserved_p = source._hasReserved_p
      _hasRetention_p = source._hasRetention_p
      _hasRubyPackage_p = source._hasRubyPackage_p
      _hasSemantic_p = source._hasSemantic_p
      _hasServerStreaming_p = source._hasServerStreaming_p
      _hasSourceCodeInfo_p = source._hasSourceCodeInfo_p
      _hasSourceContext_p = source._hasSourceContext_p
      _hasSourceFile_p = source._hasSourceFile_p
      _hasStart_p = source._hasStart_p
      _hasStringValue_p = source._hasStringValue_p
      _hasSwiftPrefix_p = source._hasSwiftPrefix_p
      _hasSyntax_p = source._hasSyntax_p
      _hasTrailingComments_p = source._hasTrailingComments_p
      _hasType_p = source._hasType_p
      _hasTypeName_p = source._hasTypeName_p
      _hasUnverifiedLazy_p = source._hasUnverifiedLazy_p
      _hasUtf8Validation_p = source._hasUtf8Validation_p
      _hasValue_p = source._hasValue_p
      _hasVerification_p = source._hasVerification_p
      _hasWeak_p = source._hasWeak_p
      _hour = source._hour
      _i = source._i
      _idempotencyLevel = source._idempotencyLevel
      _identifierValue = source._identifierValue
      _if = source._if
      _ignoreUnknownFields = source._ignoreUnknownFields
      _index = source._index
      _init_p = source._init_p
      _inout = source._inout
      _inputType = source._inputType
      _insert = source._insert
      _int = source._int
      _int32 = source._int32
      _int32Value = source._int32Value
      _int64 = source._int64
      _int64Value = source._int64Value
      _int8 = source._int8
      _integerLiteral = source._integerLiteral
      _integerLiteralType = source._integerLiteralType
      _intern = source._intern
      _internal = source._internal
      _internalState = source._internalState
      _into = source._into
      _ints = source._ints
      _isA = source._isA
      _isEqual = source._isEqual
      _isEqualTo = source._isEqualTo
      _isExtension = source._isExtension
      _isInitialized_p = source._isInitialized_p
      _isNegative = source._isNegative
      _isUnset = source._isUnset
      _itemTagsEncodedSize = source._itemTagsEncodedSize
      _iterator = source._iterator
      _javaGenerateEqualsAndHash = source._javaGenerateEqualsAndHash
      _javaGenericServices = source._javaGenericServices
      _javaMultipleFiles = source._javaMultipleFiles
      _javaOuterClassname = source._javaOuterClassname
      _javaPackage = source._javaPackage
      _javaStringCheckUtf8 = source._javaStringCheckUtf8
      _jsondecoder = source._jsondecoder
      _jsondecodingError = source._jsondecodingError
      _jsondecodingOptions = source._jsondecodingOptions
      _jsonEncoder = source._jsonEncoder
      _jsonencodingError = source._jsonencodingError
      _jsonencodingOptions = source._jsonencodingOptions
      _jsonencodingVisitor = source._jsonencodingVisitor
      _jsonFormat = source._jsonFormat
      _jsonmapEncodingVisitor = source._jsonmapEncodingVisitor
      _jsonName = source._jsonName
      _jsonPath = source._jsonPath
      _jsonPaths = source._jsonPaths
      _jsonscanner = source._jsonscanner
      _jsonString = source._jsonString
      _jsonText = source._jsonText
      _jsonUtf8Bytes = source._jsonUtf8Bytes
      _jsonUtf8Data = source._jsonUtf8Data
      _jstype = source._jstype
      _k = source._k
      _kChunkSize = source._kChunkSize
      _key = source._key
      _keyField = source._keyField
      _keyFieldOpt = source._keyFieldOpt
      _keyType = source._keyType
      _kind = source._kind
      _l = source._l
      _label = source._label
      _lazy = source._lazy
      _leadingComments = source._leadingComments
      _leadingDetachedComments = source._leadingDetachedComments
      _length = source._length
      _lessThan = source._lessThan
      _let = source._let
      _lhs = source._lhs
      _list = source._list
      _listOfMessages = source._listOfMessages
      _listValue = source._listValue
      _littleEndian = source._littleEndian
      _littleEndianBytes = source._littleEndianBytes
      _load = source._load
      _localHasher = source._localHasher
      _location = source._location
      _m = source._m
      _major = source._major
      _makeAsyncIterator = source._makeAsyncIterator
      _makeIterator = source._makeIterator
      _map = source._map
      _mapEntry = source._mapEntry
      _mapKeyType = source._mapKeyType
      _mapToMessages = source._mapToMessages
      _mapValueType = source._mapValueType
      _mapVisitor = source._mapVisitor
      _maximumEdition = source._maximumEdition
      _mdayStart = source._mdayStart
      _merge = source._merge
      _message = source._message
      _messageDepthLimit = source._messageDepthLimit
      _messageEncoding = source._messageEncoding
      _messageExtension = source._messageExtension
      _messageImplementationBase = source._messageImplementationBase
      _messageOptions = source._messageOptions
      _messageSet = source._messageSet
      _messageSetWireFormat = source._messageSetWireFormat
      _messageSize = source._messageSize
      _messageType = source._messageType
      _method = source._method
      _methodDescriptorProto = source._methodDescriptorProto
      _methodOptions = source._methodOptions
      _methods = source._methods
      _min = source._min
      _minimumEdition = source._minimumEdition
      _minor = source._minor
      _mixin = source._mixin
      _mixins = source._mixins
      _modifier = source._modifier
      _modify = source._modify
      _month = source._month
      _msgExtension = source._msgExtension
      _mutating = source._mutating
      _n = source._n
      _name = source._name
      _nameDescription = source._nameDescription
      _nameMap = source._nameMap
      _namePart = source._namePart
      _names = source._names
      _nanos = source._nanos
      _negativeIntValue = source._negativeIntValue
      _nestedType = source._nestedType
      _newL = source._newL
      _newList = source._newList
      _newValue = source._newValue
      _next = source._next
      _nextByte = source._nextByte
      _nextFieldNumber = source._nextFieldNumber
      _nextVarInt = source._nextVarInt
      _nil = source._nil
      _nilLiteral = source._nilLiteral
      _noStandardDescriptorAccessor = source._noStandardDescriptorAccessor
      _nullValue = source._nullValue
      _number = source._number
      _numberValue = source._numberValue
      _objcClassPrefix = source._objcClassPrefix
      _of = source._of
      _oneOf = source._oneOf
      _oneofDecl = source._oneofDecl
      _oneofDescriptorProto = source._oneofDescriptorProto
      _oneofIndex = source._oneofIndex
      _oneofOptions = source._oneofOptions
      _oneofs = source._oneofs
      _oneOfKind = source._oneOfKind
      _optimizeFor = source._optimizeFor
      _optimizeMode = source._optimizeMode
      _option = source._option
      _optionalEnumExtensionField = source._optionalEnumExtensionField
      _optionalExtensionField = source._optionalExtensionField
      _optionalGroupExtensionField = source._optionalGroupExtensionField
      _optionalMessageExtensionField = source._optionalMessageExtensionField
      _optionRetention = source._optionRetention
      _options = source._options
      _optionTargetType = source._optionTargetType
      _other = source._other
      _others = source._others
      _out = source._out
      _outputType = source._outputType
      _p = source._p
      _package = source._package
      _packed = source._packed
      _packedBool = source._packedBool
      _packedDouble = source._packedDouble
      _packedEnum = source._packedEnum
      _packedEnumExtensionField = source._packedEnumExtensionField
      _packedExtensionField = source._packedExtensionField
      _packedFixed32 = source._packedFixed32
      _packedFixed64 = source._packedFixed64
      _packedFloat = source._packedFloat
      _packedInt32 = source._packedInt32
      _packedInt64 = source._packedInt64
      _packedSfixed32 = source._packedSfixed32
      _packedSfixed64 = source._packedSfixed64
      _packedSint32 = source._packedSint32
      _packedSint64 = source._packedSint64
      _packedUint32 = source._packedUint32
      _packedUint64 = source._packedUint64
      _padding = source._padding
      _parent = source._parent
      _parse = source._parse
      _path = source._path
      _paths = source._paths
      _payload = source._payload
      _payloadSize = source._payloadSize
      _phpClassPrefix = source._phpClassPrefix
      _phpGenericServices = source._phpGenericServices
      _phpMetadataNamespace = source._phpMetadataNamespace
      _phpNamespace = source._phpNamespace
      _pos = source._pos
      _positiveIntValue = source._positiveIntValue
      _prefix = source._prefix
      _preserveProtoFieldNames = source._preserveProtoFieldNames
      _preTraverse = source._preTraverse
      _printUnknownFields = source._printUnknownFields
      _proto2 = source._proto2
      _proto3DefaultValue = source._proto3DefaultValue
      _proto3Optional = source._proto3Optional
      _protobufApiversionCheck = source._protobufApiversionCheck
      _protobufApiversion3 = source._protobufApiversion3
      _protobufBool = source._protobufBool
      _protobufBytes = source._protobufBytes
      _protobufDouble = source._protobufDouble
      _protobufEnumMap = source._protobufEnumMap
      _protobufExtension = source._protobufExtension
      _protobufFixed32 = source._protobufFixed32
      _protobufFixed64 = source._protobufFixed64
      _protobufFloat = source._protobufFloat
      _protobufInt32 = source._protobufInt32
      _protobufInt64 = source._protobufInt64
      _protobufMap = source._protobufMap
      _protobufMessageMap = source._protobufMessageMap
      _protobufSfixed32 = source._protobufSfixed32
      _protobufSfixed64 = source._protobufSfixed64
      _protobufSint32 = source._protobufSint32
      _protobufSint64 = source._protobufSint64
      _protobufString = source._protobufString
      _protobufUint32 = source._protobufUint32
      _protobufUint64 = source._protobufUint64
      _protobufExtensionFieldValues = source._protobufExtensionFieldValues
      _protobufFieldNumber = source._protobufFieldNumber
      _protobufGeneratedIsEqualTo = source._protobufGeneratedIsEqualTo
      _protobufNameMap = source._protobufNameMap
      _protobufNewField = source._protobufNewField
      _protobufPackage = source._protobufPackage
      _protocol = source._protocol
      _protoFieldName = source._protoFieldName
      _protoMessageName = source._protoMessageName
      _protoNameProviding = source._protoNameProviding
      _protoPaths = source._protoPaths
      _public = source._public
      _publicDependency = source._publicDependency
      _putBoolValue = source._putBoolValue
      _putBytesValue = source._putBytesValue
      _putDoubleValue = source._putDoubleValue
      _putEnumValue = source._putEnumValue
      _putFixedUint32 = source._putFixedUint32
      _putFixedUint64 = source._putFixedUint64
      _putFloatValue = source._putFloatValue
      _putInt64 = source._putInt64
      _putStringValue = source._putStringValue
      _putUint64 = source._putUint64
      _putUint64Hex = source._putUint64Hex
      _putVarInt = source._putVarInt
      _putZigZagVarInt = source._putZigZagVarInt
      _pyGenericServices = source._pyGenericServices
      _r = source._r
      _rawChars = source._rawChars
      _rawRepresentable = source._rawRepresentable
      _rawValue = source._rawValue
      _read4HexDigits = source._read4HexDigits
      _readBytes = source._readBytes
      _register = source._register
      _repeated = source._repeated
      _repeatedBool = source._repeatedBool
      _repeatedBytes = source._repeatedBytes
      _repeatedDouble = source._repeatedDouble
      _repeatedEnum = source._repeatedEnum
      _repeatedEnumExtensionField = source._repeatedEnumExtensionField
      _repeatedExtensionField = source._repeatedExtensionField
      _repeatedFieldEncoding = source._repeatedFieldEncoding
      _repeatedFixed32 = source._repeatedFixed32
      _repeatedFixed64 = source._repeatedFixed64
      _repeatedFloat = source._repeatedFloat
      _repeatedGroup = source._repeatedGroup
      _repeatedGroupExtensionField = source._repeatedGroupExtensionField
      _repeatedInt32 = source._repeatedInt32
      _repeatedInt64 = source._repeatedInt64
      _repeatedMessage = source._repeatedMessage
      _repeatedMessageExtensionField = source._repeatedMessageExtensionField
      _repeatedSfixed32 = source._repeatedSfixed32
      _repeatedSfixed64 = source._repeatedSfixed64
      _repeatedSint32 = source._repeatedSint32
      _repeatedSint64 = source._repeatedSint64
      _repeatedString = source._repeatedString
      _repeatedUint32 = source._repeatedUint32
      _repeatedUint64 = source._repeatedUint64
      _repeating = source._repeating
      _requestStreaming = source._requestStreaming
      _requestTypeURL = source._requestTypeURL
      _requiredSize = source._requiredSize
      _responseStreaming = source._responseStreaming
      _responseTypeURL = source._responseTypeURL
      _result = source._result
      _retention = source._retention
      _rethrows = source._rethrows
      _return = source._return
      _returnType = source._returnType
      _revision = source._revision
      _rhs = source._rhs
      _root = source._root
      _rubyPackage = source._rubyPackage
      _s = source._s
      _sawBackslash = source._sawBackslash
      _sawSection4Characters = source._sawSection4Characters
      _sawSection5Characters = source._sawSection5Characters
      _scanner = source._scanner
      _seconds = source._seconds
      _self_p = source._self_p
      _semantic = source._semantic
      _sendable = source._sendable
      _separator = source._separator
      _serialize = source._serialize
      _serializedBytes = source._serializedBytes
      _serializedData = source._serializedData
      _serializedSize = source._serializedSize
      _serverStreaming = source._serverStreaming
      _service = source._service
      _serviceDescriptorProto = source._serviceDescriptorProto
      _serviceOptions = source._serviceOptions
      _set = source._set
      _setExtensionValue = source._setExtensionValue
      _shift = source._shift
      _simpleExtensionMap = source._simpleExtensionMap
      _singularBool = source._singularBool
      _singularBytes = source._singularBytes
      _singularDouble = source._singularDouble
      _singularEnum = source._singularEnum
      _singularFixed32 = source._singularFixed32
      _singularFixed64 = source._singularFixed64
      _singularFloat = source._singularFloat
      _singularGroup = source._singularGroup
      _singularInt32 = source._singularInt32
      _singularInt64 = source._singularInt64
      _singularMessage = source._singularMessage
      _singularSfixed32 = source._singularSfixed32
      _singularSfixed64 = source._singularSfixed64
      _singularSint32 = source._singularSint32
      _singularSint64 = source._singularSint64
      _singularString = source._singularString
      _singularUint32 = source._singularUint32
      _singularUint64 = source._singularUint64
      _size = source._size
      _sizer = source._sizer
      _source = source._source
      _sourceCodeInfo = source._sourceCodeInfo
      _sourceContext = source._sourceContext
      _sourceEncoding = source._sourceEncoding
      _sourceFile = source._sourceFile
      _span = source._span
      _split = source._split
      _start = source._start
      _startArray = source._startArray
      _startArrayObject = source._startArrayObject
      _startField = source._startField
      _startIndex = source._startIndex
      _startMessageField = source._startMessageField
      _startObject = source._startObject
      _startRegularField = source._startRegularField
      _state = source._state
      _static = source._static
      _staticString = source._staticString
      _storage = source._storage
      _string = source._string
      _stringLiteral = source._stringLiteral
      _stringLiteralType = source._stringLiteralType
      _stringResult = source._stringResult
      _stringValue = source._stringValue
      _struct = source._struct
      _structValue = source._structValue
      _subDecoder = source._subDecoder
      _subscript = source._subscript
      _subVisitor = source._subVisitor
      _swift = source._swift
      _swiftPrefix = source._swiftPrefix
      _swiftProtobufContiguousBytes = source._swiftProtobufContiguousBytes
      _syntax = source._syntax
      _t = source._t
      _tag = source._tag
      _targets = source._targets
      _terminator = source._terminator
      _testDecoder = source._testDecoder
      _text = source._text
      _textDecoder = source._textDecoder
      _textFormatDecoder = source._textFormatDecoder
      _textFormatDecodingError = source._textFormatDecodingError
      _textFormatDecodingOptions = source._textFormatDecodingOptions
      _textFormatEncodingOptions = source._textFormatEncodingOptions
      _textFormatEncodingVisitor = source._textFormatEncodingVisitor
      _textFormatString = source._textFormatString
      _throwOrIgnore = source._throwOrIgnore
      _throws = source._throws
      _timeInterval = source._timeInterval
      _timeIntervalSince1970 = source._timeIntervalSince1970
      _timeIntervalSinceReferenceDate = source._timeIntervalSinceReferenceDate
      _timestamp = source._timestamp
      _toConcrete = source._toConcrete
      _total = source._total
      _totalArrayDepth = source._totalArrayDepth
      _totalSize = source._totalSize
      _trailingComments = source._trailingComments
      _traverse = source._traverse
      _true = source._true
      _try = source._try
      _type = source._type
      _typealias = source._typealias
      _typeEnum = source._typeEnum
      _typeName = source._typeName
      _typePrefix = source._typePrefix
      _typeStart = source._typeStart
      _typeUnknown = source._typeUnknown
      _typeURL = source._typeURL
      _uint32 = source._uint32
      _uint32Value = source._uint32Value
      _uint64 = source._uint64
      _uint64Value = source._uint64Value
      _uint8 = source._uint8
      _unchecked = source._unchecked
      _unicodeScalarLiteral = source._unicodeScalarLiteral
      _unicodeScalarLiteralType = source._unicodeScalarLiteralType
      _unicodeScalars = source._unicodeScalars
      _unicodeScalarView = source._unicodeScalarView
      _uninterpretedOption = source._uninterpretedOption
      _union = source._union
      _uniqueStorage = source._uniqueStorage
      _unknown = source._unknown
      _unknownFields_p = source._unknownFields_p
      _unknownStorage = source._unknownStorage
      _unpackTo = source._unpackTo
      _unsafeBufferPointer = source._unsafeBufferPointer
      _unsafeMutablePointer = source._unsafeMutablePointer
      _unsafeMutableRawBufferPointer = source._unsafeMutableRawBufferPointer
      _unsafeRawBufferPointer = source._unsafeRawBufferPointer
      _unsafeRawPointer = source._unsafeRawPointer
      _unverifiedLazy = source._unverifiedLazy
      _updatedOptions = source._updatedOptions
      _url = source._url
      _useDeterministicOrdering = source._useDeterministicOrdering
      _utf8 = source._utf8
      _utf8Ptr = source._utf8Ptr
      _utf8ToDouble = source._utf8ToDouble
      _utf8Validation = source._utf8Validation
      _utf8View = source._utf8View
      _v = source._v
      _value = source._value
      _valueField = source._valueField
      _values = source._values
      _valueType = source._valueType
      _var = source._var
      _verification = source._verification
      _verificationState = source._verificationState
      _version = source._version
      _versionString = source._versionString
      _visitExtensionFields = source._visitExtensionFields
      _visitExtensionFieldsAsMessageSet = source._visitExtensionFieldsAsMessageSet
      _visitMapField = source._visitMapField
      _visitor = source._visitor
      _visitPacked = source._visitPacked
      _visitPackedBoolField = source._visitPackedBoolField
      _visitPackedDoubleField = source._visitPackedDoubleField
      _visitPackedEnumField = source._visitPackedEnumField
      _visitPackedFixed32Field = source._visitPackedFixed32Field
      _visitPackedFixed64Field = source._visitPackedFixed64Field
      _visitPackedFloatField = source._visitPackedFloatField
      _visitPackedInt32Field = source._visitPackedInt32Field
      _visitPackedInt64Field = source._visitPackedInt64Field
      _visitPackedSfixed32Field = source._visitPackedSfixed32Field
      _visitPackedSfixed64Field = source._visitPackedSfixed64Field
      _visitPackedSint32Field = source._visitPackedSint32Field
      _visitPackedSint64Field = source._visitPackedSint64Field
      _visitPackedUint32Field = source._visitPackedUint32Field
      _visitPackedUint64Field = source._visitPackedUint64Field
      _visitRepeated = source._visitRepeated
      _visitRepeatedBoolField = source._visitRepeatedBoolField
      _visitRepeatedBytesField = source._visitRepeatedBytesField
      _visitRepeatedDoubleField = source._visitRepeatedDoubleField
      _visitRepeatedEnumField = source._visitRepeatedEnumField
      _visitRepeatedFixed32Field = source._visitRepeatedFixed32Field
      _visitRepeatedFixed64Field = source._visitRepeatedFixed64Field
      _visitRepeatedFloatField = source._visitRepeatedFloatField
      _visitRepeatedGroupField = source._visitRepeatedGroupField
      _visitRepeatedInt32Field = source._visitRepeatedInt32Field
      _visitRepeatedInt64Field = source._visitRepeatedInt64Field
      _visitRepeatedMessageField = source._visitRepeatedMessageField
      _visitRepeatedSfixed32Field = source._visitRepeatedSfixed32Field
      _visitRepeatedSfixed64Field = source._visitRepeatedSfixed64Field
      _visitRepeatedSint32Field = source._visitRepeatedSint32Field
      _visitRepeatedSint64Field = source._visitRepeatedSint64Field
      _visitRepeatedStringField = source._visitRepeatedStringField
      _visitRepeatedUint32Field = source._visitRepeatedUint32Field
      _visitRepeatedUint64Field = source._visitRepeatedUint64Field
      _visitSingular = source._visitSingular
      _visitSingularBoolField = source._visitSingularBoolField
      _visitSingularBytesField = source._visitSingularBytesField
      _visitSingularDoubleField = source._visitSingularDoubleField
      _visitSingularEnumField = source._visitSingularEnumField
      _visitSingularFixed32Field = source._visitSingularFixed32Field
      _visitSingularFixed64Field = source._visitSingularFixed64Field
      _visitSingularFloatField = source._visitSingularFloatField
      _visitSingularGroupField = source._visitSingularGroupField
      _visitSingularInt32Field = source._visitSingularInt32Field
      _visitSingularInt64Field = source._visitSingularInt64Field
      _visitSingularMessageField = source._visitSingularMessageField
      _visitSingularSfixed32Field = source._visitSingularSfixed32Field
      _visitSingularSfixed64Field = source._visitSingularSfixed64Field
      _visitSingularSint32Field = source._visitSingularSint32Field
      _visitSingularSint64Field = source._visitSingularSint64Field
      _visitSingularStringField = source._visitSingularStringField
      _visitSingularUint32Field = source._visitSingularUint32Field
      _visitSingularUint64Field = source._visitSingularUint64Field
      _visitUnknown = source._visitUnknown
      _wasDecoded = source._wasDecoded
      _weak = source._weak
      _weakDependency = source._weakDependency
      _where = source._where
      _wireFormat = source._wireFormat
      _with = source._with
      _withUnsafeBytes = source._withUnsafeBytes
      _withUnsafeMutableBytes = source._withUnsafeMutableBytes
      _work = source._work
      _wrapped = source._wrapped
      _wrappedType = source._wrappedType
      _wrappedValue = source._wrappedValue
      _written = source._written
      _yday = source._yday
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularInt32Field(value: &_storage._adjusted) }()
        case 2: try { try decoder.decodeSingularInt32Field(value: &_storage._aggregateValue) }()
        case 3: try { try decoder.decodeSingularInt32Field(value: &_storage._allCases) }()
        case 4: try { try decoder.decodeSingularInt32Field(value: &_storage._allowAlias) }()
        case 5: try { try decoder.decodeSingularInt32Field(value: &_storage._alwaysPrintEnumsAsInts) }()
        case 6: try { try decoder.decodeSingularInt32Field(value: &_storage._alwaysPrintInt64SAsNumbers) }()
        case 7: try { try decoder.decodeSingularInt32Field(value: &_storage._annotation) }()
        case 8: try { try decoder.decodeSingularInt32Field(value: &_storage._any) }()
        case 9: try { try decoder.decodeSingularInt32Field(value: &_storage._anyExtensionField) }()
        case 10: try { try decoder.decodeSingularInt32Field(value: &_storage._anyMessageExtension) }()
        case 11: try { try decoder.decodeSingularInt32Field(value: &_storage._anyMessageStorage) }()
        case 12: try { try decoder.decodeSingularInt32Field(value: &_storage._anyUnpackError) }()
        case 13: try { try decoder.decodeSingularInt32Field(value: &_storage._api) }()
        case 14: try { try decoder.decodeSingularInt32Field(value: &_storage._appended) }()
        case 15: try { try decoder.decodeSingularInt32Field(value: &_storage._appendUintHex) }()
        case 16: try { try decoder.decodeSingularInt32Field(value: &_storage._appendUnknown) }()
        case 17: try { try decoder.decodeSingularInt32Field(value: &_storage._areAllInitialized) }()
        case 18: try { try decoder.decodeSingularInt32Field(value: &_storage._array) }()
        case 19: try { try decoder.decodeSingularInt32Field(value: &_storage._arrayDepth) }()
        case 20: try { try decoder.decodeSingularInt32Field(value: &_storage._arrayLiteral) }()
        case 21: try { try decoder.decodeSingularInt32Field(value: &_storage._arraySeparator) }()
        case 22: try { try decoder.decodeSingularInt32Field(value: &_storage._as) }()
        case 23: try { try decoder.decodeSingularInt32Field(value: &_storage._asciiOpenCurlyBracket) }()
        case 24: try { try decoder.decodeSingularInt32Field(value: &_storage._asciiZero) }()
        case 25: try { try decoder.decodeSingularInt32Field(value: &_storage._async) }()
        case 26: try { try decoder.decodeSingularInt32Field(value: &_storage._asyncIterator) }()
        case 27: try { try decoder.decodeSingularInt32Field(value: &_storage._asyncIteratorProtocol) }()
        case 28: try { try decoder.decodeSingularInt32Field(value: &_storage._asyncMessageSequence) }()
        case 29: try { try decoder.decodeSingularInt32Field(value: &_storage._available) }()
        case 30: try { try decoder.decodeSingularInt32Field(value: &_storage._b) }()
        case 31: try { try decoder.decodeSingularInt32Field(value: &_storage._base) }()
        case 32: try { try decoder.decodeSingularInt32Field(value: &_storage._base64Values) }()
        case 33: try { try decoder.decodeSingularInt32Field(value: &_storage._baseAddress) }()
        case 34: try { try decoder.decodeSingularInt32Field(value: &_storage._baseType) }()
        case 35: try { try decoder.decodeSingularInt32Field(value: &_storage._begin) }()
        case 36: try { try decoder.decodeSingularInt32Field(value: &_storage._binary) }()
        case 37: try { try decoder.decodeSingularInt32Field(value: &_storage._binaryDecoder) }()
        case 38: try { try decoder.decodeSingularInt32Field(value: &_storage._binaryDecodingError) }()
        case 39: try { try decoder.decodeSingularInt32Field(value: &_storage._binaryDecodingOptions) }()
        case 40: try { try decoder.decodeSingularInt32Field(value: &_storage._binaryDelimited) }()
        case 41: try { try decoder.decodeSingularInt32Field(value: &_storage._binaryEncoder) }()
        case 42: try { try decoder.decodeSingularInt32Field(value: &_storage._binaryEncodingError) }()
        case 43: try { try decoder.decodeSingularInt32Field(value: &_storage._binaryEncodingMessageSetSizeVisitor) }()
        case 44: try { try decoder.decodeSingularInt32Field(value: &_storage._binaryEncodingMessageSetVisitor) }()
        case 45: try { try decoder.decodeSingularInt32Field(value: &_storage._binaryEncodingOptions) }()
        case 46: try { try decoder.decodeSingularInt32Field(value: &_storage._binaryEncodingSizeVisitor) }()
        case 47: try { try decoder.decodeSingularInt32Field(value: &_storage._binaryEncodingVisitor) }()
        case 48: try { try decoder.decodeSingularInt32Field(value: &_storage._binaryOptions) }()
        case 49: try { try decoder.decodeSingularInt32Field(value: &_storage._binaryProtobufDelimitedMessages) }()
        case 50: try { try decoder.decodeSingularInt32Field(value: &_storage._bitPattern) }()
        case 51: try { try decoder.decodeSingularInt32Field(value: &_storage._body) }()
        case 52: try { try decoder.decodeSingularInt32Field(value: &_storage._bool) }()
        case 53: try { try decoder.decodeSingularInt32Field(value: &_storage._booleanLiteral) }()
        case 54: try { try decoder.decodeSingularInt32Field(value: &_storage._booleanLiteralType) }()
        case 55: try { try decoder.decodeSingularInt32Field(value: &_storage._boolValue) }()
        case 56: try { try decoder.decodeSingularInt32Field(value: &_storage._buffer) }()
        case 57: try { try decoder.decodeSingularInt32Field(value: &_storage._bytes) }()
        case 58: try { try decoder.decodeSingularInt32Field(value: &_storage._bytesInGroup) }()
        case 59: try { try decoder.decodeSingularInt32Field(value: &_storage._bytesNeeded) }()
        case 60: try { try decoder.decodeSingularInt32Field(value: &_storage._bytesRead) }()
        case 61: try { try decoder.decodeSingularInt32Field(value: &_storage._bytesValue) }()
        case 62: try { try decoder.decodeSingularInt32Field(value: &_storage._c) }()
        case 63: try { try decoder.decodeSingularInt32Field(value: &_storage._capitalizeNext) }()
        case 64: try { try decoder.decodeSingularInt32Field(value: &_storage._cardinality) }()
        case 65: try { try decoder.decodeSingularInt32Field(value: &_storage._caseIterable) }()
        case 66: try { try decoder.decodeSingularInt32Field(value: &_storage._ccEnableArenas) }()
        case 67: try { try decoder.decodeSingularInt32Field(value: &_storage._ccGenericServices) }()
        case 68: try { try decoder.decodeSingularInt32Field(value: &_storage._character) }()
        case 69: try { try decoder.decodeSingularInt32Field(value: &_storage._chars) }()
        case 70: try { try decoder.decodeSingularInt32Field(value: &_storage._chunk) }()
        case 71: try { try decoder.decodeSingularInt32Field(value: &_storage._class) }()
        case 72: try { try decoder.decodeSingularInt32Field(value: &_storage._clearAggregateValue_p) }()
        case 73: try { try decoder.decodeSingularInt32Field(value: &_storage._clearAllowAlias_p) }()
        case 74: try { try decoder.decodeSingularInt32Field(value: &_storage._clearBegin_p) }()
        case 75: try { try decoder.decodeSingularInt32Field(value: &_storage._clearCcEnableArenas_p) }()
        case 76: try { try decoder.decodeSingularInt32Field(value: &_storage._clearCcGenericServices_p) }()
        case 77: try { try decoder.decodeSingularInt32Field(value: &_storage._clearClientStreaming_p) }()
        case 78: try { try decoder.decodeSingularInt32Field(value: &_storage._clearCsharpNamespace_p) }()
        case 79: try { try decoder.decodeSingularInt32Field(value: &_storage._clearCtype_p) }()
        case 80: try { try decoder.decodeSingularInt32Field(value: &_storage._clearDebugRedact_p) }()
        case 81: try { try decoder.decodeSingularInt32Field(value: &_storage._clearDefaultValue_p) }()
        case 82: try { try decoder.decodeSingularInt32Field(value: &_storage._clearDeprecated_p) }()
        case 83: try { try decoder.decodeSingularInt32Field(value: &_storage._clearDeprecatedLegacyJsonFieldConflicts_p) }()
        case 84: try { try decoder.decodeSingularInt32Field(value: &_storage._clearDoubleValue_p) }()
        case 85: try { try decoder.decodeSingularInt32Field(value: &_storage._clearEdition_p) }()
        case 86: try { try decoder.decodeSingularInt32Field(value: &_storage._clearEnd_p) }()
        case 87: try { try decoder.decodeSingularInt32Field(value: &_storage._clearEnumType_p) }()
        case 88: try { try decoder.decodeSingularInt32Field(value: &_storage._clearExtendee_p) }()
        case 89: try { try decoder.decodeSingularInt32Field(value: &_storage._clearExtensionValue_p) }()
        case 90: try { try decoder.decodeSingularInt32Field(value: &_storage._clearFeatures_p) }()
        case 91: try { try decoder.decodeSingularInt32Field(value: &_storage._clearFieldPresence_p) }()
        case 92: try { try decoder.decodeSingularInt32Field(value: &_storage._clearFullName_p) }()
        case 93: try { try decoder.decodeSingularInt32Field(value: &_storage._clearGoPackage_p) }()
        case 94: try { try decoder.decodeSingularInt32Field(value: &_storage._clearIdempotencyLevel_p) }()
        case 95: try { try decoder.decodeSingularInt32Field(value: &_storage._clearIdentifierValue_p) }()
        case 96: try { try decoder.decodeSingularInt32Field(value: &_storage._clearInputType_p) }()
        case 97: try { try decoder.decodeSingularInt32Field(value: &_storage._clearIsExtension_p) }()
        case 98: try { try decoder.decodeSingularInt32Field(value: &_storage._clearJavaGenerateEqualsAndHash_p) }()
        case 99: try { try decoder.decodeSingularInt32Field(value: &_storage._clearJavaGenericServices_p) }()
        case 100: try { try decoder.decodeSingularInt32Field(value: &_storage._clearJavaMultipleFiles_p) }()
        case 101: try { try decoder.decodeSingularInt32Field(value: &_storage._clearJavaOuterClassname_p) }()
        case 102: try { try decoder.decodeSingularInt32Field(value: &_storage._clearJavaPackage_p) }()
        case 103: try { try decoder.decodeSingularInt32Field(value: &_storage._clearJavaStringCheckUtf8_p) }()
        case 104: try { try decoder.decodeSingularInt32Field(value: &_storage._clearJsonFormat_p) }()
        case 105: try { try decoder.decodeSingularInt32Field(value: &_storage._clearJsonName_p) }()
        case 106: try { try decoder.decodeSingularInt32Field(value: &_storage._clearJstype_p) }()
        case 107: try { try decoder.decodeSingularInt32Field(value: &_storage._clearLabel_p) }()
        case 108: try { try decoder.decodeSingularInt32Field(value: &_storage._clearLazy_p) }()
        case 109: try { try decoder.decodeSingularInt32Field(value: &_storage._clearLeadingComments_p) }()
        case 110: try { try decoder.decodeSingularInt32Field(value: &_storage._clearMapEntry_p) }()
        case 111: try { try decoder.decodeSingularInt32Field(value: &_storage._clearMaximumEdition_p) }()
        case 112: try { try decoder.decodeSingularInt32Field(value: &_storage._clearMessageEncoding_p) }()
        case 113: try { try decoder.decodeSingularInt32Field(value: &_storage._clearMessageSetWireFormat_p) }()
        case 114: try { try decoder.decodeSingularInt32Field(value: &_storage._clearMinimumEdition_p) }()
        case 115: try { try decoder.decodeSingularInt32Field(value: &_storage._clearName_p) }()
        case 116: try { try decoder.decodeSingularInt32Field(value: &_storage._clearNamePart_p) }()
        case 117: try { try decoder.decodeSingularInt32Field(value: &_storage._clearNegativeIntValue_p) }()
        case 118: try { try decoder.decodeSingularInt32Field(value: &_storage._clearNoStandardDescriptorAccessor_p) }()
        case 119: try { try decoder.decodeSingularInt32Field(value: &_storage._clearNumber_p) }()
        case 120: try { try decoder.decodeSingularInt32Field(value: &_storage._clearObjcClassPrefix_p) }()
        case 121: try { try decoder.decodeSingularInt32Field(value: &_storage._clearOneofIndex_p) }()
        case 122: try { try decoder.decodeSingularInt32Field(value: &_storage._clearOptimizeFor_p) }()
        case 123: try { try decoder.decodeSingularInt32Field(value: &_storage._clearOptions_p) }()
        case 124: try { try decoder.decodeSingularInt32Field(value: &_storage._clearOutputType_p) }()
        case 125: try { try decoder.decodeSingularInt32Field(value: &_storage._clearPackage_p) }()
        case 126: try { try decoder.decodeSingularInt32Field(value: &_storage._clearPacked_p) }()
        case 127: try { try decoder.decodeSingularInt32Field(value: &_storage._clearPhpClassPrefix_p) }()
        case 128: try { try decoder.decodeSingularInt32Field(value: &_storage._clearPhpGenericServices_p) }()
        case 129: try { try decoder.decodeSingularInt32Field(value: &_storage._clearPhpMetadataNamespace_p) }()
        case 130: try { try decoder.decodeSingularInt32Field(value: &_storage._clearPhpNamespace_p) }()
        case 131: try { try decoder.decodeSingularInt32Field(value: &_storage._clearPositiveIntValue_p) }()
        case 132: try { try decoder.decodeSingularInt32Field(value: &_storage._clearProto3Optional_p) }()
        case 133: try { try decoder.decodeSingularInt32Field(value: &_storage._clearPyGenericServices_p) }()
        case 134: try { try decoder.decodeSingularInt32Field(value: &_storage._clearRepeated_p) }()
        case 135: try { try decoder.decodeSingularInt32Field(value: &_storage._clearRepeatedFieldEncoding_p) }()
        case 136: try { try decoder.decodeSingularInt32Field(value: &_storage._clearReserved_p) }()
        case 137: try { try decoder.decodeSingularInt32Field(value: &_storage._clearRetention_p) }()
        case 138: try { try decoder.decodeSingularInt32Field(value: &_storage._clearRubyPackage_p) }()
        case 139: try { try decoder.decodeSingularInt32Field(value: &_storage._clearSemantic_p) }()
        case 140: try { try decoder.decodeSingularInt32Field(value: &_storage._clearServerStreaming_p) }()
        case 141: try { try decoder.decodeSingularInt32Field(value: &_storage._clearSourceCodeInfo_p) }()
        case 142: try { try decoder.decodeSingularInt32Field(value: &_storage._clearSourceContext_p) }()
        case 143: try { try decoder.decodeSingularInt32Field(value: &_storage._clearSourceFile_p) }()
        case 144: try { try decoder.decodeSingularInt32Field(value: &_storage._clearStart_p) }()
        case 145: try { try decoder.decodeSingularInt32Field(value: &_storage._clearStringValue_p) }()
        case 146: try { try decoder.decodeSingularInt32Field(value: &_storage._clearSwiftPrefix_p) }()
        case 147: try { try decoder.decodeSingularInt32Field(value: &_storage._clearSyntax_p) }()
        case 148: try { try decoder.decodeSingularInt32Field(value: &_storage._clearTrailingComments_p) }()
        case 149: try { try decoder.decodeSingularInt32Field(value: &_storage._clearType_p) }()
        case 150: try { try decoder.decodeSingularInt32Field(value: &_storage._clearTypeName_p) }()
        case 151: try { try decoder.decodeSingularInt32Field(value: &_storage._clearUnverifiedLazy_p) }()
        case 152: try { try decoder.decodeSingularInt32Field(value: &_storage._clearUtf8Validation_p) }()
        case 153: try { try decoder.decodeSingularInt32Field(value: &_storage._clearValue_p) }()
        case 154: try { try decoder.decodeSingularInt32Field(value: &_storage._clearVerification_p) }()
        case 155: try { try decoder.decodeSingularInt32Field(value: &_storage._clearWeak_p) }()
        case 156: try { try decoder.decodeSingularInt32Field(value: &_storage._clientStreaming) }()
        case 157: try { try decoder.decodeSingularInt32Field(value: &_storage._codePoint) }()
        case 158: try { try decoder.decodeSingularInt32Field(value: &_storage._codeUnits) }()
        case 159: try { try decoder.decodeSingularInt32Field(value: &_storage._collection) }()
        case 160: try { try decoder.decodeSingularInt32Field(value: &_storage._com) }()
        case 161: try { try decoder.decodeSingularInt32Field(value: &_storage._comma) }()
        case 162: try { try decoder.decodeSingularInt32Field(value: &_storage._commonMessageConformances) }()
        case 163: try { try decoder.decodeSingularInt32Field(value: &_storage._consumedBytes) }()
        case 164: try { try decoder.decodeSingularInt32Field(value: &_storage._contentsOf) }()
        case 165: try { try decoder.decodeSingularInt32Field(value: &_storage._count) }()
        case 166: try { try decoder.decodeSingularInt32Field(value: &_storage._countVarintsInBuffer) }()
        case 167: try { try decoder.decodeSingularInt32Field(value: &_storage._csharpNamespace) }()
        case 168: try { try decoder.decodeSingularInt32Field(value: &_storage._ctype) }()
        case 169: try { try decoder.decodeSingularInt32Field(value: &_storage._customCodable) }()
        case 170: try { try decoder.decodeSingularInt32Field(value: &_storage._d) }()
        case 171: try { try decoder.decodeSingularInt32Field(value: &_storage._data) }()
        case 172: try { try decoder.decodeSingularInt32Field(value: &_storage._dataResult) }()
        case 173: try { try decoder.decodeSingularInt32Field(value: &_storage._date) }()
        case 174: try { try decoder.decodeSingularInt32Field(value: &_storage._daySec) }()
        case 175: try { try decoder.decodeSingularInt32Field(value: &_storage._daysSinceEpoch) }()
        case 176: try { try decoder.decodeSingularInt32Field(value: &_storage._debugDescription_p) }()
        case 177: try { try decoder.decodeSingularInt32Field(value: &_storage._debugRedact) }()
        case 178: try { try decoder.decodeSingularInt32Field(value: &_storage._declaration) }()
        case 179: try { try decoder.decodeSingularInt32Field(value: &_storage._decoded) }()
        case 180: try { try decoder.decodeSingularInt32Field(value: &_storage._decodedFromJsonnull) }()
        case 181: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeExtensionField) }()
        case 182: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeExtensionFieldsAsMessageSet) }()
        case 183: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeJson) }()
        case 184: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeMapField) }()
        case 185: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeMessage) }()
        case 186: try { try decoder.decodeSingularInt32Field(value: &_storage._decoder) }()
        case 187: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeated) }()
        case 188: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedBoolField) }()
        case 189: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedBytesField) }()
        case 190: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedDoubleField) }()
        case 191: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedEnumField) }()
        case 192: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedFixed32Field) }()
        case 193: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedFixed64Field) }()
        case 194: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedFloatField) }()
        case 195: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedGroupField) }()
        case 196: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedInt32Field) }()
        case 197: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedInt64Field) }()
        case 198: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedMessageField) }()
        case 199: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedSfixed32Field) }()
        case 200: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedSfixed64Field) }()
        case 201: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedSint32Field) }()
        case 202: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedSint64Field) }()
        case 203: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedStringField) }()
        case 204: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedUint32Field) }()
        case 205: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeRepeatedUint64Field) }()
        case 206: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingular) }()
        case 207: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularBoolField) }()
        case 208: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularBytesField) }()
        case 209: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularDoubleField) }()
        case 210: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularEnumField) }()
        case 211: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularFixed32Field) }()
        case 212: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularFixed64Field) }()
        case 213: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularFloatField) }()
        case 214: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularGroupField) }()
        case 215: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularInt32Field) }()
        case 216: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularInt64Field) }()
        case 217: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularMessageField) }()
        case 218: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularSfixed32Field) }()
        case 219: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularSfixed64Field) }()
        case 220: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularSint32Field) }()
        case 221: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularSint64Field) }()
        case 222: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularStringField) }()
        case 223: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularUint32Field) }()
        case 224: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeSingularUint64Field) }()
        case 225: try { try decoder.decodeSingularInt32Field(value: &_storage._decodeTextFormat) }()
        case 226: try { try decoder.decodeSingularInt32Field(value: &_storage._defaultAnyTypeUrlprefix) }()
        case 227: try { try decoder.decodeSingularInt32Field(value: &_storage._defaults) }()
        case 228: try { try decoder.decodeSingularInt32Field(value: &_storage._defaultValue) }()
        case 229: try { try decoder.decodeSingularInt32Field(value: &_storage._dependency) }()
        case 230: try { try decoder.decodeSingularInt32Field(value: &_storage._deprecated) }()
        case 231: try { try decoder.decodeSingularInt32Field(value: &_storage._deprecatedLegacyJsonFieldConflicts) }()
        case 232: try { try decoder.decodeSingularInt32Field(value: &_storage._description_p) }()
        case 233: try { try decoder.decodeSingularInt32Field(value: &_storage._descriptorProto) }()
        case 234: try { try decoder.decodeSingularInt32Field(value: &_storage._dictionary) }()
        case 235: try { try decoder.decodeSingularInt32Field(value: &_storage._dictionaryLiteral) }()
        case 236: try { try decoder.decodeSingularInt32Field(value: &_storage._digit) }()
        case 237: try { try decoder.decodeSingularInt32Field(value: &_storage._digit0) }()
        case 238: try { try decoder.decodeSingularInt32Field(value: &_storage._digit1) }()
        case 239: try { try decoder.decodeSingularInt32Field(value: &_storage._digitCount) }()
        case 240: try { try decoder.decodeSingularInt32Field(value: &_storage._digits) }()
        case 241: try { try decoder.decodeSingularInt32Field(value: &_storage._digitValue) }()
        case 242: try { try decoder.decodeSingularInt32Field(value: &_storage._discardableResult) }()
        case 243: try { try decoder.decodeSingularInt32Field(value: &_storage._discardUnknownFields) }()
        case 244: try { try decoder.decodeSingularInt32Field(value: &_storage._double) }()
        case 245: try { try decoder.decodeSingularInt32Field(value: &_storage._doubleValue) }()
        case 246: try { try decoder.decodeSingularInt32Field(value: &_storage._duration) }()
        case 247: try { try decoder.decodeSingularInt32Field(value: &_storage._e) }()
        case 248: try { try decoder.decodeSingularInt32Field(value: &_storage._edition) }()
        case 249: try { try decoder.decodeSingularInt32Field(value: &_storage._editionDefault) }()
        case 250: try { try decoder.decodeSingularInt32Field(value: &_storage._editionDefaults) }()
        case 251: try { try decoder.decodeSingularInt32Field(value: &_storage._element) }()
        case 252: try { try decoder.decodeSingularInt32Field(value: &_storage._elements) }()
        case 253: try { try decoder.decodeSingularInt32Field(value: &_storage._emitExtensionFieldName) }()
        case 254: try { try decoder.decodeSingularInt32Field(value: &_storage._emitFieldName) }()
        case 255: try { try decoder.decodeSingularInt32Field(value: &_storage._emitFieldNumber) }()
        case 256: try { try decoder.decodeSingularInt32Field(value: &_storage._empty) }()
        case 257: try { try decoder.decodeSingularInt32Field(value: &_storage._encodeAsBytes) }()
        case 258: try { try decoder.decodeSingularInt32Field(value: &_storage._encoded) }()
        case 259: try { try decoder.decodeSingularInt32Field(value: &_storage._encodedJsonstring) }()
        case 260: try { try decoder.decodeSingularInt32Field(value: &_storage._encodedSize) }()
        case 261: try { try decoder.decodeSingularInt32Field(value: &_storage._encodeField) }()
        case 262: try { try decoder.decodeSingularInt32Field(value: &_storage._encoder) }()
        case 263: try { try decoder.decodeSingularInt32Field(value: &_storage._end) }()
        case 264: try { try decoder.decodeSingularInt32Field(value: &_storage._endArray) }()
        case 265: try { try decoder.decodeSingularInt32Field(value: &_storage._endMessageField) }()
        case 266: try { try decoder.decodeSingularInt32Field(value: &_storage._endObject) }()
        case 267: try { try decoder.decodeSingularInt32Field(value: &_storage._endRegularField) }()
        case 268: try { try decoder.decodeSingularInt32Field(value: &_storage._enum) }()
        case 269: try { try decoder.decodeSingularInt32Field(value: &_storage._enumDescriptorProto) }()
        case 270: try { try decoder.decodeSingularInt32Field(value: &_storage._enumOptions) }()
        case 271: try { try decoder.decodeSingularInt32Field(value: &_storage._enumReservedRange) }()
        case 272: try { try decoder.decodeSingularInt32Field(value: &_storage._enumType) }()
        case 273: try { try decoder.decodeSingularInt32Field(value: &_storage._enumvalue) }()
        case 274: try { try decoder.decodeSingularInt32Field(value: &_storage._enumValueDescriptorProto) }()
        case 275: try { try decoder.decodeSingularInt32Field(value: &_storage._enumValueOptions) }()
        case 276: try { try decoder.decodeSingularInt32Field(value: &_storage._equatable) }()
        case 277: try { try decoder.decodeSingularInt32Field(value: &_storage._error) }()
        case 278: try { try decoder.decodeSingularInt32Field(value: &_storage._escaping) }()
        case 279: try { try decoder.decodeSingularInt32Field(value: &_storage._expressibleByArrayLiteral) }()
        case 280: try { try decoder.decodeSingularInt32Field(value: &_storage._expressibleByDictionaryLiteral) }()
        case 281: try { try decoder.decodeSingularInt32Field(value: &_storage._ext) }()
        case 282: try { try decoder.decodeSingularInt32Field(value: &_storage._extDecoder) }()
        case 283: try { try decoder.decodeSingularInt32Field(value: &_storage._extendedGraphemeClusterLiteral) }()
        case 284: try { try decoder.decodeSingularInt32Field(value: &_storage._extendedGraphemeClusterLiteralType) }()
        case 285: try { try decoder.decodeSingularInt32Field(value: &_storage._extendee) }()
        case 286: try { try decoder.decodeSingularInt32Field(value: &_storage._extensibleMessage) }()
        case 287: try { try decoder.decodeSingularInt32Field(value: &_storage._extension) }()
        case 288: try { try decoder.decodeSingularInt32Field(value: &_storage._extensionField) }()
        case 289: try { try decoder.decodeSingularInt32Field(value: &_storage._extensionFieldNumber) }()
        case 290: try { try decoder.decodeSingularInt32Field(value: &_storage._extensionFields) }()
        case 291: try { try decoder.decodeSingularInt32Field(value: &_storage._extensionFieldsAsMessageSet) }()
        case 292: try { try decoder.decodeSingularInt32Field(value: &_storage._extensionFieldValueSet) }()
        case 293: try { try decoder.decodeSingularInt32Field(value: &_storage._extensionMap) }()
        case 294: try { try decoder.decodeSingularInt32Field(value: &_storage._extensionRange) }()
        case 295: try { try decoder.decodeSingularInt32Field(value: &_storage._extensionRangeOptions) }()
        case 296: try { try decoder.decodeSingularInt32Field(value: &_storage._extensions) }()
        case 297: try { try decoder.decodeSingularInt32Field(value: &_storage._extras) }()
        case 298: try { try decoder.decodeSingularInt32Field(value: &_storage._f) }()
        case 299: try { try decoder.decodeSingularInt32Field(value: &_storage._false) }()
        case 300: try { try decoder.decodeSingularInt32Field(value: &_storage._features) }()
        case 301: try { try decoder.decodeSingularInt32Field(value: &_storage._featureSet) }()
        case 302: try { try decoder.decodeSingularInt32Field(value: &_storage._featureSetDefaults) }()
        case 303: try { try decoder.decodeSingularInt32Field(value: &_storage._featureSetEditionDefault) }()
        case 304: try { try decoder.decodeSingularInt32Field(value: &_storage._field) }()
        case 305: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldData) }()
        case 306: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldDescriptorProto) }()
        case 307: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldMask) }()
        case 308: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldName) }()
        case 309: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldNameCount) }()
        case 310: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldNum) }()
        case 311: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldNumber) }()
        case 312: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldNumberForProto) }()
        case 313: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldOptions) }()
        case 314: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldPresence) }()
        case 315: try { try decoder.decodeSingularInt32Field(value: &_storage._fields) }()
        case 316: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldSize) }()
        case 317: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldTag) }()
        case 318: try { try decoder.decodeSingularInt32Field(value: &_storage._fieldType) }()
        case 319: try { try decoder.decodeSingularInt32Field(value: &_storage._file) }()
        case 320: try { try decoder.decodeSingularInt32Field(value: &_storage._fileDescriptorProto) }()
        case 321: try { try decoder.decodeSingularInt32Field(value: &_storage._fileDescriptorSet) }()
        case 322: try { try decoder.decodeSingularInt32Field(value: &_storage._fileName) }()
        case 323: try { try decoder.decodeSingularInt32Field(value: &_storage._fileOptions) }()
        case 324: try { try decoder.decodeSingularInt32Field(value: &_storage._filter) }()
        case 325: try { try decoder.decodeSingularInt32Field(value: &_storage._final) }()
        case 326: try { try decoder.decodeSingularInt32Field(value: &_storage._first) }()
        case 327: try { try decoder.decodeSingularInt32Field(value: &_storage._firstItem) }()
        case 328: try { try decoder.decodeSingularInt32Field(value: &_storage._float) }()
        case 329: try { try decoder.decodeSingularInt32Field(value: &_storage._floatLiteral) }()
        case 330: try { try decoder.decodeSingularInt32Field(value: &_storage._floatLiteralType) }()
        case 331: try { try decoder.decodeSingularInt32Field(value: &_storage._floatValue) }()
        case 332: try { try decoder.decodeSingularInt32Field(value: &_storage._forMessageName) }()
        case 333: try { try decoder.decodeSingularInt32Field(value: &_storage._formUnion) }()
        case 334: try { try decoder.decodeSingularInt32Field(value: &_storage._forReadingFrom) }()
        case 335: try { try decoder.decodeSingularInt32Field(value: &_storage._forTypeURL) }()
        case 336: try { try decoder.decodeSingularInt32Field(value: &_storage._forwardParser) }()
        case 337: try { try decoder.decodeSingularInt32Field(value: &_storage._forWritingInto) }()
        case 338: try { try decoder.decodeSingularInt32Field(value: &_storage._from) }()
        case 339: try { try decoder.decodeSingularInt32Field(value: &_storage._fromAscii2) }()
        case 340: try { try decoder.decodeSingularInt32Field(value: &_storage._fromAscii4) }()
        case 341: try { try decoder.decodeSingularInt32Field(value: &_storage._fromByteOffset) }()
        case 342: try { try decoder.decodeSingularInt32Field(value: &_storage._fromHexDigit) }()
        case 343: try { try decoder.decodeSingularInt32Field(value: &_storage._fullName) }()
        case 344: try { try decoder.decodeSingularInt32Field(value: &_storage._func) }()
        case 345: try { try decoder.decodeSingularInt32Field(value: &_storage._g) }()
        case 346: try { try decoder.decodeSingularInt32Field(value: &_storage._generatedCodeInfo) }()
        case 347: try { try decoder.decodeSingularInt32Field(value: &_storage._get) }()
        case 348: try { try decoder.decodeSingularInt32Field(value: &_storage._getExtensionValue) }()
        case 349: try { try decoder.decodeSingularInt32Field(value: &_storage._getValue) }()
        case 350: try { try decoder.decodeSingularInt32Field(value: &_storage._googleapis) }()
        case 351: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufAny) }()
        case 352: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufApi) }()
        case 353: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufBoolValue) }()
        case 354: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufBytesValue) }()
        case 355: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufDescriptorProto) }()
        case 356: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufDoubleValue) }()
        case 357: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufDuration) }()
        case 358: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufEdition) }()
        case 359: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufEmpty) }()
        case 360: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufEnum) }()
        case 361: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufEnumDescriptorProto) }()
        case 362: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufEnumOptions) }()
        case 363: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufEnumValue) }()
        case 364: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufEnumValueDescriptorProto) }()
        case 365: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufEnumValueOptions) }()
        case 366: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufExtensionRangeOptions) }()
        case 367: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufFeatureSet) }()
        case 368: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufFeatureSetDefaults) }()
        case 369: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufField) }()
        case 370: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufFieldDescriptorProto) }()
        case 371: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufFieldMask) }()
        case 372: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufFieldOptions) }()
        case 373: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufFileDescriptorProto) }()
        case 374: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufFileDescriptorSet) }()
        case 375: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufFileOptions) }()
        case 376: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufFloatValue) }()
        case 377: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufGeneratedCodeInfo) }()
        case 378: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufInt32Value) }()
        case 379: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufInt64Value) }()
        case 380: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufListValue) }()
        case 381: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufMessageOptions) }()
        case 382: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufMethod) }()
        case 383: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufMethodDescriptorProto) }()
        case 384: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufMethodOptions) }()
        case 385: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufMixin) }()
        case 386: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufNullValue) }()
        case 387: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufOneofDescriptorProto) }()
        case 388: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufOneofOptions) }()
        case 389: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufOption) }()
        case 390: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufServiceDescriptorProto) }()
        case 391: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufServiceOptions) }()
        case 392: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufSourceCodeInfo) }()
        case 393: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufSourceContext) }()
        case 394: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufStringValue) }()
        case 395: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufStruct) }()
        case 396: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufSyntax) }()
        case 397: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufTimestamp) }()
        case 398: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufType) }()
        case 399: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufUint32Value) }()
        case 400: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufUint64Value) }()
        case 401: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufUninterpretedOption) }()
        case 402: try { try decoder.decodeSingularInt32Field(value: &_storage._googleProtobufValue) }()
        case 403: try { try decoder.decodeSingularInt32Field(value: &_storage._goPackage) }()
        case 404: try { try decoder.decodeSingularInt32Field(value: &_storage._group) }()
        case 405: try { try decoder.decodeSingularInt32Field(value: &_storage._groupFieldNumberStack) }()
        case 406: try { try decoder.decodeSingularInt32Field(value: &_storage._groupSize) }()
        case 407: try { try decoder.decodeSingularInt32Field(value: &_storage._hadOneofValue) }()
        case 408: try { try decoder.decodeSingularInt32Field(value: &_storage._handleConflictingOneOf) }()
        case 409: try { try decoder.decodeSingularInt32Field(value: &_storage._hasAggregateValue_p) }()
        case 410: try { try decoder.decodeSingularInt32Field(value: &_storage._hasAllowAlias_p) }()
        case 411: try { try decoder.decodeSingularInt32Field(value: &_storage._hasBegin_p) }()
        case 412: try { try decoder.decodeSingularInt32Field(value: &_storage._hasCcEnableArenas_p) }()
        case 413: try { try decoder.decodeSingularInt32Field(value: &_storage._hasCcGenericServices_p) }()
        case 414: try { try decoder.decodeSingularInt32Field(value: &_storage._hasClientStreaming_p) }()
        case 415: try { try decoder.decodeSingularInt32Field(value: &_storage._hasCsharpNamespace_p) }()
        case 416: try { try decoder.decodeSingularInt32Field(value: &_storage._hasCtype_p) }()
        case 417: try { try decoder.decodeSingularInt32Field(value: &_storage._hasDebugRedact_p) }()
        case 418: try { try decoder.decodeSingularInt32Field(value: &_storage._hasDefaultValue_p) }()
        case 419: try { try decoder.decodeSingularInt32Field(value: &_storage._hasDeprecated_p) }()
        case 420: try { try decoder.decodeSingularInt32Field(value: &_storage._hasDeprecatedLegacyJsonFieldConflicts_p) }()
        case 421: try { try decoder.decodeSingularInt32Field(value: &_storage._hasDoubleValue_p) }()
        case 422: try { try decoder.decodeSingularInt32Field(value: &_storage._hasEdition_p) }()
        case 423: try { try decoder.decodeSingularInt32Field(value: &_storage._hasEnd_p) }()
        case 424: try { try decoder.decodeSingularInt32Field(value: &_storage._hasEnumType_p) }()
        case 425: try { try decoder.decodeSingularInt32Field(value: &_storage._hasExtendee_p) }()
        case 426: try { try decoder.decodeSingularInt32Field(value: &_storage._hasExtensionValue_p) }()
        case 427: try { try decoder.decodeSingularInt32Field(value: &_storage._hasFeatures_p) }()
        case 428: try { try decoder.decodeSingularInt32Field(value: &_storage._hasFieldPresence_p) }()
        case 429: try { try decoder.decodeSingularInt32Field(value: &_storage._hasFullName_p) }()
        case 430: try { try decoder.decodeSingularInt32Field(value: &_storage._hasGoPackage_p) }()
        case 431: try { try decoder.decodeSingularInt32Field(value: &_storage._hash) }()
        case 432: try { try decoder.decodeSingularInt32Field(value: &_storage._hashable) }()
        case 433: try { try decoder.decodeSingularInt32Field(value: &_storage._hasher) }()
        case 434: try { try decoder.decodeSingularInt32Field(value: &_storage._hashVisitor) }()
        case 435: try { try decoder.decodeSingularInt32Field(value: &_storage._hasIdempotencyLevel_p) }()
        case 436: try { try decoder.decodeSingularInt32Field(value: &_storage._hasIdentifierValue_p) }()
        case 437: try { try decoder.decodeSingularInt32Field(value: &_storage._hasInputType_p) }()
        case 438: try { try decoder.decodeSingularInt32Field(value: &_storage._hasIsExtension_p) }()
        case 439: try { try decoder.decodeSingularInt32Field(value: &_storage._hasJavaGenerateEqualsAndHash_p) }()
        case 440: try { try decoder.decodeSingularInt32Field(value: &_storage._hasJavaGenericServices_p) }()
        case 441: try { try decoder.decodeSingularInt32Field(value: &_storage._hasJavaMultipleFiles_p) }()
        case 442: try { try decoder.decodeSingularInt32Field(value: &_storage._hasJavaOuterClassname_p) }()
        case 443: try { try decoder.decodeSingularInt32Field(value: &_storage._hasJavaPackage_p) }()
        case 444: try { try decoder.decodeSingularInt32Field(value: &_storage._hasJavaStringCheckUtf8_p) }()
        case 445: try { try decoder.decodeSingularInt32Field(value: &_storage._hasJsonFormat_p) }()
        case 446: try { try decoder.decodeSingularInt32Field(value: &_storage._hasJsonName_p) }()
        case 447: try { try decoder.decodeSingularInt32Field(value: &_storage._hasJstype_p) }()
        case 448: try { try decoder.decodeSingularInt32Field(value: &_storage._hasLabel_p) }()
        case 449: try { try decoder.decodeSingularInt32Field(value: &_storage._hasLazy_p) }()
        case 450: try { try decoder.decodeSingularInt32Field(value: &_storage._hasLeadingComments_p) }()
        case 451: try { try decoder.decodeSingularInt32Field(value: &_storage._hasMapEntry_p) }()
        case 452: try { try decoder.decodeSingularInt32Field(value: &_storage._hasMaximumEdition_p) }()
        case 453: try { try decoder.decodeSingularInt32Field(value: &_storage._hasMessageEncoding_p) }()
        case 454: try { try decoder.decodeSingularInt32Field(value: &_storage._hasMessageSetWireFormat_p) }()
        case 455: try { try decoder.decodeSingularInt32Field(value: &_storage._hasMinimumEdition_p) }()
        case 456: try { try decoder.decodeSingularInt32Field(value: &_storage._hasName_p) }()
        case 457: try { try decoder.decodeSingularInt32Field(value: &_storage._hasNamePart_p) }()
        case 458: try { try decoder.decodeSingularInt32Field(value: &_storage._hasNegativeIntValue_p) }()
        case 459: try { try decoder.decodeSingularInt32Field(value: &_storage._hasNoStandardDescriptorAccessor_p) }()
        case 460: try { try decoder.decodeSingularInt32Field(value: &_storage._hasNumber_p) }()
        case 461: try { try decoder.decodeSingularInt32Field(value: &_storage._hasObjcClassPrefix_p) }()
        case 462: try { try decoder.decodeSingularInt32Field(value: &_storage._hasOneofIndex_p) }()
        case 463: try { try decoder.decodeSingularInt32Field(value: &_storage._hasOptimizeFor_p) }()
        case 464: try { try decoder.decodeSingularInt32Field(value: &_storage._hasOptions_p) }()
        case 465: try { try decoder.decodeSingularInt32Field(value: &_storage._hasOutputType_p) }()
        case 466: try { try decoder.decodeSingularInt32Field(value: &_storage._hasPackage_p) }()
        case 467: try { try decoder.decodeSingularInt32Field(value: &_storage._hasPacked_p) }()
        case 468: try { try decoder.decodeSingularInt32Field(value: &_storage._hasPhpClassPrefix_p) }()
        case 469: try { try decoder.decodeSingularInt32Field(value: &_storage._hasPhpGenericServices_p) }()
        case 470: try { try decoder.decodeSingularInt32Field(value: &_storage._hasPhpMetadataNamespace_p) }()
        case 471: try { try decoder.decodeSingularInt32Field(value: &_storage._hasPhpNamespace_p) }()
        case 472: try { try decoder.decodeSingularInt32Field(value: &_storage._hasPositiveIntValue_p) }()
        case 473: try { try decoder.decodeSingularInt32Field(value: &_storage._hasProto3Optional_p) }()
        case 474: try { try decoder.decodeSingularInt32Field(value: &_storage._hasPyGenericServices_p) }()
        case 475: try { try decoder.decodeSingularInt32Field(value: &_storage._hasRepeated_p) }()
        case 476: try { try decoder.decodeSingularInt32Field(value: &_storage._hasRepeatedFieldEncoding_p) }()
        case 477: try { try decoder.decodeSingularInt32Field(value: &_storage._hasReserved_p) }()
        case 478: try { try decoder.decodeSingularInt32Field(value: &_storage._hasRetention_p) }()
        case 479: try { try decoder.decodeSingularInt32Field(value: &_storage._hasRubyPackage_p) }()
        case 480: try { try decoder.decodeSingularInt32Field(value: &_storage._hasSemantic_p) }()
        case 481: try { try decoder.decodeSingularInt32Field(value: &_storage._hasServerStreaming_p) }()
        case 482: try { try decoder.decodeSingularInt32Field(value: &_storage._hasSourceCodeInfo_p) }()
        case 483: try { try decoder.decodeSingularInt32Field(value: &_storage._hasSourceContext_p) }()
        case 484: try { try decoder.decodeSingularInt32Field(value: &_storage._hasSourceFile_p) }()
        case 485: try { try decoder.decodeSingularInt32Field(value: &_storage._hasStart_p) }()
        case 486: try { try decoder.decodeSingularInt32Field(value: &_storage._hasStringValue_p) }()
        case 487: try { try decoder.decodeSingularInt32Field(value: &_storage._hasSwiftPrefix_p) }()
        case 488: try { try decoder.decodeSingularInt32Field(value: &_storage._hasSyntax_p) }()
        case 489: try { try decoder.decodeSingularInt32Field(value: &_storage._hasTrailingComments_p) }()
        case 490: try { try decoder.decodeSingularInt32Field(value: &_storage._hasType_p) }()
        case 491: try { try decoder.decodeSingularInt32Field(value: &_storage._hasTypeName_p) }()
        case 492: try { try decoder.decodeSingularInt32Field(value: &_storage._hasUnverifiedLazy_p) }()
        case 493: try { try decoder.decodeSingularInt32Field(value: &_storage._hasUtf8Validation_p) }()
        case 494: try { try decoder.decodeSingularInt32Field(value: &_storage._hasValue_p) }()
        case 495: try { try decoder.decodeSingularInt32Field(value: &_storage._hasVerification_p) }()
        case 496: try { try decoder.decodeSingularInt32Field(value: &_storage._hasWeak_p) }()
        case 497: try { try decoder.decodeSingularInt32Field(value: &_storage._hour) }()
        case 498: try { try decoder.decodeSingularInt32Field(value: &_storage._i) }()
        case 499: try { try decoder.decodeSingularInt32Field(value: &_storage._idempotencyLevel) }()
        case 500: try { try decoder.decodeSingularInt32Field(value: &_storage._identifierValue) }()
        case 501: try { try decoder.decodeSingularInt32Field(value: &_storage._if) }()
        case 502: try { try decoder.decodeSingularInt32Field(value: &_storage._ignoreUnknownFields) }()
        case 503: try { try decoder.decodeSingularInt32Field(value: &_storage._index) }()
        case 504: try { try decoder.decodeSingularInt32Field(value: &_storage._init_p) }()
        case 505: try { try decoder.decodeSingularInt32Field(value: &_storage._inout) }()
        case 506: try { try decoder.decodeSingularInt32Field(value: &_storage._inputType) }()
        case 507: try { try decoder.decodeSingularInt32Field(value: &_storage._insert) }()
        case 508: try { try decoder.decodeSingularInt32Field(value: &_storage._int) }()
        case 509: try { try decoder.decodeSingularInt32Field(value: &_storage._int32) }()
        case 510: try { try decoder.decodeSingularInt32Field(value: &_storage._int32Value) }()
        case 511: try { try decoder.decodeSingularInt32Field(value: &_storage._int64) }()
        case 512: try { try decoder.decodeSingularInt32Field(value: &_storage._int64Value) }()
        case 513: try { try decoder.decodeSingularInt32Field(value: &_storage._int8) }()
        case 514: try { try decoder.decodeSingularInt32Field(value: &_storage._integerLiteral) }()
        case 515: try { try decoder.decodeSingularInt32Field(value: &_storage._integerLiteralType) }()
        case 516: try { try decoder.decodeSingularInt32Field(value: &_storage._intern) }()
        case 517: try { try decoder.decodeSingularInt32Field(value: &_storage._internal) }()
        case 518: try { try decoder.decodeSingularInt32Field(value: &_storage._internalState) }()
        case 519: try { try decoder.decodeSingularInt32Field(value: &_storage._into) }()
        case 520: try { try decoder.decodeSingularInt32Field(value: &_storage._ints) }()
        case 521: try { try decoder.decodeSingularInt32Field(value: &_storage._isA) }()
        case 522: try { try decoder.decodeSingularInt32Field(value: &_storage._isEqual) }()
        case 523: try { try decoder.decodeSingularInt32Field(value: &_storage._isEqualTo) }()
        case 524: try { try decoder.decodeSingularInt32Field(value: &_storage._isExtension) }()
        case 525: try { try decoder.decodeSingularInt32Field(value: &_storage._isInitialized_p) }()
        case 526: try { try decoder.decodeSingularInt32Field(value: &_storage._isNegative) }()
        case 527: try { try decoder.decodeSingularInt32Field(value: &_storage._isUnset) }()
        case 528: try { try decoder.decodeSingularInt32Field(value: &_storage._itemTagsEncodedSize) }()
        case 529: try { try decoder.decodeSingularInt32Field(value: &_storage._iterator) }()
        case 530: try { try decoder.decodeSingularInt32Field(value: &_storage._javaGenerateEqualsAndHash) }()
        case 531: try { try decoder.decodeSingularInt32Field(value: &_storage._javaGenericServices) }()
        case 532: try { try decoder.decodeSingularInt32Field(value: &_storage._javaMultipleFiles) }()
        case 533: try { try decoder.decodeSingularInt32Field(value: &_storage._javaOuterClassname) }()
        case 534: try { try decoder.decodeSingularInt32Field(value: &_storage._javaPackage) }()
        case 535: try { try decoder.decodeSingularInt32Field(value: &_storage._javaStringCheckUtf8) }()
        case 536: try { try decoder.decodeSingularInt32Field(value: &_storage._jsondecoder) }()
        case 537: try { try decoder.decodeSingularInt32Field(value: &_storage._jsondecodingError) }()
        case 538: try { try decoder.decodeSingularInt32Field(value: &_storage._jsondecodingOptions) }()
        case 539: try { try decoder.decodeSingularInt32Field(value: &_storage._jsonEncoder) }()
        case 540: try { try decoder.decodeSingularInt32Field(value: &_storage._jsonencodingError) }()
        case 541: try { try decoder.decodeSingularInt32Field(value: &_storage._jsonencodingOptions) }()
        case 542: try { try decoder.decodeSingularInt32Field(value: &_storage._jsonencodingVisitor) }()
        case 543: try { try decoder.decodeSingularInt32Field(value: &_storage._jsonFormat) }()
        case 544: try { try decoder.decodeSingularInt32Field(value: &_storage._jsonmapEncodingVisitor) }()
        case 545: try { try decoder.decodeSingularInt32Field(value: &_storage._jsonName) }()
        case 546: try { try decoder.decodeSingularInt32Field(value: &_storage._jsonPath) }()
        case 547: try { try decoder.decodeSingularInt32Field(value: &_storage._jsonPaths) }()
        case 548: try { try decoder.decodeSingularInt32Field(value: &_storage._jsonscanner) }()
        case 549: try { try decoder.decodeSingularInt32Field(value: &_storage._jsonString) }()
        case 550: try { try decoder.decodeSingularInt32Field(value: &_storage._jsonText) }()
        case 551: try { try decoder.decodeSingularInt32Field(value: &_storage._jsonUtf8Bytes) }()
        case 552: try { try decoder.decodeSingularInt32Field(value: &_storage._jsonUtf8Data) }()
        case 553: try { try decoder.decodeSingularInt32Field(value: &_storage._jstype) }()
        case 554: try { try decoder.decodeSingularInt32Field(value: &_storage._k) }()
        case 555: try { try decoder.decodeSingularInt32Field(value: &_storage._kChunkSize) }()
        case 556: try { try decoder.decodeSingularInt32Field(value: &_storage._key) }()
        case 557: try { try decoder.decodeSingularInt32Field(value: &_storage._keyField) }()
        case 558: try { try decoder.decodeSingularInt32Field(value: &_storage._keyFieldOpt) }()
        case 559: try { try decoder.decodeSingularInt32Field(value: &_storage._keyType) }()
        case 560: try { try decoder.decodeSingularInt32Field(value: &_storage._kind) }()
        case 561: try { try decoder.decodeSingularInt32Field(value: &_storage._l) }()
        case 562: try { try decoder.decodeSingularInt32Field(value: &_storage._label) }()
        case 563: try { try decoder.decodeSingularInt32Field(value: &_storage._lazy) }()
        case 564: try { try decoder.decodeSingularInt32Field(value: &_storage._leadingComments) }()
        case 565: try { try decoder.decodeSingularInt32Field(value: &_storage._leadingDetachedComments) }()
        case 566: try { try decoder.decodeSingularInt32Field(value: &_storage._length) }()
        case 567: try { try decoder.decodeSingularInt32Field(value: &_storage._lessThan) }()
        case 568: try { try decoder.decodeSingularInt32Field(value: &_storage._let) }()
        case 569: try { try decoder.decodeSingularInt32Field(value: &_storage._lhs) }()
        case 570: try { try decoder.decodeSingularInt32Field(value: &_storage._list) }()
        case 571: try { try decoder.decodeSingularInt32Field(value: &_storage._listOfMessages) }()
        case 572: try { try decoder.decodeSingularInt32Field(value: &_storage._listValue) }()
        case 573: try { try decoder.decodeSingularInt32Field(value: &_storage._littleEndian) }()
        case 574: try { try decoder.decodeSingularInt32Field(value: &_storage._littleEndianBytes) }()
        case 575: try { try decoder.decodeSingularInt32Field(value: &_storage._load) }()
        case 576: try { try decoder.decodeSingularInt32Field(value: &_storage._localHasher) }()
        case 577: try { try decoder.decodeSingularInt32Field(value: &_storage._location) }()
        case 578: try { try decoder.decodeSingularInt32Field(value: &_storage._m) }()
        case 579: try { try decoder.decodeSingularInt32Field(value: &_storage._major) }()
        case 580: try { try decoder.decodeSingularInt32Field(value: &_storage._makeAsyncIterator) }()
        case 581: try { try decoder.decodeSingularInt32Field(value: &_storage._makeIterator) }()
        case 582: try { try decoder.decodeSingularInt32Field(value: &_storage._map) }()
        case 583: try { try decoder.decodeSingularInt32Field(value: &_storage._mapEntry) }()
        case 584: try { try decoder.decodeSingularInt32Field(value: &_storage._mapKeyType) }()
        case 585: try { try decoder.decodeSingularInt32Field(value: &_storage._mapToMessages) }()
        case 586: try { try decoder.decodeSingularInt32Field(value: &_storage._mapValueType) }()
        case 587: try { try decoder.decodeSingularInt32Field(value: &_storage._mapVisitor) }()
        case 588: try { try decoder.decodeSingularInt32Field(value: &_storage._maximumEdition) }()
        case 589: try { try decoder.decodeSingularInt32Field(value: &_storage._mdayStart) }()
        case 590: try { try decoder.decodeSingularInt32Field(value: &_storage._merge) }()
        case 591: try { try decoder.decodeSingularInt32Field(value: &_storage._message) }()
        case 592: try { try decoder.decodeSingularInt32Field(value: &_storage._messageDepthLimit) }()
        case 593: try { try decoder.decodeSingularInt32Field(value: &_storage._messageEncoding) }()
        case 594: try { try decoder.decodeSingularInt32Field(value: &_storage._messageExtension) }()
        case 595: try { try decoder.decodeSingularInt32Field(value: &_storage._messageImplementationBase) }()
        case 596: try { try decoder.decodeSingularInt32Field(value: &_storage._messageOptions) }()
        case 597: try { try decoder.decodeSingularInt32Field(value: &_storage._messageSet) }()
        case 598: try { try decoder.decodeSingularInt32Field(value: &_storage._messageSetWireFormat) }()
        case 599: try { try decoder.decodeSingularInt32Field(value: &_storage._messageSize) }()
        case 600: try { try decoder.decodeSingularInt32Field(value: &_storage._messageType) }()
        case 601: try { try decoder.decodeSingularInt32Field(value: &_storage._method) }()
        case 602: try { try decoder.decodeSingularInt32Field(value: &_storage._methodDescriptorProto) }()
        case 603: try { try decoder.decodeSingularInt32Field(value: &_storage._methodOptions) }()
        case 604: try { try decoder.decodeSingularInt32Field(value: &_storage._methods) }()
        case 605: try { try decoder.decodeSingularInt32Field(value: &_storage._min) }()
        case 606: try { try decoder.decodeSingularInt32Field(value: &_storage._minimumEdition) }()
        case 607: try { try decoder.decodeSingularInt32Field(value: &_storage._minor) }()
        case 608: try { try decoder.decodeSingularInt32Field(value: &_storage._mixin) }()
        case 609: try { try decoder.decodeSingularInt32Field(value: &_storage._mixins) }()
        case 610: try { try decoder.decodeSingularInt32Field(value: &_storage._modifier) }()
        case 611: try { try decoder.decodeSingularInt32Field(value: &_storage._modify) }()
        case 612: try { try decoder.decodeSingularInt32Field(value: &_storage._month) }()
        case 613: try { try decoder.decodeSingularInt32Field(value: &_storage._msgExtension) }()
        case 614: try { try decoder.decodeSingularInt32Field(value: &_storage._mutating) }()
        case 615: try { try decoder.decodeSingularInt32Field(value: &_storage._n) }()
        case 616: try { try decoder.decodeSingularInt32Field(value: &_storage._name) }()
        case 617: try { try decoder.decodeSingularInt32Field(value: &_storage._nameDescription) }()
        case 618: try { try decoder.decodeSingularInt32Field(value: &_storage._nameMap) }()
        case 619: try { try decoder.decodeSingularInt32Field(value: &_storage._namePart) }()
        case 620: try { try decoder.decodeSingularInt32Field(value: &_storage._names) }()
        case 621: try { try decoder.decodeSingularInt32Field(value: &_storage._nanos) }()
        case 622: try { try decoder.decodeSingularInt32Field(value: &_storage._negativeIntValue) }()
        case 623: try { try decoder.decodeSingularInt32Field(value: &_storage._nestedType) }()
        case 624: try { try decoder.decodeSingularInt32Field(value: &_storage._newL) }()
        case 625: try { try decoder.decodeSingularInt32Field(value: &_storage._newList) }()
        case 626: try { try decoder.decodeSingularInt32Field(value: &_storage._newValue) }()
        case 627: try { try decoder.decodeSingularInt32Field(value: &_storage._next) }()
        case 628: try { try decoder.decodeSingularInt32Field(value: &_storage._nextByte) }()
        case 629: try { try decoder.decodeSingularInt32Field(value: &_storage._nextFieldNumber) }()
        case 630: try { try decoder.decodeSingularInt32Field(value: &_storage._nextVarInt) }()
        case 631: try { try decoder.decodeSingularInt32Field(value: &_storage._nil) }()
        case 632: try { try decoder.decodeSingularInt32Field(value: &_storage._nilLiteral) }()
        case 633: try { try decoder.decodeSingularInt32Field(value: &_storage._noStandardDescriptorAccessor) }()
        case 634: try { try decoder.decodeSingularInt32Field(value: &_storage._nullValue) }()
        case 635: try { try decoder.decodeSingularInt32Field(value: &_storage._number) }()
        case 636: try { try decoder.decodeSingularInt32Field(value: &_storage._numberValue) }()
        case 637: try { try decoder.decodeSingularInt32Field(value: &_storage._objcClassPrefix) }()
        case 638: try { try decoder.decodeSingularInt32Field(value: &_storage._of) }()
        case 639: try { try decoder.decodeSingularInt32Field(value: &_storage._oneOf) }()
        case 640: try { try decoder.decodeSingularInt32Field(value: &_storage._oneofDecl) }()
        case 641: try { try decoder.decodeSingularInt32Field(value: &_storage._oneofDescriptorProto) }()
        case 642: try { try decoder.decodeSingularInt32Field(value: &_storage._oneofIndex) }()
        case 643: try { try decoder.decodeSingularInt32Field(value: &_storage._oneofOptions) }()
        case 644: try { try decoder.decodeSingularInt32Field(value: &_storage._oneofs) }()
        case 645: try { try decoder.decodeSingularInt32Field(value: &_storage._oneOfKind) }()
        case 646: try { try decoder.decodeSingularInt32Field(value: &_storage._optimizeFor) }()
        case 647: try { try decoder.decodeSingularInt32Field(value: &_storage._optimizeMode) }()
        case 648: try { try decoder.decodeSingularInt32Field(value: &_storage._option) }()
        case 649: try { try decoder.decodeSingularInt32Field(value: &_storage._optionalEnumExtensionField) }()
        case 650: try { try decoder.decodeSingularInt32Field(value: &_storage._optionalExtensionField) }()
        case 651: try { try decoder.decodeSingularInt32Field(value: &_storage._optionalGroupExtensionField) }()
        case 652: try { try decoder.decodeSingularInt32Field(value: &_storage._optionalMessageExtensionField) }()
        case 653: try { try decoder.decodeSingularInt32Field(value: &_storage._optionRetention) }()
        case 654: try { try decoder.decodeSingularInt32Field(value: &_storage._options) }()
        case 655: try { try decoder.decodeSingularInt32Field(value: &_storage._optionTargetType) }()
        case 656: try { try decoder.decodeSingularInt32Field(value: &_storage._other) }()
        case 657: try { try decoder.decodeSingularInt32Field(value: &_storage._others) }()
        case 658: try { try decoder.decodeSingularInt32Field(value: &_storage._out) }()
        case 659: try { try decoder.decodeSingularInt32Field(value: &_storage._outputType) }()
        case 660: try { try decoder.decodeSingularInt32Field(value: &_storage._p) }()
        case 661: try { try decoder.decodeSingularInt32Field(value: &_storage._package) }()
        case 662: try { try decoder.decodeSingularInt32Field(value: &_storage._packed) }()
        case 663: try { try decoder.decodeSingularInt32Field(value: &_storage._packedBool) }()
        case 664: try { try decoder.decodeSingularInt32Field(value: &_storage._packedDouble) }()
        case 665: try { try decoder.decodeSingularInt32Field(value: &_storage._packedEnum) }()
        case 666: try { try decoder.decodeSingularInt32Field(value: &_storage._packedEnumExtensionField) }()
        case 667: try { try decoder.decodeSingularInt32Field(value: &_storage._packedExtensionField) }()
        case 668: try { try decoder.decodeSingularInt32Field(value: &_storage._packedFixed32) }()
        case 669: try { try decoder.decodeSingularInt32Field(value: &_storage._packedFixed64) }()
        case 670: try { try decoder.decodeSingularInt32Field(value: &_storage._packedFloat) }()
        case 671: try { try decoder.decodeSingularInt32Field(value: &_storage._packedInt32) }()
        case 672: try { try decoder.decodeSingularInt32Field(value: &_storage._packedInt64) }()
        case 673: try { try decoder.decodeSingularInt32Field(value: &_storage._packedSfixed32) }()
        case 674: try { try decoder.decodeSingularInt32Field(value: &_storage._packedSfixed64) }()
        case 675: try { try decoder.decodeSingularInt32Field(value: &_storage._packedSint32) }()
        case 676: try { try decoder.decodeSingularInt32Field(value: &_storage._packedSint64) }()
        case 677: try { try decoder.decodeSingularInt32Field(value: &_storage._packedUint32) }()
        case 678: try { try decoder.decodeSingularInt32Field(value: &_storage._packedUint64) }()
        case 679: try { try decoder.decodeSingularInt32Field(value: &_storage._padding) }()
        case 680: try { try decoder.decodeSingularInt32Field(value: &_storage._parent) }()
        case 681: try { try decoder.decodeSingularInt32Field(value: &_storage._parse) }()
        case 682: try { try decoder.decodeSingularInt32Field(value: &_storage._path) }()
        case 683: try { try decoder.decodeSingularInt32Field(value: &_storage._paths) }()
        case 684: try { try decoder.decodeSingularInt32Field(value: &_storage._payload) }()
        case 685: try { try decoder.decodeSingularInt32Field(value: &_storage._payloadSize) }()
        case 686: try { try decoder.decodeSingularInt32Field(value: &_storage._phpClassPrefix) }()
        case 687: try { try decoder.decodeSingularInt32Field(value: &_storage._phpGenericServices) }()
        case 688: try { try decoder.decodeSingularInt32Field(value: &_storage._phpMetadataNamespace) }()
        case 689: try { try decoder.decodeSingularInt32Field(value: &_storage._phpNamespace) }()
        case 690: try { try decoder.decodeSingularInt32Field(value: &_storage._pos) }()
        case 691: try { try decoder.decodeSingularInt32Field(value: &_storage._positiveIntValue) }()
        case 692: try { try decoder.decodeSingularInt32Field(value: &_storage._prefix) }()
        case 693: try { try decoder.decodeSingularInt32Field(value: &_storage._preserveProtoFieldNames) }()
        case 694: try { try decoder.decodeSingularInt32Field(value: &_storage._preTraverse) }()
        case 695: try { try decoder.decodeSingularInt32Field(value: &_storage._printUnknownFields) }()
        case 696: try { try decoder.decodeSingularInt32Field(value: &_storage._proto2) }()
        case 697: try { try decoder.decodeSingularInt32Field(value: &_storage._proto3DefaultValue) }()
        case 698: try { try decoder.decodeSingularInt32Field(value: &_storage._proto3Optional) }()
        case 699: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufApiversionCheck) }()
        case 700: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufApiversion3) }()
        case 701: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufBool) }()
        case 702: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufBytes) }()
        case 703: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufDouble) }()
        case 704: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufEnumMap) }()
        case 705: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufExtension) }()
        case 706: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufFixed32) }()
        case 707: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufFixed64) }()
        case 708: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufFloat) }()
        case 709: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufInt32) }()
        case 710: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufInt64) }()
        case 711: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufMap) }()
        case 712: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufMessageMap) }()
        case 713: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufSfixed32) }()
        case 714: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufSfixed64) }()
        case 715: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufSint32) }()
        case 716: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufSint64) }()
        case 717: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufString) }()
        case 718: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufUint32) }()
        case 719: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufUint64) }()
        case 720: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufExtensionFieldValues) }()
        case 721: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufFieldNumber) }()
        case 722: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufGeneratedIsEqualTo) }()
        case 723: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufNameMap) }()
        case 724: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufNewField) }()
        case 725: try { try decoder.decodeSingularInt32Field(value: &_storage._protobufPackage) }()
        case 726: try { try decoder.decodeSingularInt32Field(value: &_storage._protocol) }()
        case 727: try { try decoder.decodeSingularInt32Field(value: &_storage._protoFieldName) }()
        case 728: try { try decoder.decodeSingularInt32Field(value: &_storage._protoMessageName) }()
        case 729: try { try decoder.decodeSingularInt32Field(value: &_storage._protoNameProviding) }()
        case 730: try { try decoder.decodeSingularInt32Field(value: &_storage._protoPaths) }()
        case 731: try { try decoder.decodeSingularInt32Field(value: &_storage._public) }()
        case 732: try { try decoder.decodeSingularInt32Field(value: &_storage._publicDependency) }()
        case 733: try { try decoder.decodeSingularInt32Field(value: &_storage._putBoolValue) }()
        case 734: try { try decoder.decodeSingularInt32Field(value: &_storage._putBytesValue) }()
        case 735: try { try decoder.decodeSingularInt32Field(value: &_storage._putDoubleValue) }()
        case 736: try { try decoder.decodeSingularInt32Field(value: &_storage._putEnumValue) }()
        case 737: try { try decoder.decodeSingularInt32Field(value: &_storage._putFixedUint32) }()
        case 738: try { try decoder.decodeSingularInt32Field(value: &_storage._putFixedUint64) }()
        case 739: try { try decoder.decodeSingularInt32Field(value: &_storage._putFloatValue) }()
        case 740: try { try decoder.decodeSingularInt32Field(value: &_storage._putInt64) }()
        case 741: try { try decoder.decodeSingularInt32Field(value: &_storage._putStringValue) }()
        case 742: try { try decoder.decodeSingularInt32Field(value: &_storage._putUint64) }()
        case 743: try { try decoder.decodeSingularInt32Field(value: &_storage._putUint64Hex) }()
        case 744: try { try decoder.decodeSingularInt32Field(value: &_storage._putVarInt) }()
        case 745: try { try decoder.decodeSingularInt32Field(value: &_storage._putZigZagVarInt) }()
        case 746: try { try decoder.decodeSingularInt32Field(value: &_storage._pyGenericServices) }()
        case 747: try { try decoder.decodeSingularInt32Field(value: &_storage._r) }()
        case 748: try { try decoder.decodeSingularInt32Field(value: &_storage._rawChars) }()
        case 749: try { try decoder.decodeSingularInt32Field(value: &_storage._rawRepresentable) }()
        case 750: try { try decoder.decodeSingularInt32Field(value: &_storage._rawValue) }()
        case 751: try { try decoder.decodeSingularInt32Field(value: &_storage._read4HexDigits) }()
        case 752: try { try decoder.decodeSingularInt32Field(value: &_storage._readBytes) }()
        case 753: try { try decoder.decodeSingularInt32Field(value: &_storage._register) }()
        case 754: try { try decoder.decodeSingularInt32Field(value: &_storage._repeated) }()
        case 755: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedBool) }()
        case 756: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedBytes) }()
        case 757: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedDouble) }()
        case 758: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedEnum) }()
        case 759: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedEnumExtensionField) }()
        case 760: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedExtensionField) }()
        case 761: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedFieldEncoding) }()
        case 762: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedFixed32) }()
        case 763: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedFixed64) }()
        case 764: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedFloat) }()
        case 765: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedGroup) }()
        case 766: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedGroupExtensionField) }()
        case 767: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedInt32) }()
        case 768: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedInt64) }()
        case 769: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedMessage) }()
        case 770: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedMessageExtensionField) }()
        case 771: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedSfixed32) }()
        case 772: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedSfixed64) }()
        case 773: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedSint32) }()
        case 774: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedSint64) }()
        case 775: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedString) }()
        case 776: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedUint32) }()
        case 777: try { try decoder.decodeSingularInt32Field(value: &_storage._repeatedUint64) }()
        case 778: try { try decoder.decodeSingularInt32Field(value: &_storage._repeating) }()
        case 779: try { try decoder.decodeSingularInt32Field(value: &_storage._requestStreaming) }()
        case 780: try { try decoder.decodeSingularInt32Field(value: &_storage._requestTypeURL) }()
        case 781: try { try decoder.decodeSingularInt32Field(value: &_storage._requiredSize) }()
        case 782: try { try decoder.decodeSingularInt32Field(value: &_storage._responseStreaming) }()
        case 783: try { try decoder.decodeSingularInt32Field(value: &_storage._responseTypeURL) }()
        case 784: try { try decoder.decodeSingularInt32Field(value: &_storage._result) }()
        case 785: try { try decoder.decodeSingularInt32Field(value: &_storage._retention) }()
        case 786: try { try decoder.decodeSingularInt32Field(value: &_storage._rethrows) }()
        case 787: try { try decoder.decodeSingularInt32Field(value: &_storage._return) }()
        case 788: try { try decoder.decodeSingularInt32Field(value: &_storage._returnType) }()
        case 789: try { try decoder.decodeSingularInt32Field(value: &_storage._revision) }()
        case 790: try { try decoder.decodeSingularInt32Field(value: &_storage._rhs) }()
        case 791: try { try decoder.decodeSingularInt32Field(value: &_storage._root) }()
        case 792: try { try decoder.decodeSingularInt32Field(value: &_storage._rubyPackage) }()
        case 793: try { try decoder.decodeSingularInt32Field(value: &_storage._s) }()
        case 794: try { try decoder.decodeSingularInt32Field(value: &_storage._sawBackslash) }()
        case 795: try { try decoder.decodeSingularInt32Field(value: &_storage._sawSection4Characters) }()
        case 796: try { try decoder.decodeSingularInt32Field(value: &_storage._sawSection5Characters) }()
        case 797: try { try decoder.decodeSingularInt32Field(value: &_storage._scanner) }()
        case 798: try { try decoder.decodeSingularInt32Field(value: &_storage._seconds) }()
        case 799: try { try decoder.decodeSingularInt32Field(value: &_storage._self_p) }()
        case 800: try { try decoder.decodeSingularInt32Field(value: &_storage._semantic) }()
        case 801: try { try decoder.decodeSingularInt32Field(value: &_storage._sendable) }()
        case 802: try { try decoder.decodeSingularInt32Field(value: &_storage._separator) }()
        case 803: try { try decoder.decodeSingularInt32Field(value: &_storage._serialize) }()
        case 804: try { try decoder.decodeSingularInt32Field(value: &_storage._serializedBytes) }()
        case 805: try { try decoder.decodeSingularInt32Field(value: &_storage._serializedData) }()
        case 806: try { try decoder.decodeSingularInt32Field(value: &_storage._serializedSize) }()
        case 807: try { try decoder.decodeSingularInt32Field(value: &_storage._serverStreaming) }()
        case 808: try { try decoder.decodeSingularInt32Field(value: &_storage._service) }()
        case 809: try { try decoder.decodeSingularInt32Field(value: &_storage._serviceDescriptorProto) }()
        case 810: try { try decoder.decodeSingularInt32Field(value: &_storage._serviceOptions) }()
        case 811: try { try decoder.decodeSingularInt32Field(value: &_storage._set) }()
        case 812: try { try decoder.decodeSingularInt32Field(value: &_storage._setExtensionValue) }()
        case 813: try { try decoder.decodeSingularInt32Field(value: &_storage._shift) }()
        case 814: try { try decoder.decodeSingularInt32Field(value: &_storage._simpleExtensionMap) }()
        case 815: try { try decoder.decodeSingularInt32Field(value: &_storage._singularBool) }()
        case 816: try { try decoder.decodeSingularInt32Field(value: &_storage._singularBytes) }()
        case 817: try { try decoder.decodeSingularInt32Field(value: &_storage._singularDouble) }()
        case 818: try { try decoder.decodeSingularInt32Field(value: &_storage._singularEnum) }()
        case 819: try { try decoder.decodeSingularInt32Field(value: &_storage._singularFixed32) }()
        case 820: try { try decoder.decodeSingularInt32Field(value: &_storage._singularFixed64) }()
        case 821: try { try decoder.decodeSingularInt32Field(value: &_storage._singularFloat) }()
        case 822: try { try decoder.decodeSingularInt32Field(value: &_storage._singularGroup) }()
        case 823: try { try decoder.decodeSingularInt32Field(value: &_storage._singularInt32) }()
        case 824: try { try decoder.decodeSingularInt32Field(value: &_storage._singularInt64) }()
        case 825: try { try decoder.decodeSingularInt32Field(value: &_storage._singularMessage) }()
        case 826: try { try decoder.decodeSingularInt32Field(value: &_storage._singularSfixed32) }()
        case 827: try { try decoder.decodeSingularInt32Field(value: &_storage._singularSfixed64) }()
        case 828: try { try decoder.decodeSingularInt32Field(value: &_storage._singularSint32) }()
        case 829: try { try decoder.decodeSingularInt32Field(value: &_storage._singularSint64) }()
        case 830: try { try decoder.decodeSingularInt32Field(value: &_storage._singularString) }()
        case 831: try { try decoder.decodeSingularInt32Field(value: &_storage._singularUint32) }()
        case 832: try { try decoder.decodeSingularInt32Field(value: &_storage._singularUint64) }()
        case 833: try { try decoder.decodeSingularInt32Field(value: &_storage._size) }()
        case 834: try { try decoder.decodeSingularInt32Field(value: &_storage._sizer) }()
        case 835: try { try decoder.decodeSingularInt32Field(value: &_storage._source) }()
        case 836: try { try decoder.decodeSingularInt32Field(value: &_storage._sourceCodeInfo) }()
        case 837: try { try decoder.decodeSingularInt32Field(value: &_storage._sourceContext) }()
        case 838: try { try decoder.decodeSingularInt32Field(value: &_storage._sourceEncoding) }()
        case 839: try { try decoder.decodeSingularInt32Field(value: &_storage._sourceFile) }()
        case 840: try { try decoder.decodeSingularInt32Field(value: &_storage._span) }()
        case 841: try { try decoder.decodeSingularInt32Field(value: &_storage._split) }()
        case 842: try { try decoder.decodeSingularInt32Field(value: &_storage._start) }()
        case 843: try { try decoder.decodeSingularInt32Field(value: &_storage._startArray) }()
        case 844: try { try decoder.decodeSingularInt32Field(value: &_storage._startArrayObject) }()
        case 845: try { try decoder.decodeSingularInt32Field(value: &_storage._startField) }()
        case 846: try { try decoder.decodeSingularInt32Field(value: &_storage._startIndex) }()
        case 847: try { try decoder.decodeSingularInt32Field(value: &_storage._startMessageField) }()
        case 848: try { try decoder.decodeSingularInt32Field(value: &_storage._startObject) }()
        case 849: try { try decoder.decodeSingularInt32Field(value: &_storage._startRegularField) }()
        case 850: try { try decoder.decodeSingularInt32Field(value: &_storage._state) }()
        case 851: try { try decoder.decodeSingularInt32Field(value: &_storage._static) }()
        case 852: try { try decoder.decodeSingularInt32Field(value: &_storage._staticString) }()
        case 853: try { try decoder.decodeSingularInt32Field(value: &_storage._storage) }()
        case 854: try { try decoder.decodeSingularInt32Field(value: &_storage._string) }()
        case 855: try { try decoder.decodeSingularInt32Field(value: &_storage._stringLiteral) }()
        case 856: try { try decoder.decodeSingularInt32Field(value: &_storage._stringLiteralType) }()
        case 857: try { try decoder.decodeSingularInt32Field(value: &_storage._stringResult) }()
        case 858: try { try decoder.decodeSingularInt32Field(value: &_storage._stringValue) }()
        case 859: try { try decoder.decodeSingularInt32Field(value: &_storage._struct) }()
        case 860: try { try decoder.decodeSingularInt32Field(value: &_storage._structValue) }()
        case 861: try { try decoder.decodeSingularInt32Field(value: &_storage._subDecoder) }()
        case 862: try { try decoder.decodeSingularInt32Field(value: &_storage._subscript) }()
        case 863: try { try decoder.decodeSingularInt32Field(value: &_storage._subVisitor) }()
        case 864: try { try decoder.decodeSingularInt32Field(value: &_storage._swift) }()
        case 865: try { try decoder.decodeSingularInt32Field(value: &_storage._swiftPrefix) }()
        case 866: try { try decoder.decodeSingularInt32Field(value: &_storage._swiftProtobufContiguousBytes) }()
        case 867: try { try decoder.decodeSingularInt32Field(value: &_storage._syntax) }()
        case 868: try { try decoder.decodeSingularInt32Field(value: &_storage._t) }()
        case 869: try { try decoder.decodeSingularInt32Field(value: &_storage._tag) }()
        case 870: try { try decoder.decodeSingularInt32Field(value: &_storage._targets) }()
        case 871: try { try decoder.decodeSingularInt32Field(value: &_storage._terminator) }()
        case 872: try { try decoder.decodeSingularInt32Field(value: &_storage._testDecoder) }()
        case 873: try { try decoder.decodeSingularInt32Field(value: &_storage._text) }()
        case 874: try { try decoder.decodeSingularInt32Field(value: &_storage._textDecoder) }()
        case 875: try { try decoder.decodeSingularInt32Field(value: &_storage._textFormatDecoder) }()
        case 876: try { try decoder.decodeSingularInt32Field(value: &_storage._textFormatDecodingError) }()
        case 877: try { try decoder.decodeSingularInt32Field(value: &_storage._textFormatDecodingOptions) }()
        case 878: try { try decoder.decodeSingularInt32Field(value: &_storage._textFormatEncodingOptions) }()
        case 879: try { try decoder.decodeSingularInt32Field(value: &_storage._textFormatEncodingVisitor) }()
        case 880: try { try decoder.decodeSingularInt32Field(value: &_storage._textFormatString) }()
        case 881: try { try decoder.decodeSingularInt32Field(value: &_storage._throwOrIgnore) }()
        case 882: try { try decoder.decodeSingularInt32Field(value: &_storage._throws) }()
        case 883: try { try decoder.decodeSingularInt32Field(value: &_storage._timeInterval) }()
        case 884: try { try decoder.decodeSingularInt32Field(value: &_storage._timeIntervalSince1970) }()
        case 885: try { try decoder.decodeSingularInt32Field(value: &_storage._timeIntervalSinceReferenceDate) }()
        case 886: try { try decoder.decodeSingularInt32Field(value: &_storage._timestamp) }()
        case 887: try { try decoder.decodeSingularInt32Field(value: &_storage._toConcrete) }()
        case 888: try { try decoder.decodeSingularInt32Field(value: &_storage._total) }()
        case 889: try { try decoder.decodeSingularInt32Field(value: &_storage._totalArrayDepth) }()
        case 890: try { try decoder.decodeSingularInt32Field(value: &_storage._totalSize) }()
        case 891: try { try decoder.decodeSingularInt32Field(value: &_storage._trailingComments) }()
        case 892: try { try decoder.decodeSingularInt32Field(value: &_storage._traverse) }()
        case 893: try { try decoder.decodeSingularInt32Field(value: &_storage._true) }()
        case 894: try { try decoder.decodeSingularInt32Field(value: &_storage._try) }()
        case 895: try { try decoder.decodeSingularInt32Field(value: &_storage._type) }()
        case 896: try { try decoder.decodeSingularInt32Field(value: &_storage._typealias) }()
        case 897: try { try decoder.decodeSingularInt32Field(value: &_storage._typeEnum) }()
        case 898: try { try decoder.decodeSingularInt32Field(value: &_storage._typeName) }()
        case 899: try { try decoder.decodeSingularInt32Field(value: &_storage._typePrefix) }()
        case 900: try { try decoder.decodeSingularInt32Field(value: &_storage._typeStart) }()
        case 901: try { try decoder.decodeSingularInt32Field(value: &_storage._typeUnknown) }()
        case 902: try { try decoder.decodeSingularInt32Field(value: &_storage._typeURL) }()
        case 903: try { try decoder.decodeSingularInt32Field(value: &_storage._uint32) }()
        case 904: try { try decoder.decodeSingularInt32Field(value: &_storage._uint32Value) }()
        case 905: try { try decoder.decodeSingularInt32Field(value: &_storage._uint64) }()
        case 906: try { try decoder.decodeSingularInt32Field(value: &_storage._uint64Value) }()
        case 907: try { try decoder.decodeSingularInt32Field(value: &_storage._uint8) }()
        case 908: try { try decoder.decodeSingularInt32Field(value: &_storage._unchecked) }()
        case 909: try { try decoder.decodeSingularInt32Field(value: &_storage._unicodeScalarLiteral) }()
        case 910: try { try decoder.decodeSingularInt32Field(value: &_storage._unicodeScalarLiteralType) }()
        case 911: try { try decoder.decodeSingularInt32Field(value: &_storage._unicodeScalars) }()
        case 912: try { try decoder.decodeSingularInt32Field(value: &_storage._unicodeScalarView) }()
        case 913: try { try decoder.decodeSingularInt32Field(value: &_storage._uninterpretedOption) }()
        case 914: try { try decoder.decodeSingularInt32Field(value: &_storage._union) }()
        case 915: try { try decoder.decodeSingularInt32Field(value: &_storage._uniqueStorage) }()
        case 916: try { try decoder.decodeSingularInt32Field(value: &_storage._unknown) }()
        case 917: try { try decoder.decodeSingularInt32Field(value: &_storage._unknownFields_p) }()
        case 918: try { try decoder.decodeSingularInt32Field(value: &_storage._unknownStorage) }()
        case 919: try { try decoder.decodeSingularInt32Field(value: &_storage._unpackTo) }()
        case 920: try { try decoder.decodeSingularInt32Field(value: &_storage._unsafeBufferPointer) }()
        case 921: try { try decoder.decodeSingularInt32Field(value: &_storage._unsafeMutablePointer) }()
        case 922: try { try decoder.decodeSingularInt32Field(value: &_storage._unsafeMutableRawBufferPointer) }()
        case 923: try { try decoder.decodeSingularInt32Field(value: &_storage._unsafeRawBufferPointer) }()
        case 924: try { try decoder.decodeSingularInt32Field(value: &_storage._unsafeRawPointer) }()
        case 925: try { try decoder.decodeSingularInt32Field(value: &_storage._unverifiedLazy) }()
        case 926: try { try decoder.decodeSingularInt32Field(value: &_storage._updatedOptions) }()
        case 927: try { try decoder.decodeSingularInt32Field(value: &_storage._url) }()
        case 928: try { try decoder.decodeSingularInt32Field(value: &_storage._useDeterministicOrdering) }()
        case 929: try { try decoder.decodeSingularInt32Field(value: &_storage._utf8) }()
        case 930: try { try decoder.decodeSingularInt32Field(value: &_storage._utf8Ptr) }()
        case 931: try { try decoder.decodeSingularInt32Field(value: &_storage._utf8ToDouble) }()
        case 932: try { try decoder.decodeSingularInt32Field(value: &_storage._utf8Validation) }()
        case 933: try { try decoder.decodeSingularInt32Field(value: &_storage._utf8View) }()
        case 934: try { try decoder.decodeSingularInt32Field(value: &_storage._v) }()
        case 935: try { try decoder.decodeSingularInt32Field(value: &_storage._value) }()
        case 936: try { try decoder.decodeSingularInt32Field(value: &_storage._valueField) }()
        case 937: try { try decoder.decodeSingularInt32Field(value: &_storage._values) }()
        case 938: try { try decoder.decodeSingularInt32Field(value: &_storage._valueType) }()
        case 939: try { try decoder.decodeSingularInt32Field(value: &_storage._var) }()
        case 940: try { try decoder.decodeSingularInt32Field(value: &_storage._verification) }()
        case 941: try { try decoder.decodeSingularInt32Field(value: &_storage._verificationState) }()
        case 942: try { try decoder.decodeSingularInt32Field(value: &_storage._version) }()
        case 943: try { try decoder.decodeSingularInt32Field(value: &_storage._versionString) }()
        case 944: try { try decoder.decodeSingularInt32Field(value: &_storage._visitExtensionFields) }()
        case 945: try { try decoder.decodeSingularInt32Field(value: &_storage._visitExtensionFieldsAsMessageSet) }()
        case 946: try { try decoder.decodeSingularInt32Field(value: &_storage._visitMapField) }()
        case 947: try { try decoder.decodeSingularInt32Field(value: &_storage._visitor) }()
        case 948: try { try decoder.decodeSingularInt32Field(value: &_storage._visitPacked) }()
        case 949: try { try decoder.decodeSingularInt32Field(value: &_storage._visitPackedBoolField) }()
        case 950: try { try decoder.decodeSingularInt32Field(value: &_storage._visitPackedDoubleField) }()
        case 951: try { try decoder.decodeSingularInt32Field(value: &_storage._visitPackedEnumField) }()
        case 952: try { try decoder.decodeSingularInt32Field(value: &_storage._visitPackedFixed32Field) }()
        case 953: try { try decoder.decodeSingularInt32Field(value: &_storage._visitPackedFixed64Field) }()
        case 954: try { try decoder.decodeSingularInt32Field(value: &_storage._visitPackedFloatField) }()
        case 955: try { try decoder.decodeSingularInt32Field(value: &_storage._visitPackedInt32Field) }()
        case 956: try { try decoder.decodeSingularInt32Field(value: &_storage._visitPackedInt64Field) }()
        case 957: try { try decoder.decodeSingularInt32Field(value: &_storage._visitPackedSfixed32Field) }()
        case 958: try { try decoder.decodeSingularInt32Field(value: &_storage._visitPackedSfixed64Field) }()
        case 959: try { try decoder.decodeSingularInt32Field(value: &_storage._visitPackedSint32Field) }()
        case 960: try { try decoder.decodeSingularInt32Field(value: &_storage._visitPackedSint64Field) }()
        case 961: try { try decoder.decodeSingularInt32Field(value: &_storage._visitPackedUint32Field) }()
        case 962: try { try decoder.decodeSingularInt32Field(value: &_storage._visitPackedUint64Field) }()
        case 963: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeated) }()
        case 964: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedBoolField) }()
        case 965: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedBytesField) }()
        case 966: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedDoubleField) }()
        case 967: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedEnumField) }()
        case 968: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedFixed32Field) }()
        case 969: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedFixed64Field) }()
        case 970: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedFloatField) }()
        case 971: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedGroupField) }()
        case 972: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedInt32Field) }()
        case 973: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedInt64Field) }()
        case 974: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedMessageField) }()
        case 975: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedSfixed32Field) }()
        case 976: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedSfixed64Field) }()
        case 977: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedSint32Field) }()
        case 978: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedSint64Field) }()
        case 979: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedStringField) }()
        case 980: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedUint32Field) }()
        case 981: try { try decoder.decodeSingularInt32Field(value: &_storage._visitRepeatedUint64Field) }()
        case 982: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingular) }()
        case 983: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularBoolField) }()
        case 984: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularBytesField) }()
        case 985: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularDoubleField) }()
        case 986: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularEnumField) }()
        case 987: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularFixed32Field) }()
        case 988: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularFixed64Field) }()
        case 989: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularFloatField) }()
        case 990: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularGroupField) }()
        case 991: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularInt32Field) }()
        case 992: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularInt64Field) }()
        case 993: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularMessageField) }()
        case 994: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularSfixed32Field) }()
        case 995: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularSfixed64Field) }()
        case 996: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularSint32Field) }()
        case 997: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularSint64Field) }()
        case 998: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularStringField) }()
        case 999: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularUint32Field) }()
        case 1000: try { try decoder.decodeSingularInt32Field(value: &_storage._visitSingularUint64Field) }()
        case 1001: try { try decoder.decodeSingularInt32Field(value: &_storage._visitUnknown) }()
        case 1002: try { try decoder.decodeSingularInt32Field(value: &_storage._wasDecoded) }()
        case 1003: try { try decoder.decodeSingularInt32Field(value: &_storage._weak) }()
        case 1004: try { try decoder.decodeSingularInt32Field(value: &_storage._weakDependency) }()
        case 1005: try { try decoder.decodeSingularInt32Field(value: &_storage._where) }()
        case 1006: try { try decoder.decodeSingularInt32Field(value: &_storage._wireFormat) }()
        case 1007: try { try decoder.decodeSingularInt32Field(value: &_storage._with) }()
        case 1008: try { try decoder.decodeSingularInt32Field(value: &_storage._withUnsafeBytes) }()
        case 1009: try { try decoder.decodeSingularInt32Field(value: &_storage._withUnsafeMutableBytes) }()
        case 1010: try { try decoder.decodeSingularInt32Field(value: &_storage._work) }()
        case 1011: try { try decoder.decodeSingularInt32Field(value: &_storage._wrapped) }()
        case 1012: try { try decoder.decodeSingularInt32Field(value: &_storage._wrappedType) }()
        case 1013: try { try decoder.decodeSingularInt32Field(value: &_storage._wrappedValue) }()
        case 1014: try { try decoder.decodeSingularInt32Field(value: &_storage._written) }()
        case 1015: try { try decoder.decodeSingularInt32Field(value: &_storage._yday) }()
        default: break
        }
      }
    }
  }

  static let _fields: [Field<Self>] = [
    .singularInt32({ $0.adjusted }, fieldNumber: 1),
    .singularInt32({ $0.aggregateValue }, fieldNumber: 2),
    .singularInt32({ $0.allCases }, fieldNumber: 3),
    .singularInt32({ $0.allowAlias }, fieldNumber: 4),
    .singularInt32({ $0.alwaysPrintEnumsAsInts }, fieldNumber: 5),
    .singularInt32({ $0.alwaysPrintInt64SAsNumbers }, fieldNumber: 6),
    .singularInt32({ $0.annotation }, fieldNumber: 7),
    .singularInt32({ $0.any }, fieldNumber: 8),
    .singularInt32({ $0.anyExtensionField }, fieldNumber: 9),
    .singularInt32({ $0.anyMessageExtension }, fieldNumber: 10),
    .singularInt32({ $0.anyMessageStorage }, fieldNumber: 11),
    .singularInt32({ $0.anyUnpackError }, fieldNumber: 12),
    .singularInt32({ $0.api }, fieldNumber: 13),
    .singularInt32({ $0.appended }, fieldNumber: 14),
    .singularInt32({ $0.appendUintHex }, fieldNumber: 15),
    .singularInt32({ $0.appendUnknown }, fieldNumber: 16),
    .singularInt32({ $0.areAllInitialized }, fieldNumber: 17),
    .singularInt32({ $0.array }, fieldNumber: 18),
    .singularInt32({ $0.arrayDepth }, fieldNumber: 19),
    .singularInt32({ $0.arrayLiteral }, fieldNumber: 20),
    .singularInt32({ $0.arraySeparator }, fieldNumber: 21),
    .singularInt32({ $0.`as` }, fieldNumber: 22),
    .singularInt32({ $0.asciiOpenCurlyBracket }, fieldNumber: 23),
    .singularInt32({ $0.asciiZero }, fieldNumber: 24),
    .singularInt32({ $0.async }, fieldNumber: 25),
    .singularInt32({ $0.asyncIterator }, fieldNumber: 26),
    .singularInt32({ $0.asyncIteratorProtocol }, fieldNumber: 27),
    .singularInt32({ $0.asyncMessageSequence }, fieldNumber: 28),
    .singularInt32({ $0.available }, fieldNumber: 29),
    .singularInt32({ $0.b }, fieldNumber: 30),
    .singularInt32({ $0.base }, fieldNumber: 31),
    .singularInt32({ $0.base64Values }, fieldNumber: 32),
    .singularInt32({ $0.baseAddress }, fieldNumber: 33),
    .singularInt32({ $0.baseType }, fieldNumber: 34),
    .singularInt32({ $0.begin }, fieldNumber: 35),
    .singularInt32({ $0.binary }, fieldNumber: 36),
    .singularInt32({ $0.binaryDecoder }, fieldNumber: 37),
    .singularInt32({ $0.binaryDecodingError }, fieldNumber: 38),
    .singularInt32({ $0.binaryDecodingOptions }, fieldNumber: 39),
    .singularInt32({ $0.binaryDelimited }, fieldNumber: 40),
    .singularInt32({ $0.binaryEncoder }, fieldNumber: 41),
    .singularInt32({ $0.binaryEncodingError }, fieldNumber: 42),
    .singularInt32({ $0.binaryEncodingMessageSetSizeVisitor }, fieldNumber: 43),
    .singularInt32({ $0.binaryEncodingMessageSetVisitor }, fieldNumber: 44),
    .singularInt32({ $0.binaryEncodingOptions }, fieldNumber: 45),
    .singularInt32({ $0.binaryEncodingSizeVisitor }, fieldNumber: 46),
    .singularInt32({ $0.binaryEncodingVisitor }, fieldNumber: 47),
    .singularInt32({ $0.binaryOptions }, fieldNumber: 48),
    .singularInt32({ $0.binaryProtobufDelimitedMessages }, fieldNumber: 49),
    .singularInt32({ $0.bitPattern }, fieldNumber: 50),
    .singularInt32({ $0.body }, fieldNumber: 51),
    .singularInt32({ $0.bool }, fieldNumber: 52),
    .singularInt32({ $0.booleanLiteral }, fieldNumber: 53),
    .singularInt32({ $0.booleanLiteralType }, fieldNumber: 54),
    .singularInt32({ $0.boolValue }, fieldNumber: 55),
    .singularInt32({ $0.buffer }, fieldNumber: 56),
    .singularInt32({ $0.bytes }, fieldNumber: 57),
    .singularInt32({ $0.bytesInGroup }, fieldNumber: 58),
    .singularInt32({ $0.bytesNeeded }, fieldNumber: 59),
    .singularInt32({ $0.bytesRead }, fieldNumber: 60),
    .singularInt32({ $0.bytesValue }, fieldNumber: 61),
    .singularInt32({ $0.c }, fieldNumber: 62),
    .singularInt32({ $0.capitalizeNext }, fieldNumber: 63),
    .singularInt32({ $0.cardinality }, fieldNumber: 64),
    .singularInt32({ $0.caseIterable }, fieldNumber: 65),
    .singularInt32({ $0.ccEnableArenas }, fieldNumber: 66),
    .singularInt32({ $0.ccGenericServices }, fieldNumber: 67),
    .singularInt32({ $0.character }, fieldNumber: 68),
    .singularInt32({ $0.chars }, fieldNumber: 69),
    .singularInt32({ $0.chunk }, fieldNumber: 70),
    .singularInt32({ $0.`class` }, fieldNumber: 71),
    .singularInt32({ $0.clearAggregateValue_p }, fieldNumber: 72),
    .singularInt32({ $0.clearAllowAlias_p }, fieldNumber: 73),
    .singularInt32({ $0.clearBegin_p }, fieldNumber: 74),
    .singularInt32({ $0.clearCcEnableArenas_p }, fieldNumber: 75),
    .singularInt32({ $0.clearCcGenericServices_p }, fieldNumber: 76),
    .singularInt32({ $0.clearClientStreaming_p }, fieldNumber: 77),
    .singularInt32({ $0.clearCsharpNamespace_p }, fieldNumber: 78),
    .singularInt32({ $0.clearCtype_p }, fieldNumber: 79),
    .singularInt32({ $0.clearDebugRedact_p }, fieldNumber: 80),
    .singularInt32({ $0.clearDefaultValue_p }, fieldNumber: 81),
    .singularInt32({ $0.clearDeprecated_p }, fieldNumber: 82),
    .singularInt32({ $0.clearDeprecatedLegacyJsonFieldConflicts_p }, fieldNumber: 83),
    .singularInt32({ $0.clearDoubleValue_p }, fieldNumber: 84),
    .singularInt32({ $0.clearEdition_p }, fieldNumber: 85),
    .singularInt32({ $0.clearEnd_p }, fieldNumber: 86),
    .singularInt32({ $0.clearEnumType_p }, fieldNumber: 87),
    .singularInt32({ $0.clearExtendee_p }, fieldNumber: 88),
    .singularInt32({ $0.clearExtensionValue_p }, fieldNumber: 89),
    .singularInt32({ $0.clearFeatures_p }, fieldNumber: 90),
    .singularInt32({ $0.clearFieldPresence_p }, fieldNumber: 91),
    .singularInt32({ $0.clearFullName_p }, fieldNumber: 92),
    .singularInt32({ $0.clearGoPackage_p }, fieldNumber: 93),
    .singularInt32({ $0.clearIdempotencyLevel_p }, fieldNumber: 94),
    .singularInt32({ $0.clearIdentifierValue_p }, fieldNumber: 95),
    .singularInt32({ $0.clearInputType_p }, fieldNumber: 96),
    .singularInt32({ $0.clearIsExtension_p }, fieldNumber: 97),
    .singularInt32({ $0.clearJavaGenerateEqualsAndHash_p }, fieldNumber: 98),
    .singularInt32({ $0.clearJavaGenericServices_p }, fieldNumber: 99),
    .singularInt32({ $0.clearJavaMultipleFiles_p }, fieldNumber: 100),
    .singularInt32({ $0.clearJavaOuterClassname_p }, fieldNumber: 101),
    .singularInt32({ $0.clearJavaPackage_p }, fieldNumber: 102),
    .singularInt32({ $0.clearJavaStringCheckUtf8_p }, fieldNumber: 103),
    .singularInt32({ $0.clearJsonFormat_p }, fieldNumber: 104),
    .singularInt32({ $0.clearJsonName_p }, fieldNumber: 105),
    .singularInt32({ $0.clearJstype_p }, fieldNumber: 106),
    .singularInt32({ $0.clearLabel_p }, fieldNumber: 107),
    .singularInt32({ $0.clearLazy_p }, fieldNumber: 108),
    .singularInt32({ $0.clearLeadingComments_p }, fieldNumber: 109),
    .singularInt32({ $0.clearMapEntry_p }, fieldNumber: 110),
    .singularInt32({ $0.clearMaximumEdition_p }, fieldNumber: 111),
    .singularInt32({ $0.clearMessageEncoding_p }, fieldNumber: 112),
    .singularInt32({ $0.clearMessageSetWireFormat_p }, fieldNumber: 113),
    .singularInt32({ $0.clearMinimumEdition_p }, fieldNumber: 114),
    .singularInt32({ $0.clearName_p }, fieldNumber: 115),
    .singularInt32({ $0.clearNamePart_p }, fieldNumber: 116),
    .singularInt32({ $0.clearNegativeIntValue_p }, fieldNumber: 117),
    .singularInt32({ $0.clearNoStandardDescriptorAccessor_p }, fieldNumber: 118),
    .singularInt32({ $0.clearNumber_p }, fieldNumber: 119),
    .singularInt32({ $0.clearObjcClassPrefix_p }, fieldNumber: 120),
    .singularInt32({ $0.clearOneofIndex_p }, fieldNumber: 121),
    .singularInt32({ $0.clearOptimizeFor_p }, fieldNumber: 122),
    .singularInt32({ $0.clearOptions_p }, fieldNumber: 123),
    .singularInt32({ $0.clearOutputType_p }, fieldNumber: 124),
    .singularInt32({ $0.clearPackage_p }, fieldNumber: 125),
    .singularInt32({ $0.clearPacked_p }, fieldNumber: 126),
    .singularInt32({ $0.clearPhpClassPrefix_p }, fieldNumber: 127),
    .singularInt32({ $0.clearPhpGenericServices_p }, fieldNumber: 128),
    .singularInt32({ $0.clearPhpMetadataNamespace_p }, fieldNumber: 129),
    .singularInt32({ $0.clearPhpNamespace_p }, fieldNumber: 130),
    .singularInt32({ $0.clearPositiveIntValue_p }, fieldNumber: 131),
    .singularInt32({ $0.clearProto3Optional_p }, fieldNumber: 132),
    .singularInt32({ $0.clearPyGenericServices_p }, fieldNumber: 133),
    .singularInt32({ $0.clearRepeated_p }, fieldNumber: 134),
    .singularInt32({ $0.clearRepeatedFieldEncoding_p }, fieldNumber: 135),
    .singularInt32({ $0.clearReserved_p }, fieldNumber: 136),
    .singularInt32({ $0.clearRetention_p }, fieldNumber: 137),
    .singularInt32({ $0.clearRubyPackage_p }, fieldNumber: 138),
    .singularInt32({ $0.clearSemantic_p }, fieldNumber: 139),
    .singularInt32({ $0.clearServerStreaming_p }, fieldNumber: 140),
    .singularInt32({ $0.clearSourceCodeInfo_p }, fieldNumber: 141),
    .singularInt32({ $0.clearSourceContext_p }, fieldNumber: 142),
    .singularInt32({ $0.clearSourceFile_p }, fieldNumber: 143),
    .singularInt32({ $0.clearStart_p }, fieldNumber: 144),
    .singularInt32({ $0.clearStringValue_p }, fieldNumber: 145),
    .singularInt32({ $0.clearSwiftPrefix_p }, fieldNumber: 146),
    .singularInt32({ $0.clearSyntax_p }, fieldNumber: 147),
    .singularInt32({ $0.clearTrailingComments_p }, fieldNumber: 148),
    .singularInt32({ $0.clearType_p }, fieldNumber: 149),
    .singularInt32({ $0.clearTypeName_p }, fieldNumber: 150),
    .singularInt32({ $0.clearUnverifiedLazy_p }, fieldNumber: 151),
    .singularInt32({ $0.clearUtf8Validation_p }, fieldNumber: 152),
    .singularInt32({ $0.clearValue_p }, fieldNumber: 153),
    .singularInt32({ $0.clearVerification_p }, fieldNumber: 154),
    .singularInt32({ $0.clearWeak_p }, fieldNumber: 155),
    .singularInt32({ $0.clientStreaming }, fieldNumber: 156),
    .singularInt32({ $0.codePoint }, fieldNumber: 157),
    .singularInt32({ $0.codeUnits }, fieldNumber: 158),
    .singularInt32({ $0.collection }, fieldNumber: 159),
    .singularInt32({ $0.com }, fieldNumber: 160),
    .singularInt32({ $0.comma }, fieldNumber: 161),
    .singularInt32({ $0.commonMessageConformances }, fieldNumber: 162),
    .singularInt32({ $0.consumedBytes }, fieldNumber: 163),
    .singularInt32({ $0.contentsOf }, fieldNumber: 164),
    .singularInt32({ $0.count }, fieldNumber: 165),
    .singularInt32({ $0.countVarintsInBuffer }, fieldNumber: 166),
    .singularInt32({ $0.csharpNamespace }, fieldNumber: 167),
    .singularInt32({ $0.ctype }, fieldNumber: 168),
    .singularInt32({ $0.customCodable }, fieldNumber: 169),
    .singularInt32({ $0.d }, fieldNumber: 170),
    .singularInt32({ $0.data }, fieldNumber: 171),
    .singularInt32({ $0.dataResult }, fieldNumber: 172),
    .singularInt32({ $0.date }, fieldNumber: 173),
    .singularInt32({ $0.daySec }, fieldNumber: 174),
    .singularInt32({ $0.daysSinceEpoch }, fieldNumber: 175),
    .singularInt32({ $0.debugDescription_p }, fieldNumber: 176),
    .singularInt32({ $0.debugRedact }, fieldNumber: 177),
    .singularInt32({ $0.declaration }, fieldNumber: 178),
    .singularInt32({ $0.decoded }, fieldNumber: 179),
    .singularInt32({ $0.decodedFromJsonnull }, fieldNumber: 180),
    .singularInt32({ $0.decodeExtensionField }, fieldNumber: 181),
    .singularInt32({ $0.decodeExtensionFieldsAsMessageSet }, fieldNumber: 182),
    .singularInt32({ $0.decodeJson }, fieldNumber: 183),
    .singularInt32({ $0.decodeMapField }, fieldNumber: 184),
    .singularInt32({ $0.decodeMessage }, fieldNumber: 185),
    .singularInt32({ $0.decoder }, fieldNumber: 186),
    .singularInt32({ $0.decodeRepeated }, fieldNumber: 187),
    .singularInt32({ $0.decodeRepeatedBoolField }, fieldNumber: 188),
    .singularInt32({ $0.decodeRepeatedBytesField }, fieldNumber: 189),
    .singularInt32({ $0.decodeRepeatedDoubleField }, fieldNumber: 190),
    .singularInt32({ $0.decodeRepeatedEnumField }, fieldNumber: 191),
    .singularInt32({ $0.decodeRepeatedFixed32Field }, fieldNumber: 192),
    .singularInt32({ $0.decodeRepeatedFixed64Field }, fieldNumber: 193),
    .singularInt32({ $0.decodeRepeatedFloatField }, fieldNumber: 194),
    .singularInt32({ $0.decodeRepeatedGroupField }, fieldNumber: 195),
    .singularInt32({ $0.decodeRepeatedInt32Field }, fieldNumber: 196),
    .singularInt32({ $0.decodeRepeatedInt64Field }, fieldNumber: 197),
    .singularInt32({ $0.decodeRepeatedMessageField }, fieldNumber: 198),
    .singularInt32({ $0.decodeRepeatedSfixed32Field }, fieldNumber: 199),
    .singularInt32({ $0.decodeRepeatedSfixed64Field }, fieldNumber: 200),
    .singularInt32({ $0.decodeRepeatedSint32Field }, fieldNumber: 201),
    .singularInt32({ $0.decodeRepeatedSint64Field }, fieldNumber: 202),
    .singularInt32({ $0.decodeRepeatedStringField }, fieldNumber: 203),
    .singularInt32({ $0.decodeRepeatedUint32Field }, fieldNumber: 204),
    .singularInt32({ $0.decodeRepeatedUint64Field }, fieldNumber: 205),
    .singularInt32({ $0.decodeSingular }, fieldNumber: 206),
    .singularInt32({ $0.decodeSingularBoolField }, fieldNumber: 207),
    .singularInt32({ $0.decodeSingularBytesField }, fieldNumber: 208),
    .singularInt32({ $0.decodeSingularDoubleField }, fieldNumber: 209),
    .singularInt32({ $0.decodeSingularEnumField }, fieldNumber: 210),
    .singularInt32({ $0.decodeSingularFixed32Field }, fieldNumber: 211),
    .singularInt32({ $0.decodeSingularFixed64Field }, fieldNumber: 212),
    .singularInt32({ $0.decodeSingularFloatField }, fieldNumber: 213),
    .singularInt32({ $0.decodeSingularGroupField }, fieldNumber: 214),
    .singularInt32({ $0.decodeSingularInt32Field }, fieldNumber: 215),
    .singularInt32({ $0.decodeSingularInt64Field }, fieldNumber: 216),
    .singularInt32({ $0.decodeSingularMessageField }, fieldNumber: 217),
    .singularInt32({ $0.decodeSingularSfixed32Field }, fieldNumber: 218),
    .singularInt32({ $0.decodeSingularSfixed64Field }, fieldNumber: 219),
    .singularInt32({ $0.decodeSingularSint32Field }, fieldNumber: 220),
    .singularInt32({ $0.decodeSingularSint64Field }, fieldNumber: 221),
    .singularInt32({ $0.decodeSingularStringField }, fieldNumber: 222),
    .singularInt32({ $0.decodeSingularUint32Field }, fieldNumber: 223),
    .singularInt32({ $0.decodeSingularUint64Field }, fieldNumber: 224),
    .singularInt32({ $0.decodeTextFormat }, fieldNumber: 225),
    .singularInt32({ $0.defaultAnyTypeUrlprefix }, fieldNumber: 226),
    .singularInt32({ $0.defaults }, fieldNumber: 227),
    .singularInt32({ $0.defaultValue }, fieldNumber: 228),
    .singularInt32({ $0.dependency }, fieldNumber: 229),
    .singularInt32({ $0.deprecated }, fieldNumber: 230),
    .singularInt32({ $0.deprecatedLegacyJsonFieldConflicts }, fieldNumber: 231),
    .singularInt32({ $0.description_p }, fieldNumber: 232),
    .singularInt32({ $0.descriptorProto }, fieldNumber: 233),
    .singularInt32({ $0.dictionary }, fieldNumber: 234),
    .singularInt32({ $0.dictionaryLiteral }, fieldNumber: 235),
    .singularInt32({ $0.digit }, fieldNumber: 236),
    .singularInt32({ $0.digit0 }, fieldNumber: 237),
    .singularInt32({ $0.digit1 }, fieldNumber: 238),
    .singularInt32({ $0.digitCount }, fieldNumber: 239),
    .singularInt32({ $0.digits }, fieldNumber: 240),
    .singularInt32({ $0.digitValue }, fieldNumber: 241),
    .singularInt32({ $0.discardableResult }, fieldNumber: 242),
    .singularInt32({ $0.discardUnknownFields }, fieldNumber: 243),
    .singularInt32({ $0.double }, fieldNumber: 244),
    .singularInt32({ $0.doubleValue }, fieldNumber: 245),
    .singularInt32({ $0.duration }, fieldNumber: 246),
    .singularInt32({ $0.e }, fieldNumber: 247),
    .singularInt32({ $0.edition }, fieldNumber: 248),
    .singularInt32({ $0.editionDefault }, fieldNumber: 249),
    .singularInt32({ $0.editionDefaults }, fieldNumber: 250),
    .singularInt32({ $0.element }, fieldNumber: 251),
    .singularInt32({ $0.elements }, fieldNumber: 252),
    .singularInt32({ $0.emitExtensionFieldName }, fieldNumber: 253),
    .singularInt32({ $0.emitFieldName }, fieldNumber: 254),
    .singularInt32({ $0.emitFieldNumber }, fieldNumber: 255),
    .singularInt32({ $0.empty }, fieldNumber: 256),
    .singularInt32({ $0.encodeAsBytes }, fieldNumber: 257),
    .singularInt32({ $0.encoded }, fieldNumber: 258),
    .singularInt32({ $0.encodedJsonstring }, fieldNumber: 259),
    .singularInt32({ $0.encodedSize }, fieldNumber: 260),
    .singularInt32({ $0.encodeField }, fieldNumber: 261),
    .singularInt32({ $0.encoder }, fieldNumber: 262),
    .singularInt32({ $0.end }, fieldNumber: 263),
    .singularInt32({ $0.endArray }, fieldNumber: 264),
    .singularInt32({ $0.endMessageField }, fieldNumber: 265),
    .singularInt32({ $0.endObject }, fieldNumber: 266),
    .singularInt32({ $0.endRegularField }, fieldNumber: 267),
    .singularInt32({ $0.`enum` }, fieldNumber: 268),
    .singularInt32({ $0.enumDescriptorProto }, fieldNumber: 269),
    .singularInt32({ $0.enumOptions }, fieldNumber: 270),
    .singularInt32({ $0.enumReservedRange }, fieldNumber: 271),
    .singularInt32({ $0.enumType }, fieldNumber: 272),
    .singularInt32({ $0.enumvalue }, fieldNumber: 273),
    .singularInt32({ $0.enumValueDescriptorProto }, fieldNumber: 274),
    .singularInt32({ $0.enumValueOptions }, fieldNumber: 275),
    .singularInt32({ $0.equatable }, fieldNumber: 276),
    .singularInt32({ $0.error }, fieldNumber: 277),
    .singularInt32({ $0.escaping }, fieldNumber: 278),
    .singularInt32({ $0.expressibleByArrayLiteral }, fieldNumber: 279),
    .singularInt32({ $0.expressibleByDictionaryLiteral }, fieldNumber: 280),
    .singularInt32({ $0.ext }, fieldNumber: 281),
    .singularInt32({ $0.extDecoder }, fieldNumber: 282),
    .singularInt32({ $0.extendedGraphemeClusterLiteral }, fieldNumber: 283),
    .singularInt32({ $0.extendedGraphemeClusterLiteralType }, fieldNumber: 284),
    .singularInt32({ $0.extendee }, fieldNumber: 285),
    .singularInt32({ $0.extensibleMessage }, fieldNumber: 286),
    .singularInt32({ $0.`extension` }, fieldNumber: 287),
    .singularInt32({ $0.extensionField }, fieldNumber: 288),
    .singularInt32({ $0.extensionFieldNumber }, fieldNumber: 289),
    .singularInt32({ $0.extensionFields }, fieldNumber: 290),
    .singularInt32({ $0.extensionFieldsAsMessageSet }, fieldNumber: 291),
    .singularInt32({ $0.extensionFieldValueSet }, fieldNumber: 292),
    .singularInt32({ $0.extensionMap }, fieldNumber: 293),
    .singularInt32({ $0.extensionRange }, fieldNumber: 294),
    .singularInt32({ $0.extensionRangeOptions }, fieldNumber: 295),
    .singularInt32({ $0.extensions }, fieldNumber: 296),
    .singularInt32({ $0.extras }, fieldNumber: 297),
    .singularInt32({ $0.f }, fieldNumber: 298),
    .singularInt32({ $0.`false` }, fieldNumber: 299),
    .singularInt32({ $0.features }, fieldNumber: 300),
    .singularInt32({ $0.featureSet }, fieldNumber: 301),
    .singularInt32({ $0.featureSetDefaults }, fieldNumber: 302),
    .singularInt32({ $0.featureSetEditionDefault }, fieldNumber: 303),
    .singularInt32({ $0.field }, fieldNumber: 304),
    .singularInt32({ $0.fieldData }, fieldNumber: 305),
    .singularInt32({ $0.fieldDescriptorProto }, fieldNumber: 306),
    .singularInt32({ $0.fieldMask }, fieldNumber: 307),
    .singularInt32({ $0.fieldName }, fieldNumber: 308),
    .singularInt32({ $0.fieldNameCount }, fieldNumber: 309),
    .singularInt32({ $0.fieldNum }, fieldNumber: 310),
    .singularInt32({ $0.fieldNumber }, fieldNumber: 311),
    .singularInt32({ $0.fieldNumberForProto }, fieldNumber: 312),
    .singularInt32({ $0.fieldOptions }, fieldNumber: 313),
    .singularInt32({ $0.fieldPresence }, fieldNumber: 314),
    .singularInt32({ $0.fields }, fieldNumber: 315),
    .singularInt32({ $0.fieldSize }, fieldNumber: 316),
    .singularInt32({ $0.fieldTag }, fieldNumber: 317),
    .singularInt32({ $0.fieldType }, fieldNumber: 318),
    .singularInt32({ $0.file }, fieldNumber: 319),
    .singularInt32({ $0.fileDescriptorProto }, fieldNumber: 320),
    .singularInt32({ $0.fileDescriptorSet }, fieldNumber: 321),
    .singularInt32({ $0.fileName }, fieldNumber: 322),
    .singularInt32({ $0.fileOptions }, fieldNumber: 323),
    .singularInt32({ $0.filter }, fieldNumber: 324),
    .singularInt32({ $0.final }, fieldNumber: 325),
    .singularInt32({ $0.first }, fieldNumber: 326),
    .singularInt32({ $0.firstItem }, fieldNumber: 327),
    .singularInt32({ $0.float }, fieldNumber: 328),
    .singularInt32({ $0.floatLiteral }, fieldNumber: 329),
    .singularInt32({ $0.floatLiteralType }, fieldNumber: 330),
    .singularInt32({ $0.floatValue }, fieldNumber: 331),
    .singularInt32({ $0.forMessageName }, fieldNumber: 332),
    .singularInt32({ $0.formUnion }, fieldNumber: 333),
    .singularInt32({ $0.forReadingFrom }, fieldNumber: 334),
    .singularInt32({ $0.forTypeURL }, fieldNumber: 335),
    .singularInt32({ $0.forwardParser }, fieldNumber: 336),
    .singularInt32({ $0.forWritingInto }, fieldNumber: 337),
    .singularInt32({ $0.from }, fieldNumber: 338),
    .singularInt32({ $0.fromAscii2 }, fieldNumber: 339),
    .singularInt32({ $0.fromAscii4 }, fieldNumber: 340),
    .singularInt32({ $0.fromByteOffset }, fieldNumber: 341),
    .singularInt32({ $0.fromHexDigit }, fieldNumber: 342),
    .singularInt32({ $0.fullName }, fieldNumber: 343),
    .singularInt32({ $0.`func` }, fieldNumber: 344),
    .singularInt32({ $0.g }, fieldNumber: 345),
    .singularInt32({ $0.generatedCodeInfo }, fieldNumber: 346),
    .singularInt32({ $0.get }, fieldNumber: 347),
    .singularInt32({ $0.getExtensionValue }, fieldNumber: 348),
    .singularInt32({ $0.getValue }, fieldNumber: 349),
    .singularInt32({ $0.googleapis }, fieldNumber: 350),
    .singularInt32({ $0.googleProtobufAny }, fieldNumber: 351),
    .singularInt32({ $0.googleProtobufApi }, fieldNumber: 352),
    .singularInt32({ $0.googleProtobufBoolValue }, fieldNumber: 353),
    .singularInt32({ $0.googleProtobufBytesValue }, fieldNumber: 354),
    .singularInt32({ $0.googleProtobufDescriptorProto }, fieldNumber: 355),
    .singularInt32({ $0.googleProtobufDoubleValue }, fieldNumber: 356),
    .singularInt32({ $0.googleProtobufDuration }, fieldNumber: 357),
    .singularInt32({ $0.googleProtobufEdition }, fieldNumber: 358),
    .singularInt32({ $0.googleProtobufEmpty }, fieldNumber: 359),
    .singularInt32({ $0.googleProtobufEnum }, fieldNumber: 360),
    .singularInt32({ $0.googleProtobufEnumDescriptorProto }, fieldNumber: 361),
    .singularInt32({ $0.googleProtobufEnumOptions }, fieldNumber: 362),
    .singularInt32({ $0.googleProtobufEnumValue }, fieldNumber: 363),
    .singularInt32({ $0.googleProtobufEnumValueDescriptorProto }, fieldNumber: 364),
    .singularInt32({ $0.googleProtobufEnumValueOptions }, fieldNumber: 365),
    .singularInt32({ $0.googleProtobufExtensionRangeOptions }, fieldNumber: 366),
    .singularInt32({ $0.googleProtobufFeatureSet }, fieldNumber: 367),
    .singularInt32({ $0.googleProtobufFeatureSetDefaults }, fieldNumber: 368),
    .singularInt32({ $0.googleProtobufField }, fieldNumber: 369),
    .singularInt32({ $0.googleProtobufFieldDescriptorProto }, fieldNumber: 370),
    .singularInt32({ $0.googleProtobufFieldMask }, fieldNumber: 371),
    .singularInt32({ $0.googleProtobufFieldOptions }, fieldNumber: 372),
    .singularInt32({ $0.googleProtobufFileDescriptorProto }, fieldNumber: 373),
    .singularInt32({ $0.googleProtobufFileDescriptorSet }, fieldNumber: 374),
    .singularInt32({ $0.googleProtobufFileOptions }, fieldNumber: 375),
    .singularInt32({ $0.googleProtobufFloatValue }, fieldNumber: 376),
    .singularInt32({ $0.googleProtobufGeneratedCodeInfo }, fieldNumber: 377),
    .singularInt32({ $0.googleProtobufInt32Value }, fieldNumber: 378),
    .singularInt32({ $0.googleProtobufInt64Value }, fieldNumber: 379),
    .singularInt32({ $0.googleProtobufListValue }, fieldNumber: 380),
    .singularInt32({ $0.googleProtobufMessageOptions }, fieldNumber: 381),
    .singularInt32({ $0.googleProtobufMethod }, fieldNumber: 382),
    .singularInt32({ $0.googleProtobufMethodDescriptorProto }, fieldNumber: 383),
    .singularInt32({ $0.googleProtobufMethodOptions }, fieldNumber: 384),
    .singularInt32({ $0.googleProtobufMixin }, fieldNumber: 385),
    .singularInt32({ $0.googleProtobufNullValue }, fieldNumber: 386),
    .singularInt32({ $0.googleProtobufOneofDescriptorProto }, fieldNumber: 387),
    .singularInt32({ $0.googleProtobufOneofOptions }, fieldNumber: 388),
    .singularInt32({ $0.googleProtobufOption }, fieldNumber: 389),
    .singularInt32({ $0.googleProtobufServiceDescriptorProto }, fieldNumber: 390),
    .singularInt32({ $0.googleProtobufServiceOptions }, fieldNumber: 391),
    .singularInt32({ $0.googleProtobufSourceCodeInfo }, fieldNumber: 392),
    .singularInt32({ $0.googleProtobufSourceContext }, fieldNumber: 393),
    .singularInt32({ $0.googleProtobufStringValue }, fieldNumber: 394),
    .singularInt32({ $0.googleProtobufStruct }, fieldNumber: 395),
    .singularInt32({ $0.googleProtobufSyntax }, fieldNumber: 396),
    .singularInt32({ $0.googleProtobufTimestamp }, fieldNumber: 397),
    .singularInt32({ $0.googleProtobufType }, fieldNumber: 398),
    .singularInt32({ $0.googleProtobufUint32Value }, fieldNumber: 399),
    .singularInt32({ $0.googleProtobufUint64Value }, fieldNumber: 400),
    .singularInt32({ $0.googleProtobufUninterpretedOption }, fieldNumber: 401),
    .singularInt32({ $0.googleProtobufValue }, fieldNumber: 402),
    .singularInt32({ $0.goPackage }, fieldNumber: 403),
    .singularInt32({ $0.group }, fieldNumber: 404),
    .singularInt32({ $0.groupFieldNumberStack }, fieldNumber: 405),
    .singularInt32({ $0.groupSize }, fieldNumber: 406),
    .singularInt32({ $0.hadOneofValue }, fieldNumber: 407),
    .singularInt32({ $0.handleConflictingOneOf }, fieldNumber: 408),
    .singularInt32({ $0.hasAggregateValue_p }, fieldNumber: 409),
    .singularInt32({ $0.hasAllowAlias_p }, fieldNumber: 410),
    .singularInt32({ $0.hasBegin_p }, fieldNumber: 411),
    .singularInt32({ $0.hasCcEnableArenas_p }, fieldNumber: 412),
    .singularInt32({ $0.hasCcGenericServices_p }, fieldNumber: 413),
    .singularInt32({ $0.hasClientStreaming_p }, fieldNumber: 414),
    .singularInt32({ $0.hasCsharpNamespace_p }, fieldNumber: 415),
    .singularInt32({ $0.hasCtype_p }, fieldNumber: 416),
    .singularInt32({ $0.hasDebugRedact_p }, fieldNumber: 417),
    .singularInt32({ $0.hasDefaultValue_p }, fieldNumber: 418),
    .singularInt32({ $0.hasDeprecated_p }, fieldNumber: 419),
    .singularInt32({ $0.hasDeprecatedLegacyJsonFieldConflicts_p }, fieldNumber: 420),
    .singularInt32({ $0.hasDoubleValue_p }, fieldNumber: 421),
    .singularInt32({ $0.hasEdition_p }, fieldNumber: 422),
    .singularInt32({ $0.hasEnd_p }, fieldNumber: 423),
    .singularInt32({ $0.hasEnumType_p }, fieldNumber: 424),
    .singularInt32({ $0.hasExtendee_p }, fieldNumber: 425),
    .singularInt32({ $0.hasExtensionValue_p }, fieldNumber: 426),
    .singularInt32({ $0.hasFeatures_p }, fieldNumber: 427),
    .singularInt32({ $0.hasFieldPresence_p }, fieldNumber: 428),
    .singularInt32({ $0.hasFullName_p }, fieldNumber: 429),
    .singularInt32({ $0.hasGoPackage_p }, fieldNumber: 430),
    .singularInt32({ $0.hash }, fieldNumber: 431),
    .singularInt32({ $0.hashable }, fieldNumber: 432),
    .singularInt32({ $0.hasher }, fieldNumber: 433),
    .singularInt32({ $0.hashVisitor }, fieldNumber: 434),
    .singularInt32({ $0.hasIdempotencyLevel_p }, fieldNumber: 435),
    .singularInt32({ $0.hasIdentifierValue_p }, fieldNumber: 436),
    .singularInt32({ $0.hasInputType_p }, fieldNumber: 437),
    .singularInt32({ $0.hasIsExtension_p }, fieldNumber: 438),
    .singularInt32({ $0.hasJavaGenerateEqualsAndHash_p }, fieldNumber: 439),
    .singularInt32({ $0.hasJavaGenericServices_p }, fieldNumber: 440),
    .singularInt32({ $0.hasJavaMultipleFiles_p }, fieldNumber: 441),
    .singularInt32({ $0.hasJavaOuterClassname_p }, fieldNumber: 442),
    .singularInt32({ $0.hasJavaPackage_p }, fieldNumber: 443),
    .singularInt32({ $0.hasJavaStringCheckUtf8_p }, fieldNumber: 444),
    .singularInt32({ $0.hasJsonFormat_p }, fieldNumber: 445),
    .singularInt32({ $0.hasJsonName_p }, fieldNumber: 446),
    .singularInt32({ $0.hasJstype_p }, fieldNumber: 447),
    .singularInt32({ $0.hasLabel_p }, fieldNumber: 448),
    .singularInt32({ $0.hasLazy_p }, fieldNumber: 449),
    .singularInt32({ $0.hasLeadingComments_p }, fieldNumber: 450),
    .singularInt32({ $0.hasMapEntry_p }, fieldNumber: 451),
    .singularInt32({ $0.hasMaximumEdition_p }, fieldNumber: 452),
    .singularInt32({ $0.hasMessageEncoding_p }, fieldNumber: 453),
    .singularInt32({ $0.hasMessageSetWireFormat_p }, fieldNumber: 454),
    .singularInt32({ $0.hasMinimumEdition_p }, fieldNumber: 455),
    .singularInt32({ $0.hasName_p }, fieldNumber: 456),
    .singularInt32({ $0.hasNamePart_p }, fieldNumber: 457),
    .singularInt32({ $0.hasNegativeIntValue_p }, fieldNumber: 458),
    .singularInt32({ $0.hasNoStandardDescriptorAccessor_p }, fieldNumber: 459),
    .singularInt32({ $0.hasNumber_p }, fieldNumber: 460),
    .singularInt32({ $0.hasObjcClassPrefix_p }, fieldNumber: 461),
    .singularInt32({ $0.hasOneofIndex_p }, fieldNumber: 462),
    .singularInt32({ $0.hasOptimizeFor_p }, fieldNumber: 463),
    .singularInt32({ $0.hasOptions_p }, fieldNumber: 464),
    .singularInt32({ $0.hasOutputType_p }, fieldNumber: 465),
    .singularInt32({ $0.hasPackage_p }, fieldNumber: 466),
    .singularInt32({ $0.hasPacked_p }, fieldNumber: 467),
    .singularInt32({ $0.hasPhpClassPrefix_p }, fieldNumber: 468),
    .singularInt32({ $0.hasPhpGenericServices_p }, fieldNumber: 469),
    .singularInt32({ $0.hasPhpMetadataNamespace_p }, fieldNumber: 470),
    .singularInt32({ $0.hasPhpNamespace_p }, fieldNumber: 471),
    .singularInt32({ $0.hasPositiveIntValue_p }, fieldNumber: 472),
    .singularInt32({ $0.hasProto3Optional_p }, fieldNumber: 473),
    .singularInt32({ $0.hasPyGenericServices_p }, fieldNumber: 474),
    .singularInt32({ $0.hasRepeated_p }, fieldNumber: 475),
    .singularInt32({ $0.hasRepeatedFieldEncoding_p }, fieldNumber: 476),
    .singularInt32({ $0.hasReserved_p }, fieldNumber: 477),
    .singularInt32({ $0.hasRetention_p }, fieldNumber: 478),
    .singularInt32({ $0.hasRubyPackage_p }, fieldNumber: 479),
    .singularInt32({ $0.hasSemantic_p }, fieldNumber: 480),
    .singularInt32({ $0.hasServerStreaming_p }, fieldNumber: 481),
    .singularInt32({ $0.hasSourceCodeInfo_p }, fieldNumber: 482),
    .singularInt32({ $0.hasSourceContext_p }, fieldNumber: 483),
    .singularInt32({ $0.hasSourceFile_p }, fieldNumber: 484),
    .singularInt32({ $0.hasStart_p }, fieldNumber: 485),
    .singularInt32({ $0.hasStringValue_p }, fieldNumber: 486),
    .singularInt32({ $0.hasSwiftPrefix_p }, fieldNumber: 487),
    .singularInt32({ $0.hasSyntax_p }, fieldNumber: 488),
    .singularInt32({ $0.hasTrailingComments_p }, fieldNumber: 489),
    .singularInt32({ $0.hasType_p }, fieldNumber: 490),
    .singularInt32({ $0.hasTypeName_p }, fieldNumber: 491),
    .singularInt32({ $0.hasUnverifiedLazy_p }, fieldNumber: 492),
    .singularInt32({ $0.hasUtf8Validation_p }, fieldNumber: 493),
    .singularInt32({ $0.hasValue_p }, fieldNumber: 494),
    .singularInt32({ $0.hasVerification_p }, fieldNumber: 495),
    .singularInt32({ $0.hasWeak_p }, fieldNumber: 496),
    .singularInt32({ $0.hour }, fieldNumber: 497),
    .singularInt32({ $0.i }, fieldNumber: 498),
    .singularInt32({ $0.idempotencyLevel }, fieldNumber: 499),
    .singularInt32({ $0.identifierValue }, fieldNumber: 500),
    .singularInt32({ $0.`if` }, fieldNumber: 501),
    .singularInt32({ $0.ignoreUnknownFields }, fieldNumber: 502),
    .singularInt32({ $0.index }, fieldNumber: 503),
    .singularInt32({ $0.init_p }, fieldNumber: 504),
    .singularInt32({ $0.`inout` }, fieldNumber: 505),
    .singularInt32({ $0.inputType }, fieldNumber: 506),
    .singularInt32({ $0.insert }, fieldNumber: 507),
    .singularInt32({ $0.int }, fieldNumber: 508),
    .singularInt32({ $0.int32 }, fieldNumber: 509),
    .singularInt32({ $0.int32Value }, fieldNumber: 510),
    .singularInt32({ $0.int64 }, fieldNumber: 511),
    .singularInt32({ $0.int64Value }, fieldNumber: 512),
    .singularInt32({ $0.int8 }, fieldNumber: 513),
    .singularInt32({ $0.integerLiteral }, fieldNumber: 514),
    .singularInt32({ $0.integerLiteralType }, fieldNumber: 515),
    .singularInt32({ $0.intern }, fieldNumber: 516),
    .singularInt32({ $0.`internal` }, fieldNumber: 517),
    .singularInt32({ $0.internalState }, fieldNumber: 518),
    .singularInt32({ $0.into }, fieldNumber: 519),
    .singularInt32({ $0.ints }, fieldNumber: 520),
    .singularInt32({ $0.isA }, fieldNumber: 521),
    .singularInt32({ $0.isEqual }, fieldNumber: 522),
    .singularInt32({ $0.isEqualTo }, fieldNumber: 523),
    .singularInt32({ $0.isExtension }, fieldNumber: 524),
    .singularInt32({ $0.isInitialized_p }, fieldNumber: 525),
    .singularInt32({ $0.isNegative }, fieldNumber: 526),
    .singularInt32({ $0.isUnset }, fieldNumber: 527),
    .singularInt32({ $0.itemTagsEncodedSize }, fieldNumber: 528),
    .singularInt32({ $0.iterator }, fieldNumber: 529),
    .singularInt32({ $0.javaGenerateEqualsAndHash }, fieldNumber: 530),
    .singularInt32({ $0.javaGenericServices }, fieldNumber: 531),
    .singularInt32({ $0.javaMultipleFiles }, fieldNumber: 532),
    .singularInt32({ $0.javaOuterClassname }, fieldNumber: 533),
    .singularInt32({ $0.javaPackage }, fieldNumber: 534),
    .singularInt32({ $0.javaStringCheckUtf8 }, fieldNumber: 535),
    .singularInt32({ $0.jsondecoder }, fieldNumber: 536),
    .singularInt32({ $0.jsondecodingError }, fieldNumber: 537),
    .singularInt32({ $0.jsondecodingOptions }, fieldNumber: 538),
    .singularInt32({ $0.jsonEncoder }, fieldNumber: 539),
    .singularInt32({ $0.jsonencodingError }, fieldNumber: 540),
    .singularInt32({ $0.jsonencodingOptions }, fieldNumber: 541),
    .singularInt32({ $0.jsonencodingVisitor }, fieldNumber: 542),
    .singularInt32({ $0.jsonFormat }, fieldNumber: 543),
    .singularInt32({ $0.jsonmapEncodingVisitor }, fieldNumber: 544),
    .singularInt32({ $0.jsonName }, fieldNumber: 545),
    .singularInt32({ $0.jsonPath }, fieldNumber: 546),
    .singularInt32({ $0.jsonPaths }, fieldNumber: 547),
    .singularInt32({ $0.jsonscanner }, fieldNumber: 548),
    .singularInt32({ $0.jsonString }, fieldNumber: 549),
    .singularInt32({ $0.jsonText }, fieldNumber: 550),
    .singularInt32({ $0.jsonUtf8Bytes }, fieldNumber: 551),
    .singularInt32({ $0.jsonUtf8Data }, fieldNumber: 552),
    .singularInt32({ $0.jstype }, fieldNumber: 553),
    .singularInt32({ $0.k }, fieldNumber: 554),
    .singularInt32({ $0.kChunkSize }, fieldNumber: 555),
    .singularInt32({ $0.key }, fieldNumber: 556),
    .singularInt32({ $0.keyField }, fieldNumber: 557),
    .singularInt32({ $0.keyFieldOpt }, fieldNumber: 558),
    .singularInt32({ $0.keyType }, fieldNumber: 559),
    .singularInt32({ $0.kind }, fieldNumber: 560),
    .singularInt32({ $0.l }, fieldNumber: 561),
    .singularInt32({ $0.label }, fieldNumber: 562),
    .singularInt32({ $0.lazy }, fieldNumber: 563),
    .singularInt32({ $0.leadingComments }, fieldNumber: 564),
    .singularInt32({ $0.leadingDetachedComments }, fieldNumber: 565),
    .singularInt32({ $0.length }, fieldNumber: 566),
    .singularInt32({ $0.lessThan }, fieldNumber: 567),
    .singularInt32({ $0.`let` }, fieldNumber: 568),
    .singularInt32({ $0.lhs }, fieldNumber: 569),
    .singularInt32({ $0.list }, fieldNumber: 570),
    .singularInt32({ $0.listOfMessages }, fieldNumber: 571),
    .singularInt32({ $0.listValue }, fieldNumber: 572),
    .singularInt32({ $0.littleEndian }, fieldNumber: 573),
    .singularInt32({ $0.littleEndianBytes }, fieldNumber: 574),
    .singularInt32({ $0.load }, fieldNumber: 575),
    .singularInt32({ $0.localHasher }, fieldNumber: 576),
    .singularInt32({ $0.location }, fieldNumber: 577),
    .singularInt32({ $0.m }, fieldNumber: 578),
    .singularInt32({ $0.major }, fieldNumber: 579),
    .singularInt32({ $0.makeAsyncIterator }, fieldNumber: 580),
    .singularInt32({ $0.makeIterator }, fieldNumber: 581),
    .singularInt32({ $0.map }, fieldNumber: 582),
    .singularInt32({ $0.mapEntry }, fieldNumber: 583),
    .singularInt32({ $0.mapKeyType }, fieldNumber: 584),
    .singularInt32({ $0.mapToMessages }, fieldNumber: 585),
    .singularInt32({ $0.mapValueType }, fieldNumber: 586),
    .singularInt32({ $0.mapVisitor }, fieldNumber: 587),
    .singularInt32({ $0.maximumEdition }, fieldNumber: 588),
    .singularInt32({ $0.mdayStart }, fieldNumber: 589),
    .singularInt32({ $0.merge }, fieldNumber: 590),
    .singularInt32({ $0.message }, fieldNumber: 591),
    .singularInt32({ $0.messageDepthLimit }, fieldNumber: 592),
    .singularInt32({ $0.messageEncoding }, fieldNumber: 593),
    .singularInt32({ $0.messageExtension }, fieldNumber: 594),
    .singularInt32({ $0.messageImplementationBase }, fieldNumber: 595),
    .singularInt32({ $0.messageOptions }, fieldNumber: 596),
    .singularInt32({ $0.messageSet }, fieldNumber: 597),
    .singularInt32({ $0.messageSetWireFormat }, fieldNumber: 598),
    .singularInt32({ $0.messageSize }, fieldNumber: 599),
    .singularInt32({ $0.messageType }, fieldNumber: 600),
    .singularInt32({ $0.method }, fieldNumber: 601),
    .singularInt32({ $0.methodDescriptorProto }, fieldNumber: 602),
    .singularInt32({ $0.methodOptions }, fieldNumber: 603),
    .singularInt32({ $0.methods }, fieldNumber: 604),
    .singularInt32({ $0.min }, fieldNumber: 605),
    .singularInt32({ $0.minimumEdition }, fieldNumber: 606),
    .singularInt32({ $0.minor }, fieldNumber: 607),
    .singularInt32({ $0.mixin }, fieldNumber: 608),
    .singularInt32({ $0.mixins }, fieldNumber: 609),
    .singularInt32({ $0.modifier }, fieldNumber: 610),
    .singularInt32({ $0.modify }, fieldNumber: 611),
    .singularInt32({ $0.month }, fieldNumber: 612),
    .singularInt32({ $0.msgExtension }, fieldNumber: 613),
    .singularInt32({ $0.mutating }, fieldNumber: 614),
    .singularInt32({ $0.n }, fieldNumber: 615),
    .singularInt32({ $0.name }, fieldNumber: 616),
    .singularInt32({ $0.nameDescription }, fieldNumber: 617),
    .singularInt32({ $0.nameMap }, fieldNumber: 618),
    .singularInt32({ $0.namePart }, fieldNumber: 619),
    .singularInt32({ $0.names }, fieldNumber: 620),
    .singularInt32({ $0.nanos }, fieldNumber: 621),
    .singularInt32({ $0.negativeIntValue }, fieldNumber: 622),
    .singularInt32({ $0.nestedType }, fieldNumber: 623),
    .singularInt32({ $0.newL }, fieldNumber: 624),
    .singularInt32({ $0.newList }, fieldNumber: 625),
    .singularInt32({ $0.newValue }, fieldNumber: 626),
    .singularInt32({ $0.next }, fieldNumber: 627),
    .singularInt32({ $0.nextByte }, fieldNumber: 628),
    .singularInt32({ $0.nextFieldNumber }, fieldNumber: 629),
    .singularInt32({ $0.nextVarInt }, fieldNumber: 630),
    .singularInt32({ $0.`nil` }, fieldNumber: 631),
    .singularInt32({ $0.nilLiteral }, fieldNumber: 632),
    .singularInt32({ $0.noStandardDescriptorAccessor }, fieldNumber: 633),
    .singularInt32({ $0.nullValue }, fieldNumber: 634),
    .singularInt32({ $0.number }, fieldNumber: 635),
    .singularInt32({ $0.numberValue }, fieldNumber: 636),
    .singularInt32({ $0.objcClassPrefix }, fieldNumber: 637),
    .singularInt32({ $0.of }, fieldNumber: 638),
    .singularInt32({ $0.oneOf }, fieldNumber: 639),
    .singularInt32({ $0.oneofDecl }, fieldNumber: 640),
    .singularInt32({ $0.oneofDescriptorProto }, fieldNumber: 641),
    .singularInt32({ $0.oneofIndex }, fieldNumber: 642),
    .singularInt32({ $0.oneofOptions }, fieldNumber: 643),
    .singularInt32({ $0.oneofs }, fieldNumber: 644),
    .singularInt32({ $0.oneOfKind }, fieldNumber: 645),
    .singularInt32({ $0.optimizeFor }, fieldNumber: 646),
    .singularInt32({ $0.optimizeMode }, fieldNumber: 647),
    .singularInt32({ $0.option }, fieldNumber: 648),
    .singularInt32({ $0.optionalEnumExtensionField }, fieldNumber: 649),
    .singularInt32({ $0.optionalExtensionField }, fieldNumber: 650),
    .singularInt32({ $0.optionalGroupExtensionField }, fieldNumber: 651),
    .singularInt32({ $0.optionalMessageExtensionField }, fieldNumber: 652),
    .singularInt32({ $0.optionRetention }, fieldNumber: 653),
    .singularInt32({ $0.options }, fieldNumber: 654),
    .singularInt32({ $0.optionTargetType }, fieldNumber: 655),
    .singularInt32({ $0.other }, fieldNumber: 656),
    .singularInt32({ $0.others }, fieldNumber: 657),
    .singularInt32({ $0.out }, fieldNumber: 658),
    .singularInt32({ $0.outputType }, fieldNumber: 659),
    .singularInt32({ $0.p }, fieldNumber: 660),
    .singularInt32({ $0.package }, fieldNumber: 661),
    .singularInt32({ $0.packed }, fieldNumber: 662),
    .singularInt32({ $0.packedBool }, fieldNumber: 663),
    .singularInt32({ $0.packedDouble }, fieldNumber: 664),
    .singularInt32({ $0.packedEnum }, fieldNumber: 665),
    .singularInt32({ $0.packedEnumExtensionField }, fieldNumber: 666),
    .singularInt32({ $0.packedExtensionField }, fieldNumber: 667),
    .singularInt32({ $0.packedFixed32 }, fieldNumber: 668),
    .singularInt32({ $0.packedFixed64 }, fieldNumber: 669),
    .singularInt32({ $0.packedFloat }, fieldNumber: 670),
    .singularInt32({ $0.packedInt32 }, fieldNumber: 671),
    .singularInt32({ $0.packedInt64 }, fieldNumber: 672),
    .singularInt32({ $0.packedSfixed32 }, fieldNumber: 673),
    .singularInt32({ $0.packedSfixed64 }, fieldNumber: 674),
    .singularInt32({ $0.packedSint32 }, fieldNumber: 675),
    .singularInt32({ $0.packedSint64 }, fieldNumber: 676),
    .singularInt32({ $0.packedUint32 }, fieldNumber: 677),
    .singularInt32({ $0.packedUint64 }, fieldNumber: 678),
    .singularInt32({ $0.padding }, fieldNumber: 679),
    .singularInt32({ $0.parent }, fieldNumber: 680),
    .singularInt32({ $0.parse }, fieldNumber: 681),
    .singularInt32({ $0.path }, fieldNumber: 682),
    .singularInt32({ $0.paths }, fieldNumber: 683),
    .singularInt32({ $0.payload }, fieldNumber: 684),
    .singularInt32({ $0.payloadSize }, fieldNumber: 685),
    .singularInt32({ $0.phpClassPrefix }, fieldNumber: 686),
    .singularInt32({ $0.phpGenericServices }, fieldNumber: 687),
    .singularInt32({ $0.phpMetadataNamespace }, fieldNumber: 688),
    .singularInt32({ $0.phpNamespace }, fieldNumber: 689),
    .singularInt32({ $0.pos }, fieldNumber: 690),
    .singularInt32({ $0.positiveIntValue }, fieldNumber: 691),
    .singularInt32({ $0.prefix }, fieldNumber: 692),
    .singularInt32({ $0.preserveProtoFieldNames }, fieldNumber: 693),
    .singularInt32({ $0.preTraverse }, fieldNumber: 694),
    .singularInt32({ $0.printUnknownFields }, fieldNumber: 695),
    .singularInt32({ $0.proto2 }, fieldNumber: 696),
    .singularInt32({ $0.proto3DefaultValue }, fieldNumber: 697),
    .singularInt32({ $0.proto3Optional }, fieldNumber: 698),
    .singularInt32({ $0.protobufApiversionCheck }, fieldNumber: 699),
    .singularInt32({ $0.protobufApiversion3 }, fieldNumber: 700),
    .singularInt32({ $0.protobufBool }, fieldNumber: 701),
    .singularInt32({ $0.protobufBytes }, fieldNumber: 702),
    .singularInt32({ $0.protobufDouble }, fieldNumber: 703),
    .singularInt32({ $0.protobufEnumMap }, fieldNumber: 704),
    .singularInt32({ $0.protobufExtension }, fieldNumber: 705),
    .singularInt32({ $0.protobufFixed32 }, fieldNumber: 706),
    .singularInt32({ $0.protobufFixed64 }, fieldNumber: 707),
    .singularInt32({ $0.protobufFloat }, fieldNumber: 708),
    .singularInt32({ $0.protobufInt32 }, fieldNumber: 709),
    .singularInt32({ $0.protobufInt64 }, fieldNumber: 710),
    .singularInt32({ $0.protobufMap }, fieldNumber: 711),
    .singularInt32({ $0.protobufMessageMap }, fieldNumber: 712),
    .singularInt32({ $0.protobufSfixed32 }, fieldNumber: 713),
    .singularInt32({ $0.protobufSfixed64 }, fieldNumber: 714),
    .singularInt32({ $0.protobufSint32 }, fieldNumber: 715),
    .singularInt32({ $0.protobufSint64 }, fieldNumber: 716),
    .singularInt32({ $0.protobufString }, fieldNumber: 717),
    .singularInt32({ $0.protobufUint32 }, fieldNumber: 718),
    .singularInt32({ $0.protobufUint64 }, fieldNumber: 719),
    .singularInt32({ $0.protobufExtensionFieldValues }, fieldNumber: 720),
    .singularInt32({ $0.protobufFieldNumber }, fieldNumber: 721),
    .singularInt32({ $0.protobufGeneratedIsEqualTo }, fieldNumber: 722),
    .singularInt32({ $0.protobufNameMap }, fieldNumber: 723),
    .singularInt32({ $0.protobufNewField }, fieldNumber: 724),
    .singularInt32({ $0.protobufPackage }, fieldNumber: 725),
    .singularInt32({ $0.`protocol` }, fieldNumber: 726),
    .singularInt32({ $0.protoFieldName }, fieldNumber: 727),
    .singularInt32({ $0.protoMessageName }, fieldNumber: 728),
    .singularInt32({ $0.protoNameProviding }, fieldNumber: 729),
    .singularInt32({ $0.protoPaths }, fieldNumber: 730),
    .singularInt32({ $0.`public` }, fieldNumber: 731),
    .singularInt32({ $0.publicDependency }, fieldNumber: 732),
    .singularInt32({ $0.putBoolValue }, fieldNumber: 733),
    .singularInt32({ $0.putBytesValue }, fieldNumber: 734),
    .singularInt32({ $0.putDoubleValue }, fieldNumber: 735),
    .singularInt32({ $0.putEnumValue }, fieldNumber: 736),
    .singularInt32({ $0.putFixedUint32 }, fieldNumber: 737),
    .singularInt32({ $0.putFixedUint64 }, fieldNumber: 738),
    .singularInt32({ $0.putFloatValue }, fieldNumber: 739),
    .singularInt32({ $0.putInt64 }, fieldNumber: 740),
    .singularInt32({ $0.putStringValue }, fieldNumber: 741),
    .singularInt32({ $0.putUint64 }, fieldNumber: 742),
    .singularInt32({ $0.putUint64Hex }, fieldNumber: 743),
    .singularInt32({ $0.putVarInt }, fieldNumber: 744),
    .singularInt32({ $0.putZigZagVarInt }, fieldNumber: 745),
    .singularInt32({ $0.pyGenericServices }, fieldNumber: 746),
    .singularInt32({ $0.r }, fieldNumber: 747),
    .singularInt32({ $0.rawChars }, fieldNumber: 748),
    .singularInt32({ $0.rawRepresentable }, fieldNumber: 749),
    .singularInt32({ $0.rawValue }, fieldNumber: 750),
    .singularInt32({ $0.read4HexDigits }, fieldNumber: 751),
    .singularInt32({ $0.readBytes }, fieldNumber: 752),
    .singularInt32({ $0.register }, fieldNumber: 753),
    .singularInt32({ $0.repeated }, fieldNumber: 754),
    .singularInt32({ $0.repeatedBool }, fieldNumber: 755),
    .singularInt32({ $0.repeatedBytes }, fieldNumber: 756),
    .singularInt32({ $0.repeatedDouble }, fieldNumber: 757),
    .singularInt32({ $0.repeatedEnum }, fieldNumber: 758),
    .singularInt32({ $0.repeatedEnumExtensionField }, fieldNumber: 759),
    .singularInt32({ $0.repeatedExtensionField }, fieldNumber: 760),
    .singularInt32({ $0.repeatedFieldEncoding }, fieldNumber: 761),
    .singularInt32({ $0.repeatedFixed32 }, fieldNumber: 762),
    .singularInt32({ $0.repeatedFixed64 }, fieldNumber: 763),
    .singularInt32({ $0.repeatedFloat }, fieldNumber: 764),
    .singularInt32({ $0.repeatedGroup }, fieldNumber: 765),
    .singularInt32({ $0.repeatedGroupExtensionField }, fieldNumber: 766),
    .singularInt32({ $0.repeatedInt32 }, fieldNumber: 767),
    .singularInt32({ $0.repeatedInt64 }, fieldNumber: 768),
    .singularInt32({ $0.repeatedMessage }, fieldNumber: 769),
    .singularInt32({ $0.repeatedMessageExtensionField }, fieldNumber: 770),
    .singularInt32({ $0.repeatedSfixed32 }, fieldNumber: 771),
    .singularInt32({ $0.repeatedSfixed64 }, fieldNumber: 772),
    .singularInt32({ $0.repeatedSint32 }, fieldNumber: 773),
    .singularInt32({ $0.repeatedSint64 }, fieldNumber: 774),
    .singularInt32({ $0.repeatedString }, fieldNumber: 775),
    .singularInt32({ $0.repeatedUint32 }, fieldNumber: 776),
    .singularInt32({ $0.repeatedUint64 }, fieldNumber: 777),
    .singularInt32({ $0.repeating }, fieldNumber: 778),
    .singularInt32({ $0.requestStreaming }, fieldNumber: 779),
    .singularInt32({ $0.requestTypeURL }, fieldNumber: 780),
    .singularInt32({ $0.requiredSize }, fieldNumber: 781),
    .singularInt32({ $0.responseStreaming }, fieldNumber: 782),
    .singularInt32({ $0.responseTypeURL }, fieldNumber: 783),
    .singularInt32({ $0.result }, fieldNumber: 784),
    .singularInt32({ $0.retention }, fieldNumber: 785),
    .singularInt32({ $0.`rethrows` }, fieldNumber: 786),
    .singularInt32({ $0.`return` }, fieldNumber: 787),
    .singularInt32({ $0.returnType }, fieldNumber: 788),
    .singularInt32({ $0.revision }, fieldNumber: 789),
    .singularInt32({ $0.rhs }, fieldNumber: 790),
    .singularInt32({ $0.root }, fieldNumber: 791),
    .singularInt32({ $0.rubyPackage }, fieldNumber: 792),
    .singularInt32({ $0.s }, fieldNumber: 793),
    .singularInt32({ $0.sawBackslash }, fieldNumber: 794),
    .singularInt32({ $0.sawSection4Characters }, fieldNumber: 795),
    .singularInt32({ $0.sawSection5Characters }, fieldNumber: 796),
    .singularInt32({ $0.scanner }, fieldNumber: 797),
    .singularInt32({ $0.seconds }, fieldNumber: 798),
    .singularInt32({ $0.self_p }, fieldNumber: 799),
    .singularInt32({ $0.semantic }, fieldNumber: 800),
    .singularInt32({ $0.sendable }, fieldNumber: 801),
    .singularInt32({ $0.separator }, fieldNumber: 802),
    .singularInt32({ $0.serialize }, fieldNumber: 803),
    .singularInt32({ $0.serializedBytes }, fieldNumber: 804),
    .singularInt32({ $0.serializedData }, fieldNumber: 805),
    .singularInt32({ $0.serializedSize }, fieldNumber: 806),
    .singularInt32({ $0.serverStreaming }, fieldNumber: 807),
    .singularInt32({ $0.service }, fieldNumber: 808),
    .singularInt32({ $0.serviceDescriptorProto }, fieldNumber: 809),
    .singularInt32({ $0.serviceOptions }, fieldNumber: 810),
    .singularInt32({ $0.set }, fieldNumber: 811),
    .singularInt32({ $0.setExtensionValue }, fieldNumber: 812),
    .singularInt32({ $0.shift }, fieldNumber: 813),
    .singularInt32({ $0.simpleExtensionMap }, fieldNumber: 814),
    .singularInt32({ $0.singularBool }, fieldNumber: 815),
    .singularInt32({ $0.singularBytes }, fieldNumber: 816),
    .singularInt32({ $0.singularDouble }, fieldNumber: 817),
    .singularInt32({ $0.singularEnum }, fieldNumber: 818),
    .singularInt32({ $0.singularFixed32 }, fieldNumber: 819),
    .singularInt32({ $0.singularFixed64 }, fieldNumber: 820),
    .singularInt32({ $0.singularFloat }, fieldNumber: 821),
    .singularInt32({ $0.singularGroup }, fieldNumber: 822),
    .singularInt32({ $0.singularInt32 }, fieldNumber: 823),
    .singularInt32({ $0.singularInt64 }, fieldNumber: 824),
    .singularInt32({ $0.singularMessage }, fieldNumber: 825),
    .singularInt32({ $0.singularSfixed32 }, fieldNumber: 826),
    .singularInt32({ $0.singularSfixed64 }, fieldNumber: 827),
    .singularInt32({ $0.singularSint32 }, fieldNumber: 828),
    .singularInt32({ $0.singularSint64 }, fieldNumber: 829),
    .singularInt32({ $0.singularString }, fieldNumber: 830),
    .singularInt32({ $0.singularUint32 }, fieldNumber: 831),
    .singularInt32({ $0.singularUint64 }, fieldNumber: 832),
    .singularInt32({ $0.size }, fieldNumber: 833),
    .singularInt32({ $0.sizer }, fieldNumber: 834),
    .singularInt32({ $0.source }, fieldNumber: 835),
    .singularInt32({ $0.sourceCodeInfo }, fieldNumber: 836),
    .singularInt32({ $0.sourceContext }, fieldNumber: 837),
    .singularInt32({ $0.sourceEncoding }, fieldNumber: 838),
    .singularInt32({ $0.sourceFile }, fieldNumber: 839),
    .singularInt32({ $0.span }, fieldNumber: 840),
    .singularInt32({ $0.split }, fieldNumber: 841),
    .singularInt32({ $0.start }, fieldNumber: 842),
    .singularInt32({ $0.startArray }, fieldNumber: 843),
    .singularInt32({ $0.startArrayObject }, fieldNumber: 844),
    .singularInt32({ $0.startField }, fieldNumber: 845),
    .singularInt32({ $0.startIndex }, fieldNumber: 846),
    .singularInt32({ $0.startMessageField }, fieldNumber: 847),
    .singularInt32({ $0.startObject }, fieldNumber: 848),
    .singularInt32({ $0.startRegularField }, fieldNumber: 849),
    .singularInt32({ $0.state }, fieldNumber: 850),
    .singularInt32({ $0.`static` }, fieldNumber: 851),
    .singularInt32({ $0.staticString }, fieldNumber: 852),
    .singularInt32({ $0.storage }, fieldNumber: 853),
    .singularInt32({ $0.string }, fieldNumber: 854),
    .singularInt32({ $0.stringLiteral }, fieldNumber: 855),
    .singularInt32({ $0.stringLiteralType }, fieldNumber: 856),
    .singularInt32({ $0.stringResult }, fieldNumber: 857),
    .singularInt32({ $0.stringValue }, fieldNumber: 858),
    .singularInt32({ $0.`struct` }, fieldNumber: 859),
    .singularInt32({ $0.structValue }, fieldNumber: 860),
    .singularInt32({ $0.subDecoder }, fieldNumber: 861),
    .singularInt32({ $0.`subscript` }, fieldNumber: 862),
    .singularInt32({ $0.subVisitor }, fieldNumber: 863),
    .singularInt32({ $0.swift }, fieldNumber: 864),
    .singularInt32({ $0.swiftPrefix }, fieldNumber: 865),
    .singularInt32({ $0.swiftProtobufContiguousBytes }, fieldNumber: 866),
    .singularInt32({ $0.syntax }, fieldNumber: 867),
    .singularInt32({ $0.t }, fieldNumber: 868),
    .singularInt32({ $0.tag }, fieldNumber: 869),
    .singularInt32({ $0.targets }, fieldNumber: 870),
    .singularInt32({ $0.terminator }, fieldNumber: 871),
    .singularInt32({ $0.testDecoder }, fieldNumber: 872),
    .singularInt32({ $0.text }, fieldNumber: 873),
    .singularInt32({ $0.textDecoder }, fieldNumber: 874),
    .singularInt32({ $0.textFormatDecoder }, fieldNumber: 875),
    .singularInt32({ $0.textFormatDecodingError }, fieldNumber: 876),
    .singularInt32({ $0.textFormatDecodingOptions }, fieldNumber: 877),
    .singularInt32({ $0.textFormatEncodingOptions }, fieldNumber: 878),
    .singularInt32({ $0.textFormatEncodingVisitor }, fieldNumber: 879),
    .singularInt32({ $0.textFormatString }, fieldNumber: 880),
    .singularInt32({ $0.throwOrIgnore }, fieldNumber: 881),
    .singularInt32({ $0.`throws` }, fieldNumber: 882),
    .singularInt32({ $0.timeInterval }, fieldNumber: 883),
    .singularInt32({ $0.timeIntervalSince1970 }, fieldNumber: 884),
    .singularInt32({ $0.timeIntervalSinceReferenceDate }, fieldNumber: 885),
    .singularInt32({ $0.timestamp }, fieldNumber: 886),
    .singularInt32({ $0.toConcrete }, fieldNumber: 887),
    .singularInt32({ $0.total }, fieldNumber: 888),
    .singularInt32({ $0.totalArrayDepth }, fieldNumber: 889),
    .singularInt32({ $0.totalSize }, fieldNumber: 890),
    .singularInt32({ $0.trailingComments }, fieldNumber: 891),
    .singularInt32({ $0.traverse }, fieldNumber: 892),
    .singularInt32({ $0.`true` }, fieldNumber: 893),
    .singularInt32({ $0.`try` }, fieldNumber: 894),
    .singularInt32({ $0.type }, fieldNumber: 895),
    .singularInt32({ $0.`typealias` }, fieldNumber: 896),
    .singularInt32({ $0.typeEnum }, fieldNumber: 897),
    .singularInt32({ $0.typeName }, fieldNumber: 898),
    .singularInt32({ $0.typePrefix }, fieldNumber: 899),
    .singularInt32({ $0.typeStart }, fieldNumber: 900),
    .singularInt32({ $0.typeUnknown }, fieldNumber: 901),
    .singularInt32({ $0.typeURL }, fieldNumber: 902),
    .singularInt32({ $0.uint32 }, fieldNumber: 903),
    .singularInt32({ $0.uint32Value }, fieldNumber: 904),
    .singularInt32({ $0.uint64 }, fieldNumber: 905),
    .singularInt32({ $0.uint64Value }, fieldNumber: 906),
    .singularInt32({ $0.uint8 }, fieldNumber: 907),
    .singularInt32({ $0.unchecked }, fieldNumber: 908),
    .singularInt32({ $0.unicodeScalarLiteral }, fieldNumber: 909),
    .singularInt32({ $0.unicodeScalarLiteralType }, fieldNumber: 910),
    .singularInt32({ $0.unicodeScalars }, fieldNumber: 911),
    .singularInt32({ $0.unicodeScalarView }, fieldNumber: 912),
    .singularInt32({ $0.uninterpretedOption }, fieldNumber: 913),
    .singularInt32({ $0.union }, fieldNumber: 914),
    .singularInt32({ $0.uniqueStorage }, fieldNumber: 915),
    .singularInt32({ $0.unknown }, fieldNumber: 916),
    .singularInt32({ $0.unknownFields_p }, fieldNumber: 917),
    .singularInt32({ $0.unknownStorage }, fieldNumber: 918),
    .singularInt32({ $0.unpackTo }, fieldNumber: 919),
    .singularInt32({ $0.unsafeBufferPointer }, fieldNumber: 920),
    .singularInt32({ $0.unsafeMutablePointer }, fieldNumber: 921),
    .singularInt32({ $0.unsafeMutableRawBufferPointer }, fieldNumber: 922),
    .singularInt32({ $0.unsafeRawBufferPointer }, fieldNumber: 923),
    .singularInt32({ $0.unsafeRawPointer }, fieldNumber: 924),
    .singularInt32({ $0.unverifiedLazy }, fieldNumber: 925),
    .singularInt32({ $0.updatedOptions }, fieldNumber: 926),
    .singularInt32({ $0.url }, fieldNumber: 927),
    .singularInt32({ $0.useDeterministicOrdering }, fieldNumber: 928),
    .singularInt32({ $0.utf8 }, fieldNumber: 929),
    .singularInt32({ $0.utf8Ptr }, fieldNumber: 930),
    .singularInt32({ $0.utf8ToDouble }, fieldNumber: 931),
    .singularInt32({ $0.utf8Validation }, fieldNumber: 932),
    .singularInt32({ $0.utf8View }, fieldNumber: 933),
    .singularInt32({ $0.v }, fieldNumber: 934),
    .singularInt32({ $0.value }, fieldNumber: 935),
    .singularInt32({ $0.valueField }, fieldNumber: 936),
    .singularInt32({ $0.values }, fieldNumber: 937),
    .singularInt32({ $0.valueType }, fieldNumber: 938),
    .singularInt32({ $0.`var` }, fieldNumber: 939),
    .singularInt32({ $0.verification }, fieldNumber: 940),
    .singularInt32({ $0.verificationState }, fieldNumber: 941),
    .singularInt32({ $0.version }, fieldNumber: 942),
    .singularInt32({ $0.versionString }, fieldNumber: 943),
    .singularInt32({ $0.visitExtensionFields }, fieldNumber: 944),
    .singularInt32({ $0.visitExtensionFieldsAsMessageSet }, fieldNumber: 945),
    .singularInt32({ $0.visitMapField }, fieldNumber: 946),
    .singularInt32({ $0.visitor }, fieldNumber: 947),
    .singularInt32({ $0.visitPacked }, fieldNumber: 948),
    .singularInt32({ $0.visitPackedBoolField }, fieldNumber: 949),
    .singularInt32({ $0.visitPackedDoubleField }, fieldNumber: 950),
    .singularInt32({ $0.visitPackedEnumField }, fieldNumber: 951),
    .singularInt32({ $0.visitPackedFixed32Field }, fieldNumber: 952),
    .singularInt32({ $0.visitPackedFixed64Field }, fieldNumber: 953),
    .singularInt32({ $0.visitPackedFloatField }, fieldNumber: 954),
    .singularInt32({ $0.visitPackedInt32Field }, fieldNumber: 955),
    .singularInt32({ $0.visitPackedInt64Field }, fieldNumber: 956),
    .singularInt32({ $0.visitPackedSfixed32Field }, fieldNumber: 957),
    .singularInt32({ $0.visitPackedSfixed64Field }, fieldNumber: 958),
    .singularInt32({ $0.visitPackedSint32Field }, fieldNumber: 959),
    .singularInt32({ $0.visitPackedSint64Field }, fieldNumber: 960),
    .singularInt32({ $0.visitPackedUint32Field }, fieldNumber: 961),
    .singularInt32({ $0.visitPackedUint64Field }, fieldNumber: 962),
    .singularInt32({ $0.visitRepeated }, fieldNumber: 963),
    .singularInt32({ $0.visitRepeatedBoolField }, fieldNumber: 964),
    .singularInt32({ $0.visitRepeatedBytesField }, fieldNumber: 965),
    .singularInt32({ $0.visitRepeatedDoubleField }, fieldNumber: 966),
    .singularInt32({ $0.visitRepeatedEnumField }, fieldNumber: 967),
    .singularInt32({ $0.visitRepeatedFixed32Field }, fieldNumber: 968),
    .singularInt32({ $0.visitRepeatedFixed64Field }, fieldNumber: 969),
    .singularInt32({ $0.visitRepeatedFloatField }, fieldNumber: 970),
    .singularInt32({ $0.visitRepeatedGroupField }, fieldNumber: 971),
    .singularInt32({ $0.visitRepeatedInt32Field }, fieldNumber: 972),
    .singularInt32({ $0.visitRepeatedInt64Field }, fieldNumber: 973),
    .singularInt32({ $0.visitRepeatedMessageField }, fieldNumber: 974),
    .singularInt32({ $0.visitRepeatedSfixed32Field }, fieldNumber: 975),
    .singularInt32({ $0.visitRepeatedSfixed64Field }, fieldNumber: 976),
    .singularInt32({ $0.visitRepeatedSint32Field }, fieldNumber: 977),
    .singularInt32({ $0.visitRepeatedSint64Field }, fieldNumber: 978),
    .singularInt32({ $0.visitRepeatedStringField }, fieldNumber: 979),
    .singularInt32({ $0.visitRepeatedUint32Field }, fieldNumber: 980),
    .singularInt32({ $0.visitRepeatedUint64Field }, fieldNumber: 981),
    .singularInt32({ $0.visitSingular }, fieldNumber: 982),
    .singularInt32({ $0.visitSingularBoolField }, fieldNumber: 983),
    .singularInt32({ $0.visitSingularBytesField }, fieldNumber: 984),
    .singularInt32({ $0.visitSingularDoubleField }, fieldNumber: 985),
    .singularInt32({ $0.visitSingularEnumField }, fieldNumber: 986),
    .singularInt32({ $0.visitSingularFixed32Field }, fieldNumber: 987),
    .singularInt32({ $0.visitSingularFixed64Field }, fieldNumber: 988),
    .singularInt32({ $0.visitSingularFloatField }, fieldNumber: 989),
    .singularInt32({ $0.visitSingularGroupField }, fieldNumber: 990),
    .singularInt32({ $0.visitSingularInt32Field }, fieldNumber: 991),
    .singularInt32({ $0.visitSingularInt64Field }, fieldNumber: 992),
    .singularInt32({ $0.visitSingularMessageField }, fieldNumber: 993),
    .singularInt32({ $0.visitSingularSfixed32Field }, fieldNumber: 994),
    .singularInt32({ $0.visitSingularSfixed64Field }, fieldNumber: 995),
    .singularInt32({ $0.visitSingularSint32Field }, fieldNumber: 996),
    .singularInt32({ $0.visitSingularSint64Field }, fieldNumber: 997),
    .singularInt32({ $0.visitSingularStringField }, fieldNumber: 998),
    .singularInt32({ $0.visitSingularUint32Field }, fieldNumber: 999),
    .singularInt32({ $0.visitSingularUint64Field }, fieldNumber: 1000),
    .singularInt32({ $0.visitUnknown }, fieldNumber: 1001),
    .singularInt32({ $0.wasDecoded }, fieldNumber: 1002),
    .singularInt32({ $0.weak }, fieldNumber: 1003),
    .singularInt32({ $0.weakDependency }, fieldNumber: 1004),
    .singularInt32({ $0.`where` }, fieldNumber: 1005),
    .singularInt32({ $0.wireFormat }, fieldNumber: 1006),
    .singularInt32({ $0.with }, fieldNumber: 1007),
    .singularInt32({ $0.withUnsafeBytes }, fieldNumber: 1008),
    .singularInt32({ $0.withUnsafeMutableBytes }, fieldNumber: 1009),
    .singularInt32({ $0.work }, fieldNumber: 1010),
    .singularInt32({ $0.wrapped }, fieldNumber: 1011),
    .singularInt32({ $0.wrappedType }, fieldNumber: 1012),
    .singularInt32({ $0.wrappedValue }, fieldNumber: 1013),
    .singularInt32({ $0.written }, fieldNumber: 1014),
    .singularInt32({ $0.yday }, fieldNumber: 1015),
  ]


  static func ==(lhs: SwiftProtoTesting_Generated_GeneratedSwiftReservedFields, rhs: SwiftProtoTesting_Generated_GeneratedSwiftReservedFields) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._adjusted != rhs_storage._adjusted {return false}
        if _storage._aggregateValue != rhs_storage._aggregateValue {return false}
        if _storage._allCases != rhs_storage._allCases {return false}
        if _storage._allowAlias != rhs_storage._allowAlias {return false}
        if _storage._alwaysPrintEnumsAsInts != rhs_storage._alwaysPrintEnumsAsInts {return false}
        if _storage._alwaysPrintInt64SAsNumbers != rhs_storage._alwaysPrintInt64SAsNumbers {return false}
        if _storage._annotation != rhs_storage._annotation {return false}
        if _storage._any != rhs_storage._any {return false}
        if _storage._anyExtensionField != rhs_storage._anyExtensionField {return false}
        if _storage._anyMessageExtension != rhs_storage._anyMessageExtension {return false}
        if _storage._anyMessageStorage != rhs_storage._anyMessageStorage {return false}
        if _storage._anyUnpackError != rhs_storage._anyUnpackError {return false}
        if _storage._api != rhs_storage._api {return false}
        if _storage._appended != rhs_storage._appended {return false}
        if _storage._appendUintHex != rhs_storage._appendUintHex {return false}
        if _storage._appendUnknown != rhs_storage._appendUnknown {return false}
        if _storage._areAllInitialized != rhs_storage._areAllInitialized {return false}
        if _storage._array != rhs_storage._array {return false}
        if _storage._arrayDepth != rhs_storage._arrayDepth {return false}
        if _storage._arrayLiteral != rhs_storage._arrayLiteral {return false}
        if _storage._arraySeparator != rhs_storage._arraySeparator {return false}
        if _storage._as != rhs_storage._as {return false}
        if _storage._asciiOpenCurlyBracket != rhs_storage._asciiOpenCurlyBracket {return false}
        if _storage._asciiZero != rhs_storage._asciiZero {return false}
        if _storage._async != rhs_storage._async {return false}
        if _storage._asyncIterator != rhs_storage._asyncIterator {return false}
        if _storage._asyncIteratorProtocol != rhs_storage._asyncIteratorProtocol {return false}
        if _storage._asyncMessageSequence != rhs_storage._asyncMessageSequence {return false}
        if _storage._available != rhs_storage._available {return false}
        if _storage._b != rhs_storage._b {return false}
        if _storage._base != rhs_storage._base {return false}
        if _storage._base64Values != rhs_storage._base64Values {return false}
        if _storage._baseAddress != rhs_storage._baseAddress {return false}
        if _storage._baseType != rhs_storage._baseType {return false}
        if _storage._begin != rhs_storage._begin {return false}
        if _storage._binary != rhs_storage._binary {return false}
        if _storage._binaryDecoder != rhs_storage._binaryDecoder {return false}
        if _storage._binaryDecodingError != rhs_storage._binaryDecodingError {return false}
        if _storage._binaryDecodingOptions != rhs_storage._binaryDecodingOptions {return false}
        if _storage._binaryDelimited != rhs_storage._binaryDelimited {return false}
        if _storage._binaryEncoder != rhs_storage._binaryEncoder {return false}
        if _storage._binaryEncodingError != rhs_storage._binaryEncodingError {return false}
        if _storage._binaryEncodingMessageSetSizeVisitor != rhs_storage._binaryEncodingMessageSetSizeVisitor {return false}
        if _storage._binaryEncodingMessageSetVisitor != rhs_storage._binaryEncodingMessageSetVisitor {return false}
        if _storage._binaryEncodingOptions != rhs_storage._binaryEncodingOptions {return false}
        if _storage._binaryEncodingSizeVisitor != rhs_storage._binaryEncodingSizeVisitor {return false}
        if _storage._binaryEncodingVisitor != rhs_storage._binaryEncodingVisitor {return false}
        if _storage._binaryOptions != rhs_storage._binaryOptions {return false}
        if _storage._binaryProtobufDelimitedMessages != rhs_storage._binaryProtobufDelimitedMessages {return false}
        if _storage._bitPattern != rhs_storage._bitPattern {return false}
        if _storage._body != rhs_storage._body {return false}
        if _storage._bool != rhs_storage._bool {return false}
        if _storage._booleanLiteral != rhs_storage._booleanLiteral {return false}
        if _storage._booleanLiteralType != rhs_storage._booleanLiteralType {return false}
        if _storage._boolValue != rhs_storage._boolValue {return false}
        if _storage._buffer != rhs_storage._buffer {return false}
        if _storage._bytes != rhs_storage._bytes {return false}
        if _storage._bytesInGroup != rhs_storage._bytesInGroup {return false}
        if _storage._bytesNeeded != rhs_storage._bytesNeeded {return false}
        if _storage._bytesRead != rhs_storage._bytesRead {return false}
        if _storage._bytesValue != rhs_storage._bytesValue {return false}
        if _storage._c != rhs_storage._c {return false}
        if _storage._capitalizeNext != rhs_storage._capitalizeNext {return false}
        if _storage._cardinality != rhs_storage._cardinality {return false}
        if _storage._caseIterable != rhs_storage._caseIterable {return false}
        if _storage._ccEnableArenas != rhs_storage._ccEnableArenas {return false}
        if _storage._ccGenericServices != rhs_storage._ccGenericServices {return false}
        if _storage._character != rhs_storage._character {return false}
        if _storage._chars != rhs_storage._chars {return false}
        if _storage._chunk != rhs_storage._chunk {return false}
        if _storage._class != rhs_storage._class {return false}
        if _storage._clearAggregateValue_p != rhs_storage._clearAggregateValue_p {return false}
        if _storage._clearAllowAlias_p != rhs_storage._clearAllowAlias_p {return false}
        if _storage._clearBegin_p != rhs_storage._clearBegin_p {return false}
        if _storage._clearCcEnableArenas_p != rhs_storage._clearCcEnableArenas_p {return false}
        if _storage._clearCcGenericServices_p != rhs_storage._clearCcGenericServices_p {return false}
        if _storage._clearClientStreaming_p != rhs_storage._clearClientStreaming_p {return false}
        if _storage._clearCsharpNamespace_p != rhs_storage._clearCsharpNamespace_p {return false}
        if _storage._clearCtype_p != rhs_storage._clearCtype_p {return false}
        if _storage._clearDebugRedact_p != rhs_storage._clearDebugRedact_p {return false}
        if _storage._clearDefaultValue_p != rhs_storage._clearDefaultValue_p {return false}
        if _storage._clearDeprecated_p != rhs_storage._clearDeprecated_p {return false}
        if _storage._clearDeprecatedLegacyJsonFieldConflicts_p != rhs_storage._clearDeprecatedLegacyJsonFieldConflicts_p {return false}
        if _storage._clearDoubleValue_p != rhs_storage._clearDoubleValue_p {return false}
        if _storage._clearEdition_p != rhs_storage._clearEdition_p {return false}
        if _storage._clearEnd_p != rhs_storage._clearEnd_p {return false}
        if _storage._clearEnumType_p != rhs_storage._clearEnumType_p {return false}
        if _storage._clearExtendee_p != rhs_storage._clearExtendee_p {return false}
        if _storage._clearExtensionValue_p != rhs_storage._clearExtensionValue_p {return false}
        if _storage._clearFeatures_p != rhs_storage._clearFeatures_p {return false}
        if _storage._clearFieldPresence_p != rhs_storage._clearFieldPresence_p {return false}
        if _storage._clearFullName_p != rhs_storage._clearFullName_p {return false}
        if _storage._clearGoPackage_p != rhs_storage._clearGoPackage_p {return false}
        if _storage._clearIdempotencyLevel_p != rhs_storage._clearIdempotencyLevel_p {return false}
        if _storage._clearIdentifierValue_p != rhs_storage._clearIdentifierValue_p {return false}
        if _storage._clearInputType_p != rhs_storage._clearInputType_p {return false}
        if _storage._clearIsExtension_p != rhs_storage._clearIsExtension_p {return false}
        if _storage._clearJavaGenerateEqualsAndHash_p != rhs_storage._clearJavaGenerateEqualsAndHash_p {return false}
        if _storage._clearJavaGenericServices_p != rhs_storage._clearJavaGenericServices_p {return false}
        if _storage._clearJavaMultipleFiles_p != rhs_storage._clearJavaMultipleFiles_p {return false}
        if _storage._clearJavaOuterClassname_p != rhs_storage._clearJavaOuterClassname_p {return false}
        if _storage._clearJavaPackage_p != rhs_storage._clearJavaPackage_p {return false}
        if _storage._clearJavaStringCheckUtf8_p != rhs_storage._clearJavaStringCheckUtf8_p {return false}
        if _storage._clearJsonFormat_p != rhs_storage._clearJsonFormat_p {return false}
        if _storage._clearJsonName_p != rhs_storage._clearJsonName_p {return false}
        if _storage._clearJstype_p != rhs_storage._clearJstype_p {return false}
        if _storage._clearLabel_p != rhs_storage._clearLabel_p {return false}
        if _storage._clearLazy_p != rhs_storage._clearLazy_p {return false}
        if _storage._clearLeadingComments_p != rhs_storage._clearLeadingComments_p {return false}
        if _storage._clearMapEntry_p != rhs_storage._clearMapEntry_p {return false}
        if _storage._clearMaximumEdition_p != rhs_storage._clearMaximumEdition_p {return false}
        if _storage._clearMessageEncoding_p != rhs_storage._clearMessageEncoding_p {return false}
        if _storage._clearMessageSetWireFormat_p != rhs_storage._clearMessageSetWireFormat_p {return false}
        if _storage._clearMinimumEdition_p != rhs_storage._clearMinimumEdition_p {return false}
        if _storage._clearName_p != rhs_storage._clearName_p {return false}
        if _storage._clearNamePart_p != rhs_storage._clearNamePart_p {return false}
        if _storage._clearNegativeIntValue_p != rhs_storage._clearNegativeIntValue_p {return false}
        if _storage._clearNoStandardDescriptorAccessor_p != rhs_storage._clearNoStandardDescriptorAccessor_p {return false}
        if _storage._clearNumber_p != rhs_storage._clearNumber_p {return false}
        if _storage._clearObjcClassPrefix_p != rhs_storage._clearObjcClassPrefix_p {return false}
        if _storage._clearOneofIndex_p != rhs_storage._clearOneofIndex_p {return false}
        if _storage._clearOptimizeFor_p != rhs_storage._clearOptimizeFor_p {return false}
        if _storage._clearOptions_p != rhs_storage._clearOptions_p {return false}
        if _storage._clearOutputType_p != rhs_storage._clearOutputType_p {return false}
        if _storage._clearPackage_p != rhs_storage._clearPackage_p {return false}
        if _storage._clearPacked_p != rhs_storage._clearPacked_p {return false}
        if _storage._clearPhpClassPrefix_p != rhs_storage._clearPhpClassPrefix_p {return false}
        if _storage._clearPhpGenericServices_p != rhs_storage._clearPhpGenericServices_p {return false}
        if _storage._clearPhpMetadataNamespace_p != rhs_storage._clearPhpMetadataNamespace_p {return false}
        if _storage._clearPhpNamespace_p != rhs_storage._clearPhpNamespace_p {return false}
        if _storage._clearPositiveIntValue_p != rhs_storage._clearPositiveIntValue_p {return false}
        if _storage._clearProto3Optional_p != rhs_storage._clearProto3Optional_p {return false}
        if _storage._clearPyGenericServices_p != rhs_storage._clearPyGenericServices_p {return false}
        if _storage._clearRepeated_p != rhs_storage._clearRepeated_p {return false}
        if _storage._clearRepeatedFieldEncoding_p != rhs_storage._clearRepeatedFieldEncoding_p {return false}
        if _storage._clearReserved_p != rhs_storage._clearReserved_p {return false}
        if _storage._clearRetention_p != rhs_storage._clearRetention_p {return false}
        if _storage._clearRubyPackage_p != rhs_storage._clearRubyPackage_p {return false}
        if _storage._clearSemantic_p != rhs_storage._clearSemantic_p {return false}
        if _storage._clearServerStreaming_p != rhs_storage._clearServerStreaming_p {return false}
        if _storage._clearSourceCodeInfo_p != rhs_storage._clearSourceCodeInfo_p {return false}
        if _storage._clearSourceContext_p != rhs_storage._clearSourceContext_p {return false}
        if _storage._clearSourceFile_p != rhs_storage._clearSourceFile_p {return false}
        if _storage._clearStart_p != rhs_storage._clearStart_p {return false}
        if _storage._clearStringValue_p != rhs_storage._clearStringValue_p {return false}
        if _storage._clearSwiftPrefix_p != rhs_storage._clearSwiftPrefix_p {return false}
        if _storage._clearSyntax_p != rhs_storage._clearSyntax_p {return false}
        if _storage._clearTrailingComments_p != rhs_storage._clearTrailingComments_p {return false}
        if _storage._clearType_p != rhs_storage._clearType_p {return false}
        if _storage._clearTypeName_p != rhs_storage._clearTypeName_p {return false}
        if _storage._clearUnverifiedLazy_p != rhs_storage._clearUnverifiedLazy_p {return false}
        if _storage._clearUtf8Validation_p != rhs_storage._clearUtf8Validation_p {return false}
        if _storage._clearValue_p != rhs_storage._clearValue_p {return false}
        if _storage._clearVerification_p != rhs_storage._clearVerification_p {return false}
        if _storage._clearWeak_p != rhs_storage._clearWeak_p {return false}
        if _storage._clientStreaming != rhs_storage._clientStreaming {return false}
        if _storage._codePoint != rhs_storage._codePoint {return false}
        if _storage._codeUnits != rhs_storage._codeUnits {return false}
        if _storage._collection != rhs_storage._collection {return false}
        if _storage._com != rhs_storage._com {return false}
        if _storage._comma != rhs_storage._comma {return false}
        if _storage._commonMessageConformances != rhs_storage._commonMessageConformances {return false}
        if _storage._consumedBytes != rhs_storage._consumedBytes {return false}
        if _storage._contentsOf != rhs_storage._contentsOf {return false}
        if _storage._count != rhs_storage._count {return false}
        if _storage._countVarintsInBuffer != rhs_storage._countVarintsInBuffer {return false}
        if _storage._csharpNamespace != rhs_storage._csharpNamespace {return false}
        if _storage._ctype != rhs_storage._ctype {return false}
        if _storage._customCodable != rhs_storage._customCodable {return false}
        if _storage._d != rhs_storage._d {return false}
        if _storage._data != rhs_storage._data {return false}
        if _storage._dataResult != rhs_storage._dataResult {return false}
        if _storage._date != rhs_storage._date {return false}
        if _storage._daySec != rhs_storage._daySec {return false}
        if _storage._daysSinceEpoch != rhs_storage._daysSinceEpoch {return false}
        if _storage._debugDescription_p != rhs_storage._debugDescription_p {return false}
        if _storage._debugRedact != rhs_storage._debugRedact {return false}
        if _storage._declaration != rhs_storage._declaration {return false}
        if _storage._decoded != rhs_storage._decoded {return false}
        if _storage._decodedFromJsonnull != rhs_storage._decodedFromJsonnull {return false}
        if _storage._decodeExtensionField != rhs_storage._decodeExtensionField {return false}
        if _storage._decodeExtensionFieldsAsMessageSet != rhs_storage._decodeExtensionFieldsAsMessageSet {return false}
        if _storage._decodeJson != rhs_storage._decodeJson {return false}
        if _storage._decodeMapField != rhs_storage._decodeMapField {return false}
        if _storage._decodeMessage != rhs_storage._decodeMessage {return false}
        if _storage._decoder != rhs_storage._decoder {return false}
        if _storage._decodeRepeated != rhs_storage._decodeRepeated {return false}
        if _storage._decodeRepeatedBoolField != rhs_storage._decodeRepeatedBoolField {return false}
        if _storage._decodeRepeatedBytesField != rhs_storage._decodeRepeatedBytesField {return false}
        if _storage._decodeRepeatedDoubleField != rhs_storage._decodeRepeatedDoubleField {return false}
        if _storage._decodeRepeatedEnumField != rhs_storage._decodeRepeatedEnumField {return false}
        if _storage._decodeRepeatedFixed32Field != rhs_storage._decodeRepeatedFixed32Field {return false}
        if _storage._decodeRepeatedFixed64Field != rhs_storage._decodeRepeatedFixed64Field {return false}
        if _storage._decodeRepeatedFloatField != rhs_storage._decodeRepeatedFloatField {return false}
        if _storage._decodeRepeatedGroupField != rhs_storage._decodeRepeatedGroupField {return false}
        if _storage._decodeRepeatedInt32Field != rhs_storage._decodeRepeatedInt32Field {return false}
        if _storage._decodeRepeatedInt64Field != rhs_storage._decodeRepeatedInt64Field {return false}
        if _storage._decodeRepeatedMessageField != rhs_storage._decodeRepeatedMessageField {return false}
        if _storage._decodeRepeatedSfixed32Field != rhs_storage._decodeRepeatedSfixed32Field {return false}
        if _storage._decodeRepeatedSfixed64Field != rhs_storage._decodeRepeatedSfixed64Field {return false}
        if _storage._decodeRepeatedSint32Field != rhs_storage._decodeRepeatedSint32Field {return false}
        if _storage._decodeRepeatedSint64Field != rhs_storage._decodeRepeatedSint64Field {return false}
        if _storage._decodeRepeatedStringField != rhs_storage._decodeRepeatedStringField {return false}
        if _storage._decodeRepeatedUint32Field != rhs_storage._decodeRepeatedUint32Field {return false}
        if _storage._decodeRepeatedUint64Field != rhs_storage._decodeRepeatedUint64Field {return false}
        if _storage._decodeSingular != rhs_storage._decodeSingular {return false}
        if _storage._decodeSingularBoolField != rhs_storage._decodeSingularBoolField {return false}
        if _storage._decodeSingularBytesField != rhs_storage._decodeSingularBytesField {return false}
        if _storage._decodeSingularDoubleField != rhs_storage._decodeSingularDoubleField {return false}
        if _storage._decodeSingularEnumField != rhs_storage._decodeSingularEnumField {return false}
        if _storage._decodeSingularFixed32Field != rhs_storage._decodeSingularFixed32Field {return false}
        if _storage._decodeSingularFixed64Field != rhs_storage._decodeSingularFixed64Field {return false}
        if _storage._decodeSingularFloatField != rhs_storage._decodeSingularFloatField {return false}
        if _storage._decodeSingularGroupField != rhs_storage._decodeSingularGroupField {return false}
        if _storage._decodeSingularInt32Field != rhs_storage._decodeSingularInt32Field {return false}
        if _storage._decodeSingularInt64Field != rhs_storage._decodeSingularInt64Field {return false}
        if _storage._decodeSingularMessageField != rhs_storage._decodeSingularMessageField {return false}
        if _storage._decodeSingularSfixed32Field != rhs_storage._decodeSingularSfixed32Field {return false}
        if _storage._decodeSingularSfixed64Field != rhs_storage._decodeSingularSfixed64Field {return false}
        if _storage._decodeSingularSint32Field != rhs_storage._decodeSingularSint32Field {return false}
        if _storage._decodeSingularSint64Field != rhs_storage._decodeSingularSint64Field {return false}
        if _storage._decodeSingularStringField != rhs_storage._decodeSingularStringField {return false}
        if _storage._decodeSingularUint32Field != rhs_storage._decodeSingularUint32Field {return false}
        if _storage._decodeSingularUint64Field != rhs_storage._decodeSingularUint64Field {return false}
        if _storage._decodeTextFormat != rhs_storage._decodeTextFormat {return false}
        if _storage._defaultAnyTypeUrlprefix != rhs_storage._defaultAnyTypeUrlprefix {return false}
        if _storage._defaults != rhs_storage._defaults {return false}
        if _storage._defaultValue != rhs_storage._defaultValue {return false}
        if _storage._dependency != rhs_storage._dependency {return false}
        if _storage._deprecated != rhs_storage._deprecated {return false}
        if _storage._deprecatedLegacyJsonFieldConflicts != rhs_storage._deprecatedLegacyJsonFieldConflicts {return false}
        if _storage._description_p != rhs_storage._description_p {return false}
        if _storage._descriptorProto != rhs_storage._descriptorProto {return false}
        if _storage._dictionary != rhs_storage._dictionary {return false}
        if _storage._dictionaryLiteral != rhs_storage._dictionaryLiteral {return false}
        if _storage._digit != rhs_storage._digit {return false}
        if _storage._digit0 != rhs_storage._digit0 {return false}
        if _storage._digit1 != rhs_storage._digit1 {return false}
        if _storage._digitCount != rhs_storage._digitCount {return false}
        if _storage._digits != rhs_storage._digits {return false}
        if _storage._digitValue != rhs_storage._digitValue {return false}
        if _storage._discardableResult != rhs_storage._discardableResult {return false}
        if _storage._discardUnknownFields != rhs_storage._discardUnknownFields {return false}
        if _storage._double != rhs_storage._double {return false}
        if _storage._doubleValue != rhs_storage._doubleValue {return false}
        if _storage._duration != rhs_storage._duration {return false}
        if _storage._e != rhs_storage._e {return false}
        if _storage._edition != rhs_storage._edition {return false}
        if _storage._editionDefault != rhs_storage._editionDefault {return false}
        if _storage._editionDefaults != rhs_storage._editionDefaults {return false}
        if _storage._element != rhs_storage._element {return false}
        if _storage._elements != rhs_storage._elements {return false}
        if _storage._emitExtensionFieldName != rhs_storage._emitExtensionFieldName {return false}
        if _storage._emitFieldName != rhs_storage._emitFieldName {return false}
        if _storage._emitFieldNumber != rhs_storage._emitFieldNumber {return false}
        if _storage._empty != rhs_storage._empty {return false}
        if _storage._encodeAsBytes != rhs_storage._encodeAsBytes {return false}
        if _storage._encoded != rhs_storage._encoded {return false}
        if _storage._encodedJsonstring != rhs_storage._encodedJsonstring {return false}
        if _storage._encodedSize != rhs_storage._encodedSize {return false}
        if _storage._encodeField != rhs_storage._encodeField {return false}
        if _storage._encoder != rhs_storage._encoder {return false}
        if _storage._end != rhs_storage._end {return false}
        if _storage._endArray != rhs_storage._endArray {return false}
        if _storage._endMessageField != rhs_storage._endMessageField {return false}
        if _storage._endObject != rhs_storage._endObject {return false}
        if _storage._endRegularField != rhs_storage._endRegularField {return false}
        if _storage._enum != rhs_storage._enum {return false}
        if _storage._enumDescriptorProto != rhs_storage._enumDescriptorProto {return false}
        if _storage._enumOptions != rhs_storage._enumOptions {return false}
        if _storage._enumReservedRange != rhs_storage._enumReservedRange {return false}
        if _storage._enumType != rhs_storage._enumType {return false}
        if _storage._enumvalue != rhs_storage._enumvalue {return false}
        if _storage._enumValueDescriptorProto != rhs_storage._enumValueDescriptorProto {return false}
        if _storage._enumValueOptions != rhs_storage._enumValueOptions {return false}
        if _storage._equatable != rhs_storage._equatable {return false}
        if _storage._error != rhs_storage._error {return false}
        if _storage._escaping != rhs_storage._escaping {return false}
        if _storage._expressibleByArrayLiteral != rhs_storage._expressibleByArrayLiteral {return false}
        if _storage._expressibleByDictionaryLiteral != rhs_storage._expressibleByDictionaryLiteral {return false}
        if _storage._ext != rhs_storage._ext {return false}
        if _storage._extDecoder != rhs_storage._extDecoder {return false}
        if _storage._extendedGraphemeClusterLiteral != rhs_storage._extendedGraphemeClusterLiteral {return false}
        if _storage._extendedGraphemeClusterLiteralType != rhs_storage._extendedGraphemeClusterLiteralType {return false}
        if _storage._extendee != rhs_storage._extendee {return false}
        if _storage._extensibleMessage != rhs_storage._extensibleMessage {return false}
        if _storage._extension != rhs_storage._extension {return false}
        if _storage._extensionField != rhs_storage._extensionField {return false}
        if _storage._extensionFieldNumber != rhs_storage._extensionFieldNumber {return false}
        if _storage._extensionFields != rhs_storage._extensionFields {return false}
        if _storage._extensionFieldsAsMessageSet != rhs_storage._extensionFieldsAsMessageSet {return false}
        if _storage._extensionFieldValueSet != rhs_storage._extensionFieldValueSet {return false}
        if _storage._extensionMap != rhs_storage._extensionMap {return false}
        if _storage._extensionRange != rhs_storage._extensionRange {return false}
        if _storage._extensionRangeOptions != rhs_storage._extensionRangeOptions {return false}
        if _storage._extensions != rhs_storage._extensions {return false}
        if _storage._extras != rhs_storage._extras {return false}
        if _storage._f != rhs_storage._f {return false}
        if _storage._false != rhs_storage._false {return false}
        if _storage._features != rhs_storage._features {return false}
        if _storage._featureSet != rhs_storage._featureSet {return false}
        if _storage._featureSetDefaults != rhs_storage._featureSetDefaults {return false}
        if _storage._featureSetEditionDefault != rhs_storage._featureSetEditionDefault {return false}
        if _storage._field != rhs_storage._field {return false}
        if _storage._fieldData != rhs_storage._fieldData {return false}
        if _storage._fieldDescriptorProto != rhs_storage._fieldDescriptorProto {return false}
        if _storage._fieldMask != rhs_storage._fieldMask {return false}
        if _storage._fieldName != rhs_storage._fieldName {return false}
        if _storage._fieldNameCount != rhs_storage._fieldNameCount {return false}
        if _storage._fieldNum != rhs_storage._fieldNum {return false}
        if _storage._fieldNumber != rhs_storage._fieldNumber {return false}
        if _storage._fieldNumberForProto != rhs_storage._fieldNumberForProto {return false}
        if _storage._fieldOptions != rhs_storage._fieldOptions {return false}
        if _storage._fieldPresence != rhs_storage._fieldPresence {return false}
        if _storage._fields != rhs_storage._fields {return false}
        if _storage._fieldSize != rhs_storage._fieldSize {return false}
        if _storage._fieldTag != rhs_storage._fieldTag {return false}
        if _storage._fieldType != rhs_storage._fieldType {return false}
        if _storage._file != rhs_storage._file {return false}
        if _storage._fileDescriptorProto != rhs_storage._fileDescriptorProto {return false}
        if _storage._fileDescriptorSet != rhs_storage._fileDescriptorSet {return false}
        if _storage._fileName != rhs_storage._fileName {return false}
        if _storage._fileOptions != rhs_storage._fileOptions {return false}
        if _storage._filter != rhs_storage._filter {return false}
        if _storage._final != rhs_storage._final {return false}
        if _storage._first != rhs_storage._first {return false}
        if _storage._firstItem != rhs_storage._firstItem {return false}
        if _storage._float != rhs_storage._float {return false}
        if _storage._floatLiteral != rhs_storage._floatLiteral {return false}
        if _storage._floatLiteralType != rhs_storage._floatLiteralType {return false}
        if _storage._floatValue != rhs_storage._floatValue {return false}
        if _storage._forMessageName != rhs_storage._forMessageName {return false}
        if _storage._formUnion != rhs_storage._formUnion {return false}
        if _storage._forReadingFrom != rhs_storage._forReadingFrom {return false}
        if _storage._forTypeURL != rhs_storage._forTypeURL {return false}
        if _storage._forwardParser != rhs_storage._forwardParser {return false}
        if _storage._forWritingInto != rhs_storage._forWritingInto {return false}
        if _storage._from != rhs_storage._from {return false}
        if _storage._fromAscii2 != rhs_storage._fromAscii2 {return false}
        if _storage._fromAscii4 != rhs_storage._fromAscii4 {return false}
        if _storage._fromByteOffset != rhs_storage._fromByteOffset {return false}
        if _storage._fromHexDigit != rhs_storage._fromHexDigit {return false}
        if _storage._fullName != rhs_storage._fullName {return false}
        if _storage._func != rhs_storage._func {return false}
        if _storage._g != rhs_storage._g {return false}
        if _storage._generatedCodeInfo != rhs_storage._generatedCodeInfo {return false}
        if _storage._get != rhs_storage._get {return false}
        if _storage._getExtensionValue != rhs_storage._getExtensionValue {return false}
        if _storage._getValue != rhs_storage._getValue {return false}
        if _storage._googleapis != rhs_storage._googleapis {return false}
        if _storage._googleProtobufAny != rhs_storage._googleProtobufAny {return false}
        if _storage._googleProtobufApi != rhs_storage._googleProtobufApi {return false}
        if _storage._googleProtobufBoolValue != rhs_storage._googleProtobufBoolValue {return false}
        if _storage._googleProtobufBytesValue != rhs_storage._googleProtobufBytesValue {return false}
        if _storage._googleProtobufDescriptorProto != rhs_storage._googleProtobufDescriptorProto {return false}
        if _storage._googleProtobufDoubleValue != rhs_storage._googleProtobufDoubleValue {return false}
        if _storage._googleProtobufDuration != rhs_storage._googleProtobufDuration {return false}
        if _storage._googleProtobufEdition != rhs_storage._googleProtobufEdition {return false}
        if _storage._googleProtobufEmpty != rhs_storage._googleProtobufEmpty {return false}
        if _storage._googleProtobufEnum != rhs_storage._googleProtobufEnum {return false}
        if _storage._googleProtobufEnumDescriptorProto != rhs_storage._googleProtobufEnumDescriptorProto {return false}
        if _storage._googleProtobufEnumOptions != rhs_storage._googleProtobufEnumOptions {return false}
        if _storage._googleProtobufEnumValue != rhs_storage._googleProtobufEnumValue {return false}
        if _storage._googleProtobufEnumValueDescriptorProto != rhs_storage._googleProtobufEnumValueDescriptorProto {return false}
        if _storage._googleProtobufEnumValueOptions != rhs_storage._googleProtobufEnumValueOptions {return false}
        if _storage._googleProtobufExtensionRangeOptions != rhs_storage._googleProtobufExtensionRangeOptions {return false}
        if _storage._googleProtobufFeatureSet != rhs_storage._googleProtobufFeatureSet {return false}
        if _storage._googleProtobufFeatureSetDefaults != rhs_storage._googleProtobufFeatureSetDefaults {return false}
        if _storage._googleProtobufField != rhs_storage._googleProtobufField {return false}
        if _storage._googleProtobufFieldDescriptorProto != rhs_storage._googleProtobufFieldDescriptorProto {return false}
        if _storage._googleProtobufFieldMask != rhs_storage._googleProtobufFieldMask {return false}
        if _storage._googleProtobufFieldOptions != rhs_storage._googleProtobufFieldOptions {return false}
        if _storage._googleProtobufFileDescriptorProto != rhs_storage._googleProtobufFileDescriptorProto {return false}
        if _storage._googleProtobufFileDescriptorSet != rhs_storage._googleProtobufFileDescriptorSet {return false}
        if _storage._googleProtobufFileOptions != rhs_storage._googleProtobufFileOptions {return false}
        if _storage._googleProtobufFloatValue != rhs_storage._googleProtobufFloatValue {return false}
        if _storage._googleProtobufGeneratedCodeInfo != rhs_storage._googleProtobufGeneratedCodeInfo {return false}
        if _storage._googleProtobufInt32Value != rhs_storage._googleProtobufInt32Value {return false}
        if _storage._googleProtobufInt64Value != rhs_storage._googleProtobufInt64Value {return false}
        if _storage._googleProtobufListValue != rhs_storage._googleProtobufListValue {return false}
        if _storage._googleProtobufMessageOptions != rhs_storage._googleProtobufMessageOptions {return false}
        if _storage._googleProtobufMethod != rhs_storage._googleProtobufMethod {return false}
        if _storage._googleProtobufMethodDescriptorProto != rhs_storage._googleProtobufMethodDescriptorProto {return false}
        if _storage._googleProtobufMethodOptions != rhs_storage._googleProtobufMethodOptions {return false}
        if _storage._googleProtobufMixin != rhs_storage._googleProtobufMixin {return false}
        if _storage._googleProtobufNullValue != rhs_storage._googleProtobufNullValue {return false}
        if _storage._googleProtobufOneofDescriptorProto != rhs_storage._googleProtobufOneofDescriptorProto {return false}
        if _storage._googleProtobufOneofOptions != rhs_storage._googleProtobufOneofOptions {return false}
        if _storage._googleProtobufOption != rhs_storage._googleProtobufOption {return false}
        if _storage._googleProtobufServiceDescriptorProto != rhs_storage._googleProtobufServiceDescriptorProto {return false}
        if _storage._googleProtobufServiceOptions != rhs_storage._googleProtobufServiceOptions {return false}
        if _storage._googleProtobufSourceCodeInfo != rhs_storage._googleProtobufSourceCodeInfo {return false}
        if _storage._googleProtobufSourceContext != rhs_storage._googleProtobufSourceContext {return false}
        if _storage._googleProtobufStringValue != rhs_storage._googleProtobufStringValue {return false}
        if _storage._googleProtobufStruct != rhs_storage._googleProtobufStruct {return false}
        if _storage._googleProtobufSyntax != rhs_storage._googleProtobufSyntax {return false}
        if _storage._googleProtobufTimestamp != rhs_storage._googleProtobufTimestamp {return false}
        if _storage._googleProtobufType != rhs_storage._googleProtobufType {return false}
        if _storage._googleProtobufUint32Value != rhs_storage._googleProtobufUint32Value {return false}
        if _storage._googleProtobufUint64Value != rhs_storage._googleProtobufUint64Value {return false}
        if _storage._googleProtobufUninterpretedOption != rhs_storage._googleProtobufUninterpretedOption {return false}
        if _storage._googleProtobufValue != rhs_storage._googleProtobufValue {return false}
        if _storage._goPackage != rhs_storage._goPackage {return false}
        if _storage._group != rhs_storage._group {return false}
        if _storage._groupFieldNumberStack != rhs_storage._groupFieldNumberStack {return false}
        if _storage._groupSize != rhs_storage._groupSize {return false}
        if _storage._hadOneofValue != rhs_storage._hadOneofValue {return false}
        if _storage._handleConflictingOneOf != rhs_storage._handleConflictingOneOf {return false}
        if _storage._hasAggregateValue_p != rhs_storage._hasAggregateValue_p {return false}
        if _storage._hasAllowAlias_p != rhs_storage._hasAllowAlias_p {return false}
        if _storage._hasBegin_p != rhs_storage._hasBegin_p {return false}
        if _storage._hasCcEnableArenas_p != rhs_storage._hasCcEnableArenas_p {return false}
        if _storage._hasCcGenericServices_p != rhs_storage._hasCcGenericServices_p {return false}
        if _storage._hasClientStreaming_p != rhs_storage._hasClientStreaming_p {return false}
        if _storage._hasCsharpNamespace_p != rhs_storage._hasCsharpNamespace_p {return false}
        if _storage._hasCtype_p != rhs_storage._hasCtype_p {return false}
        if _storage._hasDebugRedact_p != rhs_storage._hasDebugRedact_p {return false}
        if _storage._hasDefaultValue_p != rhs_storage._hasDefaultValue_p {return false}
        if _storage._hasDeprecated_p != rhs_storage._hasDeprecated_p {return false}
        if _storage._hasDeprecatedLegacyJsonFieldConflicts_p != rhs_storage._hasDeprecatedLegacyJsonFieldConflicts_p {return false}
        if _storage._hasDoubleValue_p != rhs_storage._hasDoubleValue_p {return false}
        if _storage._hasEdition_p != rhs_storage._hasEdition_p {return false}
        if _storage._hasEnd_p != rhs_storage._hasEnd_p {return false}
        if _storage._hasEnumType_p != rhs_storage._hasEnumType_p {return false}
        if _storage._hasExtendee_p != rhs_storage._hasExtendee_p {return false}
        if _storage._hasExtensionValue_p != rhs_storage._hasExtensionValue_p {return false}
        if _storage._hasFeatures_p != rhs_storage._hasFeatures_p {return false}
        if _storage._hasFieldPresence_p != rhs_storage._hasFieldPresence_p {return false}
        if _storage._hasFullName_p != rhs_storage._hasFullName_p {return false}
        if _storage._hasGoPackage_p != rhs_storage._hasGoPackage_p {return false}
        if _storage._hash != rhs_storage._hash {return false}
        if _storage._hashable != rhs_storage._hashable {return false}
        if _storage._hasher != rhs_storage._hasher {return false}
        if _storage._hashVisitor != rhs_storage._hashVisitor {return false}
        if _storage._hasIdempotencyLevel_p != rhs_storage._hasIdempotencyLevel_p {return false}
        if _storage._hasIdentifierValue_p != rhs_storage._hasIdentifierValue_p {return false}
        if _storage._hasInputType_p != rhs_storage._hasInputType_p {return false}
        if _storage._hasIsExtension_p != rhs_storage._hasIsExtension_p {return false}
        if _storage._hasJavaGenerateEqualsAndHash_p != rhs_storage._hasJavaGenerateEqualsAndHash_p {return false}
        if _storage._hasJavaGenericServices_p != rhs_storage._hasJavaGenericServices_p {return false}
        if _storage._hasJavaMultipleFiles_p != rhs_storage._hasJavaMultipleFiles_p {return false}
        if _storage._hasJavaOuterClassname_p != rhs_storage._hasJavaOuterClassname_p {return false}
        if _storage._hasJavaPackage_p != rhs_storage._hasJavaPackage_p {return false}
        if _storage._hasJavaStringCheckUtf8_p != rhs_storage._hasJavaStringCheckUtf8_p {return false}
        if _storage._hasJsonFormat_p != rhs_storage._hasJsonFormat_p {return false}
        if _storage._hasJsonName_p != rhs_storage._hasJsonName_p {return false}
        if _storage._hasJstype_p != rhs_storage._hasJstype_p {return false}
        if _storage._hasLabel_p != rhs_storage._hasLabel_p {return false}
        if _storage._hasLazy_p != rhs_storage._hasLazy_p {return false}
        if _storage._hasLeadingComments_p != rhs_storage._hasLeadingComments_p {return false}
        if _storage._hasMapEntry_p != rhs_storage._hasMapEntry_p {return false}
        if _storage._hasMaximumEdition_p != rhs_storage._hasMaximumEdition_p {return false}
        if _storage._hasMessageEncoding_p != rhs_storage._hasMessageEncoding_p {return false}
        if _storage._hasMessageSetWireFormat_p != rhs_storage._hasMessageSetWireFormat_p {return false}
        if _storage._hasMinimumEdition_p != rhs_storage._hasMinimumEdition_p {return false}
        if _storage._hasName_p != rhs_storage._hasName_p {return false}
        if _storage._hasNamePart_p != rhs_storage._hasNamePart_p {return false}
        if _storage._hasNegativeIntValue_p != rhs_storage._hasNegativeIntValue_p {return false}
        if _storage._hasNoStandardDescriptorAccessor_p != rhs_storage._hasNoStandardDescriptorAccessor_p {return false}
        if _storage._hasNumber_p != rhs_storage._hasNumber_p {return false}
        if _storage._hasObjcClassPrefix_p != rhs_storage._hasObjcClassPrefix_p {return false}
        if _storage._hasOneofIndex_p != rhs_storage._hasOneofIndex_p {return false}
        if _storage._hasOptimizeFor_p != rhs_storage._hasOptimizeFor_p {return false}
        if _storage._hasOptions_p != rhs_storage._hasOptions_p {return false}
        if _storage._hasOutputType_p != rhs_storage._hasOutputType_p {return false}
        if _storage._hasPackage_p != rhs_storage._hasPackage_p {return false}
        if _storage._hasPacked_p != rhs_storage._hasPacked_p {return false}
        if _storage._hasPhpClassPrefix_p != rhs_storage._hasPhpClassPrefix_p {return false}
        if _storage._hasPhpGenericServices_p != rhs_storage._hasPhpGenericServices_p {return false}
        if _storage._hasPhpMetadataNamespace_p != rhs_storage._hasPhpMetadataNamespace_p {return false}
        if _storage._hasPhpNamespace_p != rhs_storage._hasPhpNamespace_p {return false}
        if _storage._hasPositiveIntValue_p != rhs_storage._hasPositiveIntValue_p {return false}
        if _storage._hasProto3Optional_p != rhs_storage._hasProto3Optional_p {return false}
        if _storage._hasPyGenericServices_p != rhs_storage._hasPyGenericServices_p {return false}
        if _storage._hasRepeated_p != rhs_storage._hasRepeated_p {return false}
        if _storage._hasRepeatedFieldEncoding_p != rhs_storage._hasRepeatedFieldEncoding_p {return false}
        if _storage._hasReserved_p != rhs_storage._hasReserved_p {return false}
        if _storage._hasRetention_p != rhs_storage._hasRetention_p {return false}
        if _storage._hasRubyPackage_p != rhs_storage._hasRubyPackage_p {return false}
        if _storage._hasSemantic_p != rhs_storage._hasSemantic_p {return false}
        if _storage._hasServerStreaming_p != rhs_storage._hasServerStreaming_p {return false}
        if _storage._hasSourceCodeInfo_p != rhs_storage._hasSourceCodeInfo_p {return false}
        if _storage._hasSourceContext_p != rhs_storage._hasSourceContext_p {return false}
        if _storage._hasSourceFile_p != rhs_storage._hasSourceFile_p {return false}
        if _storage._hasStart_p != rhs_storage._hasStart_p {return false}
        if _storage._hasStringValue_p != rhs_storage._hasStringValue_p {return false}
        if _storage._hasSwiftPrefix_p != rhs_storage._hasSwiftPrefix_p {return false}
        if _storage._hasSyntax_p != rhs_storage._hasSyntax_p {return false}
        if _storage._hasTrailingComments_p != rhs_storage._hasTrailingComments_p {return false}
        if _storage._hasType_p != rhs_storage._hasType_p {return false}
        if _storage._hasTypeName_p != rhs_storage._hasTypeName_p {return false}
        if _storage._hasUnverifiedLazy_p != rhs_storage._hasUnverifiedLazy_p {return false}
        if _storage._hasUtf8Validation_p != rhs_storage._hasUtf8Validation_p {return false}
        if _storage._hasValue_p != rhs_storage._hasValue_p {return false}
        if _storage._hasVerification_p != rhs_storage._hasVerification_p {return false}
        if _storage._hasWeak_p != rhs_storage._hasWeak_p {return false}
        if _storage._hour != rhs_storage._hour {return false}
        if _storage._i != rhs_storage._i {return false}
        if _storage._idempotencyLevel != rhs_storage._idempotencyLevel {return false}
        if _storage._identifierValue != rhs_storage._identifierValue {return false}
        if _storage._if != rhs_storage._if {return false}
        if _storage._ignoreUnknownFields != rhs_storage._ignoreUnknownFields {return false}
        if _storage._index != rhs_storage._index {return false}
        if _storage._init_p != rhs_storage._init_p {return false}
        if _storage._inout != rhs_storage._inout {return false}
        if _storage._inputType != rhs_storage._inputType {return false}
        if _storage._insert != rhs_storage._insert {return false}
        if _storage._int != rhs_storage._int {return false}
        if _storage._int32 != rhs_storage._int32 {return false}
        if _storage._int32Value != rhs_storage._int32Value {return false}
        if _storage._int64 != rhs_storage._int64 {return false}
        if _storage._int64Value != rhs_storage._int64Value {return false}
        if _storage._int8 != rhs_storage._int8 {return false}
        if _storage._integerLiteral != rhs_storage._integerLiteral {return false}
        if _storage._integerLiteralType != rhs_storage._integerLiteralType {return false}
        if _storage._intern != rhs_storage._intern {return false}
        if _storage._internal != rhs_storage._internal {return false}
        if _storage._internalState != rhs_storage._internalState {return false}
        if _storage._into != rhs_storage._into {return false}
        if _storage._ints != rhs_storage._ints {return false}
        if _storage._isA != rhs_storage._isA {return false}
        if _storage._isEqual != rhs_storage._isEqual {return false}
        if _storage._isEqualTo != rhs_storage._isEqualTo {return false}
        if _storage._isExtension != rhs_storage._isExtension {return false}
        if _storage._isInitialized_p != rhs_storage._isInitialized_p {return false}
        if _storage._isNegative != rhs_storage._isNegative {return false}
        if _storage._isUnset != rhs_storage._isUnset {return false}
        if _storage._itemTagsEncodedSize != rhs_storage._itemTagsEncodedSize {return false}
        if _storage._iterator != rhs_storage._iterator {return false}
        if _storage._javaGenerateEqualsAndHash != rhs_storage._javaGenerateEqualsAndHash {return false}
        if _storage._javaGenericServices != rhs_storage._javaGenericServices {return false}
        if _storage._javaMultipleFiles != rhs_storage._javaMultipleFiles {return false}
        if _storage._javaOuterClassname != rhs_storage._javaOuterClassname {return false}
        if _storage._javaPackage != rhs_storage._javaPackage {return false}
        if _storage._javaStringCheckUtf8 != rhs_storage._javaStringCheckUtf8 {return false}
        if _storage._jsondecoder != rhs_storage._jsondecoder {return false}
        if _storage._jsondecodingError != rhs_storage._jsondecodingError {return false}
        if _storage._jsondecodingOptions != rhs_storage._jsondecodingOptions {return false}
        if _storage._jsonEncoder != rhs_storage._jsonEncoder {return false}
        if _storage._jsonencodingError != rhs_storage._jsonencodingError {return false}
        if _storage._jsonencodingOptions != rhs_storage._jsonencodingOptions {return false}
        if _storage._jsonencodingVisitor != rhs_storage._jsonencodingVisitor {return false}
        if _storage._jsonFormat != rhs_storage._jsonFormat {return false}
        if _storage._jsonmapEncodingVisitor != rhs_storage._jsonmapEncodingVisitor {return false}
        if _storage._jsonName != rhs_storage._jsonName {return false}
        if _storage._jsonPath != rhs_storage._jsonPath {return false}
        if _storage._jsonPaths != rhs_storage._jsonPaths {return false}
        if _storage._jsonscanner != rhs_storage._jsonscanner {return false}
        if _storage._jsonString != rhs_storage._jsonString {return false}
        if _storage._jsonText != rhs_storage._jsonText {return false}
        if _storage._jsonUtf8Bytes != rhs_storage._jsonUtf8Bytes {return false}
        if _storage._jsonUtf8Data != rhs_storage._jsonUtf8Data {return false}
        if _storage._jstype != rhs_storage._jstype {return false}
        if _storage._k != rhs_storage._k {return false}
        if _storage._kChunkSize != rhs_storage._kChunkSize {return false}
        if _storage._key != rhs_storage._key {return false}
        if _storage._keyField != rhs_storage._keyField {return false}
        if _storage._keyFieldOpt != rhs_storage._keyFieldOpt {return false}
        if _storage._keyType != rhs_storage._keyType {return false}
        if _storage._kind != rhs_storage._kind {return false}
        if _storage._l != rhs_storage._l {return false}
        if _storage._label != rhs_storage._label {return false}
        if _storage._lazy != rhs_storage._lazy {return false}
        if _storage._leadingComments != rhs_storage._leadingComments {return false}
        if _storage._leadingDetachedComments != rhs_storage._leadingDetachedComments {return false}
        if _storage._length != rhs_storage._length {return false}
        if _storage._lessThan != rhs_storage._lessThan {return false}
        if _storage._let != rhs_storage._let {return false}
        if _storage._lhs != rhs_storage._lhs {return false}
        if _storage._list != rhs_storage._list {return false}
        if _storage._listOfMessages != rhs_storage._listOfMessages {return false}
        if _storage._listValue != rhs_storage._listValue {return false}
        if _storage._littleEndian != rhs_storage._littleEndian {return false}
        if _storage._littleEndianBytes != rhs_storage._littleEndianBytes {return false}
        if _storage._load != rhs_storage._load {return false}
        if _storage._localHasher != rhs_storage._localHasher {return false}
        if _storage._location != rhs_storage._location {return false}
        if _storage._m != rhs_storage._m {return false}
        if _storage._major != rhs_storage._major {return false}
        if _storage._makeAsyncIterator != rhs_storage._makeAsyncIterator {return false}
        if _storage._makeIterator != rhs_storage._makeIterator {return false}
        if _storage._map != rhs_storage._map {return false}
        if _storage._mapEntry != rhs_storage._mapEntry {return false}
        if _storage._mapKeyType != rhs_storage._mapKeyType {return false}
        if _storage._mapToMessages != rhs_storage._mapToMessages {return false}
        if _storage._mapValueType != rhs_storage._mapValueType {return false}
        if _storage._mapVisitor != rhs_storage._mapVisitor {return false}
        if _storage._maximumEdition != rhs_storage._maximumEdition {return false}
        if _storage._mdayStart != rhs_storage._mdayStart {return false}
        if _storage._merge != rhs_storage._merge {return false}
        if _storage._message != rhs_storage._message {return false}
        if _storage._messageDepthLimit != rhs_storage._messageDepthLimit {return false}
        if _storage._messageEncoding != rhs_storage._messageEncoding {return false}
        if _storage._messageExtension != rhs_storage._messageExtension {return false}
        if _storage._messageImplementationBase != rhs_storage._messageImplementationBase {return false}
        if _storage._messageOptions != rhs_storage._messageOptions {return false}
        if _storage._messageSet != rhs_storage._messageSet {return false}
        if _storage._messageSetWireFormat != rhs_storage._messageSetWireFormat {return false}
        if _storage._messageSize != rhs_storage._messageSize {return false}
        if _storage._messageType != rhs_storage._messageType {return false}
        if _storage._method != rhs_storage._method {return false}
        if _storage._methodDescriptorProto != rhs_storage._methodDescriptorProto {return false}
        if _storage._methodOptions != rhs_storage._methodOptions {return false}
        if _storage._methods != rhs_storage._methods {return false}
        if _storage._min != rhs_storage._min {return false}
        if _storage._minimumEdition != rhs_storage._minimumEdition {return false}
        if _storage._minor != rhs_storage._minor {return false}
        if _storage._mixin != rhs_storage._mixin {return false}
        if _storage._mixins != rhs_storage._mixins {return false}
        if _storage._modifier != rhs_storage._modifier {return false}
        if _storage._modify != rhs_storage._modify {return false}
        if _storage._month != rhs_storage._month {return false}
        if _storage._msgExtension != rhs_storage._msgExtension {return false}
        if _storage._mutating != rhs_storage._mutating {return false}
        if _storage._n != rhs_storage._n {return false}
        if _storage._name != rhs_storage._name {return false}
        if _storage._nameDescription != rhs_storage._nameDescription {return false}
        if _storage._nameMap != rhs_storage._nameMap {return false}
        if _storage._namePart != rhs_storage._namePart {return false}
        if _storage._names != rhs_storage._names {return false}
        if _storage._nanos != rhs_storage._nanos {return false}
        if _storage._negativeIntValue != rhs_storage._negativeIntValue {return false}
        if _storage._nestedType != rhs_storage._nestedType {return false}
        if _storage._newL != rhs_storage._newL {return false}
        if _storage._newList != rhs_storage._newList {return false}
        if _storage._newValue != rhs_storage._newValue {return false}
        if _storage._next != rhs_storage._next {return false}
        if _storage._nextByte != rhs_storage._nextByte {return false}
        if _storage._nextFieldNumber != rhs_storage._nextFieldNumber {return false}
        if _storage._nextVarInt != rhs_storage._nextVarInt {return false}
        if _storage._nil != rhs_storage._nil {return false}
        if _storage._nilLiteral != rhs_storage._nilLiteral {return false}
        if _storage._noStandardDescriptorAccessor != rhs_storage._noStandardDescriptorAccessor {return false}
        if _storage._nullValue != rhs_storage._nullValue {return false}
        if _storage._number != rhs_storage._number {return false}
        if _storage._numberValue != rhs_storage._numberValue {return false}
        if _storage._objcClassPrefix != rhs_storage._objcClassPrefix {return false}
        if _storage._of != rhs_storage._of {return false}
        if _storage._oneOf != rhs_storage._oneOf {return false}
        if _storage._oneofDecl != rhs_storage._oneofDecl {return false}
        if _storage._oneofDescriptorProto != rhs_storage._oneofDescriptorProto {return false}
        if _storage._oneofIndex != rhs_storage._oneofIndex {return false}
        if _storage._oneofOptions != rhs_storage._oneofOptions {return false}
        if _storage._oneofs != rhs_storage._oneofs {return false}
        if _storage._oneOfKind != rhs_storage._oneOfKind {return false}
        if _storage._optimizeFor != rhs_storage._optimizeFor {return false}
        if _storage._optimizeMode != rhs_storage._optimizeMode {return false}
        if _storage._option != rhs_storage._option {return false}
        if _storage._optionalEnumExtensionField != rhs_storage._optionalEnumExtensionField {return false}
        if _storage._optionalExtensionField != rhs_storage._optionalExtensionField {return false}
        if _storage._optionalGroupExtensionField != rhs_storage._optionalGroupExtensionField {return false}
        if _storage._optionalMessageExtensionField != rhs_storage._optionalMessageExtensionField {return false}
        if _storage._optionRetention != rhs_storage._optionRetention {return false}
        if _storage._options != rhs_storage._options {return false}
        if _storage._optionTargetType != rhs_storage._optionTargetType {return false}
        if _storage._other != rhs_storage._other {return false}
        if _storage._others != rhs_storage._others {return false}
        if _storage._out != rhs_storage._out {return false}
        if _storage._outputType != rhs_storage._outputType {return false}
        if _storage._p != rhs_storage._p {return false}
        if _storage._package != rhs_storage._package {return false}
        if _storage._packed != rhs_storage._packed {return false}
        if _storage._packedBool != rhs_storage._packedBool {return false}
        if _storage._packedDouble != rhs_storage._packedDouble {return false}
        if _storage._packedEnum != rhs_storage._packedEnum {return false}
        if _storage._packedEnumExtensionField != rhs_storage._packedEnumExtensionField {return false}
        if _storage._packedExtensionField != rhs_storage._packedExtensionField {return false}
        if _storage._packedFixed32 != rhs_storage._packedFixed32 {return false}
        if _storage._packedFixed64 != rhs_storage._packedFixed64 {return false}
        if _storage._packedFloat != rhs_storage._packedFloat {return false}
        if _storage._packedInt32 != rhs_storage._packedInt32 {return false}
        if _storage._packedInt64 != rhs_storage._packedInt64 {return false}
        if _storage._packedSfixed32 != rhs_storage._packedSfixed32 {return false}
        if _storage._packedSfixed64 != rhs_storage._packedSfixed64 {return false}
        if _storage._packedSint32 != rhs_storage._packedSint32 {return false}
        if _storage._packedSint64 != rhs_storage._packedSint64 {return false}
        if _storage._packedUint32 != rhs_storage._packedUint32 {return false}
        if _storage._packedUint64 != rhs_storage._packedUint64 {return false}
        if _storage._padding != rhs_storage._padding {return false}
        if _storage._parent != rhs_storage._parent {return false}
        if _storage._parse != rhs_storage._parse {return false}
        if _storage._path != rhs_storage._path {return false}
        if _storage._paths != rhs_storage._paths {return false}
        if _storage._payload != rhs_storage._payload {return false}
        if _storage._payloadSize != rhs_storage._payloadSize {return false}
        if _storage._phpClassPrefix != rhs_storage._phpClassPrefix {return false}
        if _storage._phpGenericServices != rhs_storage._phpGenericServices {return false}
        if _storage._phpMetadataNamespace != rhs_storage._phpMetadataNamespace {return false}
        if _storage._phpNamespace != rhs_storage._phpNamespace {return false}
        if _storage._pos != rhs_storage._pos {return false}
        if _storage._positiveIntValue != rhs_storage._positiveIntValue {return false}
        if _storage._prefix != rhs_storage._prefix {return false}
        if _storage._preserveProtoFieldNames != rhs_storage._preserveProtoFieldNames {return false}
        if _storage._preTraverse != rhs_storage._preTraverse {return false}
        if _storage._printUnknownFields != rhs_storage._printUnknownFields {return false}
        if _storage._proto2 != rhs_storage._proto2 {return false}
        if _storage._proto3DefaultValue != rhs_storage._proto3DefaultValue {return false}
        if _storage._proto3Optional != rhs_storage._proto3Optional {return false}
        if _storage._protobufApiversionCheck != rhs_storage._protobufApiversionCheck {return false}
        if _storage._protobufApiversion3 != rhs_storage._protobufApiversion3 {return false}
        if _storage._protobufBool != rhs_storage._protobufBool {return false}
        if _storage._protobufBytes != rhs_storage._protobufBytes {return false}
        if _storage._protobufDouble != rhs_storage._protobufDouble {return false}
        if _storage._protobufEnumMap != rhs_storage._protobufEnumMap {return false}
        if _storage._protobufExtension != rhs_storage._protobufExtension {return false}
        if _storage._protobufFixed32 != rhs_storage._protobufFixed32 {return false}
        if _storage._protobufFixed64 != rhs_storage._protobufFixed64 {return false}
        if _storage._protobufFloat != rhs_storage._protobufFloat {return false}
        if _storage._protobufInt32 != rhs_storage._protobufInt32 {return false}
        if _storage._protobufInt64 != rhs_storage._protobufInt64 {return false}
        if _storage._protobufMap != rhs_storage._protobufMap {return false}
        if _storage._protobufMessageMap != rhs_storage._protobufMessageMap {return false}
        if _storage._protobufSfixed32 != rhs_storage._protobufSfixed32 {return false}
        if _storage._protobufSfixed64 != rhs_storage._protobufSfixed64 {return false}
        if _storage._protobufSint32 != rhs_storage._protobufSint32 {return false}
        if _storage._protobufSint64 != rhs_storage._protobufSint64 {return false}
        if _storage._protobufString != rhs_storage._protobufString {return false}
        if _storage._protobufUint32 != rhs_storage._protobufUint32 {return false}
        if _storage._protobufUint64 != rhs_storage._protobufUint64 {return false}
        if _storage._protobufExtensionFieldValues != rhs_storage._protobufExtensionFieldValues {return false}
        if _storage._protobufFieldNumber != rhs_storage._protobufFieldNumber {return false}
        if _storage._protobufGeneratedIsEqualTo != rhs_storage._protobufGeneratedIsEqualTo {return false}
        if _storage._protobufNameMap != rhs_storage._protobufNameMap {return false}
        if _storage._protobufNewField != rhs_storage._protobufNewField {return false}
        if _storage._protobufPackage != rhs_storage._protobufPackage {return false}
        if _storage._protocol != rhs_storage._protocol {return false}
        if _storage._protoFieldName != rhs_storage._protoFieldName {return false}
        if _storage._protoMessageName != rhs_storage._protoMessageName {return false}
        if _storage._protoNameProviding != rhs_storage._protoNameProviding {return false}
        if _storage._protoPaths != rhs_storage._protoPaths {return false}
        if _storage._public != rhs_storage._public {return false}
        if _storage._publicDependency != rhs_storage._publicDependency {return false}
        if _storage._putBoolValue != rhs_storage._putBoolValue {return false}
        if _storage._putBytesValue != rhs_storage._putBytesValue {return false}
        if _storage._putDoubleValue != rhs_storage._putDoubleValue {return false}
        if _storage._putEnumValue != rhs_storage._putEnumValue {return false}
        if _storage._putFixedUint32 != rhs_storage._putFixedUint32 {return false}
        if _storage._putFixedUint64 != rhs_storage._putFixedUint64 {return false}
        if _storage._putFloatValue != rhs_storage._putFloatValue {return false}
        if _storage._putInt64 != rhs_storage._putInt64 {return false}
        if _storage._putStringValue != rhs_storage._putStringValue {return false}
        if _storage._putUint64 != rhs_storage._putUint64 {return false}
        if _storage._putUint64Hex != rhs_storage._putUint64Hex {return false}
        if _storage._putVarInt != rhs_storage._putVarInt {return false}
        if _storage._putZigZagVarInt != rhs_storage._putZigZagVarInt {return false}
        if _storage._pyGenericServices != rhs_storage._pyGenericServices {return false}
        if _storage._r != rhs_storage._r {return false}
        if _storage._rawChars != rhs_storage._rawChars {return false}
        if _storage._rawRepresentable != rhs_storage._rawRepresentable {return false}
        if _storage._rawValue != rhs_storage._rawValue {return false}
        if _storage._read4HexDigits != rhs_storage._read4HexDigits {return false}
        if _storage._readBytes != rhs_storage._readBytes {return false}
        if _storage._register != rhs_storage._register {return false}
        if _storage._repeated != rhs_storage._repeated {return false}
        if _storage._repeatedBool != rhs_storage._repeatedBool {return false}
        if _storage._repeatedBytes != rhs_storage._repeatedBytes {return false}
        if _storage._repeatedDouble != rhs_storage._repeatedDouble {return false}
        if _storage._repeatedEnum != rhs_storage._repeatedEnum {return false}
        if _storage._repeatedEnumExtensionField != rhs_storage._repeatedEnumExtensionField {return false}
        if _storage._repeatedExtensionField != rhs_storage._repeatedExtensionField {return false}
        if _storage._repeatedFieldEncoding != rhs_storage._repeatedFieldEncoding {return false}
        if _storage._repeatedFixed32 != rhs_storage._repeatedFixed32 {return false}
        if _storage._repeatedFixed64 != rhs_storage._repeatedFixed64 {return false}
        if _storage._repeatedFloat != rhs_storage._repeatedFloat {return false}
        if _storage._repeatedGroup != rhs_storage._repeatedGroup {return false}
        if _storage._repeatedGroupExtensionField != rhs_storage._repeatedGroupExtensionField {return false}
        if _storage._repeatedInt32 != rhs_storage._repeatedInt32 {return false}
        if _storage._repeatedInt64 != rhs_storage._repeatedInt64 {return false}
        if _storage._repeatedMessage != rhs_storage._repeatedMessage {return false}
        if _storage._repeatedMessageExtensionField != rhs_storage._repeatedMessageExtensionField {return false}
        if _storage._repeatedSfixed32 != rhs_storage._repeatedSfixed32 {return false}
        if _storage._repeatedSfixed64 != rhs_storage._repeatedSfixed64 {return false}
        if _storage._repeatedSint32 != rhs_storage._repeatedSint32 {return false}
        if _storage._repeatedSint64 != rhs_storage._repeatedSint64 {return false}
        if _storage._repeatedString != rhs_storage._repeatedString {return false}
        if _storage._repeatedUint32 != rhs_storage._repeatedUint32 {return false}
        if _storage._repeatedUint64 != rhs_storage._repeatedUint64 {return false}
        if _storage._repeating != rhs_storage._repeating {return false}
        if _storage._requestStreaming != rhs_storage._requestStreaming {return false}
        if _storage._requestTypeURL != rhs_storage._requestTypeURL {return false}
        if _storage._requiredSize != rhs_storage._requiredSize {return false}
        if _storage._responseStreaming != rhs_storage._responseStreaming {return false}
        if _storage._responseTypeURL != rhs_storage._responseTypeURL {return false}
        if _storage._result != rhs_storage._result {return false}
        if _storage._retention != rhs_storage._retention {return false}
        if _storage._rethrows != rhs_storage._rethrows {return false}
        if _storage._return != rhs_storage._return {return false}
        if _storage._returnType != rhs_storage._returnType {return false}
        if _storage._revision != rhs_storage._revision {return false}
        if _storage._rhs != rhs_storage._rhs {return false}
        if _storage._root != rhs_storage._root {return false}
        if _storage._rubyPackage != rhs_storage._rubyPackage {return false}
        if _storage._s != rhs_storage._s {return false}
        if _storage._sawBackslash != rhs_storage._sawBackslash {return false}
        if _storage._sawSection4Characters != rhs_storage._sawSection4Characters {return false}
        if _storage._sawSection5Characters != rhs_storage._sawSection5Characters {return false}
        if _storage._scanner != rhs_storage._scanner {return false}
        if _storage._seconds != rhs_storage._seconds {return false}
        if _storage._self_p != rhs_storage._self_p {return false}
        if _storage._semantic != rhs_storage._semantic {return false}
        if _storage._sendable != rhs_storage._sendable {return false}
        if _storage._separator != rhs_storage._separator {return false}
        if _storage._serialize != rhs_storage._serialize {return false}
        if _storage._serializedBytes != rhs_storage._serializedBytes {return false}
        if _storage._serializedData != rhs_storage._serializedData {return false}
        if _storage._serializedSize != rhs_storage._serializedSize {return false}
        if _storage._serverStreaming != rhs_storage._serverStreaming {return false}
        if _storage._service != rhs_storage._service {return false}
        if _storage._serviceDescriptorProto != rhs_storage._serviceDescriptorProto {return false}
        if _storage._serviceOptions != rhs_storage._serviceOptions {return false}
        if _storage._set != rhs_storage._set {return false}
        if _storage._setExtensionValue != rhs_storage._setExtensionValue {return false}
        if _storage._shift != rhs_storage._shift {return false}
        if _storage._simpleExtensionMap != rhs_storage._simpleExtensionMap {return false}
        if _storage._singularBool != rhs_storage._singularBool {return false}
        if _storage._singularBytes != rhs_storage._singularBytes {return false}
        if _storage._singularDouble != rhs_storage._singularDouble {return false}
        if _storage._singularEnum != rhs_storage._singularEnum {return false}
        if _storage._singularFixed32 != rhs_storage._singularFixed32 {return false}
        if _storage._singularFixed64 != rhs_storage._singularFixed64 {return false}
        if _storage._singularFloat != rhs_storage._singularFloat {return false}
        if _storage._singularGroup != rhs_storage._singularGroup {return false}
        if _storage._singularInt32 != rhs_storage._singularInt32 {return false}
        if _storage._singularInt64 != rhs_storage._singularInt64 {return false}
        if _storage._singularMessage != rhs_storage._singularMessage {return false}
        if _storage._singularSfixed32 != rhs_storage._singularSfixed32 {return false}
        if _storage._singularSfixed64 != rhs_storage._singularSfixed64 {return false}
        if _storage._singularSint32 != rhs_storage._singularSint32 {return false}
        if _storage._singularSint64 != rhs_storage._singularSint64 {return false}
        if _storage._singularString != rhs_storage._singularString {return false}
        if _storage._singularUint32 != rhs_storage._singularUint32 {return false}
        if _storage._singularUint64 != rhs_storage._singularUint64 {return false}
        if _storage._size != rhs_storage._size {return false}
        if _storage._sizer != rhs_storage._sizer {return false}
        if _storage._source != rhs_storage._source {return false}
        if _storage._sourceCodeInfo != rhs_storage._sourceCodeInfo {return false}
        if _storage._sourceContext != rhs_storage._sourceContext {return false}
        if _storage._sourceEncoding != rhs_storage._sourceEncoding {return false}
        if _storage._sourceFile != rhs_storage._sourceFile {return false}
        if _storage._span != rhs_storage._span {return false}
        if _storage._split != rhs_storage._split {return false}
        if _storage._start != rhs_storage._start {return false}
        if _storage._startArray != rhs_storage._startArray {return false}
        if _storage._startArrayObject != rhs_storage._startArrayObject {return false}
        if _storage._startField != rhs_storage._startField {return false}
        if _storage._startIndex != rhs_storage._startIndex {return false}
        if _storage._startMessageField != rhs_storage._startMessageField {return false}
        if _storage._startObject != rhs_storage._startObject {return false}
        if _storage._startRegularField != rhs_storage._startRegularField {return false}
        if _storage._state != rhs_storage._state {return false}
        if _storage._static != rhs_storage._static {return false}
        if _storage._staticString != rhs_storage._staticString {return false}
        if _storage._storage != rhs_storage._storage {return false}
        if _storage._string != rhs_storage._string {return false}
        if _storage._stringLiteral != rhs_storage._stringLiteral {return false}
        if _storage._stringLiteralType != rhs_storage._stringLiteralType {return false}
        if _storage._stringResult != rhs_storage._stringResult {return false}
        if _storage._stringValue != rhs_storage._stringValue {return false}
        if _storage._struct != rhs_storage._struct {return false}
        if _storage._structValue != rhs_storage._structValue {return false}
        if _storage._subDecoder != rhs_storage._subDecoder {return false}
        if _storage._subscript != rhs_storage._subscript {return false}
        if _storage._subVisitor != rhs_storage._subVisitor {return false}
        if _storage._swift != rhs_storage._swift {return false}
        if _storage._swiftPrefix != rhs_storage._swiftPrefix {return false}
        if _storage._swiftProtobufContiguousBytes != rhs_storage._swiftProtobufContiguousBytes {return false}
        if _storage._syntax != rhs_storage._syntax {return false}
        if _storage._t != rhs_storage._t {return false}
        if _storage._tag != rhs_storage._tag {return false}
        if _storage._targets != rhs_storage._targets {return false}
        if _storage._terminator != rhs_storage._terminator {return false}
        if _storage._testDecoder != rhs_storage._testDecoder {return false}
        if _storage._text != rhs_storage._text {return false}
        if _storage._textDecoder != rhs_storage._textDecoder {return false}
        if _storage._textFormatDecoder != rhs_storage._textFormatDecoder {return false}
        if _storage._textFormatDecodingError != rhs_storage._textFormatDecodingError {return false}
        if _storage._textFormatDecodingOptions != rhs_storage._textFormatDecodingOptions {return false}
        if _storage._textFormatEncodingOptions != rhs_storage._textFormatEncodingOptions {return false}
        if _storage._textFormatEncodingVisitor != rhs_storage._textFormatEncodingVisitor {return false}
        if _storage._textFormatString != rhs_storage._textFormatString {return false}
        if _storage._throwOrIgnore != rhs_storage._throwOrIgnore {return false}
        if _storage._throws != rhs_storage._throws {return false}
        if _storage._timeInterval != rhs_storage._timeInterval {return false}
        if _storage._timeIntervalSince1970 != rhs_storage._timeIntervalSince1970 {return false}
        if _storage._timeIntervalSinceReferenceDate != rhs_storage._timeIntervalSinceReferenceDate {return false}
        if _storage._timestamp != rhs_storage._timestamp {return false}
        if _storage._toConcrete != rhs_storage._toConcrete {return false}
        if _storage._total != rhs_storage._total {return false}
        if _storage._totalArrayDepth != rhs_storage._totalArrayDepth {return false}
        if _storage._totalSize != rhs_storage._totalSize {return false}
        if _storage._trailingComments != rhs_storage._trailingComments {return false}
        if _storage._traverse != rhs_storage._traverse {return false}
        if _storage._true != rhs_storage._true {return false}
        if _storage._try != rhs_storage._try {return false}
        if _storage._type != rhs_storage._type {return false}
        if _storage._typealias != rhs_storage._typealias {return false}
        if _storage._typeEnum != rhs_storage._typeEnum {return false}
        if _storage._typeName != rhs_storage._typeName {return false}
        if _storage._typePrefix != rhs_storage._typePrefix {return false}
        if _storage._typeStart != rhs_storage._typeStart {return false}
        if _storage._typeUnknown != rhs_storage._typeUnknown {return false}
        if _storage._typeURL != rhs_storage._typeURL {return false}
        if _storage._uint32 != rhs_storage._uint32 {return false}
        if _storage._uint32Value != rhs_storage._uint32Value {return false}
        if _storage._uint64 != rhs_storage._uint64 {return false}
        if _storage._uint64Value != rhs_storage._uint64Value {return false}
        if _storage._uint8 != rhs_storage._uint8 {return false}
        if _storage._unchecked != rhs_storage._unchecked {return false}
        if _storage._unicodeScalarLiteral != rhs_storage._unicodeScalarLiteral {return false}
        if _storage._unicodeScalarLiteralType != rhs_storage._unicodeScalarLiteralType {return false}
        if _storage._unicodeScalars != rhs_storage._unicodeScalars {return false}
        if _storage._unicodeScalarView != rhs_storage._unicodeScalarView {return false}
        if _storage._uninterpretedOption != rhs_storage._uninterpretedOption {return false}
        if _storage._union != rhs_storage._union {return false}
        if _storage._uniqueStorage != rhs_storage._uniqueStorage {return false}
        if _storage._unknown != rhs_storage._unknown {return false}
        if _storage._unknownFields_p != rhs_storage._unknownFields_p {return false}
        if _storage._unknownStorage != rhs_storage._unknownStorage {return false}
        if _storage._unpackTo != rhs_storage._unpackTo {return false}
        if _storage._unsafeBufferPointer != rhs_storage._unsafeBufferPointer {return false}
        if _storage._unsafeMutablePointer != rhs_storage._unsafeMutablePointer {return false}
        if _storage._unsafeMutableRawBufferPointer != rhs_storage._unsafeMutableRawBufferPointer {return false}
        if _storage._unsafeRawBufferPointer != rhs_storage._unsafeRawBufferPointer {return false}
        if _storage._unsafeRawPointer != rhs_storage._unsafeRawPointer {return false}
        if _storage._unverifiedLazy != rhs_storage._unverifiedLazy {return false}
        if _storage._updatedOptions != rhs_storage._updatedOptions {return false}
        if _storage._url != rhs_storage._url {return false}
        if _storage._useDeterministicOrdering != rhs_storage._useDeterministicOrdering {return false}
        if _storage._utf8 != rhs_storage._utf8 {return false}
        if _storage._utf8Ptr != rhs_storage._utf8Ptr {return false}
        if _storage._utf8ToDouble != rhs_storage._utf8ToDouble {return false}
        if _storage._utf8Validation != rhs_storage._utf8Validation {return false}
        if _storage._utf8View != rhs_storage._utf8View {return false}
        if _storage._v != rhs_storage._v {return false}
        if _storage._value != rhs_storage._value {return false}
        if _storage._valueField != rhs_storage._valueField {return false}
        if _storage._values != rhs_storage._values {return false}
        if _storage._valueType != rhs_storage._valueType {return false}
        if _storage._var != rhs_storage._var {return false}
        if _storage._verification != rhs_storage._verification {return false}
        if _storage._verificationState != rhs_storage._verificationState {return false}
        if _storage._version != rhs_storage._version {return false}
        if _storage._versionString != rhs_storage._versionString {return false}
        if _storage._visitExtensionFields != rhs_storage._visitExtensionFields {return false}
        if _storage._visitExtensionFieldsAsMessageSet != rhs_storage._visitExtensionFieldsAsMessageSet {return false}
        if _storage._visitMapField != rhs_storage._visitMapField {return false}
        if _storage._visitor != rhs_storage._visitor {return false}
        if _storage._visitPacked != rhs_storage._visitPacked {return false}
        if _storage._visitPackedBoolField != rhs_storage._visitPackedBoolField {return false}
        if _storage._visitPackedDoubleField != rhs_storage._visitPackedDoubleField {return false}
        if _storage._visitPackedEnumField != rhs_storage._visitPackedEnumField {return false}
        if _storage._visitPackedFixed32Field != rhs_storage._visitPackedFixed32Field {return false}
        if _storage._visitPackedFixed64Field != rhs_storage._visitPackedFixed64Field {return false}
        if _storage._visitPackedFloatField != rhs_storage._visitPackedFloatField {return false}
        if _storage._visitPackedInt32Field != rhs_storage._visitPackedInt32Field {return false}
        if _storage._visitPackedInt64Field != rhs_storage._visitPackedInt64Field {return false}
        if _storage._visitPackedSfixed32Field != rhs_storage._visitPackedSfixed32Field {return false}
        if _storage._visitPackedSfixed64Field != rhs_storage._visitPackedSfixed64Field {return false}
        if _storage._visitPackedSint32Field != rhs_storage._visitPackedSint32Field {return false}
        if _storage._visitPackedSint64Field != rhs_storage._visitPackedSint64Field {return false}
        if _storage._visitPackedUint32Field != rhs_storage._visitPackedUint32Field {return false}
        if _storage._visitPackedUint64Field != rhs_storage._visitPackedUint64Field {return false}
        if _storage._visitRepeated != rhs_storage._visitRepeated {return false}
        if _storage._visitRepeatedBoolField != rhs_storage._visitRepeatedBoolField {return false}
        if _storage._visitRepeatedBytesField != rhs_storage._visitRepeatedBytesField {return false}
        if _storage._visitRepeatedDoubleField != rhs_storage._visitRepeatedDoubleField {return false}
        if _storage._visitRepeatedEnumField != rhs_storage._visitRepeatedEnumField {return false}
        if _storage._visitRepeatedFixed32Field != rhs_storage._visitRepeatedFixed32Field {return false}
        if _storage._visitRepeatedFixed64Field != rhs_storage._visitRepeatedFixed64Field {return false}
        if _storage._visitRepeatedFloatField != rhs_storage._visitRepeatedFloatField {return false}
        if _storage._visitRepeatedGroupField != rhs_storage._visitRepeatedGroupField {return false}
        if _storage._visitRepeatedInt32Field != rhs_storage._visitRepeatedInt32Field {return false}
        if _storage._visitRepeatedInt64Field != rhs_storage._visitRepeatedInt64Field {return false}
        if _storage._visitRepeatedMessageField != rhs_storage._visitRepeatedMessageField {return false}
        if _storage._visitRepeatedSfixed32Field != rhs_storage._visitRepeatedSfixed32Field {return false}
        if _storage._visitRepeatedSfixed64Field != rhs_storage._visitRepeatedSfixed64Field {return false}
        if _storage._visitRepeatedSint32Field != rhs_storage._visitRepeatedSint32Field {return false}
        if _storage._visitRepeatedSint64Field != rhs_storage._visitRepeatedSint64Field {return false}
        if _storage._visitRepeatedStringField != rhs_storage._visitRepeatedStringField {return false}
        if _storage._visitRepeatedUint32Field != rhs_storage._visitRepeatedUint32Field {return false}
        if _storage._visitRepeatedUint64Field != rhs_storage._visitRepeatedUint64Field {return false}
        if _storage._visitSingular != rhs_storage._visitSingular {return false}
        if _storage._visitSingularBoolField != rhs_storage._visitSingularBoolField {return false}
        if _storage._visitSingularBytesField != rhs_storage._visitSingularBytesField {return false}
        if _storage._visitSingularDoubleField != rhs_storage._visitSingularDoubleField {return false}
        if _storage._visitSingularEnumField != rhs_storage._visitSingularEnumField {return false}
        if _storage._visitSingularFixed32Field != rhs_storage._visitSingularFixed32Field {return false}
        if _storage._visitSingularFixed64Field != rhs_storage._visitSingularFixed64Field {return false}
        if _storage._visitSingularFloatField != rhs_storage._visitSingularFloatField {return false}
        if _storage._visitSingularGroupField != rhs_storage._visitSingularGroupField {return false}
        if _storage._visitSingularInt32Field != rhs_storage._visitSingularInt32Field {return false}
        if _storage._visitSingularInt64Field != rhs_storage._visitSingularInt64Field {return false}
        if _storage._visitSingularMessageField != rhs_storage._visitSingularMessageField {return false}
        if _storage._visitSingularSfixed32Field != rhs_storage._visitSingularSfixed32Field {return false}
        if _storage._visitSingularSfixed64Field != rhs_storage._visitSingularSfixed64Field {return false}
        if _storage._visitSingularSint32Field != rhs_storage._visitSingularSint32Field {return false}
        if _storage._visitSingularSint64Field != rhs_storage._visitSingularSint64Field {return false}
        if _storage._visitSingularStringField != rhs_storage._visitSingularStringField {return false}
        if _storage._visitSingularUint32Field != rhs_storage._visitSingularUint32Field {return false}
        if _storage._visitSingularUint64Field != rhs_storage._visitSingularUint64Field {return false}
        if _storage._visitUnknown != rhs_storage._visitUnknown {return false}
        if _storage._wasDecoded != rhs_storage._wasDecoded {return false}
        if _storage._weak != rhs_storage._weak {return false}
        if _storage._weakDependency != rhs_storage._weakDependency {return false}
        if _storage._where != rhs_storage._where {return false}
        if _storage._wireFormat != rhs_storage._wireFormat {return false}
        if _storage._with != rhs_storage._with {return false}
        if _storage._withUnsafeBytes != rhs_storage._withUnsafeBytes {return false}
        if _storage._withUnsafeMutableBytes != rhs_storage._withUnsafeMutableBytes {return false}
        if _storage._work != rhs_storage._work {return false}
        if _storage._wrapped != rhs_storage._wrapped {return false}
        if _storage._wrappedType != rhs_storage._wrappedType {return false}
        if _storage._wrappedValue != rhs_storage._wrappedValue {return false}
        if _storage._written != rhs_storage._written {return false}
        if _storage._yday != rhs_storage._yday {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
