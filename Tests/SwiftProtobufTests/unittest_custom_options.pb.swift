/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: google/protobuf/unittest_custom_options.proto
 *
 */

//  Protocol Buffers - Google's data interchange format
//  Copyright 2008 Google Inc.  All rights reserved.
//  https://developers.google.com/protocol-buffers/
// 
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//      * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//      * Redistributions in binary form must reproduce the above
//  copyright notice, this list of conditions and the following disclaimer
//  in the documentation and/or other materials provided with the
//  distribution.
//      * Neither the name of Google Inc. nor the names of its
//  contributors may be used to endorse or promote products derived from
//  this software without specific prior written permission.
// 
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
//  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
//  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
//  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
//  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
//  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
//  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//  Author: benjy@google.com (Benjy Weinberger)
//   Based on original Protocol Buffers design by
//   Sanjay Ghemawat, Jeff Dean, and others.
// 
//  A proto file used to test the "custom options" feature of google.protobuf.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _1: SwiftProtobuf.ProtobufAPIVersion_1 {}
  typealias Version = _1
}

enum ProtobufUnittest_MethodOpt1: SwiftProtobuf.Enum, SwiftProtobuf._ProtoNameProviding {
  typealias RawValue = Int
  case val1 // = 1
  case val2 // = 2

  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "METHODOPT1_VAL1"),
    2: .same(proto: "METHODOPT1_VAL2"),
  ]

  init() {
    self = .val1
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1: self = .val1
    case 2: self = .val2
    default: return nil
    }
  }

  var rawValue: Int {
    switch self {
    case .val1: return 1
    case .val2: return 2
    }
  }

}

enum ProtobufUnittest_AggregateEnum: SwiftProtobuf.Enum, SwiftProtobuf._ProtoNameProviding {
  typealias RawValue = Int
  case value // = 1

  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "VALUE"),
  ]

  init() {
    self = .value
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1: self = .value
    default: return nil
    }
  }

  var rawValue: Int {
    switch self {
    case .value: return 1
    }
  }

}

///   A test message with custom options at all possible locations (and also some
///   regular options, to make sure they interact nicely).
struct ProtobufUnittest_TestMessageWithCustomOptions: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "TestMessageWithCustomOptions"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "field1"),
    2: .unique(proto: "oneof_field", json: "oneofField"),
  ]

  private var _field1: String? = nil
  var field1: String {
    get {return _field1 ?? ""}
    set {_field1 = newValue}
  }
  var hasField1: Bool {
    return _field1 != nil
  }
  mutating func clearField1() {
    return _field1 = nil
  }

  var oneofField: Int32 {
    get {
      if case .oneofField(let v)? = anOneof {
        return v
      }
      return 0
    }
    set {
      anOneof = .oneofField(newValue)
    }
  }

  var anOneof: ProtobufUnittest_TestMessageWithCustomOptions.OneOf_AnOneof? = nil

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum OneOf_AnOneof: Equatable {
    case oneofField(Int32)

    static func ==(lhs: ProtobufUnittest_TestMessageWithCustomOptions.OneOf_AnOneof, rhs: ProtobufUnittest_TestMessageWithCustomOptions.OneOf_AnOneof) -> Bool {
      switch (lhs, rhs) {
      case (.oneofField(let l), .oneofField(let r)): return l == r
      }
    }

    fileprivate init?<T: SwiftProtobuf.Decoder>(byDecodingFrom decoder: inout T, fieldNumber: Int) throws {
      switch fieldNumber {
      case 2:
        var value: Int32?
        try decoder.decodeSingularInt32Field(value: &value)
        if let value = value {
          self = .oneofField(value)
          return
        }
      default:
        break
      }
      return nil
    }

    fileprivate func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V, start: Int, end: Int) throws {
      switch self {
      case .oneofField(let v):
        if start <= 2 && 2 < end {
          try visitor.visitSingularInt32Field(value: v, fieldNumber: 2)
        }
      }
    }
  }

  enum AnEnum: SwiftProtobuf.Enum, SwiftProtobuf._ProtoNameProviding {
    typealias RawValue = Int
    case val1 // = 1
    case val2 // = 2

    static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
      1: .same(proto: "ANENUM_VAL1"),
      2: .same(proto: "ANENUM_VAL2"),
    ]

    init() {
      self = .val1
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .val1
      case 2: self = .val2
      default: return nil
      }
    }

    var rawValue: Int {
      switch self {
      case .val1: return 1
      case .val2: return 2
      }
    }

  }

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 1: try decoder.decodeSingularStringField(value: &_field1)
    case 2:
      if anOneof != nil {
        try decoder.handleConflictingOneOf()
      }
      anOneof = try ProtobufUnittest_TestMessageWithCustomOptions.OneOf_AnOneof(byDecodingFrom: &decoder, fieldNumber: fieldNumber)
    default: break
    }
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = _field1 {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    try anOneof?.traverse(visitor: &visitor, start: 2, end: 3)
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_TestMessageWithCustomOptions) -> Bool {
    if _field1 != other._field1 {return false}
    if anOneof != other.anOneof {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

///   A test RPC service with custom options at all possible locations (and also
///   some regular options, to make sure they interact nicely).
struct ProtobufUnittest_CustomOptionFooRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "CustomOptionFooRequest"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_CustomOptionFooRequest) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

struct ProtobufUnittest_CustomOptionFooResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "CustomOptionFooResponse"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_CustomOptionFooResponse) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

struct ProtobufUnittest_CustomOptionFooClientMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "CustomOptionFooClientMessage"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_CustomOptionFooClientMessage) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

struct ProtobufUnittest_CustomOptionFooServerMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "CustomOptionFooServerMessage"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_CustomOptionFooServerMessage) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

//  Options of every possible field type, so we can test them all exhaustively.

struct ProtobufUnittest_DummyMessageContainingEnum: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "DummyMessageContainingEnum"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum TestEnumType: SwiftProtobuf.Enum, SwiftProtobuf._ProtoNameProviding {
    typealias RawValue = Int
    case testOptionEnumType1 // = 22
    case testOptionEnumType2 // = -23

    static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
      -23: .same(proto: "TEST_OPTION_ENUM_TYPE2"),
      22: .same(proto: "TEST_OPTION_ENUM_TYPE1"),
    ]

    init() {
      self = .testOptionEnumType1
    }

    init?(rawValue: Int) {
      switch rawValue {
      case -23: self = .testOptionEnumType2
      case 22: self = .testOptionEnumType1
      default: return nil
      }
    }

    var rawValue: Int {
      switch self {
      case .testOptionEnumType2: return -23
      case .testOptionEnumType1: return 22
      }
    }

  }

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_DummyMessageContainingEnum) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

struct ProtobufUnittest_DummyMessageInvalidAsOptionType: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "DummyMessageInvalidAsOptionType"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_DummyMessageInvalidAsOptionType) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

struct ProtobufUnittest_CustomOptionMinIntegerValues: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "CustomOptionMinIntegerValues"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_CustomOptionMinIntegerValues) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

struct ProtobufUnittest_CustomOptionMaxIntegerValues: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "CustomOptionMaxIntegerValues"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_CustomOptionMaxIntegerValues) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

struct ProtobufUnittest_CustomOptionOtherValues: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "CustomOptionOtherValues"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_CustomOptionOtherValues) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

struct ProtobufUnittest_SettingRealsFromPositiveInts: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "SettingRealsFromPositiveInts"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_SettingRealsFromPositiveInts) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

struct ProtobufUnittest_SettingRealsFromNegativeInts: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "SettingRealsFromNegativeInts"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_SettingRealsFromNegativeInts) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

//  Options of complex message types, themselves combined and extended in
//  various ways.

struct ProtobufUnittest_ComplexOptionType1: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "ComplexOptionType1"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "foo"),
    2: .same(proto: "foo2"),
    3: .same(proto: "foo3"),
    4: .same(proto: "foo4"),
  ]

  private var _foo: Int32? = nil
  var foo: Int32 {
    get {return _foo ?? 0}
    set {_foo = newValue}
  }
  var hasFoo: Bool {
    return _foo != nil
  }
  mutating func clearFoo() {
    return _foo = nil
  }

  private var _foo2: Int32? = nil
  var foo2: Int32 {
    get {return _foo2 ?? 0}
    set {_foo2 = newValue}
  }
  var hasFoo2: Bool {
    return _foo2 != nil
  }
  mutating func clearFoo2() {
    return _foo2 = nil
  }

  private var _foo3: Int32? = nil
  var foo3: Int32 {
    get {return _foo3 ?? 0}
    set {_foo3 = newValue}
  }
  var hasFoo3: Bool {
    return _foo3 != nil
  }
  mutating func clearFoo3() {
    return _foo3 = nil
  }

  var foo4: [Int32] = []

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  public var isInitialized: Bool {
    if !_extensionFieldValues.isInitialized {return false}
    return true
  }

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 1: try decoder.decodeSingularInt32Field(value: &_foo)
    case 2: try decoder.decodeSingularInt32Field(value: &_foo2)
    case 3: try decoder.decodeSingularInt32Field(value: &_foo3)
    case 4: try decoder.decodeRepeatedInt32Field(value: &foo4)
    case 100..<536870912:
      try decoder.decodeExtensionField(values: &_extensionFieldValues, messageType: ProtobufUnittest_ComplexOptionType1.self, fieldNumber: fieldNumber)
    default: break
    }
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = _foo {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 1)
    }
    if let v = _foo2 {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 2)
    }
    if let v = _foo3 {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 3)
    }
    if !foo4.isEmpty {
      try visitor.visitRepeatedInt32Field(value: foo4, fieldNumber: 4)
    }
    try visitor.visitExtensionFields(fields: _extensionFieldValues, start: 100, end: 536870912)
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_ComplexOptionType1) -> Bool {
    if _foo != other._foo {return false}
    if _foo2 != other._foo2 {return false}
    if _foo3 != other._foo3 {return false}
    if foo4 != other.foo4 {return false}
    if unknownFields != other.unknownFields {return false}
    if _extensionFieldValues != other._extensionFieldValues {return false}
    return true
  }

  private var _extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()

  mutating func setExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_ComplexOptionType1>, value: F.ValueType) {
    _extensionFieldValues[ext.fieldNumber] = ext._protobuf_set(value: value)
  }

  mutating func clearExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_ComplexOptionType1>) {
    _extensionFieldValues[ext.fieldNumber] = nil
  }

  func getExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_ComplexOptionType1>) -> F.ValueType {
    if let fieldValue = _extensionFieldValues[ext.fieldNumber] as? F {
      return fieldValue.value
    }
    return ext.defaultValue
  }

  func hasExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_ComplexOptionType1>) -> Bool {
    return _extensionFieldValues[ext.fieldNumber] is F
  }
  func _protobuf_names(for number: Int) -> _NameMap.Names? {
    return ProtobufUnittest_ComplexOptionType1._protobuf_nameMap.names(for: number) ?? _extensionFieldValues._protobuf_fieldNames(for: number)
  }
}

struct ProtobufUnittest_ComplexOptionType2: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "ComplexOptionType2"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "bar"),
    2: .same(proto: "baz"),
    3: .same(proto: "fred"),
    4: .same(proto: "barney"),
  ]

  private class _StorageClass {
    var _bar: ProtobufUnittest_ComplexOptionType1? = nil
    var _baz: Int32? = nil
    var _fred: ProtobufUnittest_ComplexOptionType2.ComplexOptionType4? = nil
    var _barney: [ProtobufUnittest_ComplexOptionType2.ComplexOptionType4] = []

    init() {}

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._bar = _bar
      clone._baz = _baz
      clone._fred = _fred
      clone._barney = _barney
      return clone
    }
  }

  private var _storage = _StorageClass()

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }

  var bar: ProtobufUnittest_ComplexOptionType1 {
    get {return _storage._bar ?? ProtobufUnittest_ComplexOptionType1()}
    set {_uniqueStorage()._bar = newValue}
  }
  var hasBar: Bool {
    return _storage._bar != nil
  }
  mutating func clearBar() {
    return _storage._bar = nil
  }

  var baz: Int32 {
    get {return _storage._baz ?? 0}
    set {_uniqueStorage()._baz = newValue}
  }
  var hasBaz: Bool {
    return _storage._baz != nil
  }
  mutating func clearBaz() {
    return _storage._baz = nil
  }

  var fred: ProtobufUnittest_ComplexOptionType2.ComplexOptionType4 {
    get {return _storage._fred ?? ProtobufUnittest_ComplexOptionType2.ComplexOptionType4()}
    set {_uniqueStorage()._fred = newValue}
  }
  var hasFred: Bool {
    return _storage._fred != nil
  }
  mutating func clearFred() {
    return _storage._fred = nil
  }

  var barney: [ProtobufUnittest_ComplexOptionType2.ComplexOptionType4] {
    get {return _storage._barney}
    set {_uniqueStorage()._barney = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  struct ComplexOptionType4: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
    static let protoMessageName: String = "ComplexOptionType4"
    static let protoPackageName: String = "protobuf_unittest"
    static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
      1: .same(proto: "waldo"),
    ]

    private var _waldo: Int32? = nil
    var waldo: Int32 {
      get {return _waldo ?? 0}
      set {_waldo = newValue}
    }
    var hasWaldo: Bool {
      return _waldo != nil
    }
    mutating func clearWaldo() {
      return _waldo = nil
    }

    var unknownFields = SwiftProtobuf.UnknownStorage()

    struct Extensions {

      static let complex_opt4 = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_ComplexOptionType2.ComplexOptionType4>, Google_Protobuf_MessageOptions>(
        _protobuf_fieldNumber: 7633546,
        fieldNames: .same(proto: "protobuf_unittest.ComplexOptionType2.ComplexOptionType4.complex_opt4"),
        defaultValue: ProtobufUnittest_ComplexOptionType2.ComplexOptionType4()
      )
    }

    init() {}

    mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }
    }

    mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt32Field(value: &_waldo)
      default: break
      }
    }

    func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
      if let v = _waldo {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 1)
      }
      try unknownFields.traverse(visitor: &visitor)
    }

    func _protobuf_generated_isEqualTo(other: ProtobufUnittest_ComplexOptionType2.ComplexOptionType4) -> Bool {
      if _waldo != other._waldo {return false}
      if unknownFields != other.unknownFields {return false}
      return true
    }
  }

  init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_extensionFieldValues.isInitialized {return false}
      if let v = _storage._bar, !v.isInitialized {return false}
      return true
    }
  }

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 1: try decoder.decodeSingularMessageField(value: &_storage._bar)
    case 2: try decoder.decodeSingularInt32Field(value: &_storage._baz)
    case 3: try decoder.decodeSingularMessageField(value: &_storage._fred)
    case 4: try decoder.decodeRepeatedMessageField(value: &_storage._barney)
    case 100..<536870912:
      try decoder.decodeExtensionField(values: &_extensionFieldValues, messageType: ProtobufUnittest_ComplexOptionType2.self, fieldNumber: fieldNumber)
    default: break
    }
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._bar {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._baz {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 2)
      }
      if let v = _storage._fred {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if !_storage._barney.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._barney, fieldNumber: 4)
      }
      try visitor.visitExtensionFields(fields: _extensionFieldValues, start: 100, end: 536870912)
      try unknownFields.traverse(visitor: &visitor)
    }
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_ComplexOptionType2) -> Bool {
    return withExtendedLifetime((_storage, other._storage)) { (_storage, other_storage) in
      if _storage !== other_storage {
        if _storage._bar != other_storage._bar {return false}
        if _storage._baz != other_storage._baz {return false}
        if _storage._fred != other_storage._fred {return false}
        if _storage._barney != other_storage._barney {return false}
      }
      if unknownFields != other.unknownFields {return false}
      if _extensionFieldValues != other._extensionFieldValues {return false}
      return true
    }
  }

  private var _extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()

  mutating func setExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_ComplexOptionType2>, value: F.ValueType) {
    _extensionFieldValues[ext.fieldNumber] = ext._protobuf_set(value: value)
  }

  mutating func clearExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_ComplexOptionType2>) {
    _extensionFieldValues[ext.fieldNumber] = nil
  }

  func getExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_ComplexOptionType2>) -> F.ValueType {
    if let fieldValue = _extensionFieldValues[ext.fieldNumber] as? F {
      return fieldValue.value
    }
    return ext.defaultValue
  }

  func hasExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_ComplexOptionType2>) -> Bool {
    return _extensionFieldValues[ext.fieldNumber] is F
  }
  func _protobuf_names(for number: Int) -> _NameMap.Names? {
    return ProtobufUnittest_ComplexOptionType2._protobuf_nameMap.names(for: number) ?? _extensionFieldValues._protobuf_fieldNames(for: number)
  }
}

struct ProtobufUnittest_ComplexOptionType3: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "ComplexOptionType3"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "qux"),
    2: .unique(proto: "ComplexOptionType5", json: "complexoptiontype5"),
  ]

  private class _StorageClass {
    var _qux: Int32? = nil
    var _complexOptionType5: ProtobufUnittest_ComplexOptionType3.ComplexOptionType5? = nil

    init() {}

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._qux = _qux
      clone._complexOptionType5 = _complexOptionType5
      return clone
    }
  }

  private var _storage = _StorageClass()

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }

  var qux: Int32 {
    get {return _storage._qux ?? 0}
    set {_uniqueStorage()._qux = newValue}
  }
  var hasQux: Bool {
    return _storage._qux != nil
  }
  mutating func clearQux() {
    return _storage._qux = nil
  }

  var complexOptionType5: ProtobufUnittest_ComplexOptionType3.ComplexOptionType5 {
    get {return _storage._complexOptionType5 ?? ProtobufUnittest_ComplexOptionType3.ComplexOptionType5()}
    set {_uniqueStorage()._complexOptionType5 = newValue}
  }
  var hasComplexOptionType5: Bool {
    return _storage._complexOptionType5 != nil
  }
  mutating func clearComplexOptionType5() {
    return _storage._complexOptionType5 = nil
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  struct ComplexOptionType5: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
    static let protoMessageName: String = "ComplexOptionType5"
    static let protoPackageName: String = "protobuf_unittest"
    static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
      3: .same(proto: "plugh"),
    ]

    private var _plugh: Int32? = nil
    var plugh: Int32 {
      get {return _plugh ?? 0}
      set {_plugh = newValue}
    }
    var hasPlugh: Bool {
      return _plugh != nil
    }
    mutating func clearPlugh() {
      return _plugh = nil
    }

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }
    }

    mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
      switch fieldNumber {
      case 3: try decoder.decodeSingularInt32Field(value: &_plugh)
      default: break
      }
    }

    func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
      if let v = _plugh {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 3)
      }
      try unknownFields.traverse(visitor: &visitor)
    }

    func _protobuf_generated_isEqualTo(other: ProtobufUnittest_ComplexOptionType3.ComplexOptionType5) -> Bool {
      if _plugh != other._plugh {return false}
      if unknownFields != other.unknownFields {return false}
      return true
    }
  }

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 1: try decoder.decodeSingularInt32Field(value: &_storage._qux)
    case 2: try decoder.decodeSingularGroupField(value: &_storage._complexOptionType5)
    default: break
    }
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._qux {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 1)
      }
      if let v = _storage._complexOptionType5 {
        try visitor.visitSingularGroupField(value: v, fieldNumber: 2)
      }
      try unknownFields.traverse(visitor: &visitor)
    }
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_ComplexOptionType3) -> Bool {
    return withExtendedLifetime((_storage, other._storage)) { (_storage, other_storage) in
      if _storage !== other_storage {
        if _storage._qux != other_storage._qux {return false}
        if _storage._complexOptionType5 != other_storage._complexOptionType5 {return false}
      }
      if unknownFields != other.unknownFields {return false}
      return true
    }
  }
}

struct ProtobufUnittest_ComplexOpt6: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "ComplexOpt6"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    7593951: .same(proto: "xyzzy"),
  ]

  private var _xyzzy: Int32? = nil
  var xyzzy: Int32 {
    get {return _xyzzy ?? 0}
    set {_xyzzy = newValue}
  }
  var hasXyzzy: Bool {
    return _xyzzy != nil
  }
  mutating func clearXyzzy() {
    return _xyzzy = nil
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 7593951: try decoder.decodeSingularInt32Field(value: &_xyzzy)
    default: break
    }
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = _xyzzy {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 7593951)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_ComplexOpt6) -> Bool {
    if _xyzzy != other._xyzzy {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

///   Note that we try various different ways of naming the same extension.
struct ProtobufUnittest_VariousComplexOptions: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "VariousComplexOptions"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_VariousComplexOptions) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

//  ------------------------------------------------------
//  Definitions for testing aggregate option parsing.
//  See descriptor_unittest.cc.

struct ProtobufUnittest_AggregateMessageSet: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "AggregateMessageSet"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  public var isInitialized: Bool {
    if !_extensionFieldValues.isInitialized {return false}
    return true
  }

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    if (4 <= fieldNumber && fieldNumber < 2147483647) {
      try decoder.decodeExtensionField(values: &_extensionFieldValues, messageType: ProtobufUnittest_AggregateMessageSet.self, fieldNumber: fieldNumber)
    }
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try visitor.visitExtensionFields(fields: _extensionFieldValues, start: 4, end: 2147483647)
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_AggregateMessageSet) -> Bool {
    if unknownFields != other.unknownFields {return false}
    if _extensionFieldValues != other._extensionFieldValues {return false}
    return true
  }

  private var _extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()

  mutating func setExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_AggregateMessageSet>, value: F.ValueType) {
    _extensionFieldValues[ext.fieldNumber] = ext._protobuf_set(value: value)
  }

  mutating func clearExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_AggregateMessageSet>) {
    _extensionFieldValues[ext.fieldNumber] = nil
  }

  func getExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_AggregateMessageSet>) -> F.ValueType {
    if let fieldValue = _extensionFieldValues[ext.fieldNumber] as? F {
      return fieldValue.value
    }
    return ext.defaultValue
  }

  func hasExtensionValue<F: SwiftProtobuf.ExtensionField>(ext: SwiftProtobuf.MessageExtension<F, ProtobufUnittest_AggregateMessageSet>) -> Bool {
    return _extensionFieldValues[ext.fieldNumber] is F
  }
  func _protobuf_names(for number: Int) -> _NameMap.Names? {
    return ProtobufUnittest_AggregateMessageSet._protobuf_nameMap.names(for: number) ?? _extensionFieldValues._protobuf_fieldNames(for: number)
  }
}

struct ProtobufUnittest_AggregateMessageSetElement: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "AggregateMessageSetElement"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "s"),
  ]

  private var _s: String? = nil
  var s: String {
    get {return _s ?? ""}
    set {_s = newValue}
  }
  var hasS: Bool {
    return _s != nil
  }
  mutating func clearS() {
    return _s = nil
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  struct Extensions {

    static let message_set_extension = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_AggregateMessageSetElement>, ProtobufUnittest_AggregateMessageSet>(
      _protobuf_fieldNumber: 15447542,
      fieldNames: .same(proto: "protobuf_unittest.AggregateMessageSetElement.message_set_extension"),
      defaultValue: ProtobufUnittest_AggregateMessageSetElement()
    )
  }

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 1: try decoder.decodeSingularStringField(value: &_s)
    default: break
    }
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = _s {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_AggregateMessageSetElement) -> Bool {
    if _s != other._s {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

///   A helper type used to test aggregate option parsing
struct ProtobufUnittest_Aggregate: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "Aggregate"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "i"),
    2: .same(proto: "s"),
    3: .same(proto: "sub"),
    4: .same(proto: "file"),
    5: .same(proto: "mset"),
  ]

  private class _StorageClass {
    var _i: Int32? = nil
    var _s: String? = nil
    var _sub: ProtobufUnittest_Aggregate? = nil
    var _file: Google_Protobuf_FileOptions? = nil
    var _mset: ProtobufUnittest_AggregateMessageSet? = nil

    init() {}

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._i = _i
      clone._s = _s
      clone._sub = _sub
      clone._file = _file
      clone._mset = _mset
      return clone
    }
  }

  private var _storage = _StorageClass()

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }

  var i: Int32 {
    get {return _storage._i ?? 0}
    set {_uniqueStorage()._i = newValue}
  }
  var hasI: Bool {
    return _storage._i != nil
  }
  mutating func clearI() {
    return _storage._i = nil
  }

  var s: String {
    get {return _storage._s ?? ""}
    set {_uniqueStorage()._s = newValue}
  }
  var hasS: Bool {
    return _storage._s != nil
  }
  mutating func clearS() {
    return _storage._s = nil
  }

  ///   A nested object
  var sub: ProtobufUnittest_Aggregate {
    get {return _storage._sub ?? ProtobufUnittest_Aggregate()}
    set {_uniqueStorage()._sub = newValue}
  }
  var hasSub: Bool {
    return _storage._sub != nil
  }
  mutating func clearSub() {
    return _storage._sub = nil
  }

  ///   To test the parsing of extensions inside aggregate values
  var file: Google_Protobuf_FileOptions {
    get {return _storage._file ?? Google_Protobuf_FileOptions()}
    set {_uniqueStorage()._file = newValue}
  }
  var hasFile: Bool {
    return _storage._file != nil
  }
  mutating func clearFile() {
    return _storage._file = nil
  }

  ///   An embedded message set
  var mset: ProtobufUnittest_AggregateMessageSet {
    get {return _storage._mset ?? ProtobufUnittest_AggregateMessageSet()}
    set {_uniqueStorage()._mset = newValue}
  }
  var hasMset: Bool {
    return _storage._mset != nil
  }
  mutating func clearMset() {
    return _storage._mset = nil
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  struct Extensions {

    static let nested = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_Aggregate>, Google_Protobuf_FileOptions>(
      _protobuf_fieldNumber: 15476903,
      fieldNames: .same(proto: "protobuf_unittest.Aggregate.nested"),
      defaultValue: ProtobufUnittest_Aggregate()
    )
  }

  init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._sub, !v.isInitialized {return false}
      if let v = _storage._file, !v.isInitialized {return false}
      if let v = _storage._mset, !v.isInitialized {return false}
      return true
    }
  }

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 1: try decoder.decodeSingularInt32Field(value: &_storage._i)
    case 2: try decoder.decodeSingularStringField(value: &_storage._s)
    case 3: try decoder.decodeSingularMessageField(value: &_storage._sub)
    case 4: try decoder.decodeSingularMessageField(value: &_storage._file)
    case 5: try decoder.decodeSingularMessageField(value: &_storage._mset)
    default: break
    }
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._i {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 1)
      }
      if let v = _storage._s {
        try visitor.visitSingularStringField(value: v, fieldNumber: 2)
      }
      if let v = _storage._sub {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._file {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._mset {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      try unknownFields.traverse(visitor: &visitor)
    }
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_Aggregate) -> Bool {
    return withExtendedLifetime((_storage, other._storage)) { (_storage, other_storage) in
      if _storage !== other_storage {
        if _storage._i != other_storage._i {return false}
        if _storage._s != other_storage._s {return false}
        if _storage._sub != other_storage._sub {return false}
        if _storage._file != other_storage._file {return false}
        if _storage._mset != other_storage._mset {return false}
      }
      if unknownFields != other.unknownFields {return false}
      return true
    }
  }
}

struct ProtobufUnittest_AggregateMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "AggregateMessage"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "fieldname"),
  ]

  private var _fieldname: Int32? = nil
  var fieldname: Int32 {
    get {return _fieldname ?? 0}
    set {_fieldname = newValue}
  }
  var hasFieldname: Bool {
    return _fieldname != nil
  }
  mutating func clearFieldname() {
    return _fieldname = nil
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 1: try decoder.decodeSingularInt32Field(value: &_fieldname)
    default: break
    }
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = _fieldname {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_AggregateMessage) -> Bool {
    if _fieldname != other._fieldname {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

///   Test custom options for nested type.
struct ProtobufUnittest_NestedOptionType: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "NestedOptionType"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum NestedEnum: SwiftProtobuf.Enum, SwiftProtobuf._ProtoNameProviding {
    typealias RawValue = Int
    case value // = 1

    static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
      1: .same(proto: "NESTED_ENUM_VALUE"),
    ]

    init() {
      self = .value
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .value
      default: return nil
      }
    }

    var rawValue: Int {
      switch self {
      case .value: return 1
      }
    }

  }

  struct NestedMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
    static let protoMessageName: String = "NestedMessage"
    static let protoPackageName: String = "protobuf_unittest"
    static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
      1: .unique(proto: "nested_field", json: "nestedField"),
    ]

    private var _nestedField: Int32? = nil
    var nestedField: Int32 {
      get {return _nestedField ?? 0}
      set {_nestedField = newValue}
    }
    var hasNestedField: Bool {
      return _nestedField != nil
    }
    mutating func clearNestedField() {
      return _nestedField = nil
    }

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
      }
    }

    mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt32Field(value: &_nestedField)
      default: break
      }
    }

    func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
      if let v = _nestedField {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 1)
      }
      try unknownFields.traverse(visitor: &visitor)
    }

    func _protobuf_generated_isEqualTo(other: ProtobufUnittest_NestedOptionType.NestedMessage) -> Bool {
      if _nestedField != other._nestedField {return false}
      if unknownFields != other.unknownFields {return false}
      return true
    }
  }

  struct Extensions {

    static let nested_extension = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, Google_Protobuf_FileOptions>(
      _protobuf_fieldNumber: 7912573,
      fieldNames: .same(proto: "protobuf_unittest.NestedOptionType.nested_extension"),
      defaultValue: 0
    )
  }

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_NestedOptionType) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

///   Custom message option that has a required enum field.
///   WARNING: this is strongly discouraged!
struct ProtobufUnittest_OldOptionType: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "OldOptionType"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "value"),
  ]

  private var _value: ProtobufUnittest_OldOptionType.TestEnum? = nil
  var value: ProtobufUnittest_OldOptionType.TestEnum {
    get {return _value ?? ProtobufUnittest_OldOptionType.TestEnum.oldValue}
    set {_value = newValue}
  }
  var hasValue: Bool {
    return _value != nil
  }
  mutating func clearValue() {
    return _value = nil
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum TestEnum: SwiftProtobuf.Enum, SwiftProtobuf._ProtoNameProviding {
    typealias RawValue = Int
    case oldValue // = 0

    static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
      0: .same(proto: "OLD_VALUE"),
    ]

    init() {
      self = .oldValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .oldValue
      default: return nil
      }
    }

    var rawValue: Int {
      switch self {
      case .oldValue: return 0
      }
    }

  }

  init() {}

  public var isInitialized: Bool {
    if _value == nil {return false}
    return true
  }

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 1: try decoder.decodeSingularEnumField(value: &_value)
    default: break
    }
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = _value {
      try visitor.visitSingularEnumField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_OldOptionType) -> Bool {
    if _value != other._value {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

///   Updated version of the custom option above.
struct ProtobufUnittest_NewOptionType: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "NewOptionType"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "value"),
  ]

  private var _value: ProtobufUnittest_NewOptionType.TestEnum? = nil
  var value: ProtobufUnittest_NewOptionType.TestEnum {
    get {return _value ?? ProtobufUnittest_NewOptionType.TestEnum.oldValue}
    set {_value = newValue}
  }
  var hasValue: Bool {
    return _value != nil
  }
  mutating func clearValue() {
    return _value = nil
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum TestEnum: SwiftProtobuf.Enum, SwiftProtobuf._ProtoNameProviding {
    typealias RawValue = Int
    case oldValue // = 0
    case newValue // = 1

    static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
      0: .same(proto: "OLD_VALUE"),
      1: .same(proto: "NEW_VALUE"),
    ]

    init() {
      self = .oldValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .oldValue
      case 1: self = .newValue
      default: return nil
      }
    }

    var rawValue: Int {
      switch self {
      case .oldValue: return 0
      case .newValue: return 1
      }
    }

  }

  init() {}

  public var isInitialized: Bool {
    if _value == nil {return false}
    return true
  }

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
    switch fieldNumber {
    case 1: try decoder.decodeSingularEnumField(value: &_value)
    default: break
    }
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = _value {
      try visitor.visitSingularEnumField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_NewOptionType) -> Bool {
    if _value != other._value {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

///   Test message using the "required_enum_opt" option defined above.
struct ProtobufUnittest_TestMessageWithRequiredEnumOption: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = "TestMessageWithRequiredEnumOption"
  static let protoPackageName: String = "protobuf_unittest"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  mutating func _protobuf_generated_decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      try decodeField(decoder: &decoder, fieldNumber: fieldNumber)
    }
  }

  mutating func _protobuf_generated_decodeField<D: SwiftProtobuf.Decoder>(decoder: inout D, fieldNumber: Int) throws {
  }

  func _protobuf_generated_traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  func _protobuf_generated_isEqualTo(other: ProtobufUnittest_TestMessageWithRequiredEnumOption) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

let ProtobufUnittest_Extensions_file_opt1 = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufUInt64>, Google_Protobuf_FileOptions>(
  _protobuf_fieldNumber: 7736974,
  fieldNames: .same(proto: "protobuf_unittest.file_opt1"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_message_opt1 = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7739036,
  fieldNames: .same(proto: "protobuf_unittest.message_opt1"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_field_opt1 = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufFixed64>, Google_Protobuf_FieldOptions>(
  _protobuf_fieldNumber: 7740936,
  fieldNames: .same(proto: "protobuf_unittest.field_opt1"),
  defaultValue: 0
)

///   This is useful for testing that we correctly register default values for
///   extension options.
let ProtobufUnittest_Extensions_field_opt2 = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, Google_Protobuf_FieldOptions>(
  _protobuf_fieldNumber: 7753913,
  fieldNames: .same(proto: "protobuf_unittest.field_opt2"),
  defaultValue: 42
)

let ProtobufUnittest_Extensions_oneof_opt1 = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, Google_Protobuf_OneofOptions>(
  _protobuf_fieldNumber: 7740111,
  fieldNames: .same(proto: "protobuf_unittest.oneof_opt1"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_enum_opt1 = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufSFixed32>, Google_Protobuf_EnumOptions>(
  _protobuf_fieldNumber: 7753576,
  fieldNames: .same(proto: "protobuf_unittest.enum_opt1"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_enum_value_opt1 = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, Google_Protobuf_EnumValueOptions>(
  _protobuf_fieldNumber: 1560678,
  fieldNames: .same(proto: "protobuf_unittest.enum_value_opt1"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_service_opt1 = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufSInt64>, Google_Protobuf_ServiceOptions>(
  _protobuf_fieldNumber: 7887650,
  fieldNames: .same(proto: "protobuf_unittest.service_opt1"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_method_opt1 = SwiftProtobuf.MessageExtension<OptionalEnumExtensionField<ProtobufUnittest_MethodOpt1>, Google_Protobuf_MethodOptions>(
  _protobuf_fieldNumber: 7890860,
  fieldNames: .same(proto: "protobuf_unittest.method_opt1"),
  defaultValue: ProtobufUnittest_MethodOpt1.val1
)

let ProtobufUnittest_Extensions_bool_opt = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufBool>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7706090,
  fieldNames: .same(proto: "protobuf_unittest.bool_opt"),
  defaultValue: false
)

let ProtobufUnittest_Extensions_int32_opt = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7705709,
  fieldNames: .same(proto: "protobuf_unittest.int32_opt"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_int64_opt = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt64>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7705542,
  fieldNames: .same(proto: "protobuf_unittest.int64_opt"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_uint32_opt = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufUInt32>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7704880,
  fieldNames: .same(proto: "protobuf_unittest.uint32_opt"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_uint64_opt = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufUInt64>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7702367,
  fieldNames: .same(proto: "protobuf_unittest.uint64_opt"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_sint32_opt = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufSInt32>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7701568,
  fieldNames: .same(proto: "protobuf_unittest.sint32_opt"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_sint64_opt = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufSInt64>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7700863,
  fieldNames: .same(proto: "protobuf_unittest.sint64_opt"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_fixed32_opt = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufFixed32>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7700307,
  fieldNames: .same(proto: "protobuf_unittest.fixed32_opt"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_fixed64_opt = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufFixed64>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7700194,
  fieldNames: .same(proto: "protobuf_unittest.fixed64_opt"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_sfixed32_opt = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufSFixed32>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7698645,
  fieldNames: .same(proto: "protobuf_unittest.sfixed32_opt"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_sfixed64_opt = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufSFixed64>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7685475,
  fieldNames: .same(proto: "protobuf_unittest.sfixed64_opt"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_float_opt = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufFloat>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7675390,
  fieldNames: .same(proto: "protobuf_unittest.float_opt"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_double_opt = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufDouble>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7673293,
  fieldNames: .same(proto: "protobuf_unittest.double_opt"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_string_opt = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufString>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7673285,
  fieldNames: .same(proto: "protobuf_unittest.string_opt"),
  defaultValue: ""
)

let ProtobufUnittest_Extensions_bytes_opt = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufBytes>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7673238,
  fieldNames: .same(proto: "protobuf_unittest.bytes_opt"),
  defaultValue: Data()
)

let ProtobufUnittest_Extensions_enum_opt = SwiftProtobuf.MessageExtension<OptionalEnumExtensionField<ProtobufUnittest_DummyMessageContainingEnum.TestEnumType>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7673233,
  fieldNames: .same(proto: "protobuf_unittest.enum_opt"),
  defaultValue: ProtobufUnittest_DummyMessageContainingEnum.TestEnumType.testOptionEnumType1
)

let ProtobufUnittest_Extensions_message_type_opt = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_DummyMessageInvalidAsOptionType>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7665967,
  fieldNames: .same(proto: "protobuf_unittest.message_type_opt"),
  defaultValue: ProtobufUnittest_DummyMessageInvalidAsOptionType()
)

let ProtobufUnittest_Extensions_quux = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, ProtobufUnittest_ComplexOptionType1>(
  _protobuf_fieldNumber: 7663707,
  fieldNames: .same(proto: "protobuf_unittest.quux"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_corge = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_ComplexOptionType3>, ProtobufUnittest_ComplexOptionType1>(
  _protobuf_fieldNumber: 7663442,
  fieldNames: .same(proto: "protobuf_unittest.corge"),
  defaultValue: ProtobufUnittest_ComplexOptionType3()
)

let ProtobufUnittest_Extensions_grault = SwiftProtobuf.MessageExtension<OptionalExtensionField<SwiftProtobuf.ProtobufInt32>, ProtobufUnittest_ComplexOptionType2>(
  _protobuf_fieldNumber: 7650927,
  fieldNames: .same(proto: "protobuf_unittest.grault"),
  defaultValue: 0
)

let ProtobufUnittest_Extensions_garply = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_ComplexOptionType1>, ProtobufUnittest_ComplexOptionType2>(
  _protobuf_fieldNumber: 7649992,
  fieldNames: .same(proto: "protobuf_unittest.garply"),
  defaultValue: ProtobufUnittest_ComplexOptionType1()
)

let ProtobufUnittest_Extensions_complex_opt1 = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_ComplexOptionType1>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7646756,
  fieldNames: .same(proto: "protobuf_unittest.complex_opt1"),
  defaultValue: ProtobufUnittest_ComplexOptionType1()
)

let ProtobufUnittest_Extensions_complex_opt2 = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_ComplexOptionType2>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7636949,
  fieldNames: .same(proto: "protobuf_unittest.complex_opt2"),
  defaultValue: ProtobufUnittest_ComplexOptionType2()
)

let ProtobufUnittest_Extensions_complex_opt3 = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_ComplexOptionType3>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7636463,
  fieldNames: .same(proto: "protobuf_unittest.complex_opt3"),
  defaultValue: ProtobufUnittest_ComplexOptionType3()
)

let ProtobufUnittest_Extensions_ComplexOpt6 = SwiftProtobuf.MessageExtension<OptionalGroupExtensionField<ProtobufUnittest_ComplexOpt6>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 7595468,
  fieldNames: .same(proto: "protobuf_unittest.ComplexOpt6"),
  defaultValue: ProtobufUnittest_ComplexOpt6()
)

let ProtobufUnittest_Extensions_fileopt = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_Aggregate>, Google_Protobuf_FileOptions>(
  _protobuf_fieldNumber: 15478479,
  fieldNames: .same(proto: "protobuf_unittest.fileopt"),
  defaultValue: ProtobufUnittest_Aggregate()
)

let ProtobufUnittest_Extensions_msgopt = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_Aggregate>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 15480088,
  fieldNames: .same(proto: "protobuf_unittest.msgopt"),
  defaultValue: ProtobufUnittest_Aggregate()
)

let ProtobufUnittest_Extensions_fieldopt = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_Aggregate>, Google_Protobuf_FieldOptions>(
  _protobuf_fieldNumber: 15481374,
  fieldNames: .same(proto: "protobuf_unittest.fieldopt"),
  defaultValue: ProtobufUnittest_Aggregate()
)

let ProtobufUnittest_Extensions_enumopt = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_Aggregate>, Google_Protobuf_EnumOptions>(
  _protobuf_fieldNumber: 15483218,
  fieldNames: .same(proto: "protobuf_unittest.enumopt"),
  defaultValue: ProtobufUnittest_Aggregate()
)

let ProtobufUnittest_Extensions_enumvalopt = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_Aggregate>, Google_Protobuf_EnumValueOptions>(
  _protobuf_fieldNumber: 15486921,
  fieldNames: .same(proto: "protobuf_unittest.enumvalopt"),
  defaultValue: ProtobufUnittest_Aggregate()
)

let ProtobufUnittest_Extensions_serviceopt = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_Aggregate>, Google_Protobuf_ServiceOptions>(
  _protobuf_fieldNumber: 15497145,
  fieldNames: .same(proto: "protobuf_unittest.serviceopt"),
  defaultValue: ProtobufUnittest_Aggregate()
)

let ProtobufUnittest_Extensions_methodopt = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_Aggregate>, Google_Protobuf_MethodOptions>(
  _protobuf_fieldNumber: 15512713,
  fieldNames: .same(proto: "protobuf_unittest.methodopt"),
  defaultValue: ProtobufUnittest_Aggregate()
)

let ProtobufUnittest_Extensions_required_enum_opt = SwiftProtobuf.MessageExtension<OptionalMessageExtensionField<ProtobufUnittest_OldOptionType>, Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 106161807,
  fieldNames: .same(proto: "protobuf_unittest.required_enum_opt"),
  defaultValue: ProtobufUnittest_OldOptionType()
)

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_ComplexOptionType2_ComplexOptionType4_complexOpt4: ProtobufUnittest_ComplexOptionType2.ComplexOptionType4 {
    get {return getExtensionValue(ext: ProtobufUnittest_ComplexOptionType2.ComplexOptionType4.Extensions.complex_opt4) ?? ProtobufUnittest_ComplexOptionType2.ComplexOptionType4()}
    set {setExtensionValue(ext: ProtobufUnittest_ComplexOptionType2.ComplexOptionType4.Extensions.complex_opt4, value: newValue)}
  }
  var hasProtobufUnittest_ComplexOptionType2_ComplexOptionType4_complexOpt4: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_ComplexOptionType2.ComplexOptionType4.Extensions.complex_opt4)
  }
  mutating func clearProtobufUnittest_ComplexOptionType2_ComplexOptionType4_complexOpt4() {
    clearExtensionValue(ext: ProtobufUnittest_ComplexOptionType2.ComplexOptionType4.Extensions.complex_opt4)
  }
}

extension ProtobufUnittest_AggregateMessageSet {
  var ProtobufUnittest_AggregateMessageSetElement_messageSetExtension: ProtobufUnittest_AggregateMessageSetElement {
    get {return getExtensionValue(ext: ProtobufUnittest_AggregateMessageSetElement.Extensions.message_set_extension) ?? ProtobufUnittest_AggregateMessageSetElement()}
    set {setExtensionValue(ext: ProtobufUnittest_AggregateMessageSetElement.Extensions.message_set_extension, value: newValue)}
  }
  var hasProtobufUnittest_AggregateMessageSetElement_messageSetExtension: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_AggregateMessageSetElement.Extensions.message_set_extension)
  }
  mutating func clearProtobufUnittest_AggregateMessageSetElement_messageSetExtension() {
    clearExtensionValue(ext: ProtobufUnittest_AggregateMessageSetElement.Extensions.message_set_extension)
  }
}

extension Google_Protobuf_FileOptions {
  var ProtobufUnittest_Aggregate_nested: ProtobufUnittest_Aggregate {
    get {return getExtensionValue(ext: ProtobufUnittest_Aggregate.Extensions.nested) ?? ProtobufUnittest_Aggregate()}
    set {setExtensionValue(ext: ProtobufUnittest_Aggregate.Extensions.nested, value: newValue)}
  }
  var hasProtobufUnittest_Aggregate_nested: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Aggregate.Extensions.nested)
  }
  mutating func clearProtobufUnittest_Aggregate_nested() {
    clearExtensionValue(ext: ProtobufUnittest_Aggregate.Extensions.nested)
  }
}

extension Google_Protobuf_FileOptions {
  var ProtobufUnittest_NestedOptionType_nestedExtension: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_NestedOptionType.Extensions.nested_extension) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_NestedOptionType.Extensions.nested_extension, value: newValue)}
  }
  var hasProtobufUnittest_NestedOptionType_nestedExtension: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_NestedOptionType.Extensions.nested_extension)
  }
  mutating func clearProtobufUnittest_NestedOptionType_nestedExtension() {
    clearExtensionValue(ext: ProtobufUnittest_NestedOptionType.Extensions.nested_extension)
  }
}

extension Google_Protobuf_FileOptions {
  var ProtobufUnittest_fileOpt1: UInt64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_file_opt1) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_file_opt1, value: newValue)}
  }
  var hasProtobufUnittest_fileOpt1: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_file_opt1)
  }
  mutating func clearProtobufUnittest_fileOpt1() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_file_opt1)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_messageOpt1: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_message_opt1) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_message_opt1, value: newValue)}
  }
  var hasProtobufUnittest_messageOpt1: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_message_opt1)
  }
  mutating func clearProtobufUnittest_messageOpt1() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_message_opt1)
  }
}

extension Google_Protobuf_FieldOptions {
  var ProtobufUnittest_fieldOpt1: UInt64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_field_opt1) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_field_opt1, value: newValue)}
  }
  var hasProtobufUnittest_fieldOpt1: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_field_opt1)
  }
  mutating func clearProtobufUnittest_fieldOpt1() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_field_opt1)
  }
}

extension Google_Protobuf_FieldOptions {
  ///   This is useful for testing that we correctly register default values for
  ///   extension options.
  var ProtobufUnittest_fieldOpt2: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_field_opt2) ?? 42}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_field_opt2, value: newValue)}
  }
  var hasProtobufUnittest_fieldOpt2: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_field_opt2)
  }
  mutating func clearProtobufUnittest_fieldOpt2() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_field_opt2)
  }
}

extension Google_Protobuf_OneofOptions {
  var ProtobufUnittest_oneofOpt1: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_oneof_opt1) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_oneof_opt1, value: newValue)}
  }
  var hasProtobufUnittest_oneofOpt1: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_oneof_opt1)
  }
  mutating func clearProtobufUnittest_oneofOpt1() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_oneof_opt1)
  }
}

extension Google_Protobuf_EnumOptions {
  var ProtobufUnittest_enumOpt1: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_enum_opt1) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_enum_opt1, value: newValue)}
  }
  var hasProtobufUnittest_enumOpt1: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_enum_opt1)
  }
  mutating func clearProtobufUnittest_enumOpt1() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_enum_opt1)
  }
}

extension Google_Protobuf_EnumValueOptions {
  var ProtobufUnittest_enumValueOpt1: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_enum_value_opt1) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_enum_value_opt1, value: newValue)}
  }
  var hasProtobufUnittest_enumValueOpt1: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_enum_value_opt1)
  }
  mutating func clearProtobufUnittest_enumValueOpt1() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_enum_value_opt1)
  }
}

extension Google_Protobuf_ServiceOptions {
  var ProtobufUnittest_serviceOpt1: Int64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_service_opt1) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_service_opt1, value: newValue)}
  }
  var hasProtobufUnittest_serviceOpt1: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_service_opt1)
  }
  mutating func clearProtobufUnittest_serviceOpt1() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_service_opt1)
  }
}

extension Google_Protobuf_MethodOptions {
  var ProtobufUnittest_methodOpt1: ProtobufUnittest_MethodOpt1 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_method_opt1) ?? ProtobufUnittest_MethodOpt1.val1}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_method_opt1, value: newValue)}
  }
  var hasProtobufUnittest_methodOpt1: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_method_opt1)
  }
  mutating func clearProtobufUnittest_methodOpt1() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_method_opt1)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_boolOpt: Bool {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_bool_opt) ?? false}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_bool_opt, value: newValue)}
  }
  var hasProtobufUnittest_boolOpt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_bool_opt)
  }
  mutating func clearProtobufUnittest_boolOpt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_bool_opt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_int32Opt: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_int32_opt) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_int32_opt, value: newValue)}
  }
  var hasProtobufUnittest_int32Opt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_int32_opt)
  }
  mutating func clearProtobufUnittest_int32Opt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_int32_opt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_int64Opt: Int64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_int64_opt) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_int64_opt, value: newValue)}
  }
  var hasProtobufUnittest_int64Opt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_int64_opt)
  }
  mutating func clearProtobufUnittest_int64Opt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_int64_opt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_uint32Opt: UInt32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_uint32_opt) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_uint32_opt, value: newValue)}
  }
  var hasProtobufUnittest_uint32Opt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_uint32_opt)
  }
  mutating func clearProtobufUnittest_uint32Opt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_uint32_opt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_uint64Opt: UInt64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_uint64_opt) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_uint64_opt, value: newValue)}
  }
  var hasProtobufUnittest_uint64Opt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_uint64_opt)
  }
  mutating func clearProtobufUnittest_uint64Opt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_uint64_opt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_sint32Opt: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_sint32_opt) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_sint32_opt, value: newValue)}
  }
  var hasProtobufUnittest_sint32Opt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_sint32_opt)
  }
  mutating func clearProtobufUnittest_sint32Opt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_sint32_opt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_sint64Opt: Int64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_sint64_opt) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_sint64_opt, value: newValue)}
  }
  var hasProtobufUnittest_sint64Opt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_sint64_opt)
  }
  mutating func clearProtobufUnittest_sint64Opt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_sint64_opt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_fixed32Opt: UInt32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_fixed32_opt) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_fixed32_opt, value: newValue)}
  }
  var hasProtobufUnittest_fixed32Opt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_fixed32_opt)
  }
  mutating func clearProtobufUnittest_fixed32Opt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_fixed32_opt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_fixed64Opt: UInt64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_fixed64_opt) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_fixed64_opt, value: newValue)}
  }
  var hasProtobufUnittest_fixed64Opt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_fixed64_opt)
  }
  mutating func clearProtobufUnittest_fixed64Opt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_fixed64_opt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_sfixed32Opt: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_sfixed32_opt) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_sfixed32_opt, value: newValue)}
  }
  var hasProtobufUnittest_sfixed32Opt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_sfixed32_opt)
  }
  mutating func clearProtobufUnittest_sfixed32Opt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_sfixed32_opt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_sfixed64Opt: Int64 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_sfixed64_opt) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_sfixed64_opt, value: newValue)}
  }
  var hasProtobufUnittest_sfixed64Opt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_sfixed64_opt)
  }
  mutating func clearProtobufUnittest_sfixed64Opt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_sfixed64_opt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_floatOpt: Float {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_float_opt) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_float_opt, value: newValue)}
  }
  var hasProtobufUnittest_floatOpt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_float_opt)
  }
  mutating func clearProtobufUnittest_floatOpt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_float_opt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_doubleOpt: Double {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_double_opt) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_double_opt, value: newValue)}
  }
  var hasProtobufUnittest_doubleOpt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_double_opt)
  }
  mutating func clearProtobufUnittest_doubleOpt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_double_opt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_stringOpt: String {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_string_opt) ?? ""}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_string_opt, value: newValue)}
  }
  var hasProtobufUnittest_stringOpt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_string_opt)
  }
  mutating func clearProtobufUnittest_stringOpt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_string_opt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_bytesOpt: Data {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_bytes_opt) ?? Data()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_bytes_opt, value: newValue)}
  }
  var hasProtobufUnittest_bytesOpt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_bytes_opt)
  }
  mutating func clearProtobufUnittest_bytesOpt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_bytes_opt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_enumOpt: ProtobufUnittest_DummyMessageContainingEnum.TestEnumType {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_enum_opt) ?? ProtobufUnittest_DummyMessageContainingEnum.TestEnumType.testOptionEnumType1}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_enum_opt, value: newValue)}
  }
  var hasProtobufUnittest_enumOpt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_enum_opt)
  }
  mutating func clearProtobufUnittest_enumOpt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_enum_opt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_messageTypeOpt: ProtobufUnittest_DummyMessageInvalidAsOptionType {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_message_type_opt) ?? ProtobufUnittest_DummyMessageInvalidAsOptionType()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_message_type_opt, value: newValue)}
  }
  var hasProtobufUnittest_messageTypeOpt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_message_type_opt)
  }
  mutating func clearProtobufUnittest_messageTypeOpt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_message_type_opt)
  }
}

extension ProtobufUnittest_ComplexOptionType1 {
  var ProtobufUnittest_quux: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_quux) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_quux, value: newValue)}
  }
  var hasProtobufUnittest_quux: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_quux)
  }
  mutating func clearProtobufUnittest_quux() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_quux)
  }
}

extension ProtobufUnittest_ComplexOptionType1 {
  var ProtobufUnittest_corge: ProtobufUnittest_ComplexOptionType3 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_corge) ?? ProtobufUnittest_ComplexOptionType3()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_corge, value: newValue)}
  }
  var hasProtobufUnittest_corge: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_corge)
  }
  mutating func clearProtobufUnittest_corge() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_corge)
  }
}

extension ProtobufUnittest_ComplexOptionType2 {
  var ProtobufUnittest_grault: Int32 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_grault) ?? 0}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_grault, value: newValue)}
  }
  var hasProtobufUnittest_grault: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_grault)
  }
  mutating func clearProtobufUnittest_grault() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_grault)
  }
}

extension ProtobufUnittest_ComplexOptionType2 {
  var ProtobufUnittest_garply: ProtobufUnittest_ComplexOptionType1 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_garply) ?? ProtobufUnittest_ComplexOptionType1()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_garply, value: newValue)}
  }
  var hasProtobufUnittest_garply: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_garply)
  }
  mutating func clearProtobufUnittest_garply() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_garply)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_complexOpt1: ProtobufUnittest_ComplexOptionType1 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_complex_opt1) ?? ProtobufUnittest_ComplexOptionType1()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_complex_opt1, value: newValue)}
  }
  var hasProtobufUnittest_complexOpt1: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_complex_opt1)
  }
  mutating func clearProtobufUnittest_complexOpt1() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_complex_opt1)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_complexOpt2: ProtobufUnittest_ComplexOptionType2 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_complex_opt2) ?? ProtobufUnittest_ComplexOptionType2()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_complex_opt2, value: newValue)}
  }
  var hasProtobufUnittest_complexOpt2: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_complex_opt2)
  }
  mutating func clearProtobufUnittest_complexOpt2() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_complex_opt2)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_complexOpt3: ProtobufUnittest_ComplexOptionType3 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_complex_opt3) ?? ProtobufUnittest_ComplexOptionType3()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_complex_opt3, value: newValue)}
  }
  var hasProtobufUnittest_complexOpt3: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_complex_opt3)
  }
  mutating func clearProtobufUnittest_complexOpt3() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_complex_opt3)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_complexOpt6: ProtobufUnittest_ComplexOpt6 {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_ComplexOpt6) ?? ProtobufUnittest_ComplexOpt6()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_ComplexOpt6, value: newValue)}
  }
  var hasProtobufUnittest_complexOpt6: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_ComplexOpt6)
  }
  mutating func clearProtobufUnittest_complexOpt6() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_ComplexOpt6)
  }
}

extension Google_Protobuf_FileOptions {
  var ProtobufUnittest_fileopt: ProtobufUnittest_Aggregate {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_fileopt) ?? ProtobufUnittest_Aggregate()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_fileopt, value: newValue)}
  }
  var hasProtobufUnittest_fileopt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_fileopt)
  }
  mutating func clearProtobufUnittest_fileopt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_fileopt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_msgopt: ProtobufUnittest_Aggregate {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_msgopt) ?? ProtobufUnittest_Aggregate()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_msgopt, value: newValue)}
  }
  var hasProtobufUnittest_msgopt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_msgopt)
  }
  mutating func clearProtobufUnittest_msgopt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_msgopt)
  }
}

extension Google_Protobuf_FieldOptions {
  var ProtobufUnittest_fieldopt: ProtobufUnittest_Aggregate {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_fieldopt) ?? ProtobufUnittest_Aggregate()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_fieldopt, value: newValue)}
  }
  var hasProtobufUnittest_fieldopt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_fieldopt)
  }
  mutating func clearProtobufUnittest_fieldopt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_fieldopt)
  }
}

extension Google_Protobuf_EnumOptions {
  var ProtobufUnittest_enumopt: ProtobufUnittest_Aggregate {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_enumopt) ?? ProtobufUnittest_Aggregate()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_enumopt, value: newValue)}
  }
  var hasProtobufUnittest_enumopt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_enumopt)
  }
  mutating func clearProtobufUnittest_enumopt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_enumopt)
  }
}

extension Google_Protobuf_EnumValueOptions {
  var ProtobufUnittest_enumvalopt: ProtobufUnittest_Aggregate {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_enumvalopt) ?? ProtobufUnittest_Aggregate()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_enumvalopt, value: newValue)}
  }
  var hasProtobufUnittest_enumvalopt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_enumvalopt)
  }
  mutating func clearProtobufUnittest_enumvalopt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_enumvalopt)
  }
}

extension Google_Protobuf_ServiceOptions {
  var ProtobufUnittest_serviceopt: ProtobufUnittest_Aggregate {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_serviceopt) ?? ProtobufUnittest_Aggregate()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_serviceopt, value: newValue)}
  }
  var hasProtobufUnittest_serviceopt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_serviceopt)
  }
  mutating func clearProtobufUnittest_serviceopt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_serviceopt)
  }
}

extension Google_Protobuf_MethodOptions {
  var ProtobufUnittest_methodopt: ProtobufUnittest_Aggregate {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_methodopt) ?? ProtobufUnittest_Aggregate()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_methodopt, value: newValue)}
  }
  var hasProtobufUnittest_methodopt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_methodopt)
  }
  mutating func clearProtobufUnittest_methodopt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_methodopt)
  }
}

extension Google_Protobuf_MessageOptions {
  var ProtobufUnittest_requiredEnumOpt: ProtobufUnittest_OldOptionType {
    get {return getExtensionValue(ext: ProtobufUnittest_Extensions_required_enum_opt) ?? ProtobufUnittest_OldOptionType()}
    set {setExtensionValue(ext: ProtobufUnittest_Extensions_required_enum_opt, value: newValue)}
  }
  var hasProtobufUnittest_requiredEnumOpt: Bool {
    return hasExtensionValue(ext: ProtobufUnittest_Extensions_required_enum_opt)
  }
  mutating func clearProtobufUnittest_requiredEnumOpt() {
    clearExtensionValue(ext: ProtobufUnittest_Extensions_required_enum_opt)
  }
}

let ProtobufUnittest_UnittestCustomOptions_Extensions: SwiftProtobuf.ExtensionSet = [
  ProtobufUnittest_Extensions_file_opt1,
  ProtobufUnittest_Extensions_message_opt1,
  ProtobufUnittest_Extensions_field_opt1,
  ProtobufUnittest_Extensions_field_opt2,
  ProtobufUnittest_Extensions_oneof_opt1,
  ProtobufUnittest_Extensions_enum_opt1,
  ProtobufUnittest_Extensions_enum_value_opt1,
  ProtobufUnittest_Extensions_service_opt1,
  ProtobufUnittest_Extensions_method_opt1,
  ProtobufUnittest_Extensions_bool_opt,
  ProtobufUnittest_Extensions_int32_opt,
  ProtobufUnittest_Extensions_int64_opt,
  ProtobufUnittest_Extensions_uint32_opt,
  ProtobufUnittest_Extensions_uint64_opt,
  ProtobufUnittest_Extensions_sint32_opt,
  ProtobufUnittest_Extensions_sint64_opt,
  ProtobufUnittest_Extensions_fixed32_opt,
  ProtobufUnittest_Extensions_fixed64_opt,
  ProtobufUnittest_Extensions_sfixed32_opt,
  ProtobufUnittest_Extensions_sfixed64_opt,
  ProtobufUnittest_Extensions_float_opt,
  ProtobufUnittest_Extensions_double_opt,
  ProtobufUnittest_Extensions_string_opt,
  ProtobufUnittest_Extensions_bytes_opt,
  ProtobufUnittest_Extensions_enum_opt,
  ProtobufUnittest_Extensions_message_type_opt,
  ProtobufUnittest_Extensions_quux,
  ProtobufUnittest_Extensions_corge,
  ProtobufUnittest_Extensions_grault,
  ProtobufUnittest_Extensions_garply,
  ProtobufUnittest_Extensions_complex_opt1,
  ProtobufUnittest_Extensions_complex_opt2,
  ProtobufUnittest_Extensions_complex_opt3,
  ProtobufUnittest_Extensions_ComplexOpt6,
  ProtobufUnittest_Extensions_fileopt,
  ProtobufUnittest_Extensions_msgopt,
  ProtobufUnittest_Extensions_fieldopt,
  ProtobufUnittest_Extensions_enumopt,
  ProtobufUnittest_Extensions_enumvalopt,
  ProtobufUnittest_Extensions_serviceopt,
  ProtobufUnittest_Extensions_methodopt,
  ProtobufUnittest_Extensions_required_enum_opt,
  ProtobufUnittest_ComplexOptionType2.ComplexOptionType4.Extensions.complex_opt4,
  ProtobufUnittest_AggregateMessageSetElement.Extensions.message_set_extension,
  ProtobufUnittest_Aggregate.Extensions.nested,
  ProtobufUnittest_NestedOptionType.Extensions.nested_extension
]
